<?xml version="1.0" encoding="UTF-8" ?>
<NotepadPlus>
	<AutoComplete language="lua">
		<Environment ignoreCase="yes" startFunc="(" stopFunc=")" paramSeperator="," terminal="" additionalWordChar=".."/>
		<KeyWord name='AppClearBlock' func='yes'>
			<Overload retVal='void' descr='// 0x5FE1DF3342DB7DBA
// 0xDAB86A18
APP::APP_CLEAR_BLOCK();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='AppCloseApp' func='yes'>
			<Overload retVal='void' descr='// 0xE41C65E07A5F05FC
// 0x03767C7A
APP::APP_CLOSE_APP();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='AppCloseBlock' func='yes'>
			<Overload retVal='void' descr='// 0xE8E3FCF72EAC0EF8
// 0xED97B202
APP::APP_CLOSE_BLOCK();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='AppDataValid' func='yes'>
			<Overload retVal='int' descr='// 0x846AA8E7D55EE5B6
// 0x72BDE002
APP::APP_DATA_VALID();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='AppDeleteAppData' func='yes'>
			<Overload retVal='BOOL' descr='// 0x44151AEA95C8A003
// 0x2A2FBD1C
APP::APP_DELETE_APP_DATA(char* appName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* appName' />
			</Overload>
		</KeyWord>
		<KeyWord name='AppGetDeletedFileStatus' func='yes'>
			<Overload retVal='Any' descr='// 0xC9853A2BE3DED1A6
// 0x784D550B
APP::APP_GET_DELETED_FILE_STATUS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='AppGetFloat' func='yes'>
			<Overload retVal='float' descr='// 0x1514FB24C02C2322
// 0xD87F3A1C
APP::APP_GET_FLOAT(char* property);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* property' />
			</Overload>
		</KeyWord>
		<KeyWord name='AppGetInt' func='yes'>
			<Overload retVal='void' descr='// 0xD3A58A12C77D9D4B
// 0x2942AAD2
APP::APP_GET_INT(ScrHandle property);
----------------------------------------------------------------------------------------------------
'>
				<Param name='ScrHandle property' />
			</Overload>
		</KeyWord>
		<KeyWord name='AppGetString' func='yes'>
			<Overload retVal='char*' descr='// 0x749B023950D2311C
// 0x849CEB80
APP::APP_GET_STRING(char* property);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* property' />
			</Overload>
		</KeyWord>
		<KeyWord name='AppHasLinkedSocialClubAccount' func='yes'>
			<Overload retVal='BOOL' descr='// 0x71EEE69745088DA0
// 0xD368BA15
APP::APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='AppHasSyncedData' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCA52279A7271517F
// 0x1DE2A63D
APP::APP_HAS_SYNCED_DATA(char* appName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* appName' />
			</Overload>
		</KeyWord>
		<KeyWord name='AppSaveData' func='yes'>
			<Overload retVal='void' descr='// 0x95C5D356CDA6E85F
// 0x84A3918D
APP::APP_SAVE_DATA();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='AppSetApp' func='yes'>
			<Overload retVal='void' descr='// 0xCFD0406ADAF90D2B
// 0x8BAC4146
APP::APP_SET_APP(char* appName);
----------------------------------------------------------------------------------------------------
```

Called in the gamescripts like:  

APP::APP_SET_APP(&quot;car&quot;);  

APP::APP_SET_APP(&quot;dog&quot;);  

```'>
				<Param name='char* appName' />
			</Overload>
		</KeyWord>
		<KeyWord name='AppSetBlock' func='yes'>
			<Overload retVal='void' descr='// 0x262AB456A3D21F93
// 0xC2D54DD9
APP::APP_SET_BLOCK(char* blockName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* blockName' />
			</Overload>
		</KeyWord>
		<KeyWord name='AppSetFloat' func='yes'>
			<Overload retVal='void' descr='// 0x25D7687C68E0DAA4
// 0xF3076135
APP::APP_SET_FLOAT(char* property, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* property' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='AppSetInt' func='yes'>
			<Overload retVal='void' descr='// 0x607E8E3D3E4F9611
// 0x1B509C32
APP::APP_SET_INT(char* property, int value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* property' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='AppSetString' func='yes'>
			<Overload retVal='void' descr='// 0x3FF2FCEC4B7721B4
// 0x23DF19A8
APP::APP_SET_STRING(char* property, char* value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* property' />
				<Param name='char* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddLineToConversation' func='yes'>
			<Overload retVal='void' descr='// 0xC5EF963405593646
// 0x96CD0513
AUDIO::ADD_LINE_TO_CONVERSATION(int p0, char* p1, char* p2, int p3, int p4, BOOL p5, BOOL p6, BOOL p7,
----------------------------------------------------------------------------------------------------
L p8, int p9, BOOL p10, BOOL p11, BOOL p12);

```

```

NOTE: ones that are -1, 0 - 35 are determined by a function where it gets a TextLabel from a global 
then runs,  

_GET_TEXT_SUBSTRING and depending on what the result is it goes in check order of 0 - 9 then A - Z t
hen z (lowercase). So it will then return 0 - 35 or -1 if it&apos;s &apos;z&apos;. The func to handle that ^^ is fu
nc_67 in dialog_handler.c atleast in TU27 Xbox360 scripts.  

p0 is -1, 0   

p1 is a char or string (whatever you wanna call it)  

p2 is Global 10597 + i * 6. &apos;i&apos; is a while(i &lt; 70) loop  

p3 is again -1, 0 - 35   

p4 is again -1, 0 - 35   

p5 is either 0 or 1 (bool ?)  

p6 is either 0 or 1 (The func to determine this is bool)  

p7 is either 0 or 1 (The func to determine this is bool)  

p8 is either 0 or 1 (The func to determine this is bool)  

p9 is 0 - 3 (Determined by func_60 in dialogue_handler.c)  

p10 is either 0 or 1 (The func to determine this is bool)  

p11 is either 0 or 1 (The func to determine this is bool)  

p12 is unknown as in TU27 X360 scripts it only goes to p11.  

```'>
				<Param name='int p0' />
				<Param name='char* p1' />
				<Param name='char* p2' />
				<Param name='int p3' />
				<Param name='int p4' />
				<Param name='BOOL p5' />
				<Param name='BOOL p6' />
				<Param name='BOOL p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddPedToConversation' func='yes'>
			<Overload retVal='void' descr='// 0x95D9F4BC443956E7
// 0xF8D5EB86
AUDIO::ADD_PED_TO_CONVERSATION(Any p0, Any ped, char* p2);
----------------------------------------------------------------------------------------------------
```

4 calls in the b617d scripts. The only one with p0 and p2 in clear text:  

AUDIO::ADD_PED_TO_CONVERSATION(5, l_AF, &quot;DINAPOLI&quot;);  

=================================================  

One of the 2 calls in dialogue_handler.c p0 is in a while-loop, and so is determined to also possibl
y be 0 - 15.  

Based on it asking if does_entity_exist for the global I have determined that p1 is, in fact, the pe
d, but could be wrong.  

```'>
				<Param name='Any p0' />
				<Param name='Any ped' />
				<Param name='char* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='AudioIsScriptedMusicPlaying' func='yes'>
			<Overload retVal='Any' descr='// 0x845FFC3A4FEEFA3E
// 0x86E995D1
AUDIO::AUDIO_IS_SCRIPTED_MUSIC_PLAYING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='BlipSiren' func='yes'>
			<Overload retVal='void' descr='// 0x1B9025BDA76822B6
// 0xC0EB6924
AUDIO::BLIP_SIREN(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Plays the siren sound of a vehicle which is otherwise activated when fastly double-pressing the horn
 key.  

Only works on vehicles with a police siren.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='CancelMusicEvent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5B17A90291133DA5
// 0x89FF942D
AUDIO::CANCEL_MUSIC_EVENT(char* eventName);
----------------------------------------------------------------------------------------------------
```

All music event names found in the b617d scripts: pastebin.com/GnYt0R3P  

```'>
				<Param name='char* eventName' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanPedSpeak' func='yes'>
			<Overload retVal='BOOL' descr='// 0x49B99BF3FDA89A7A
// 0x8BD5F11E
AUDIO::_CAN_PED_SPEAK(Ped ped, char* speechName, BOOL unk);
----------------------------------------------------------------------------------------------------
```

Checks if the ped can play the speech or has the speech file, last parameter is usually 0  

```'>
				<Param name='Ped ped' />
				<Param name='char* speechName' />
				<Param name='BOOL unk' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAllBrokenGlass' func='yes'>
			<Overload retVal='void' descr='// 0xB32209EFFDC04913
// 0xE6B033BF
AUDIO::CLEAR_ALL_BROKEN_GLASS();
----------------------------------------------------------------------------------------------------
```

Removes broken glass particles.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAmbientZoneListState' func='yes'>
			<Overload retVal='void' descr='// 0x120C48C614909FA4
// 0x38B9B8D4
AUDIO::CLEAR_AMBIENT_ZONE_LIST_STATE(Any* p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAmbientZoneState' func='yes'>
			<Overload retVal='void' descr='// 0x218DD44AAAC964FF
// 0xCDFF3C82
AUDIO::CLEAR_AMBIENT_ZONE_STATE(char* zoneName, BOOL p1);
----------------------------------------------------------------------------------------------------
```

This function also has a p2, unknown. Signature AUDIO::CLEAR_AMBIENT_ZONE_STATE(char* zoneName, bool
 p1, Any p2);  

Still needs more research.   

Here are the names I&apos;ve found: pastebin.com/AfA0Qjyv  

New Ambient Zone List (Combind with old): pastebin.com/h8BsKgUD -DasChaos  

```'>
				<Param name='char* zoneName' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateNewScriptedConversation' func='yes'>
			<Overload retVal='void' descr='// 0xD2C91A0B572AAE56
// 0xB2BC25F8
AUDIO::CREATE_NEW_SCRIPTED_CONVERSATION();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='DisablePedPainAudio' func='yes'>
			<Overload retVal='void' descr='// 0xA9A41C1E940FB0E8
// 0x3B8E2D5F
AUDIO::DISABLE_PED_PAIN_AUDIO(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisablePoliceReports' func='yes'>
			<Overload retVal='void' descr='// 0xB4F90FAF7670B16F
AUDIO::_DISABLE_POLICE_REPORTS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='DynamicMixerRelatedFn' func='yes'>
			<Overload retVal='void' descr='// 0x153973AB99FE8980
// 0x2BC93264
AUDIO::_DYNAMIC_MIXER_RELATED_FN(Entity p0, char* p1, float p2);
----------------------------------------------------------------------------------------------------
```

ADD_E* (most likely ADD_ENTITY_*)  

All found occurrences in b678d:  

pastebin.com/ceu67jz8  

Still not sure on the functionality of this native but it has something to do with dynamic mixer gro
ups defined in dynamix.dat15  

```'>
				<Param name='Entity p0' />
				<Param name='char* p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='FindRadioStationIndex' func='yes'>
			<Overload retVal='int' descr='// 0x8D67489793FF428B
// 0xECA1512F
AUDIO::FIND_RADIO_STATION_INDEX(int station);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int station' />
			</Overload>
		</KeyWord>
		<KeyWord name='ForceAmbientSiren' func='yes'>
			<Overload retVal='void' descr='// 0x552369F549563AD5
// 0x13EB5861
AUDIO::_FORCE_AMBIENT_SIREN(BOOL value);
----------------------------------------------------------------------------------------------------
```

if value is set to true, and ambient siren sound will be played.  

-------------------------------------------------------------------------  

Appears to enable/disable an audio flag.  

```'>
				<Param name='BOOL value' />
			</Overload>
		</KeyWord>
		<KeyWord name='ForceVehicleEngineAudio' func='yes'>
			<Overload retVal='void' descr='// 0x4F0C413926060B38
// 0x33B0B007
AUDIO::_FORCE_VEHICLE_ENGINE_AUDIO(Vehicle vehicle, char* audioName);
----------------------------------------------------------------------------------------------------
```

This native sets the audio of the specified vehicle to audioName (p1).  

Use the audioNameHash found in vehicles.meta  

Example:  

_FORCE_VEHICLE_ENGINE_SOUND(veh, &quot;ADDER&quot;);  

The selected vehicle will now have the audio of the Adder.  

FORCE_VEHICLE_???  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_VEHICLE_AUDIO'>
				<Param name='Vehicle vehicle' />
				<Param name='char* audioName' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_VEHICLE_AUDIO' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: ForceVehicleEngineAudio' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='FreezeRadioStation' func='yes'>
			<Overload retVal='void' descr='// 0x344F393B027E38C3
// 0x286BF543
AUDIO::FREEZE_RADIO_STATION(char* radioStation);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* radioStation' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetAudibleMusicTrackTextId' func='yes'>
			<Overload retVal='int' descr='// 0x50B196FC9ED6545B
// 0xA2B88CA7
AUDIO::GET_AUDIBLE_MUSIC_TRACK_TEXT_ID();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetCurrentScriptedConversationLine' func='yes'>
			<Overload retVal='Any' descr='// 0x480357EE890C295A
// 0x9620E41F
AUDIO::GET_CURRENT_SCRIPTED_CONVERSATION_LINE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetMusicPlaytime' func='yes'>
			<Overload retVal='Any' descr='// 0xE7A0D23DC414507B
// 0xD633C809
AUDIO::GET_MUSIC_PLAYTIME();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNetworkIdFromSoundId' func='yes'>
			<Overload retVal='int' descr='// 0x2DE3F0A134FFBC0D
// 0x2576F610
AUDIO::GET_NETWORK_ID_FROM_SOUND_ID(int soundId);
----------------------------------------------------------------------------------------------------
```

Could this be used alongside either,   

SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES or _SET_NETWORK_ID_SYNC_TO_PLAYER to make it so other players 
can hear the sound while online? It&apos;d be a bit troll-fun to be able to play the Zancudo UFO creepy s
ounds globally.  

```'>
				<Param name='int soundId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfPassengerVoiceVariations' func='yes'>
			<Overload retVal='int' descr='// 0x66E49BF55B4B1874
// 0x27305D37
AUDIO::GET_NUMBER_OF_PASSENGER_VOICE_VARIATIONS(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerHeadsetSoundAlternate' func='yes'>
			<Overload retVal='void' descr='// 0xBCC29F935ED07688
// 0xD63CF33A
AUDIO::GET_PLAYER_HEADSET_SOUND_ALTERNATE(char* p0, float p1);
----------------------------------------------------------------------------------------------------
```

Called 5 times in the scripts. All occurrences found in b617d, sorted alphabetically and identical l
ines removed:   

AUDIO::GET_PLAYER_HEADSET_SOUND_ALTERNATE(&quot;INOUT&quot;, 0.0);  

AUDIO::GET_PLAYER_HEADSET_SOUND_ALTERNATE(&quot;INOUT&quot;, 1.0);  

```'>
				<Param name='char* p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerRadioStationGenre' func='yes'>
			<Overload retVal='Any' descr='// 0xA571991A7FE6CCEB
// 0x872CF0EA
AUDIO::GET_PLAYER_RADIO_STATION_GENRE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerRadioStationIndex' func='yes'>
			<Overload retVal='int' descr='// 0xE8AF77C4C06ADC93
// 0x1C4946AC
AUDIO::GET_PLAYER_RADIO_STATION_INDEX();
----------------------------------------------------------------------------------------------------
```

Returns 255 (radio off index) if the function fails.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerRadioStationName' func='yes'>
			<Overload retVal='char*' descr='// 0xF6D733C32076AD03
// 0xD909C107
AUDIO::GET_PLAYER_RADIO_STATION_NAME();
----------------------------------------------------------------------------------------------------
```

Returns active radio station name  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetRadioStationName' func='yes'>
			<Overload retVal='char*' descr='// 0xB28ECA15046CA8B9
// 0x3DF493BC
AUDIO::GET_RADIO_STATION_NAME(int radioStation);
----------------------------------------------------------------------------------------------------
```

Returns String with radio station name.  

```'>
				<Param name='int radioStation' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetSoundId' func='yes'>
			<Overload retVal='int' descr='// 0x430386FE9BF80B45
// 0x6AE0AD56
AUDIO::GET_SOUND_ID();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetSoundIdFromNetworkId' func='yes'>
			<Overload retVal='int' descr='// 0x75262FD12D0A1C84
// 0xD064D4DC
AUDIO::GET_SOUND_ID_FROM_NETWORK_ID(int netId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetStreamPlayTime' func='yes'>
			<Overload retVal='int' descr='// 0x4E72BBDBCA58A3DB
// 0xB4F0AD56
AUDIO::GET_STREAM_PLAY_TIME();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleDefaultHorn' func='yes'>
			<Overload retVal='Hash' descr='// 0x02165D55000219AC
// 0xE84ABC19
AUDIO::GET_VEHICLE_DEFAULT_HORN(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Returns hash of default vehicle horn  

Hash is stored in audVehicleAudioEntity  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleHornHash' func='yes'>
			<Overload retVal='Hash' descr='// 0xACB5DCCA1EC76840
// 0xFD4B5B3B
AUDIO::_GET_VEHICLE_HORN_HASH(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Seems to get the hash of the vehicle&apos;s currently installed horn?  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasSoundFinished' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFCBDCE714A7C88E5
// 0xE85AEC2E
AUDIO::HAS_SOUND_FINISHED(int soundId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int soundId' />
			</Overload>
		</KeyWord>
		<KeyWord name='HintAmbientAudioBank' func='yes'>
			<Overload retVal='Any' descr='// 0x8F8C0E370AE62F5C
// 0xF1850DDC
AUDIO::HINT_AMBIENT_AUDIO_BANK(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='HintScriptAudioBank' func='yes'>
			<Overload retVal='Any' descr='// 0xFB380A29641EC31A
// 0x41FA0E51
AUDIO::HINT_SCRIPT_AUDIO_BANK(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='InterruptConversation' func='yes'>
			<Overload retVal='void' descr='// 0xA018A12E5C5C2FA6
// 0xF3A67AF3
AUDIO::INTERRUPT_CONVERSATION(Any p0, Any* p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAlarmPlaying' func='yes'>
			<Overload retVal='BOOL' descr='// 0x226435CB96CCFC8C
// 0x9D8E1D23
AUDIO::IS_ALARM_PLAYING(char* alarmName);
----------------------------------------------------------------------------------------------------
```

Example:  

bool playing = AUDIO::IS_ALARM_PLAYING(&quot;PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS&quot;);  

```'>
				<Param name='char* alarmName' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAmbientSpeechDisabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x932C2D096A2C3FFF
// 0x109D1F89
AUDIO::IS_AMBIENT_SPEECH_DISABLED(Ped ped);
----------------------------------------------------------------------------------------------------
```

Common in the scripts:  

AUDIO::IS_AMBIENT_SPEECH_DISABLED(PLAYER::PLAYER_PED_ID());  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAmbientSpeechPlaying' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9072C8B49907BFAD
// 0x1972E8AA
AUDIO::IS_AMBIENT_SPEECH_PLAYING(Ped p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAmbientZoneEnabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x01E2817A479A7F9B
// 0xBFABD872
AUDIO::IS_AMBIENT_ZONE_ENABLED(char* ambientZone);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* ambientZone' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAnySpeechPlaying' func='yes'>
			<Overload retVal='BOOL' descr='// 0x729072355FA39EC9
// 0x2B74A6D6
AUDIO::IS_ANY_SPEECH_PLAYING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAudioSceneActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB65B60556E2A9225
// 0xACBED05C
AUDIO::IS_AUDIO_SCENE_ACTIVE(char* scene);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* scene' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsGameInControlOfMusic' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6D28DC1671E334FD
// 0x7643170D
AUDIO::IS_GAME_IN_CONTROL_OF_MUSIC();
----------------------------------------------------------------------------------------------------
```

Hardcoded to return 1  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsHornActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9D6BFC12B05C6121
// 0x20E2BDD0
AUDIO::IS_HORN_ACTIVE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Checks whether the horn of a vehicle is currently played.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsMissionCompletePlaying' func='yes'>
			<Overload retVal='BOOL' descr='// 0x19A30C23F5827F8A
// 0x939982A1
AUDIO::IS_MISSION_COMPLETE_PLAYING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsMobilePhoneCallOngoing' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7497D2CE2C30D24C
// 0x4ED1400A
AUDIO::IS_MOBILE_PHONE_CALL_ONGOING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsMobilePhoneRadioActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB35CE999E8EF317E
// 0x6E502A5B
AUDIO::IS_MOBILE_PHONE_RADIO_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInCurrentConversation' func='yes'>
			<Overload retVal='BOOL' descr='// 0x049E937F18F4020C
// 0x7B2F0743
AUDIO::IS_PED_IN_CURRENT_CONVERSATION(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedRingtonePlaying' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1E8E5E20937E3137
// 0xFE576EE4
AUDIO::IS_PED_RINGTONE_PLAYING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerVehicleRadioEnabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5F43D83FD6738741
// 0x2A3E5E8B
AUDIO::_IS_PLAYER_VEHICLE_RADIO_ENABLED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsRadioRetuning' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA151A7394A214E65
// 0xCF29097B
AUDIO::IS_RADIO_RETUNING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsScriptedConversationLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDF0D54BE7A776737
// 0xE1870EA9
AUDIO::IS_SCRIPTED_CONVERSATION_LOADED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsScriptedConversationOngoing' func='yes'>
			<Overload retVal='BOOL' descr='// 0x16754C556D2EDE3D
// 0xCB8FD96F
AUDIO::IS_SCRIPTED_CONVERSATION_ONGOING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsScriptedSpeechPlaying' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCC9AA18DCC7084F4
// 0x2C653904
AUDIO::IS_SCRIPTED_SPEECH_PLAYING(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsStreamPlaying' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD11FA52EB849D978
// 0xF1F51A14
AUDIO::IS_STREAM_PLAYING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleRadioLoud' func='yes'>
			<Overload retVal='BOOL' descr='// 0x032A116663A4D5AC
// 0xCBA99F4A
AUDIO::_IS_VEHICLE_RADIO_LOUD(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='LoadStream' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1F1F957154EC51DF
// 0x0D89599D
AUDIO::LOAD_STREAM(char* streamName, char* soundSet);
----------------------------------------------------------------------------------------------------
```

Example:  

AUDIO::LOAD_STREAM(&quot;CAR_STEAL_1_PASSBY&quot;, &quot;CAR_STEAL_1_SOUNDSET&quot;);  

All found occurrences in the b678d decompiled scripts: pastebin.com/3rma6w5w  

Stream names often ends with &quot;_MASTER&quot;, &quot;_SMALL&quot; or &quot;_STREAM&quot;. Also &quot;_IN&quot;, &quot;_OUT&quot; and numbers.     


soundSet is often set to 0 in the scripts. These are common to end the soundSets: &quot;_SOUNDS&quot;, &quot;_SOUND
SET&quot; and numbers.  

```'>
				<Param name='char* streamName' />
				<Param name='char* soundSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='LoadStreamWithStartOffset' func='yes'>
			<Overload retVal='BOOL' descr='// 0x59C16B79F53B3712
// 0xE5B5745C
AUDIO::LOAD_STREAM_WITH_START_OFFSET(char* streamName, int startOffset, char* soundSet);
----------------------------------------------------------------------------------------------------
```

Example:  

AUDIO::LOAD_STREAM_WITH_START_OFFSET(&quot;STASH_TOXIN_STREAM&quot;, 2400, &quot;FBI_05_SOUNDS&quot;);  

Only called a few times in the scripts.  

```'>
				<Param name='char* streamName' />
				<Param name='int startOffset' />
				<Param name='char* soundSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='MaxRadioStationIndex' func='yes'>
			<Overload retVal='int' descr='// 0xF1620ECB50E01DE7
// 0xCC91FCF5
AUDIO::_MAX_RADIO_STATION_INDEX();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0150b6ff25a9e2e5' func='yes'>
			<Overload retVal='void' descr='// 0x0150B6FF25A9E2E5
// 0x1134F68B
AUDIO::_0x0150B6FF25A9E2E5();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x01bb4d577d38bd9e' func='yes'>
			<Overload retVal='void' descr='// 0x01BB4D577D38BD9E
// 0xE81FAC68
AUDIO::_0x01BB4D577D38BD9E(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x02e93c796abd3a97' func='yes'>
			<Overload retVal='void' descr='// 0x02E93C796ABD3A97
// 0x3C395AEE
AUDIO::_0x02E93C796ABD3A97(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x031acb6aba18c729' func='yes'>
			<Overload retVal='void' descr='// 0x031ACB6ABA18C729
// 0xBE998184
AUDIO::_0x031ACB6ABA18C729(char* radioStation, char* p1);
----------------------------------------------------------------------------------------------------
```

2 calls in the b617d scripts. This line is called 2 times:  

AUDIO::_031ACB6ABA18C729(&quot;RADIO_16_SILVERLAKE&quot;, &quot;MIRRORPARK_LOCKED&quot;);  

Note: Another name for RADIO_16_SILVERLAKE is RADIO MIRROR PARK  

```'>
				<Param name='char* radioStation' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x044dbad7a7fa2be5' func='yes'>
			<Overload retVal='void' descr='// 0x044DBAD7A7FA2BE5
// 0x8AD670EC
AUDIO::_0x044DBAD7A7FA2BE5(char* p0, char* p1);
----------------------------------------------------------------------------------------------------
```

Found in the b617d scripts, duplicates removed:    

AUDIO::_044DBAD7A7FA2BE5(&quot;V_CARSHOWROOM_PS_WINDOW_UNBROKEN&quot;, &quot;V_CARSHOWROOM_PS_WINDOW_BROKEN&quot;);  

 AUDIO::_044DBAD7A7FA2BE5(&quot;V_CIA_PS_WINDOW_UNBROKEN&quot;, &quot;V_CIA_PS_WINDOW_BROKEN&quot;);  

 AUDIO::_044DBAD7A7FA2BE5(&quot;V_DLC_HEIST_APARTMENT_DOOR_CLOSED&quot;, &quot;V_DLC_HEIST_APARTMENT_DOOR_OPEN&quot;);  


 AUDIO::_044DBAD7A7FA2BE5(&quot;V_FINALEBANK_PS_VAULT_INTACT&quot;, &quot;V_FINALEBANK_PS_VAULT_BLOWN&quot;);  

 AUDIO::_044DBAD7A7FA2BE5(&quot;V_MICHAEL_PS_BATHROOM_WITH_WINDOW&quot;, &quot;V_MICHAEL_PS_BATHROOM_WITHOUT_WINDOW
&quot;);  

```'>
				<Param name='char* p0' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0626a247d2405330' func='yes'>
			<Overload retVal='Any' descr='// 0x0626A247D2405330
AUDIO::_0x0626A247D2405330();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x062d5ead4da2fa6a' func='yes'>
			<Overload retVal='void' descr='// 0x062D5EAD4DA2FA6A
// 0xD87AF337
AUDIO::_0x062D5EAD4DA2FA6A();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x06c0023bed16dd6b' func='yes'>
			<Overload retVal='void' descr='// 0x06C0023BED16DD6B
// 0xE61110A2
AUDIO::_0x06C0023BED16DD6B(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0b568201dd99f0eb' func='yes'>
			<Overload retVal='void' descr='// 0x0B568201DD99F0EB
// 0x1193ED6E
AUDIO::_0x0B568201DD99F0EB(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0be4be946463f917' func='yes'>
			<Overload retVal='Any' descr='// 0x0BE4BE946463F917
AUDIO::_0x0BE4BE946463F917(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x109697e2ffbac8a1' func='yes'>
			<Overload retVal='BOOL' descr='// 0x109697E2FFBAC8A1
// 0x46B0C696
AUDIO::_0x109697E2FFBAC8A1();
----------------------------------------------------------------------------------------------------
```

Not sure what this function does, but it&apos;s related to the audio of the local player&apos;s vehicle (Consi
dering the surrounding natives, it&apos;s probably radio related).  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x11579d940949c49e' func='yes'>
			<Overload retVal='void' descr='// 0x11579D940949C49E
AUDIO::_0x11579D940949C49E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x12561fcbb62d5b9c' func='yes'>
			<Overload retVal='void' descr='// 0x12561FCBB62D5B9C
// 0x62B43677
AUDIO::_0x12561FCBB62D5B9C(int p0);
----------------------------------------------------------------------------------------------------
```

p0 is usually 0. sometimes 2. Not sure what this does.  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x149aee66f0cb3a99' func='yes'>
			<Overload retVal='void' descr='// 0x149AEE66F0CB3A99
// 0xE64F97A0
AUDIO::_0x149AEE66F0CB3A99(float p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x159b7318403a1cd8' func='yes'>
			<Overload retVal='void' descr='// 0x159B7318403A1CD8
AUDIO::_0x159B7318403A1CD8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1654f24a88a8e3fe' func='yes'>
			<Overload retVal='void' descr='// 0x1654F24A88A8E3FE
// 0x1D766976
AUDIO::_0x1654F24A88A8E3FE(char* radioStation);
----------------------------------------------------------------------------------------------------
```

3 calls in the b617d scripts, removed duplicate.  

AUDIO::_1654F24A88A8E3FE(&quot;RADIO_16_SILVERLAKE&quot;);  

AUDIO::_1654F24A88A8E3FE(&quot;RADIO_01_CLASS_ROCK&quot;);  

```'>
				<Param name='char* radioStation' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x18eb48cfc41f2ea0' func='yes'>
			<Overload retVal='void' descr='// 0x18EB48CFC41F2EA0
// 0x308ED0EC
AUDIO::_0x18EB48CFC41F2EA0(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x19af7ed9b9d23058' func='yes'>
			<Overload retVal='void' descr='// 0x19AF7ED9B9D23058
// 0xA58BBF4F
AUDIO::_0x19AF7ED9B9D23058();
----------------------------------------------------------------------------------------------------
```

RELEASE_???  

I say RELEASE_???, as in IDA this native calls the same function as   

-&apos;RELEASE_MISSION_AUDIO_BANK()&apos;.  

-&apos;RELEASE_AMBIENT_AUDIO_BANK()&apos;.  

-&apos;RELEASE_SCRIPT_AUDIO_BANK()&apos;.  

However &apos;RELEASE_NAMED_SCRIPT_AUDIO_BANK&apos; does not use the same function. So may be, &apos;RELEASE_???_AU
DIO_BANK()&apos;? Doubt it.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1b7abe26cbcbf8c7' func='yes'>
			<Overload retVal='void' descr='// 0x1B7ABE26CBCBF8C7
AUDIO::_0x1B7ABE26CBCBF8C7(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1c073274e065c6d2' func='yes'>
			<Overload retVal='void' descr='// 0x1C073274E065C6D2
// 0x9365E042
AUDIO::_0x1C073274E065C6D2(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2be4bc731d039d5a' func='yes'>
			<Overload retVal='void' descr='// 0x2BE4BC731D039D5A
// 0x2A60A90E
AUDIO::_0x2BE4BC731D039D5A(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2c96cdb04fca358e' func='yes'>
			<Overload retVal='void' descr='// 0x2C96CDB04FCA358E
// 0xC8B514E2
AUDIO::_0x2C96CDB04FCA358E(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x33e3c6c6f2f0b506' func='yes'>
			<Overload retVal='void' descr='// 0x33E3C6C6F2F0B506
// 0x73C6F979
AUDIO::_0x33E3C6C6F2F0B506(Any p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3a48ab4445d499be' func='yes'>
			<Overload retVal='Any' descr='// 0x3A48AB4445D499BE
// 0x93A44A1F
AUDIO::_0x3A48AB4445D499BE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3d120012440e6683' func='yes'>
			<Overload retVal='Any' descr='// 0x3D120012440E6683
AUDIO::_0x3D120012440E6683();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x40763ea7b9b783e7' func='yes'>
			<Overload retVal='Any' descr='// 0x40763EA7B9B783E7
AUDIO::_0x40763EA7B9B783E7(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x43fa0dfc5df87815' func='yes'>
			<Overload retVal='void' descr='// 0x43FA0DFC5DF87815
// 0x7BED1872
AUDIO::_0x43FA0DFC5DF87815(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4e404a9361f75bb2' func='yes'>
			<Overload retVal='void' descr='// 0x4E404A9361F75BB2
// 0x128C3873
AUDIO::_0x4E404A9361F75BB2(char* radioStation, char* p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Examples:  

AUDIO::_4E404A9361F75BB2(&quot;RADIO_01_CLASS_ROCK&quot;, &quot;END_CREDITS_KILL_MICHAEL&quot;, 1);  

AUDIO::_4E404A9361F75BB2(&quot;RADIO_01_CLASS_ROCK&quot;, &quot;END_CREDITS_KILL_MICHAEL&quot;, 1);  

AUDIO::_4E404A9361F75BB2(&quot;RADIO_01_CLASS_ROCK&quot;, &quot;END_CREDITS_KILL_TREVOR&quot;, 1);  

AUDIO::_4E404A9361F75BB2(&quot;RADIO_01_CLASS_ROCK&quot;, &quot;END_CREDITS_SAVE_MICHAEL_TREVOR&quot;, 1);  

AUDIO::_4E404A9361F75BB2(&quot;RADIO_01_CLASS_ROCK&quot;, &quot;OFF_ROAD_RADIO_ROCK_LIST&quot;, 1);  

AUDIO::_4E404A9361F75BB2(&quot;RADIO_06_COUNTRY&quot;, &quot;MAGDEMO2_RADIO_DINGHY&quot;, 1);  

AUDIO::_4E404A9361F75BB2(&quot;RADIO_16_SILVERLAKE&quot;, &quot;SEA_RACE_RADIO_PLAYLIST&quot;, 1);  

AUDIO::_4E404A9361F75BB2(&quot;RADIO_01_CLASS_ROCK&quot;, &quot;OFF_ROAD_RADIO_ROCK_LIST&quot;, 1);  

```'>
				<Param name='char* radioStation' />
				<Param name='char* p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x544810ed9db6bbe6' func='yes'>
			<Overload retVal='Any' descr='// 0x544810ED9DB6BBE6
AUDIO::_0x544810ED9DB6BBE6();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x58bb377bec7cd5f4' func='yes'>
			<Overload retVal='void' descr='// 0x58BB377BEC7CD5F4
// 0x8CE63FA1
AUDIO::_0x58BB377BEC7CD5F4(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x59e7b488451f4d3a' func='yes'>
			<Overload retVal='void' descr='// 0x59E7B488451F4D3A
// 0x23BE6432
AUDIO::_0x59E7B488451F4D3A(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5b50abb1fe3746f4' func='yes'>
			<Overload retVal='Any' descr='// 0x5B50ABB1FE3746F4
AUDIO::_0x5B50ABB1FE3746F4();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5b9853296731e88d' func='yes'>
			<Overload retVal='void' descr='// 0x5B9853296731E88D
AUDIO::_0x5B9853296731E88D(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5d2bfaab8d956e0e' func='yes'>
			<Overload retVal='void' descr='// 0x5D2BFAAB8D956E0E
AUDIO::_0x5D2BFAAB8D956E0E();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5db8010ee71fdef2' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5DB8010EE71FDEF2
// 0x6E660D3F
AUDIO::_0x5DB8010EE71FDEF2(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5e203da2ba15d436' func='yes'>
			<Overload retVal='Any' descr='// 0x5E203DA2BA15D436
AUDIO::_0x5E203DA2BA15D436(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x61631f5df50d1c34' func='yes'>
			<Overload retVal='void' descr='// 0x61631F5DF50D1C34
AUDIO::_0x61631F5DF50D1C34(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x651d3228960d08af' func='yes'>
			<Overload retVal='void' descr='// 0x651D3228960D08AF
AUDIO::_0x651D3228960D08AF(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6f259f82d873b8b8' func='yes'>
			<Overload retVal='Any' descr='// 0x6F259F82D873B8B8
// 0xCBE09AEC
AUDIO::_0x6F259F82D873B8B8();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6fddad856e36988a' func='yes'>
			<Overload retVal='void' descr='// 0x6FDDAD856E36988A
// 0x934BE749
AUDIO::_0x6FDDAD856E36988A(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x70b8ec8fc108a634' func='yes'>
			<Overload retVal='void' descr='// 0x70B8EC8FC108A634
// 0x95050CAD
AUDIO::_0x70B8EC8FC108A634(BOOL p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x733adf241531e5c2' func='yes'>
			<Overload retVal='void' descr='// 0x733ADF241531E5C2
// 0x62D026BE
AUDIO::_0x733ADF241531E5C2(char* name, float p1);
----------------------------------------------------------------------------------------------------
```

AUDIO::_733ADF241531E5C2(&quot;inTunnel&quot;, 1.0);  

AUDIO::_733ADF241531E5C2(&quot;inTunnel&quot;, 0.0);  

I do not know as of yet what this does, but this was found in the scripts.  

```'>
				<Param name='char* name' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x75773e11ba459e90' func='yes'>
			<Overload retVal='void' descr='// 0x75773E11BA459E90
AUDIO::_0x75773E11BA459E90(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x774bd811f656a122' func='yes'>
			<Overload retVal='void' descr='// 0x774BD811F656A122
// 0xB1FF7137
AUDIO::_0x774BD811F656A122(char* radioStation, BOOL p1);
----------------------------------------------------------------------------------------------------
```

6 calls in the b617d scripts, removed identical lines:  

AUDIO::_774BD811F656A122(&quot;RADIO_01_CLASS_ROCK&quot;, 1);  

AUDIO::_774BD811F656A122(AUDIO::GET_RADIO_STATION_NAME(10), 0);  

AUDIO::_774BD811F656A122(AUDIO::GET_RADIO_STATION_NAME(10), 1);  

```'>
				<Param name='char* radioStation' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7cdc8c3b89f661b3' func='yes'>
			<Overload retVal='void' descr='// 0x7CDC8C3B89F661B3
AUDIO::_0x7CDC8C3B89F661B3(Ped playerPed, Hash p1);
----------------------------------------------------------------------------------------------------
```

From the scripts:  

AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(&quot;PAIGE_PVG&quot;));  

                AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(&quot;TALINA_PVG
&quot;));  

            AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(&quot;FEMALE_LOST_BL
ACK_PVG&quot;));  

            AUDIO::_7CDC8C3B89F661B3(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(&quot;FEMALE_LOST_WH
ITE_PVG&quot;));  

```'>
				<Param name='Ped playerPed' />
				<Param name='Hash p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7ec3c679d0e7e46b' func='yes'>
			<Overload retVal='void' descr='// 0x7EC3C679D0E7E46B
AUDIO::_0x7EC3C679D0E7E46B(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x806058bbdc136e06' func='yes'>
			<Overload retVal='void' descr='// 0x806058BBDC136E06
AUDIO::_0x806058BBDC136E06();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x892b6ab8f33606f5' func='yes'>
			<Overload retVal='void' descr='// 0x892B6AB8F33606F5
// 0x88203DDA
AUDIO::_0x892B6AB8F33606F5(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8a694d7a68f8dc38' func='yes'>
			<Overload retVal='void' descr='// 0x8A694D7A68F8DC38
AUDIO::_0x8A694D7A68F8DC38(Ped p0, char* p1, char* p2);
----------------------------------------------------------------------------------------------------
```

One call found in the b617d scripts:  

AUDIO::_8A694D7A68F8DC38(NETWORK::NET_TO_PED(l_3989._f26F[0/*1*/]), &quot;CONV_INTERRUPT_QUIT_IT&quot;, &quot;LESTE
R&quot;);  

```'>
				<Param name='Ped p0' />
				<Param name='char* p1' />
				<Param name='char* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8bf907833be275de' func='yes'>
			<Overload retVal='void' descr='// 0x8BF907833BE275DE
AUDIO::_0x8BF907833BE275DE(float p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9a53ded9921de990' func='yes'>
			<Overload retVal='void' descr='// 0x9A53DED9921DE990
AUDIO::_0x9A53DED9921DE990(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9ac92eed5e4793ab' func='yes'>
			<Overload retVal='void' descr='// 0x9AC92EED5E4793AB
AUDIO::_0x9AC92EED5E4793AB();
----------------------------------------------------------------------------------------------------
```

RELEASE_???  

I say RELEASE_???, as in IDA this native calls the same function as   

-&apos;RELEASE_MISSION_AUDIO_BANK()&apos;.  

-&apos;RELEASE_AMBIENT_AUDIO_BANK()&apos;.  

-&apos;RELEASE_SCRIPT_AUDIO_BANK()&apos;.  

However &apos;RELEASE_NAMED_SCRIPT_AUDIO_BANK&apos; does not use the same function. So may be, &apos;RELEASE_???_AU
DIO_BANK()&apos;? Doubt it.  

Console Hash: 0xE67446E9  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9d3af56e94c9ae98' func='yes'>
			<Overload retVal='void' descr='// 0x9D3AF56E94C9AE98
// 0x2F0A16D1
AUDIO::_0x9D3AF56E94C9AE98(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa097ab275061fb21' func='yes'>
			<Overload retVal='Any' descr='// 0xA097AB275061FB21
// 0x2705C4D5
AUDIO::_0xA097AB275061FB21();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa5342d390cda41d6' func='yes'>
			<Overload retVal='void' descr='// 0xA5342D390CDA41D6
AUDIO::_0xA5342D390CDA41D6(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa5f377b175a699c5' func='yes'>
			<Overload retVal='void' descr='// 0xA5F377B175A699C5
// 0xE812925D
AUDIO::_0xA5F377B175A699C5(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaa19f5572c38b564' func='yes'>
			<Overload retVal='Any' descr='// 0xAA19F5572C38B564
// 0xB58B8FF3
AUDIO::_0xAA19F5572C38B564(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb4bbfd9cd8b3922b' func='yes'>
			<Overload retVal='void' descr='// 0xB4BBFD9CD8B3922B
// 0xD24B4D0C
AUDIO::_0xB4BBFD9CD8B3922B(char* p0);
----------------------------------------------------------------------------------------------------
```

Found in the b617d scripts, duplicates removed:   

AUDIO::_B4BBFD9CD8B3922B(&quot;V_CARSHOWROOM_PS_WINDOW_UNBROKEN&quot;);  

AUDIO::_B4BBFD9CD8B3922B(&quot;V_CIA_PS_WINDOW_UNBROKEN&quot;);  

AUDIO::_B4BBFD9CD8B3922B(&quot;V_DLC_HEIST_APARTMENT_DOOR_CLOSED&quot;);  

AUDIO::_B4BBFD9CD8B3922B(&quot;V_FINALEBANK_PS_VAULT_INTACT&quot;);  

AUDIO::_B4BBFD9CD8B3922B(&quot;V_MICHAEL_PS_BATHROOM_WITH_WINDOW&quot;);  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb542de8c3d1cb210' func='yes'>
			<Overload retVal='void' descr='// 0xB542DE8C3D1CB210
// 0x789D8C6C
AUDIO::_0xB542DE8C3D1CB210(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb81cf134aeb56ffb' func='yes'>
			<Overload retVal='void' descr='// 0xB81CF134AEB56FFB
AUDIO::_0xB81CF134AEB56FFB();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbef34b1d9624d5dd' func='yes'>
			<Overload retVal='void' descr='// 0xBEF34B1D9624D5DD
// 0xE0047BFD
AUDIO::_0xBEF34B1D9624D5DD(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbf4dc1784be94dfa' func='yes'>
			<Overload retVal='void' descr='// 0xBF4DC1784BE94DFA
AUDIO::_0xBF4DC1784BE94DFA(Any p0, BOOL p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc15907d667f7cfb2' func='yes'>
			<Overload retVal='void' descr='// 0xC15907D667F7CFB2
// 0x563B635D
AUDIO::_0xC15907D667F7CFB2(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc1805d05e6d4fe10' func='yes'>
			<Overload retVal='void' descr='// 0xC1805D05E6D4FE10
// 0x7ABB89D2
AUDIO::_0xC1805D05E6D4FE10(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc265df9fb44a9fbd' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC265DF9FB44A9FBD
// 0x0CBAF2EF
AUDIO::_0xC265DF9FB44A9FBD(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc8b1b2425604cdd0' func='yes'>
			<Overload retVal='Any' descr='// 0xC8B1B2425604CDD0
// 0x16FB88B5
AUDIO::_0xC8B1B2425604CDD0();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc8ede9bdbccba6d4' func='yes'>
			<Overload retVal='void' descr='// 0xC8EDE9BDBCCBA6D4
// 0x55A21772
AUDIO::_0xC8EDE9BDBCCBA6D4(Any* p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcada5a0d0702381e' func='yes'>
			<Overload retVal='void' descr='// 0xCADA5A0D0702381E
// 0xC70E6CFA
AUDIO::_0xCADA5A0D0702381E(char* p0, char* soundset);
----------------------------------------------------------------------------------------------------
```

Only call found in the b617d scripts:  

AUDIO::_CADA5A0D0702381E(&quot;BACK&quot;, &quot;HUD_FREEMODE_SOUNDSET&quot;);  

```'>
				<Param name='char* p0' />
				<Param name='char* soundset' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd01005d2ba2eb778' func='yes'>
			<Overload retVal='void' descr='// 0xD01005D2BA2EB778
// 0x59A3A17D
AUDIO::_0xD01005D2BA2EB778(char* p0);
----------------------------------------------------------------------------------------------------
```

Similar to 0xDDC635D5B3262C56. Enable?  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd2cc78cd3d0b50f9' func='yes'>
			<Overload retVal='void' descr='// 0xD2CC78CD3D0B50F9
// 0xC307D531
AUDIO::_0xD2CC78CD3D0B50F9(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd2dccd8e16e20997' func='yes'>
			<Overload retVal='void' descr='// 0xD2DCCD8E16E20997
AUDIO::_0xD2DCCD8E16E20997(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd57aaae0e2214d11' func='yes'>
			<Overload retVal='void' descr='// 0xD57AAAE0E2214D11
AUDIO::_0xD57AAAE0E2214D11();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xda07819e452ffe8f' func='yes'>
			<Overload retVal='void' descr='// 0xDA07819E452FFE8F
AUDIO::_0xDA07819E452FFE8F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdd6bcf9e94425df9' func='yes'>
			<Overload retVal='void' descr='// 0xDD6BCF9E94425DF9
// 0xD70ECC80
AUDIO::_0xDD6BCF9E94425DF9();
----------------------------------------------------------------------------------------------------
```

Tune Backwards... ?  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xddc635d5b3262c56' func='yes'>
			<Overload retVal='void' descr='// 0xDDC635D5B3262C56
// 0x0E387BFE
AUDIO::_0xDDC635D5B3262C56(char* p0);
----------------------------------------------------------------------------------------------------
```

Similar to 0xD01005D2BA2EB778. Disable?  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe4e6dd5566d28c82' func='yes'>
			<Overload retVal='void' descr='// 0xE4E6DD5566D28C82
// 0x7262B5BA
AUDIO::_0xE4E6DD5566D28C82();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe73364db90778ffa' func='yes'>
			<Overload retVal='Any' descr='// 0xE73364DB90778FFA
// 0x336F3D35
AUDIO::_0xE73364DB90778FFA();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xee066c7006c49c0a' func='yes'>
			<Overload retVal='void' descr='// 0xEE066C7006C49C0A
// 0x498849F3
AUDIO::_0xEE066C7006C49C0A(Any p0, Any p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf154b8d1775b2dec' func='yes'>
			<Overload retVal='void' descr='// 0xF154B8D1775B2DEC
// 0xD2858D8A
AUDIO::_0xF154B8D1775B2DEC(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf1f8157b8c3f171c' func='yes'>
			<Overload retVal='void' descr='// 0xF1F8157B8C3F171C
// 0x1C0C5E4C
AUDIO::_0xF1F8157B8C3F171C(Any p0, char* p1, char* p2);
----------------------------------------------------------------------------------------------------
```

2 calls found in the b617d scripts:  

AUDIO::_F1F8157B8C3F171C(l_A42, &quot;Franklin_Bike_Rev&quot;, &quot;BIG_SCORE_3A_SOUNDS&quot;);  

AUDIO::_F1F8157B8C3F171C(l_166, &quot;Trevor_Revs_Off&quot;, &quot;PALETO_SCORE_SETUP_SOUNDS&quot;);  

```'>
				<Param name='Any p0' />
				<Param name='char* p1' />
				<Param name='char* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf3365489e0dd50f9' func='yes'>
			<Overload retVal='void' descr='// 0xF3365489E0DD50F9
// 0x8AFC488D
AUDIO::_0xF3365489E0DD50F9(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfbe20329593dec9d' func='yes'>
			<Overload retVal='void' descr='// 0xFBE20329593DEC9D
// 0x53FC3FEC
AUDIO::_0xFBE20329593DEC9D(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xff266d1d0eb1195d' func='yes'>
			<Overload retVal='void' descr='// 0xFF266D1D0EB1195D
// 0x53DB6994
AUDIO::_0xFF266D1D0EB1195D();
----------------------------------------------------------------------------------------------------
```

Tune Forward... ?  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='OverrideTrevorRage' func='yes'>
			<Overload retVal='void' descr='// 0x13AD665062541A7E
// 0x05B9B5CF
AUDIO::OVERRIDE_TREVOR_RAGE(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='OverrideUnderwaterStream' func='yes'>
			<Overload retVal='void' descr='// 0xF2A9CDABCEA04BD6
// 0x9A083B7E
AUDIO::OVERRIDE_UNDERWATER_STREAM(Any* p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='OverrideVehHorn' func='yes'>
			<Overload retVal='void' descr='// 0x3CDC1E622CCE0356
// 0x2ACAB783
AUDIO::OVERRIDE_VEH_HORN(Vehicle vehicle, BOOL mute, int p2);
----------------------------------------------------------------------------------------------------
```

vehicle - the vehicle whose horn should be overwritten  

mute - p1 seems to be an option for muting the horn  

p2 - maybe a horn id, since the function AUDIO::GET_VEHICLE_DEFAULT_HORN(veh) exists?  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL mute' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='PauseScriptedConversation' func='yes'>
			<Overload retVal='void' descr='// 0x8530AD776CD72B12
// 0xE2C9C6F8
AUDIO::PAUSE_SCRIPTED_CONVERSATION(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayAmbientSpeech1' func='yes'>
			<Overload retVal='void' descr='// 0x8E04FEDD28D42462
// 0x5C57B85D
AUDIO::_PLAY_AMBIENT_SPEECH1(Ped ped, char* speechName, char* speechParam);
----------------------------------------------------------------------------------------------------
```

Plays ambient speech. See also _0x444180DB.  

ped: The ped to play the ambient speech.  

speechName: Name of the speech to play, eg. &quot;GENERIC_HI&quot;.  

speechParam: Can be one of the following:  

SPEECH_PARAMS_STANDARD  

SPEECH_PARAMS_ALLOW_REPEAT  

SPEECH_PARAMS_BEAT  

SPEECH_PARAMS_FORCE  

SPEECH_PARAMS_FORCE_FRONTEND  

SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND  

SPEECH_PARAMS_FORCE_NORMAL  

SPEECH_PARAMS_FORCE_NORMAL_CLEAR  

SPEECH_PARAMS_FORCE_NORMAL_CRITICAL  

SPEECH_PARAMS_FORCE_SHOUTED  

SPEECH_PARAMS_FORCE_SHOUTED_CLEAR  

SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL  

SPEECH_PARAMS_FORCE_PRELOAD_ONLY  

SPEECH_PARAMS_MEGAPHONE  

SPEECH_PARAMS_HELI  

SPEECH_PARAMS_FORCE_MEGAPHONE  

SPEECH_PARAMS_FORCE_HELI  

SPEECH_PARAMS_INTERRUPT  

SPEECH_PARAMS_INTERRUPT_SHOUTED  

SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR  

SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL  

SPEECH_PARAMS_INTERRUPT_NO_FORCE  

SPEECH_PARAMS_INTERRUPT_FRONTEND  

SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND  

SPEECH_PARAMS_ADD_BLIP  

SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT  

SPEECH_PARAMS_ADD_BLIP_FORCE  

SPEECH_PARAMS_ADD_BLIP_SHOUTED  

SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE  

SPEECH_PARAMS_ADD_BLIP_INTERRUPT  

SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE  

SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED  

SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR  

SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL  

SPEECH_PARAMS_SHOUTED  

SPEECH_PARAMS_SHOUTED_CLEAR  

SPEECH_PARAMS_SHOUTED_CRITICAL  

Note: A list of Name and Parameters can be found here pastebin.com/1GZS5dCL  

Full list of speeches and voices names by some spanish shitbag: gist.github.com/alexguirre/0af600eb3
d4c91ad4f900120a63b8992  

```'>
				<Param name='Ped ped' />
				<Param name='char* speechName' />
				<Param name='char* speechParam' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayAmbientSpeech2' func='yes'>
			<Overload retVal='void' descr='// 0xC6941B4A3A8FBBB9
// 0x444180DB
AUDIO::_PLAY_AMBIENT_SPEECH2(Ped ped, char* speechName, char* speechParam);
----------------------------------------------------------------------------------------------------
```

Plays ambient speech. See also _0x5C57B85D.  

See _PLAY_AMBIENT_SPEECH1 for parameter specifications.  

Full list of speeches and voices names: gist.github.com/alexguirre/0af600eb3d4c91ad4f900120a63b8992 
 

```'>
				<Param name='Ped ped' />
				<Param name='char* speechName' />
				<Param name='char* speechParam' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayAmbientSpeechAtCoords' func='yes'>
			<Overload retVal='void' descr='// 0xED640017ED337E45
// 0xA1A1402E
AUDIO::_PLAY_AMBIENT_SPEECH_AT_COORDS(char* p0, char* p1, float p2, float p3, float p4, char* p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='char* p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='char* p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayAmbientSpeechWithVoice' func='yes'>
			<Overload retVal='void' descr='// 0x3523634255FC3318
// 0x8386AE28
AUDIO::_PLAY_AMBIENT_SPEECH_WITH_VOICE(Ped p0, char* speechName, char* voiceName, char* speechParam, B
----------------------------------------------------------------------------------------------------
p4);

```

```

This is the same as _PLAY_AMBIENT_SPEECH1 and _PLAY_AMBIENT_SPEECH2 but it will allow you to play a 
speech file from a specific voice file. It works on players and all peds, even animals.  

EX (C#):  

GTA.Native.Function.Call(Hash._0x3523634255FC3318, Game.Player.Character, &quot;GENERIC_INSULT_HIGH&quot;, &quot;s_
m_y_sheriff_01_white_full_01&quot;, &quot;SPEECH_PARAMS_FORCE_SHOUTED&quot;, 0);  

The first param is the ped you want to play it on, the second is the speech name, the third is the v
oice name, the fourth is the speech param, and the last param is usually always 0.  

Full list of speeches and voices names: gist.github.com/alexguirre/0af600eb3d4c91ad4f900120a63b8992 
 

```'>
				<Param name='Ped p0' />
				<Param name='char* speechName' />
				<Param name='char* voiceName' />
				<Param name='char* speechParam' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayEndCreditsMusic' func='yes'>
			<Overload retVal='void' descr='// 0xCD536C4D33DCC900
// 0x8E88B3CC
AUDIO::PLAY_END_CREDITS_MUSIC(BOOL play);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL play' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayMissionCompleteAudio' func='yes'>
			<Overload retVal='void' descr='// 0xB138AAB8A70D3C69
// 0x3033EA1D
AUDIO::PLAY_MISSION_COMPLETE_AUDIO(char* audioName);
----------------------------------------------------------------------------------------------------
```

Called 38 times in the scripts. There are 5 different audioNames used.   

One unknown removed below.   

AUDIO::PLAY_MISSION_COMPLETE_AUDIO(&quot;DEAD&quot;);  

AUDIO::PLAY_MISSION_COMPLETE_AUDIO(&quot;FRANKLIN_BIG_01&quot;);  

AUDIO::PLAY_MISSION_COMPLETE_AUDIO(&quot;GENERIC_FAILED&quot;);  

AUDIO::PLAY_MISSION_COMPLETE_AUDIO(&quot;TREVOR_SMALL_01&quot;);  

```'>
				<Param name='char* audioName' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayPain' func='yes'>
			<Overload retVal='void' descr='// 0xBC9AE166038A5CEC
// 0x874BD6CB
AUDIO::PLAY_PAIN(Ped ped, int painID, int p1);
----------------------------------------------------------------------------------------------------
```

Needs another parameter [int p2]. The signature is PED::PLAY_PAIN(Ped ped, int painID, int p1, int p
2);  

Last 2 parameters always seem to be 0.  

EX: Function.Call(Hash.PLAY_PAIN, TestPed, 6, 0, 0);  

Known Pain IDs  

________________________  

1 - Doesn&apos;t seem to do anything. Does NOT crash the game like previously said. (Latest patch)  

6 - Scream (Short)  

7 - Scared Scream (Kinda Long)  

8 - On Fire  

```'>
				<Param name='Ped ped' />
				<Param name='int painID' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayPedRingtone' func='yes'>
			<Overload retVal='void' descr='// 0xF9E56683CA8E11A5
// 0x1D530E47
AUDIO::PLAY_PED_RINGTONE(char* ringtoneName, Ped ped, BOOL p2);
----------------------------------------------------------------------------------------------------
```

All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/RFb4
GTny  

AUDIO::PLAY_PED_RINGTONE(&quot;Remote_Ring&quot;, PLAYER::PLAYER_PED_ID(), 1);  

AUDIO::PLAY_PED_RINGTONE(&quot;Dial_and_Remote_Ring&quot;, PLAYER::PLAYER_PED_ID(), 1);  

```'>
				<Param name='char* ringtoneName' />
				<Param name='Ped ped' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayPoliceReport' func='yes'>
			<Overload retVal='Any' descr='// 0xDFEBD56D9BD1EB16
// 0x3F277B62
AUDIO::PLAY_POLICE_REPORT(char* name, float p1);
----------------------------------------------------------------------------------------------------
```

Please change to void. (Does not return anything!)  

Plays the given police radio message.  

All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/GBns
Q5hr  

```'>
				<Param name='char* name' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaySound' func='yes'>
			<Overload retVal='void' descr='// 0x7FF4944CC209192D
// 0xB6E1917F
AUDIO::PLAY_SOUND(Player soundId, char* audioName, char* audioRef, BOOL p3, Any p4, BOOL p5);
----------------------------------------------------------------------------------------------------
```

All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/A8Ny
8AHZ  

```'>
				<Param name='Player soundId' />
				<Param name='char* audioName' />
				<Param name='char* audioRef' />
				<Param name='BOOL p3' />
				<Param name='Any p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaySoundFromCoord' func='yes'>
			<Overload retVal='void' descr='// 0x8D8686B622B88120
// 0xCAD3E2D5
AUDIO::PLAY_SOUND_FROM_COORD(int soundId, char* audioName, float x, float y, float z, char* audioRef, 
----------------------------------------------------------------------------------------------------
p6, int range, BOOL p8);

```

```

All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/eeFc
5DiW  

gtaforums.com/topic/795622-audio-for-mods  

```'>
				<Param name='int soundId' />
				<Param name='char* audioName' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='char* audioRef' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaySoundFromEntity' func='yes'>
			<Overload retVal='void' descr='// 0xE65F427EB70AB1ED
// 0x95AE00F8
AUDIO::PLAY_SOUND_FROM_ENTITY(int soundId, char* audioName, Entity entity, char* audioRef, BOOL p4, An
----------------------------------------------------------------------------------------------------
);

```

```

All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/f2A7
vTj0   

No changes made in b678d.  

gtaforums.com/topic/795622-audio-for-mods  

```'>
				<Param name='int soundId' />
				<Param name='char* audioName' />
				<Param name='Entity entity' />
				<Param name='char* audioRef' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaySoundFrontend' func='yes'>
			<Overload retVal='void' descr='// 0x67C540AA08E4A6F5
// 0x2E458F74
AUDIO::PLAY_SOUND_FRONTEND(int soundId, char* audioName, char* audioRef, BOOL p3);
----------------------------------------------------------------------------------------------------
```

list: pastebin.com/DCeRiaLJ  

All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/0neZ
dsZ5  

```'>
				<Param name='int soundId' />
				<Param name='char* audioName' />
				<Param name='char* audioRef' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayStreamFromObject' func='yes'>
			<Overload retVal='void' descr='// 0xEBAA9B64D76356FD
// 0xC5266BF7
AUDIO::PLAY_STREAM_FROM_OBJECT(Object object);
----------------------------------------------------------------------------------------------------
```

Used with AUDIO::LOAD_STREAM  

Example from finale_heist2b.c4:  

AI::TASK_SYNCHRONIZED_SCENE(l_4C8[2/*14*/], l_4C8[2/*14*/]._f7, l_30A, &quot;push_out_vault_l&quot;, 4.0, -1.5
, 5, 713, 4.0, 0);  

                    PED::SET_SYNCHRONIZED_SCENE_PHASE(l_4C8[2/*14*/]._f7, 0.0);  

                    PED::_2208438012482A1A(l_4C8[2/*14*/], 0, 0);  

                    PED::SET_PED_COMBAT_ATTRIBUTES(l_4C8[2/*14*/], 38, 1);  

                    PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_4C8[2/*14*/], 1);  

                    if (AUDIO::LOAD_STREAM(&quot;Gold_Cart_Push_Anim_01&quot;, &quot;BIG_SCORE_3B_SOUNDS&quot;)) {  

                        AUDIO::PLAY_STREAM_FROM_OBJECT(l_36F[0/*1*/]);  

                    }  

```'>
				<Param name='Object object' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayStreamFromPed' func='yes'>
			<Overload retVal='void' descr='// 0x89049DD63C08B5D1
// 0xA1D7FABE
AUDIO::PLAY_STREAM_FROM_PED(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayStreamFromVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xB70374A758007DFA
// 0xF8E4BDA2
AUDIO::PLAY_STREAM_FROM_VEHICLE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayStreamFrontend' func='yes'>
			<Overload retVal='void' descr='// 0x58FCE43488F9F5F4
// 0x2C2A16BC
AUDIO::PLAY_STREAM_FRONTEND();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='PlaySynchronizedAudioEvent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8B2FD4560E55DD2D
// 0x507F3241
AUDIO::PLAY_SYNCHRONIZED_AUDIO_EVENT(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayVehicleDoorCloseSound' func='yes'>
			<Overload retVal='void' descr='// 0x62A456AA4769EF34
// 0xBA2CF407
AUDIO::PLAY_VEHICLE_DOOR_CLOSE_SOUND(Vehicle vehicle, int p1);
----------------------------------------------------------------------------------------------------
```

This native only comes up once. And in that one instance, p1 is &quot;1&quot;.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayVehicleDoorOpenSound' func='yes'>
			<Overload retVal='void' descr='// 0x3A539D52857EA82D
// 0x84930330
AUDIO::PLAY_VEHICLE_DOOR_OPEN_SOUND(Vehicle vehicle, int p1);
----------------------------------------------------------------------------------------------------
```

p1 appears to only be &quot;0&quot; or &quot;3&quot;. I personally use &quot;0&quot; as p1.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='PreloadScriptConversation' func='yes'>
			<Overload retVal='void' descr='// 0x3B3CAD6166916D87
// 0xDDF5C579
AUDIO::PRELOAD_SCRIPT_CONVERSATION(BOOL p0, BOOL p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='PreloadScriptPhoneConversation' func='yes'>
			<Overload retVal='void' descr='// 0x6004BCB0E226AAEA
// 0x9ACB213A
AUDIO::PRELOAD_SCRIPT_PHONE_CONVERSATION(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='PrepareAlarm' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9D74AE343DB65533
// 0x084932E8
AUDIO::PREPARE_ALARM(char* alarmName);
----------------------------------------------------------------------------------------------------
```

Example:  

bool prepareAlarm = AUDIO::PREPARE_ALARM(&quot;PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS&quot;);  

```'>
				<Param name='char* alarmName' />
			</Overload>
		</KeyWord>
		<KeyWord name='PrepareMusicEvent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1E5185B72EF5158A
// 0x534A5C1C
AUDIO::PREPARE_MUSIC_EVENT(char* eventName);
----------------------------------------------------------------------------------------------------
```

All music event names found in the b617d scripts: pastebin.com/GnYt0R3P  

```'>
				<Param name='char* eventName' />
			</Overload>
		</KeyWord>
		<KeyWord name='PrepareSynchronizedAudioEvent' func='yes'>
			<Overload retVal='Any' descr='// 0xC7ABCACA4985A766
// 0xE1D91FD0
AUDIO::PREPARE_SYNCHRONIZED_AUDIO_EVENT(char* p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='PrepareSynchronizedAudioEventForScene' func='yes'>
			<Overload retVal='BOOL' descr='// 0x029FE7CD1B7E2E75
// 0x7652DD49
AUDIO::PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterScriptWithAudio' func='yes'>
			<Overload retVal='void' descr='// 0xC6ED9D5092438D91
// 0xA6203643
AUDIO::REGISTER_SCRIPT_WITH_AUDIO(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ReleaseAmbientAudioBank' func='yes'>
			<Overload retVal='void' descr='// 0x65475A218FFAA93D
// 0x8C938784
AUDIO::RELEASE_AMBIENT_AUDIO_BANK();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ReleaseMissionAudioBank' func='yes'>
			<Overload retVal='void' descr='// 0x0EC92A1BF0857187
// 0x8E8824C7
AUDIO::RELEASE_MISSION_AUDIO_BANK();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ReleaseNamedScriptAudioBank' func='yes'>
			<Overload retVal='void' descr='// 0x77ED170667F50170
// 0x16707ABC
AUDIO::RELEASE_NAMED_SCRIPT_AUDIO_BANK(char* audioBank);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* audioBank' />
			</Overload>
		</KeyWord>
		<KeyWord name='ReleaseScriptAudioBank' func='yes'>
			<Overload retVal='void' descr='// 0x7A2D8AD0A9EB9C3F
// 0x22F865E5
AUDIO::RELEASE_SCRIPT_AUDIO_BANK();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ReleaseSoundId' func='yes'>
			<Overload retVal='void' descr='// 0x353FC880830B88FA
// 0x9C080899
AUDIO::RELEASE_SOUND_ID(int soundId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int soundId' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestAmbientAudioBank' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFE02FFBED8CA9D99
// 0x23C88BC7
AUDIO::REQUEST_AMBIENT_AUDIO_BANK(char* p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: pasteb
in.com/XZ1tmGEz  

```'>
				<Param name='char* p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestMissionAudioBank' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7345BDD95E62E0F2
// 0x916E37CA
AUDIO::REQUEST_MISSION_AUDIO_BANK(char* p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

All occurrences and usages found in b617d: pastebin.com/NzZZ2Tmm  

```'>
				<Param name='char* p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestScriptAudioBank' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2F844A8B08D76685
// 0x21322887
AUDIO::REQUEST_SCRIPT_AUDIO_BANK(char* p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: pasteb
in.com/AkmDAVn6  

```'>
				<Param name='char* p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPedAudioFlags' func='yes'>
			<Overload retVal='void' descr='// 0xF54BB7B61036F335
// 0xDF720C86
AUDIO::RESET_PED_AUDIO_FLAGS(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetTrevorRage' func='yes'>
			<Overload retVal='void' descr='// 0xE78503B10C4314E0
// 0xE80CF0D4
AUDIO::RESET_TREVOR_RAGE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='RestartScriptedConversation' func='yes'>
			<Overload retVal='void' descr='// 0x9AEB285D1818C9AC
// 0x6CB24B56
AUDIO::RESTART_SCRIPTED_CONVERSATION();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetAggressiveHorns' func='yes'>
			<Overload retVal='void' descr='// 0x395BF71085D1B1D9
// 0x01D6EABE
AUDIO::SET_AGGRESSIVE_HORNS(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAmbientVoiceName' func='yes'>
			<Overload retVal='void' descr='// 0x6C8065A3B780185B
// 0xBD2EA1A1
AUDIO::SET_AMBIENT_VOICE_NAME(Ped ped, char* name);
----------------------------------------------------------------------------------------------------
```

Audio List  

gtaforums.com/topic/795622-audio-for-mods/  

All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/FTeA
j4yZ  

Yes  

```'>
				<Param name='Ped ped' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAmbientZoneListState' func='yes'>
			<Overload retVal='void' descr='// 0x9748FA4DE50CCE3E
// 0xBF80B412
AUDIO::SET_AMBIENT_ZONE_LIST_STATE(char* p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAmbientZoneListStatePersistent' func='yes'>
			<Overload retVal='void' descr='// 0xF3638DAE8C4045E1
// 0x5F5A2605
AUDIO::SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT(char* ambientZone, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

All occurrences found in b617d, sorted alphabetically and identical lines removed: pastebin.com/WkXD
GgQL  

New Ambient Zone List (Combind with old): pastebin.com/h8BsKgUD -DasChaos  

```'>
				<Param name='char* ambientZone' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAmbientZoneState' func='yes'>
			<Overload retVal='void' descr='// 0xBDA07E5950085E46
// 0x2849CAC9
AUDIO::SET_AMBIENT_ZONE_STATE(Any* p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAmbientZoneStatePersistent' func='yes'>
			<Overload retVal='void' descr='// 0x1D6650420CEC9D3B
// 0xC1FFB672
AUDIO::SET_AMBIENT_ZONE_STATE_PERSISTENT(char* ambientZone, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

All occurrences found in b617d, sorted alphabetically and identical lines removed: pastebin.com/jYvw
7N1S  

New Ambient Zone List (Combind with old): pastebin.com/h8BsKgUD -DasChaos  

```'>
				<Param name='char* ambientZone' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAnimalMood' func='yes'>
			<Overload retVal='void' descr='// 0xCC97B29285B1DC3B
// 0x3EA7C6CB
AUDIO::SET_ANIMAL_MOOD(Ped animal, int mood);
----------------------------------------------------------------------------------------------------
```

mood can be 0 or 1 (it&apos;s not a boolean value!). Effects audio of the animal.  

```'>
				<Param name='Ped animal' />
				<Param name='int mood' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAudioFlag' func='yes'>
			<Overload retVal='void' descr='// 0xB9EFD5C25018725A
// 0x1C09C9E0
AUDIO::SET_AUDIO_FLAG(char* flagName, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Possible flag names:  

&quot;ActivateSwitchWheelAudio&quot;  

&quot;AllowAmbientSpeechInSlowMo&quot;  

&quot;AllowCutsceneOverScreenFade&quot;  

&quot;AllowForceRadioAfterRetune&quot;  

&quot;AllowPainAndAmbientSpeechToPlayDuringCutscene&quot;  

&quot;AllowPlayerAIOnMission&quot;  

&quot;AllowPoliceScannerWhenPlayerHasNoControl&quot;  

&quot;AllowRadioDuringSwitch&quot;  

&quot;AllowRadioOverScreenFade&quot;  

&quot;AllowScoreAndRadio&quot;  

&quot;AllowScriptedSpeechInSlowMo&quot;  

&quot;AvoidMissionCompleteDelay&quot;  

&quot;DisableAbortConversationForDeathAndInjury&quot;  

&quot;DisableAbortConversationForRagdoll&quot;  

&quot;DisableBarks&quot;  

&quot;DisableFlightMusic&quot;  

&quot;DisableReplayScriptStreamRecording&quot;  

&quot;EnableHeadsetBeep&quot;  

&quot;ForceConversationInterrupt&quot;  

&quot;ForceSeamlessRadioSwitch&quot;  

&quot;ForceSniperAudio&quot;  

&quot;FrontendRadioDisabled&quot;  

&quot;HoldMissionCompleteWhenPrepared&quot;  

&quot;IsDirectorModeActive&quot;  

&quot;IsPlayerOnMissionForSpeech&quot;  

&quot;ListenerReverbDisabled&quot;  

&quot;LoadMPData&quot;  

&quot;MobileRadioInGame&quot;  

&quot;OnlyAllowScriptTriggerPoliceScanner&quot;  

&quot;PlayMenuMusic&quot;  

&quot;PoliceScannerDisabled&quot;  

&quot;ScriptedConvListenerMaySpeak&quot;  

&quot;SpeechDucksScore&quot;  

&quot;SuppressPlayerScubaBreathing&quot;  

&quot;WantedMusicDisabled&quot;  

&quot;WantedMusicOnMission&quot;  

-------------------------------  

No added flag names between b393d and b573d, including b573d.  

#######################################################################  

&quot;IsDirectorModeActive&quot; is an audio flag which will allow you to play speech infinitely without any p
auses like in Director Mode.  

-----------------------------------------------------------------------  

All flag IDs and hashes:  

ID: 01 | Hash: 0x20A7858F  

ID: 02 | Hash: 0xA11C2259  

ID: 03 | Hash: 0x08DE4700  

ID: 04 | Hash: 0x989F652F  

ID: 05 | Hash: 0x3C9E76BA  

ID: 06 | Hash: 0xA805FEB0  

ID: 07 | Hash: 0x4B94EA26  

ID: 08 | Hash: 0x803ACD34  

ID: 09 | Hash: 0x7C741226  

ID: 10 | Hash: 0x31DB9EBD  

ID: 11 | Hash: 0xDF386F18  

ID: 12 | Hash: 0x669CED42  

ID: 13 | Hash: 0x51F22743  

ID: 14 | Hash: 0x2052B35C  

ID: 15 | Hash: 0x071472DC  

ID: 16 | Hash: 0xF9928BCC  

ID: 17 | Hash: 0x7ADBDD48  

ID: 18 | Hash: 0xA959BA1A  

ID: 19 | Hash: 0xBBE89B60  

ID: 20 | Hash: 0x87A08871  

ID: 21 | Hash: 0xED1057CE  

ID: 22 | Hash: 0x1584AD7A  

ID: 23 | Hash: 0x8582CFCB  

ID: 24 | Hash: 0x7E5E2FB0  

ID: 25 | Hash: 0xAE4F72DB  

ID: 26 | Hash: 0x5D16D1FA  

ID: 27 | Hash: 0x06B2F4B8  

ID: 28 | Hash: 0x5D4CDC96  

ID: 29 | Hash: 0x8B5A48BA  

ID: 30 | Hash: 0x98FBD539  

ID: 31 | Hash: 0xD8CB0473  

ID: 32 | Hash: 0x5CBB4874  

ID: 33 | Hash: 0x2E9F93A9  

ID: 34 | Hash: 0xD93BEA86  

ID: 35 | Hash: 0x92109B7D  

ID: 36 | Hash: 0xB7EC9E4D  

ID: 37 | Hash: 0xCABDBB1D  

ID: 38 | Hash: 0xB3FD4A52  

ID: 39 | Hash: 0x370D94E5  

ID: 40 | Hash: 0xA0F7938F  

ID: 41 | Hash: 0xCBE1CE81  

ID: 42 | Hash: 0xC27F1271  

ID: 43 | Hash: 0x9E3258EB  

ID: 44 | Hash: 0x551CDA5B  

ID: 45 | Hash: 0xCB6D663C  

ID: 46 | Hash: 0x7DACE87F  

ID: 47 | Hash: 0xF9DE416F  

ID: 48 | Hash: 0x882E6E9E  

ID: 49 | Hash: 0x16B447E7  

ID: 50 | Hash: 0xBD867739  

ID: 51 | Hash: 0xA3A58604  

ID: 52 | Hash: 0x7E046BBC  

ID: 53 | Hash: 0xD95FDB98  

ID: 54 | Hash: 0x5842C0ED  

ID: 55 | Hash: 0x285FECC6  

ID: 56 | Hash: 0x9351AC43  

ID: 57 | Hash: 0x50032E75  

ID: 58 | Hash: 0xAE6D0D59  

ID: 59 | Hash: 0xD6351785  

ID: 60 | Hash: 0xD25D71BC  

ID: 61 | Hash: 0x1F7F6423  

ID: 62 | Hash: 0xE24C3AA6  

ID: 63 | Hash: 0xBFFDD2B7  

```'>
				<Param name='char* flagName' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAudioSceneVariable' func='yes'>
			<Overload retVal='void' descr='// 0xEF21A9EF089A2668
// 0x19BB3CE8
AUDIO::SET_AUDIO_SCENE_VARIABLE(char* scene, char* variable, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* scene' />
				<Param name='char* variable' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAudioVehiclePriority' func='yes'>
			<Overload retVal='void' descr='// 0xE5564483E407F914
// 0x271A9766
AUDIO::SET_AUDIO_VEHICLE_PRIORITY(Vehicle vehicle, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCutsceneAudioOverride' func='yes'>
			<Overload retVal='void' descr='// 0x3B4BF5F0859204D9
// 0xCE1332B7
AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE(char* p0);
----------------------------------------------------------------------------------------------------
```

All occurrences found in b617d, sorted alphabetically and identical lines removed:   

AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE(&quot;_AK&quot;);  

AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE(&quot;_CUSTOM&quot;);  

AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE(&quot;_TOOTHLESS&quot;);  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEmitterRadioStation' func='yes'>
			<Overload retVal='void' descr='// 0xACF57305B12AF907
// 0x87431585
AUDIO::SET_EMITTER_RADIO_STATION(char* emitterName, char* radioStation);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* emitterName' />
				<Param name='char* radioStation' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFrontendRadioActive' func='yes'>
			<Overload retVal='void' descr='// 0xF7F26C6E9CC9EBB8
// 0xB1172075
AUDIO::SET_FRONTEND_RADIO_ACTIVE(BOOL active);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL active' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGpsActive' func='yes'>
			<Overload retVal='void' descr='// 0x3BD3F52BA9B1E4E8
// 0x0FC3379A
AUDIO::SET_GPS_ACTIVE(BOOL active);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL active' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHornEnabled' func='yes'>
			<Overload retVal='void' descr='// 0x76D683C108594D0E
// 0x6EB92D05
AUDIO::SET_HORN_ENABLED(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetInitialPlayerStation' func='yes'>
			<Overload retVal='void' descr='// 0x88795F13FACDA88D
// 0x9B069233
AUDIO::SET_INITIAL_PLAYER_STATION(char* radioStation);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* radioStation' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMicrophonePosition' func='yes'>
			<Overload retVal='void' descr='// 0xB6AE90EDDE95C762
// 0xAD7BB191
AUDIO::SET_MICROPHONE_POSITION(BOOL p0, float x1, float y1, float z1, float x2, float y2, float z2, fl
----------------------------------------------------------------------------------------------------
x3, float y3, float z3);

```

```

If this is the correct name, what microphone? I know your TV isn&apos;t going to reach out and adjust you
r headset so..  

```'>
				<Param name='BOOL p0' />
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMobilePhoneRadioState' func='yes'>
			<Overload retVal='void' descr='// 0xBF286C554784F3DF
// 0xE1E0ED34
AUDIO::SET_MOBILE_PHONE_RADIO_STATE(BOOL state);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMobileRadioEnabledDuringGameplay' func='yes'>
			<Overload retVal='void' descr='// 0x1098355A16064BB3
// 0x990085F0
AUDIO::SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY(BOOL Toggle);
----------------------------------------------------------------------------------------------------
```

Enables Radio on phone.  

```'>
				<Param name='BOOL Toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedIsDrunk' func='yes'>
			<Overload retVal='void' descr='// 0x95D2D383D5396B8A
// 0xD2EA77A3
AUDIO::SET_PED_IS_DRUNK(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Sets the ped drunk sounds.  Only works with PLAYER_PED_ID  

====================================================  

As mentioned above, this only sets the drunk sound to ped/player.  

To give the Ped a drunk effect with drunk walking animation try using SET_PED_MOVEMENT_CLIPSET  

Below is an example  

if (!Function.Call&lt;bool&gt;(Hash.HAS_ANIM_SET_LOADED, &quot;move_m@drunk@verydrunk&quot;))  

                {  

                    Function.Call(Hash.REQUEST_ANIM_SET, &quot;move_m@drunk@verydrunk&quot;);  

                }  

                Function.Call(Hash.SET_PED_MOVEMENT_CLIPSET, Ped.Handle, &quot;move_m@drunk@verydrunk&quot;, 0
x3E800000);  

And to stop the effect use  

RESET_PED_MOVEMENT_CLIPSET  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMute' func='yes'>
			<Overload retVal='void' descr='// 0x7A73D05A607734C7
AUDIO::_SET_PED_MUTE(Ped ped);
----------------------------------------------------------------------------------------------------
```

Stops speech.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedScream' func='yes'>
			<Overload retVal='void' descr='// 0x40CF0D12D142A9E8
AUDIO::_SET_PED_SCREAM(Ped ped);
----------------------------------------------------------------------------------------------------
```

Assigns some ambient voice to the ped.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedTalk' func='yes'>
			<Overload retVal='void' descr='// 0x4ADA3F19BE4A6047
// 0x13777A0B
AUDIO::_SET_PED_TALK(Ped ped);
----------------------------------------------------------------------------------------------------
```

Speech related.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerAngry' func='yes'>
			<Overload retVal='void' descr='// 0xEA241BB04110F091
// 0x782CA58D
AUDIO::SET_PLAYER_ANGRY(Ped playerPed, BOOL disabled);
----------------------------------------------------------------------------------------------------
```

Hash collision! Disables speech.  

```'>
				<Param name='Ped playerPed' />
				<Param name='BOOL disabled' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRadioAutoUnfreeze' func='yes'>
			<Overload retVal='void' descr='// 0xC1AA9F53CE982990
// 0xA40196BF
AUDIO::SET_RADIO_AUTO_UNFREEZE(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRadioToStationIndex' func='yes'>
			<Overload retVal='void' descr='// 0xA619B168B8A8570F
// 0x1D82766D
AUDIO::SET_RADIO_TO_STATION_INDEX(int radioStation);
----------------------------------------------------------------------------------------------------
```

Sets radio station by index.  

```'>
				<Param name='int radioStation' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRadioToStationName' func='yes'>
			<Overload retVal='void' descr='// 0xC69EDA28699D5107
// 0x7B36E35E
AUDIO::SET_RADIO_TO_STATION_NAME(char* stationName);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/Kj9t38KF  

```'>
				<Param name='char* stationName' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRadioTrack' func='yes'>
			<Overload retVal='void' descr='// 0xB39786F201FEE30B
// 0x76E96212
AUDIO::SET_RADIO_TRACK(char* radioStation, char* radioTrack);
----------------------------------------------------------------------------------------------------
```

Only found this one in the decompiled scripts:  

AUDIO::SET_RADIO_TRACK(&quot;RADIO_03_HIPHOP_NEW&quot;, &quot;ARM1_RADIO_STARTS&quot;);  

```'>
				<Param name='char* radioStation' />
				<Param name='char* radioTrack' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSirenWithNoDriver' func='yes'>
			<Overload retVal='void' descr='// 0x1FEF0683B96EBCF2
// 0x77182D58
AUDIO::SET_SIREN_WITH_NO_DRIVER(Object* vehicle, ScrHandle* toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object* vehicle' />
				<Param name='ScrHandle* toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetStaticEmitterEnabled' func='yes'>
			<Overload retVal='void' descr='// 0x399D2D3B33F1B8EB
// 0x91F72E92
AUDIO::SET_STATIC_EMITTER_ENABLED(char* emitterName, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Example:  

AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)&quot;LOS_SANTOS_VANILLA_UNICORN_01_STAGE&quot;, false);	AUDIO::SET_ST
ATIC_EMITTER_ENABLED((Any*)&quot;LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM&quot;, false);	AUDIO::SET_STATIC_EMIT
TER_ENABLED((Any*)&quot;LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM&quot;, false);  

This turns off surrounding sounds not connected directly to peds.  

```'>
				<Param name='char* emitterName' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSynchronizedAudioEventPositionThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x950A154B8DAB6185
// 0xA17F9AB0
AUDIO::_SET_SYNCHRONIZED_AUDIO_EVENT_POSITION_THIS_FRAME(char* p0, Entity p1);
----------------------------------------------------------------------------------------------------
```

Sets the position of the audio event to the entity&apos;s position for one frame(?)  

if (l_8C3 == 0) {  

    sub_27fd1(0, -1, 1);  

    if (PED::IS_SYNCHRONIZED_SCENE_RUNNING(l_87D)) {  

        AUDIO::STOP_SYNCHRONIZED_AUDIO_EVENT(l_87D);  

    }  

    if (sub_7dd(l_A00)) {  

        AUDIO::_950A154B8DAB6185(&quot;PAP2_IG1_POPPYSEX&quot;, l_A00);  

    }  

    sub_91c(&quot;TK************ SETTING SYNCH SCENE AUDIO POSITION THIS FRAME ************TK&quot;);  

    l_8C3 = 1;  

}  

--  

Found in the b617d scripts, duplicates removed:   

AUDIO::_950A154B8DAB6185(&quot;CAR_5_IG_6&quot;, l_7FE[1/*1*/]);  

AUDIO::_950A154B8DAB6185(&quot;EX03_TRAIN_BIKE_LAND&quot;,   PLAYER::PLAYER_PED_ID());  

AUDIO::_950A154B8DAB6185(&quot;FBI_2_MCS_1_LeadIn&quot;, l_40[2/*1*/]);  

AUDIO::_950A154B8DAB6185(&quot;FIN_C2_MCS_1&quot;, l_24C[0/*1*/]);  

AUDIO::_950A154B8DAB6185(&quot;MNT_DNC&quot;, l_5F);  

AUDIO::_950A154B8DAB6185(&quot;PAP2_IG1_POPPYSEX&quot;, l_A00);  

```'>
				<Param name='char* p0' />
				<Param name='Entity p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetUserRadioControlEnabled' func='yes'>
			<Overload retVal='void' descr='// 0x19F21E63AE6EAE4E
// 0x52E054CE
AUDIO::SET_USER_RADIO_CONTROL_ENABLED(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVariableOnSound' func='yes'>
			<Overload retVal='void' descr='// 0xAD6B3148A78AE9B6
// 0x606EE5FA
AUDIO::SET_VARIABLE_ON_SOUND(int soundId, char* variableName, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int soundId' />
				<Param name='char* variableName' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVariableOnStream' func='yes'>
			<Overload retVal='void' descr='// 0x2F9D3834AEB9EF79
// 0xF67BB44C
AUDIO::SET_VARIABLE_ON_STREAM(char* p0, float p1);
----------------------------------------------------------------------------------------------------
```

From the scripts, p0:  

&quot;ArmWrestlingIntensity&quot;,  

&quot;INOUT&quot;,  

&quot;Monkey_Stream&quot;,  

&quot;ZoomLevel&quot;  

```'>
				<Param name='char* p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleBoostActive' func='yes'>
			<Overload retVal='void' descr='// 0x4A04DE7CAB2739A1
// 0x072F15F2
AUDIO::SET_VEHICLE_BOOST_ACTIVE(Vehicle vehicle, BOOL Toggle);
----------------------------------------------------------------------------------------------------
```

SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);  

SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0);   

Will give a boost-soundeffect.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL Toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleRadioEnabled' func='yes'>
			<Overload retVal='void' descr='// 0x3B988190C0AA6C0B
// 0x6F812CAB
AUDIO::SET_VEHICLE_RADIO_ENABLED(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

can&apos;t seem to enable radio on cop cars etc  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleRadioLoud' func='yes'>
			<Overload retVal='void' descr='// 0xBB6F1CAEC68B0BCE
// 0x8D9EDD99
AUDIO::SET_VEHICLE_RADIO_LOUD(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehRadioStation' func='yes'>
			<Overload retVal='void' descr='// 0x1B9C0099CB942AC6
// 0xE391F55F
AUDIO::SET_VEH_RADIO_STATION(Vehicle vehicle, char* radioStation);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/Kj9t38KF  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='char* radioStation' />
			</Overload>
		</KeyWord>
		<KeyWord name='SkipRadioForward' func='yes'>
			<Overload retVal='void' descr='// 0x6DDBBDD98E2E9C25
// 0x10D36630
AUDIO::SKIP_RADIO_FORWARD();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SkipToNextScriptedConversationLine' func='yes'>
			<Overload retVal='void' descr='// 0x9663FE6B7A61EB00
// 0x85C98304
AUDIO::SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SoundVehicleHornThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x9C11908013EA4715
// 0xDE8BA3CD
AUDIO::_SOUND_VEHICLE_HORN_THIS_FRAME(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialFrontendEqual' func='yes'>
			<Overload retVal='void' descr='// 0x21442F412E8DE56B
// 0x6FE5D865
AUDIO::SPECIAL_FRONTEND_EQUAL(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Hash collision!!! PLAY_STREAM_FROM_POSITION is the correct name!  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartAlarm' func='yes'>
			<Overload retVal='void' descr='// 0x0355EF116C4C97B2
// 0x703F524B
AUDIO::START_ALARM(char* alarmName, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Example:  

This will start the alarm at Fort Zancudo.  

AUDIO::START_ALARM(&quot;PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS&quot;, 1);  

First parameter (char) is the name of the alarm.  

Second parameter (bool) is unknown, it does not seem to make a difference if this one is 0 or 1.  

----------  

It DOES make a difference but it has to do with the duration or something I dunno yet  

----------  

 Found in the b617d scripts:  

 AUDIO::START_ALARM(&quot;AGENCY_HEIST_FIB_TOWER_ALARMS&quot;, 0);  

 AUDIO::START_ALARM(&quot;AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER&quot;, 1);  

 AUDIO::START_ALARM(&quot;AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER_B&quot;, 0);  

 AUDIO::START_ALARM(&quot;BIG_SCORE_HEIST_VAULT_ALARMS&quot;, a_0);  

 AUDIO::START_ALARM(&quot;FBI_01_MORGUE_ALARMS&quot;, 1);  

 AUDIO::START_ALARM(&quot;FIB_05_BIOTECH_LAB_ALARMS&quot;, 0);  

 AUDIO::START_ALARM(&quot;JEWEL_STORE_HEIST_ALARMS&quot;, 0);  

 AUDIO::START_ALARM(&quot;PALETO_BAY_SCORE_ALARM&quot;, 1);  

 AUDIO::START_ALARM(&quot;PALETO_BAY_SCORE_CHICKEN_FACTORY_ALARM&quot;, 0);  

 AUDIO::START_ALARM(&quot;PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS&quot;, 1);  

 AUDIO::START_ALARM(&quot;PORT_OF_LS_HEIST_SHIP_ALARMS&quot;, 0);  

 AUDIO::START_ALARM(&quot;PRISON_ALARMS&quot;, 0);  

 AUDIO::START_ALARM(&quot;PROLOGUE_VAULT_ALARMS&quot;, 0);  

```'>
				<Param name='char* alarmName' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartAudioScene' func='yes'>
			<Overload retVal='BOOL' descr='// 0x013A80FC08F6E4F2
// 0xE48D757B
AUDIO::START_AUDIO_SCENE(char* scene);
----------------------------------------------------------------------------------------------------
```

Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play an
y sound.  

List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: pa
stebin.com/MtM9N9CC  

```'>
				<Param name='char* scene' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartPreloadedConversation' func='yes'>
			<Overload retVal='void' descr='// 0x23641AFE870AF385
// 0xA170261B
AUDIO::START_PRELOADED_CONVERSATION();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='StartScriptConversation' func='yes'>
			<Overload retVal='void' descr='// 0x6B17C62C9635D2DC
// 0xE5DE7D9D
AUDIO::START_SCRIPT_CONVERSATION(BOOL p0, BOOL p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartScriptPhoneConversation' func='yes'>
			<Overload retVal='void' descr='// 0x252E5F915EABB675
// 0x38E42D07
AUDIO::START_SCRIPT_PHONE_CONVERSATION(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopAlarm' func='yes'>
			<Overload retVal='void' descr='// 0xA1CADDCD98415A41
// 0xF987BE8C
AUDIO::STOP_ALARM(char* alarmName, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Example:  

This will stop the alarm at Fort Zancudo.  

AUDIO::STOP_ALARM(&quot;PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS&quot;, 1);  

First parameter (char) is the name of the alarm.  

Second parameter (bool) has to be true (1) to have any effect.  

```'>
				<Param name='char* alarmName' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopAllAlarms' func='yes'>
			<Overload retVal='void' descr='// 0x2F794A877ADD4C92
// 0xC3CB9DC6
AUDIO::STOP_ALL_ALARMS(BOOL stop);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL stop' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopAudioScene' func='yes'>
			<Overload retVal='void' descr='// 0xDFE8422B3B94E688
// 0xA08D8C58
AUDIO::STOP_AUDIO_SCENE(char* scene);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* scene' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopAudioScenes' func='yes'>
			<Overload retVal='void' descr='// 0xBAC7FC81A75EC1A1
// 0xF6C7342A
AUDIO::STOP_AUDIO_SCENES();
----------------------------------------------------------------------------------------------------
```

??  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='StopCurrentPlayingAmbientSpeech' func='yes'>
			<Overload retVal='void' descr='// 0xB8BEC0CA6F0EDB0F
// 0xBB8E64BF
AUDIO::STOP_CURRENT_PLAYING_AMBIENT_SPEECH(Ped ped);
----------------------------------------------------------------------------------------------------
```

Needs to be called every frame.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopPedRingtone' func='yes'>
			<Overload retVal='void' descr='// 0x6C5AE23EFA885092
// 0xFEEA107C
AUDIO::STOP_PED_RINGTONE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopPedSpeaking' func='yes'>
			<Overload retVal='void' descr='// 0x9D64D7405520E3D3
// 0xFF92B49D
AUDIO::STOP_PED_SPEAKING(Ped ped, BOOL shaking);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL shaking' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopScriptedConversation' func='yes'>
			<Overload retVal='Any' descr='// 0xD79DEEFB53455EBA
// 0xAB77DA7D
AUDIO::STOP_SCRIPTED_CONVERSATION(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopSound' func='yes'>
			<Overload retVal='void' descr='// 0xA3B0C41BA5CC0BB5
// 0xCD7F4030
AUDIO::STOP_SOUND(int soundId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int soundId' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopStream' func='yes'>
			<Overload retVal='void' descr='// 0xA4718A1419D18151
// 0xD1E364DE
AUDIO::STOP_STREAM();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='StopSynchronizedAudioEvent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x92D6A88E64A94430
// 0xADEED2B4
AUDIO::STOP_SYNCHRONIZED_AUDIO_EVENT(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='TriggerMusicEvent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x706D57B0F50DA710
// 0xB6094948
AUDIO::TRIGGER_MUSIC_EVENT(char* eventName);
----------------------------------------------------------------------------------------------------
```

List of all usable event names found in b617d used with this native. Sorted alphabetically and ident
ical names removed: pastebin.com/RzDFmB1W  

All music event names found in the b617d scripts: pastebin.com/GnYt0R3P  

```'>
				<Param name='char* eventName' />
			</Overload>
		</KeyWord>
		<KeyWord name='UnfreezeRadioStation' func='yes'>
			<Overload retVal='void' descr='// 0xFC00454CF60B91DD
// 0x4D46202C
AUDIO::UNFREEZE_RADIO_STATION(char* radioStation);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* radioStation' />
			</Overload>
		</KeyWord>
		<KeyWord name='UnlockMissionNewsStory' func='yes'>
			<Overload retVal='void' descr='// 0xB165AB7C248B2DC1
// 0xCCD9ABE4
AUDIO::UNLOCK_MISSION_NEWS_STORY(int newsStory);
----------------------------------------------------------------------------------------------------
```

I see this as a native that would of been used back in GTA III when you finally unlocked the bridge 
to the next island and such.  

```'>
				<Param name='int newsStory' />
			</Overload>
		</KeyWord>
		<KeyWord name='UnregisterScriptWithAudio' func='yes'>
			<Overload retVal='void' descr='// 0xA8638BE228D4751A
// 0x66728EFE
AUDIO::UNREGISTER_SCRIPT_WITH_AUDIO();
----------------------------------------------------------------------------------------------------
```

On last-gen this just runs blr and this func is called by several other functions other then the nat
ive&apos;s table.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='UseSirenAsHorn' func='yes'>
			<Overload retVal='void' descr='// 0xFA932DE350266EF8
// 0xC6BC16F3
AUDIO::USE_SIREN_AS_HORN(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddCoverBlockingArea' func='yes'>
			<Overload retVal='void' descr='// 0x45C597097DD7CB81
// 0x3536946F
BRAIN::ADD_COVER_BLOCKING_AREA(float playerX, float playerY, float playerZ, float radiusX, float radiu
----------------------------------------------------------------------------------------------------
float radiusZ, BOOL p6, BOOL p7, BOOL p8, BOOL p9);

```'>
				<Param name='float playerX' />
				<Param name='float playerY' />
				<Param name='float playerZ' />
				<Param name='float radiusX' />
				<Param name='float radiu' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddCoverPoint' func='yes'>
			<Overload retVal='ScrHandle' descr='// 0xD5C12A75C7B9497F
// 0xA0AF0B98
BRAIN::ADD_COVER_POINT(float p0, float p1, float p2, float p3, Any p4, Any p5, Any p6, BOOL p7);
----------------------------------------------------------------------------------------------------
`'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='BOOL p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddPatrolRouteLink' func='yes'>
			<Overload retVal='void' descr='// 0x23083260DEC3A551
// 0xD8761BB3
BRAIN::ADD_PATROL_ROUTE_LINK(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddPatrolRouteNode' func='yes'>
			<Overload retVal='void' descr='// 0x8EDF950167586B7C
// 0x21B48F10
BRAIN::ADD_PATROL_ROUTE_NODE(int p0, char* p1, float x1, float y1, float z1, float x2, float y2, float
----------------------------------------------------------------------------------------------------
int p8);

```

```

Example:   

AI::ADD_PATROL_ROUTE_NODE(2, &quot;WORLD_HUMAN_GUARD_STAND&quot;, -193.4915, -2378.864990234375, 10.9719, -193
.4915, -2378.864990234375, 10.9719, 3000);  

p0 is between 0 and 4 in the scripts.  

p1 is &quot;WORLD_HUMAN_GUARD_STAND&quot; or &quot;StandGuard&quot;.  

p2, p3 and p4 is only one parameter sometimes in the scripts. Most likely a Vector3 hence p2, p3 and
 p4 are coordinates.   

Examples:   

AI::ADD_PATROL_ROUTE_NODE(1, &quot;WORLD_HUMAN_GUARD_STAND&quot;, l_739[7/*3*/], 0.0, 0.0, 0.0, 0);  

AI::ADD_PATROL_ROUTE_NODE(1, &quot;WORLD_HUMAN_GUARD_STAND&quot;, l_B0[17/*44*/]._f3, l_B0[17/*44*/]._f3, 2000
);  

p5, p6 and p7 are for example set to: 1599.0406494140625, 2713.392578125, 44.4309.  

p8 is an int, often random set to for example: GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000).  

```'>
				<Param name='int p0' />
				<Param name='char* p1' />
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddScriptToRandomPed' func='yes'>
			<Overload retVal='void' descr='// 0x4EE5367468A65CCC
// 0xECC76C3D
BRAIN::ADD_SCRIPT_TO_RANDOM_PED(char* name, Hash model, float p2, float p3);
----------------------------------------------------------------------------------------------------
```

BRAIN::ADD_SCRIPT_TO_RANDOM_PED(&quot;pb_prostitute&quot;, ${s_f_y_hooker_01}, 100, 0);  

-----  

Hardcoded to not work in Multiplayer.  

------  

Which I&apos;m sure can easily be bypassed by nop&apos;ing the branch preventing it from working if you are in
 multiplayer lol. Which would still be pointless since you don&apos;t need this to make peds do what you 
wish.  

```'>
				<Param name='char* name' />
				<Param name='Hash model' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddVehicleSubtaskAttackCoord' func='yes'>
			<Overload retVal='void' descr='// 0x5CF0D8F9BBA0DD75
// 0x50779A2C
BRAIN::ADD_VEHICLE_SUBTASK_ATTACK_COORD(Ped ped, float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

x, y, z: offset in world coords from some entity.  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddVehicleSubtaskAttackPed' func='yes'>
			<Overload retVal='void' descr='// 0x85F462BADC7DA47F
// 0x80461113
BRAIN::ADD_VEHICLE_SUBTASK_ATTACK_PED(Ped ped, Ped ped2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Ped ped2' />
			</Overload>
		</KeyWord>
		<KeyWord name='AssistedMovementIsRouteLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x60F9A4393A21F741
// 0x79B067AF
BRAIN::ASSISTED_MOVEMENT_IS_ROUTE_LOADED(char* route);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* route' />
			</Overload>
		</KeyWord>
		<KeyWord name='AssistedMovementOverrideLoadDistanceThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x13945951E16EF912
// 0x8FB923EC
BRAIN::ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME(float dist);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float dist' />
			</Overload>
		</KeyWord>
		<KeyWord name='AssistedMovementRemoveRoute' func='yes'>
			<Overload retVal='void' descr='// 0x3548536485DD792B
// 0xB3CEC06F
BRAIN::ASSISTED_MOVEMENT_REMOVE_ROUTE(char* route);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* route' />
			</Overload>
		</KeyWord>
		<KeyWord name='AssistedMovementRequestRoute' func='yes'>
			<Overload retVal='void' descr='// 0x817268968605947A
// 0x48262EDA
BRAIN::ASSISTED_MOVEMENT_REQUEST_ROUTE(char* route);
----------------------------------------------------------------------------------------------------
```

Routes: &quot;1_FIBStairs&quot;, &quot;2_FIBStairs&quot;, &quot;3_FIBStairs&quot;, &quot;4_FIBStairs&quot;, &quot;5_FIBStairs&quot;, &quot;5_TowardsFire&quot;, 
&quot;6a_FIBStairs&quot;, &quot;7_FIBStairs&quot;, &quot;8_FIBStairs&quot;, &quot;Aprtmnt_1&quot;, &quot;AssAfterLift&quot;, &quot;ATM_1&quot;, &quot;coroner2&quot;, &quot;cor
oner_stairs&quot;, &quot;f5_jimmy1&quot;, &quot;fame1&quot;, &quot;family5b&quot;, &quot;family5c&quot;, &quot;Family5d&quot;, &quot;family5d&quot;, &quot;FIB_Glass1&quot;, &quot;F
IB_Glass2&quot;, &quot;FIB_Glass3&quot;, &quot;finaBroute1A&quot;, &quot;finalb1st&quot;, &quot;finalB1sta&quot;, &quot;finalbround&quot;, &quot;finalbroute2&quot;, 
&quot;Hairdresser1&quot;, &quot;jan_foyet_ft_door&quot;, &quot;Jo_3&quot;, &quot;Lemar1&quot;, &quot;Lemar2&quot;, &quot;mansion_1&quot;, &quot;Mansion_1&quot;, &quot;pols_1&quot;,
 &quot;pols_2&quot;, &quot;pols_3&quot;, &quot;pols_4&quot;, &quot;pols_5&quot;, &quot;pols_6&quot;, &quot;pols_7&quot;, &quot;pols_8&quot;, &quot;Pro_S1&quot;, &quot;Pro_S1a&quot;, &quot;Pro_S2&quot;
, &quot;Towards_case&quot;, &quot;trev_steps&quot;, &quot;tunrs1&quot;, &quot;tunrs2&quot;, &quot;tunrs3&quot;, &quot;Wave01457s&quot;  

```'>
				<Param name='char* route' />
			</Overload>
		</KeyWord>
		<KeyWord name='AssistedMovementSetRouteProperties' func='yes'>
			<Overload retVal='void' descr='// 0xD5002D78B7162E1B
// 0x01CAAFCC
BRAIN::ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES(char* route, int props);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* route' />
				<Param name='int props' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearDrivebyTaskUnderneathDrivingTask' func='yes'>
			<Overload retVal='void' descr='// 0xC35B5CDB2824CF69
// 0x9B76F7E6
BRAIN::CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedSecondaryTask' func='yes'>
			<Overload retVal='void' descr='// 0x176CECF6F920D707
// 0xA635F451
BRAIN::CLEAR_PED_SECONDARY_TASK(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedTasks' func='yes'>
			<Overload retVal='void' descr='// 0xE1EF3C1216AFF2CD
// 0xDE3316AB
BRAIN::CLEAR_PED_TASKS(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedTasksImmediately' func='yes'>
			<Overload retVal='void' descr='// 0xAAA34F8A7CB32098
// 0xBC045625
BRAIN::CLEAR_PED_TASKS_IMMEDIATELY(Ped ped);
----------------------------------------------------------------------------------------------------
```

Immediately stops the pedestrian from whatever it&apos;s doing. They stop fighting, animations, etc. they
 forget what they were doing.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearSequenceTask' func='yes'>
			<Overload retVal='Any' descr='// 0x3841422E9C488D8C
// 0x47ED03CE
BRAIN::CLEAR_SEQUENCE_TASK(Object* taskSequence);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object* taskSequence' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClosePatrolRoute' func='yes'>
			<Overload retVal='void' descr='// 0xB043ECA801B8CBC1
// 0x67305E59
BRAIN::CLOSE_PATROL_ROUTE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='CloseSequenceTask' func='yes'>
			<Overload retVal='Any' descr='// 0x39E72BC99E6360CB
// 0x1A7CEBD0
BRAIN::CLOSE_SEQUENCE_TASK(Object taskSequence);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object taskSequence' />
			</Overload>
		</KeyWord>
		<KeyWord name='ControlMountedWeapon' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDCFE42068FE0135A
// 0x500D9244
BRAIN::CONTROL_MOUNTED_WEAPON(Ped ped);
----------------------------------------------------------------------------------------------------
```

Forces the ped to use the mounted weapon.  

Returns false if task is not possible.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreatePatrolRoute' func='yes'>
			<Overload retVal='void' descr='// 0xAF8A443CCC8018DC
// 0x0A6C7864
BRAIN::CREATE_PATROL_ROUTE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='DeletePatrolRoute' func='yes'>
			<Overload retVal='void' descr='// 0x7767DD9D65E91319
// 0x2A4E6706
BRAIN::DELETE_PATROL_ROUTE(char* patrolRoute);
----------------------------------------------------------------------------------------------------
```

From the b617d scripts:  

AI::DELETE_PATROL_ROUTE(&quot;miss_merc0&quot;);  

AI::DELETE_PATROL_ROUTE(&quot;miss_merc1&quot;);  

AI::DELETE_PATROL_ROUTE(&quot;miss_merc2&quot;);  

AI::DELETE_PATROL_ROUTE(&quot;miss_dock&quot;);  

```'>
				<Param name='char* patrolRoute' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableScriptBrainSet' func='yes'>
			<Overload retVal='void' descr='// 0x14D8518E9760F08F
// 0xFBD13FAD
BRAIN::DISABLE_SCRIPT_BRAIN_SET(int brainSet);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int brainSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesScenarioExistInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5A59271FFADD33C1
// 0xFA7F5047
BRAIN::DOES_SCENARIO_EXIST_IN_AREA(float x, float y, float z, float radius, BOOL b);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='BOOL b' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesScenarioGroupExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF9034C136C9E00D3
// 0x5F072EB9
BRAIN::DOES_SCENARIO_GROUP_EXIST(char* scenarioGroup);
----------------------------------------------------------------------------------------------------
```

Occurrences in the b617d scripts:  

&quot;ARMY_GUARD&quot;,  

&quot;ARMY_HELI&quot;,  

&quot;Cinema_Downtown&quot;,  

&quot;Cinema_Morningwood&quot;,  

&quot;Cinema_Textile&quot;,  

&quot;City_Banks&quot;,  

&quot;Countryside_Banks&quot;,  

&quot;DEALERSHIP&quot;,  

&quot;GRAPESEED_PLANES&quot;,  

&quot;KORTZ_SECURITY&quot;,  

&quot;LOST_BIKERS&quot;,  

&quot;LSA_Planes&quot;,  

&quot;LSA_Planes&quot;,  

&quot;MP_POLICE&quot;,  

&quot;Observatory_Bikers&quot;,   

&quot;POLICE_POUND1&quot;,  

&quot;POLICE_POUND2&quot;,  

&quot;POLICE_POUND3&quot;,  

&quot;POLICE_POUND4&quot;,  

&quot;POLICE_POUND5&quot;  

&quot;QUARRY&quot;,  

&quot;SANDY_PLANES&quot;,  

&quot;SCRAP_SECURITY&quot;,  

&quot;SEW_MACHINE&quot;,  

&quot;SOLOMON_GATE&quot;,  

&quot;Triathlon_1_Start&quot;,   

&quot;Triathlon_2_Start&quot;,   

&quot;Triathlon_3_Start&quot;  

Sometimes used with IS_SCENARIO_GROUP_ENABLED:  

if (AI::DOES_SCENARIO_GROUP_EXIST(&quot;Observatory_Bikers&quot;) && (!AI::IS_SCENARIO_GROUP_ENABLED(&quot;Observat
ory_Bikers&quot;))) {  

else if (AI::IS_SCENARIO_GROUP_ENABLED(&quot;BLIMP&quot;)) {  

```'>
				<Param name='char* scenarioGroup' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesScenarioOfTypeExistInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0A9D0C2A3BBC86C1
// 0x0FB138A5
BRAIN::DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA(float p0, float p1, float p2, Any* p3, float p4, BOOL p5);
----------------------------------------------------------------------------------------------------
`'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='Any* p3' />
				<Param name='float p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesScriptedCoverPointExistAtCoords' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA98B8E3C088E5A31
// 0x29F97A71
BRAIN::DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Checks if there is a cover point at position  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableScriptBrainSet' func='yes'>
			<Overload retVal='void' descr='// 0x67AA4D73F0CFA86B
// 0x2765919F
BRAIN::ENABLE_SCRIPT_BRAIN_SET(int brainSet);
----------------------------------------------------------------------------------------------------
```

#4  

```'>
				<Param name='int brainSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetActiveVehicleMissionType' func='yes'>
			<Overload retVal='int' descr='// 0x534AEBA6E5ED4CAB
// 0xAFA914EF
BRAIN::GET_ACTIVE_VEHICLE_MISSION_TYPE(Vehicle veh);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle veh' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetClipSetForScriptedGunTask' func='yes'>
			<Overload retVal='char*' descr='// 0x3A8CADC7D37AACC5
// 0x249EB4EB
BRAIN::GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetIsTaskActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB0760331C7AA4155
// 0x86FDDF55
BRAIN::GET_IS_TASK_ACTIVE(Ped ped, int taskNumber);
----------------------------------------------------------------------------------------------------
```

from docks_heistb.c4:  

AI::GET_IS_TASK_ACTIVE(PLAYER::PLAYER_PED_ID(), 2))  

Known Tasks: pastebin.com/2gFqJ3Px  

```'>
				<Param name='Ped ped' />
				<Param name='int taskNumber' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetIsWaypointRecordingLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCB4E8BE8A0063C5D
// 0x87125F5D
BRAIN::GET_IS_WAYPOINT_RECORDING_LOADED(char* name);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/Tp0XpBMN  

```'>
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNavmeshRouteDistanceRemaining' func='yes'>
			<Overload retVal='int' descr='// 0xC6F5C0BCDC74D62D
// 0xD9281778
BRAIN::GET_NAVMESH_ROUTE_DISTANCE_REMAINING(Ped ped, float* distRemaining, BOOL* isPathReady);
----------------------------------------------------------------------------------------------------
```

Looks like the last parameter returns true if the path has been calculated, while the first returns 
the remaining distance to the end of the path.  

Return value of native is the same as GET_NAVMESH_ROUTE_RESULT  

Looks like the native returns an int for the path&apos;s state:  

1 - ???  

2   

3 - Finished Generating  

```'>
				<Param name='Ped ped' />
				<Param name='float* distRemaining' />
				<Param name='BOOL* isPathReady' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNavmeshRouteResult' func='yes'>
			<Overload retVal='int' descr='// 0x632E831F382A0FA8
// 0x96491602
BRAIN::GET_NAVMESH_ROUTE_RESULT(Ped ped);
----------------------------------------------------------------------------------------------------
```

See GET_NAVMESH_ROUTE_DISTANCE_REMAINING for more details.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedDesiredMoveBlendRatio' func='yes'>
			<Overload retVal='float' descr='// 0x8517D4A6CA8513ED
// 0x5FEFAB72
BRAIN::GET_PED_DESIRED_MOVE_BLEND_RATIO(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedWaypointDistance' func='yes'>
			<Overload retVal='float' descr='// 0xE6A877C64CAF1BC5
// 0x084B35B0
BRAIN::GET_PED_WAYPOINT_DISTANCE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedWaypointProgress' func='yes'>
			<Overload retVal='int' descr='// 0x2720AAA75001E094
// 0x3595B104
BRAIN::GET_PED_WAYPOINT_PROGRESS(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns the progress percent to current waypoint.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPhoneGestureAnimCurrentTime' func='yes'>
			<Overload retVal='float' descr='// 0x47619ABE8B268C60
// 0x7B72AFD1
BRAIN::GET_PHONE_GESTURE_ANIM_CURRENT_TIME(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPhoneGestureAnimTotalTime' func='yes'>
			<Overload retVal='float' descr='// 0x1EE0F68A7C25DEC6
// 0xEF8C3959
BRAIN::GET_PHONE_GESTURE_ANIM_TOTAL_TIME(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetScriptedCoverPointCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0x594A1028FC2A3E85
// 0xC6B6CCC1
BRAIN::GET_SCRIPTED_COVER_POINT_COORDS(ScrHandle coverpoint);
----------------------------------------------------------------------------------------------------
'>
				<Param name='ScrHandle coverpoint' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetScriptTaskStatus' func='yes'>
			<Overload retVal='int' descr='// 0x77F1BEB8863288D5
// 0xB2477B23
BRAIN::GET_SCRIPT_TASK_STATUS(Ped targetPed, Hash taskHash);
----------------------------------------------------------------------------------------------------
```

Gets the status of a script-assigned task. The hash does not seem to match the actual native name, b
ut is assigned hardcoded from the executable during task creation.  

Statuses are specific to tasks, in addition &apos;7&apos; means the specified task is not assigned to the ped.
  

A few hashes found in the executable (although not a complete list) can be found at pastebin.com/R9i
K6M9W as it was too long for this wiki.  

```'>
				<Param name='Ped targetPed' />
				<Param name='Hash taskHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetSequenceProgress' func='yes'>
			<Overload retVal='int' descr='// 0x00A9010CFE1E3533
// 0xA3419909
BRAIN::GET_SEQUENCE_PROGRESS(Ped ped);
----------------------------------------------------------------------------------------------------
```

returned values:  

0 to 7 = task that&apos;s currently in progress, 0 meaning the first one.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleWaypointProgress' func='yes'>
			<Overload retVal='int' descr='// 0x9824CFF8FC66E159
// 0xD3CCF64E
BRAIN::GET_VEHICLE_WAYPOINT_PROGRESS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleWaypointTargetPoint' func='yes'>
			<Overload retVal='Any' descr='// 0x416B62AC8B9E5BBD
// 0x81049608
BRAIN::GET_VEHICLE_WAYPOINT_TARGET_POINT(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWaypointDistanceAlongRoute' func='yes'>
			<Overload retVal='float' descr='// 0xA5B769058763E497
// 0xE8422AC4
BRAIN::GET_WAYPOINT_DISTANCE_ALONG_ROUTE(char* p0, int p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsDrivebyTaskUnderneathDrivingTask' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8785E6E40C7A8818
// 0xB23F46E6
BRAIN::IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsMountedWeaponTaskUnderneathDrivingTask' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA320EF046186FA3B
// 0x291E938C
BRAIN::IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsMoveBlendRatioRunning' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD4D8636C0199A939
// 0xE76A2353
BRAIN::IS_MOVE_BLEND_RATIO_RUNNING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsMoveBlendRatioSprinting' func='yes'>
			<Overload retVal='BOOL' descr='// 0x24A2AD74FA9814E2
// 0xDD616893
BRAIN::IS_MOVE_BLEND_RATIO_SPRINTING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsMoveBlendRatioStill' func='yes'>
			<Overload retVal='BOOL' descr='// 0x349CE7B56DAFD95C
// 0xE9DAF877
BRAIN::IS_MOVE_BLEND_RATIO_STILL(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsMoveBlendRatioWalking' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF133BBBE91E1691F
// 0xD21639A8
BRAIN::IS_MOVE_BLEND_RATIO_WALKING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsObjectWithinBrainActivationRange' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCCBA154209823057
// 0xBA4CAA56
BRAIN::IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE(Object object);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object object' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedActiveInScenario' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAA135F9482C82CC3
// 0x05038F1A
BRAIN::IS_PED_ACTIVE_IN_SCENARIO(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedBeingArrested' func='yes'>
			<Overload retVal='BOOL' descr='// 0x90A09F3A45FED688
// 0x5FF6C2ED
BRAIN::IS_PED_BEING_ARRESTED(Ped ped);
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 0.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedCuffed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x74E559B3BC910685
// 0x511CE741
BRAIN::IS_PED_CUFFED(Ped ped);
----------------------------------------------------------------------------------------------------
```

l  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedGettingUp' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2A74E1D5F2F00EEC
// 0x320813E6
BRAIN::IS_PED_GETTING_UP(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInWrithe' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDEB6D52126E7D640
// 0x09E61921
BRAIN::IS_PED_IN_WRITHE(Ped ped);
----------------------------------------------------------------------------------------------------
```

returns true is the ped is on the ground whining like a little female dog from a gunshot wound  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedRunning' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC5286FFC176F28A2
// 0xE9A5578F
BRAIN::IS_PED_RUNNING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedRunningArrestTask' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3DC52677769B4AE0
// 0x6942DB7A
BRAIN::IS_PED_RUNNING_ARREST_TASK(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedSprinting' func='yes'>
			<Overload retVal='BOOL' descr='// 0x57E457CD2C0FC168
// 0x4F3E0633
BRAIN::IS_PED_SPRINTING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedStill' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAC29253EEF8F0180
// 0x09E3418D
BRAIN::IS_PED_STILL(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedStrafing' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE45B7F222DE47E09
// 0xEFEED13C
BRAIN::IS_PED_STRAFING(Ped ped);
----------------------------------------------------------------------------------------------------
```

What&apos;s strafing?  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedWalking' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDE4C184B2B9B071A
// 0x4B865C4A
BRAIN::IS_PED_WALKING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayingPhoneGestureAnim' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB8EBB1E9D3588C10
// 0x500B6805
BRAIN::IS_PLAYING_PHONE_GESTURE_ANIM(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsScenarioGroupEnabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x367A09DED4E05B99
// 0x90991122
BRAIN::IS_SCENARIO_GROUP_ENABLED(char* scenarioGroup);
----------------------------------------------------------------------------------------------------
```

Occurrences in the b617d scripts:   

&quot;ARMY_GUARD&quot;,  

&quot;ARMY_HELI&quot;,  

&quot;BLIMP&quot;,  

&quot;Cinema_Downtown&quot;,  

&quot;Cinema_Morningwood&quot;,  

&quot;Cinema_Textile&quot;,  

&quot;City_Banks&quot;,  

&quot;Countryside_Banks&quot;,  

&quot;DEALERSHIP&quot;,  

&quot;KORTZ_SECURITY&quot;,  

&quot;LSA_Planes&quot;,  

&quot;MP_POLICE&quot;,  

&quot;Observatory_Bikers&quot;,  

&quot;POLICE_POUND1&quot;,  

&quot;POLICE_POUND2&quot;,  

&quot;POLICE_POUND3&quot;,  

&quot;POLICE_POUND4&quot;,  

&quot;POLICE_POUND5&quot;,  

&quot;Rampage1&quot;,  

&quot;SANDY_PLANES&quot;,  

&quot;SCRAP_SECURITY&quot;,  

&quot;SEW_MACHINE&quot;,  

&quot;SOLOMON_GATE&quot;  

		Sometimes used with DOES_SCENARIO_GROUP_EXIST:  

		if (AI::DOES_SCENARIO_GROUP_EXIST(&quot;Observatory_Bikers&quot;) &&   (!AI::IS_SCENARIO_GROUP_ENABLED(&quot;Obse
rvatory_Bikers&quot;))) {  

		else if (AI::IS_SCENARIO_GROUP_ENABLED(&quot;BLIMP&quot;)) {  

```'>
				<Param name='char* scenarioGroup' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsScenarioOccupied' func='yes'>
			<Overload retVal='BOOL' descr='// 0x788756D73AC2E07C
// 0x697FC008
BRAIN::IS_SCENARIO_OCCUPIED(float p0, float p1, float p2, float p3, BOOL p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsScenarioTypeEnabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3A815DB3EA088722
// 0xAE37E969
BRAIN::IS_SCENARIO_TYPE_ENABLED(char* scenarioType);
----------------------------------------------------------------------------------------------------
```

Occurrences in the b617d scripts:  

&quot;PROP_HUMAN_SEAT_CHAIR&quot;,  

&quot;WORLD_HUMAN_DRINKING&quot;,  

&quot;WORLD_HUMAN_HANG_OUT_STREET&quot;,  

&quot;WORLD_HUMAN_SMOKING&quot;,  

&quot;WORLD_MOUNTAIN_LION_WANDER&quot;,  

&quot;WORLD_HUMAN_DRINKING&quot;  

Sometimes used together with GAMEPLAY::IS_STRING_NULL_OR_EMPTY in the scripts.  

scenarioType could be the same as scenarioName, used in for example AI::TASK_START_SCENARIO_AT_POSIT
ION.  

```'>
				<Param name='char* scenarioType' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsWaypointPlaybackGoingOnForPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE03B3F2D3DC59B64
// 0x85B7725F
BRAIN::IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsWaypointPlaybackGoingOnForVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF5134943EA29868C
// 0x80DD15DB
BRAIN::IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsWorldPointWithinBrainActivationRange' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC5042CC6F5E3D450
// 0x2CF305A0
BRAIN::IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE();
----------------------------------------------------------------------------------------------------
```

Gets whether the world point the calling script is registered to is within desired range of the play
er.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0b40ed49d7d6ff84' func='yes'>
			<Overload retVal='void' descr='// 0x0B40ED49D7D6FF84
// 0x19B27825
BRAIN::_0x0B40ED49D7D6FF84();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x19d1b791cb3670fe' func='yes'>
			<Overload retVal='void' descr='// 0x19D1B791CB3670FE
BRAIN::_0x19D1B791CB3670FE(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1f351cf1c6475734' func='yes'>
			<Overload retVal='void' descr='// 0x1F351CF1C6475734
BRAIN::_0x1F351CF1C6475734(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any
----------------------------------------------------------------------------------------------------
;

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x30ed88d5e0c56a37' func='yes'>
			<Overload retVal='BOOL' descr='// 0x30ED88D5E0C56A37
// 0x92FDBAE6
BRAIN::_0x30ED88D5E0C56A37(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3e38e28a1d80ddf6' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3E38E28A1D80DDF6
BRAIN::_0x3E38E28A1D80DDF6(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4d953df78ebf8158' func='yes'>
			<Overload retVal='void' descr='// 0x4D953DF78EBF8158
// 0xF3A3AB08
BRAIN::_0x4D953DF78EBF8158();
----------------------------------------------------------------------------------------------------
```

Something like flush_all_scripts   

Most of time comes after NETWORK_END_TUTORIAL_SESSION() or before TERMINATE_THIS_THREAD()  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x621c6e4729388e41' func='yes'>
			<Overload retVal='BOOL' descr='// 0x621C6E4729388E41
BRAIN::_0x621C6E4729388E41(Ped ped);
----------------------------------------------------------------------------------------------------
```

Used only once (am_mp_property_int)  

ped was PLAYER_PED_ID()  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6d6840cee8845831' func='yes'>
			<Overload retVal='void' descr='// 0x6D6840CEE8845831
// 0x949FE53E
BRAIN::_0x6D6840CEE8845831(char* action);
----------------------------------------------------------------------------------------------------
```

Possible values:  

act_cinema  

am_mp_carwash_launch  

am_mp_carwash_control  

am_mp_property_ext  

chop  

fairgroundHub  

launcher_BasejumpHeli  

launcher_BasejumpPack  

launcher_CarWash  

launcher_golf  

launcher_Hunting_Ambient  

launcher_MrsPhilips  

launcher_OffroadRacing  

launcher_pilotschool  

launcher_Racing  

launcher_rampage  

launcher_rampage  

launcher_range  

launcher_stunts  

launcher_stunts  

launcher_tennis  

launcher_Tonya  

launcher_Triathlon  

launcher_Yoga  

ob_mp_bed_low  

ob_mp_bed_med  

```'>
				<Param name='char* action' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6e91b04e08773030' func='yes'>
			<Overload retVal='void' descr='// 0x6E91B04E08773030
// 0x29CE8BAA
BRAIN::_0x6E91B04E08773030(char* action);
----------------------------------------------------------------------------------------------------
```

Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar 
 

Here are possible values of argument -   

&quot;ob_tv&quot;  

&quot;launcher_Darts&quot;  

```'>
				<Param name='char* action' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x717e4d1f2048376d' func='yes'>
			<Overload retVal='char*' descr='// 0x717E4D1F2048376D
// 0x96C0277B
BRAIN::_0x717E4D1F2048376D(Ped ped);
----------------------------------------------------------------------------------------------------
```

If the function fails, returns &quot;Unknown&quot;.  

Could be task (sequence) name. Needs more research.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x88e32db8c1a4aa4b' func='yes'>
			<Overload retVal='void' descr='// 0x88E32DB8C1A4AA4B
// 0x55E06443
BRAIN::_0x88E32DB8C1A4AA4B(Ped ped, float p1);
----------------------------------------------------------------------------------------------------
```

SET_PED_PATH_*  

Could be the move speed on the path. Needs testing.  

Default is 1.0 and maximum is 10.0  

```'>
				<Param name='Ped ped' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8c33220c8d78ca0d' func='yes'>
			<Overload retVal='void' descr='// 0x8C33220C8D78CA0D
BRAIN::_0x8C33220C8D78CA0D(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8fd89a6240813fd0' func='yes'>
			<Overload retVal='void' descr='// 0x8FD89A6240813FD0
BRAIN::_0x8FD89A6240813FD0(Ped ped, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Appears only in fm_mission_controller and used only 3 times.  

ped was always PLAYER_PED_ID()  

p1 was always true  

p2 was always true  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x921ce12c489c4c41' func='yes'>
			<Overload retVal='BOOL' descr='// 0x921CE12C489C4C41
// 0x902656EB
BRAIN::_0x921CE12C489C4C41(int PlayerID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int PlayerID' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x92c360b5f15d2302' func='yes'>
			<Overload retVal='void' descr='// 0x92C360B5F15D2302
BRAIN::_0x92C360B5F15D2302(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa7ffba498e4aaf67' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA7FFBA498E4AAF67
// 0x1EBB6F3D
BRAIN::_0xA7FFBA498E4AAF67(Ped ped, char* p1);
----------------------------------------------------------------------------------------------------
```

Found in scripts:  

if (AI::_A7FFBA498E4AAF67(l_9BC, &quot;Run&quot;)) {  

if (AI::_A7FFBA498E4AAF67(l_9BC, &quot;Escape&quot;)) {  

```'>
				<Param name='Ped ped' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xab13a5565480b6d9' func='yes'>
			<Overload retVal='Any' descr='// 0xAB13A5565480B6D9
BRAIN::_0xAB13A5565480B6D9(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb0a6cfd2c69c1088' func='yes'>
			<Overload retVal='void' descr='// 0xB0A6CFD2C69C1088
// 0xF3538041
BRAIN::_0xB0A6CFD2C69C1088(Ped ped, char* p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Examples:  

AI::_B0A6CFD2C69C1088(PLAYER::PLAYER_PED_ID(), &quot;isFirstPerson&quot;, 0);  

AI::_B0A6CFD2C69C1088(PLAYER::PLAYER_PED_ID(), &quot;isFirstPerson&quot;, 1);  

AI::_B0A6CFD2C69C1088(PLAYER::PLAYER_PED_ID(), &quot;isBlocked&quot;, sub_179027());  

```'>
				<Param name='Ped ped' />
				<Param name='char* p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb4f47213df45a64c' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB4F47213DF45A64C
// 0x72FA5EF2
BRAIN::_0xB4F47213DF45A64C(Ped ped, char* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd01015c7316ae176' func='yes'>
			<Overload retVal='Any' descr='// 0xD01015C7316AE176
// 0x885724DE
BRAIN::_0xD01015C7316AE176(Ped ped, char* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd5bb4025ae449a4e' func='yes'>
			<Overload retVal='void' descr='// 0xD5BB4025AE449A4E
// 0xA79BE783
BRAIN::_0xD5BB4025AE449A4E(Ped ped, char* p1, float p2);
----------------------------------------------------------------------------------------------------
```

p0 - PLAYER::PLAYER_PED_ID();  

p1 - &quot;Phase&quot;, &quot;Wobble&quot;, &quot;x_axis&quot;,&quot;y_axis&quot;,&quot;introphase&quot;,&quot;speed&quot;.  

p2 - From what i can see it goes up to 1f (maybe).  

-LcGamingHD  

Example: AI::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), &quot;Phase&quot;, 0.5);  

```'>
				<Param name='Ped ped' />
				<Param name='char* p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe70ba7b90f8390dc' func='yes'>
			<Overload retVal='void' descr='// 0xE70BA7B90F8390DC
BRAIN::_0xE70BA7B90F8390DC(Any p0, Any p1, BOOL p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='OpenPatrolRoute' func='yes'>
			<Overload retVal='void' descr='// 0xA36BFB5EE89F3D82
// 0xF33F83CA
BRAIN::OPEN_PATROL_ROUTE(char* patrolRoute);
----------------------------------------------------------------------------------------------------
```

patrolRoutes found in the b617d scripts:  

&quot;miss_Ass0&quot;,  

&quot;miss_Ass1&quot;,  

&quot;miss_Ass2&quot;,  

&quot;miss_Ass3&quot;,  

&quot;miss_Ass4&quot;,  

&quot;miss_Ass5&quot;,  

&quot;miss_Ass6&quot;,  

&quot;MISS_PATROL_6&quot;,  

&quot;MISS_PATROL_7&quot;,  

&quot;MISS_PATROL_8&quot;,  

&quot;MISS_PATROL_9&quot;,  

&quot;miss_Tower_01&quot;,  

&quot;miss_Tower_02&quot;,  

&quot;miss_Tower_03&quot;,  

&quot;miss_Tower_04&quot;,  

&quot;miss_Tower_05&quot;,  

&quot;miss_Tower_06&quot;,  

&quot;miss_Tower_07&quot;,  

&quot;miss_Tower_08&quot;,  

&quot;miss_Tower_10&quot;  

```'>
				<Param name='char* patrolRoute' />
			</Overload>
		</KeyWord>
		<KeyWord name='OpenSequenceTask' func='yes'>
			<Overload retVal='Any' descr='// 0xE8854A4326B9E12B
// 0xABA6923E
BRAIN::OPEN_SEQUENCE_TASK(Object* taskSequence);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object* taskSequence' />
			</Overload>
		</KeyWord>
		<KeyWord name='PedHasUseScenarioTask' func='yes'>
			<Overload retVal='BOOL' descr='// 0x295E3CCEC879CCD7
// 0x9BE9C691
BRAIN::PED_HAS_USE_SCENARIO_TASK(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayAnimOnRunningScenario' func='yes'>
			<Overload retVal='void' descr='// 0x748040460F8DF5DC
// 0x1984A5D1
BRAIN::PLAY_ANIM_ON_RUNNING_SCENARIO(Ped ped, char* animDict, char* animName);
----------------------------------------------------------------------------------------------------
```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Ped ped' />
				<Param name='char* animDict' />
				<Param name='char* animName' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayEntityScriptedAnim' func='yes'>
			<Overload retVal='void' descr='// 0x77A1EEC547E7FCF1
// 0x02F72AE5
BRAIN::PLAY_ENTITY_SCRIPTED_ANIM(Any p0, Any* p1, Any* p2, Any* p3, float p4, float p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterObjectScriptBrain' func='yes'>
			<Overload retVal='void' descr='// 0x0BE84C318BA6EC22
// 0xB6BCC608
BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN(char* scriptName, Hash objectName, int p2, float p3, int p4, int p
----------------------------------------------------------------------------------------------------
```

```

Registers a script for any object with a specific model hash.  

BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN(&quot;ob_telescope&quot;, ${prop_telescope_01}, 100, 4.0, -1, 9);  

```'>
				<Param name='char* scriptName' />
				<Param name='Hash objectName' />
				<Param name='int p2' />
				<Param name='float p3' />
				<Param name='int p4' />
				<Param name='int p' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterWorldPointScriptBrain' func='yes'>
			<Overload retVal='void' descr='// 0x3CDC7136613284BD
// 0x725D91F7
BRAIN::REGISTER_WORLD_POINT_SCRIPT_BRAIN(Any* p0, float p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='float p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveAllCoverBlockingAreas' func='yes'>
			<Overload retVal='void' descr='// 0xDB6708C0B46F56D8
// 0xCF9221A7
BRAIN::REMOVE_ALL_COVER_BLOCKING_AREAS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveCoverPoint' func='yes'>
			<Overload retVal='void' descr='// 0xAE287C923D891715
// 0x0776888B
BRAIN::REMOVE_COVER_POINT(ScrHandle coverpoint);
----------------------------------------------------------------------------------------------------
'>
				<Param name='ScrHandle coverpoint' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveWaypointRecording' func='yes'>
			<Overload retVal='void' descr='// 0xFF1B8B4AA1C25DC8
// 0x624530B0
BRAIN::REMOVE_WAYPOINT_RECORDING(char* name);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/Tp0XpBMN  

```'>
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestWaypointRecording' func='yes'>
			<Overload retVal='void' descr='// 0x9EEFB62EB27B5792
// 0xAFABFB5D
BRAIN::REQUEST_WAYPOINT_RECORDING(char* name);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/Tp0XpBMN  

For a full list of the points, see here: goo.gl/wIH0vn  

Max number of loaded recordings is 32.  

```'>
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetExclusiveScenarioGroup' func='yes'>
			<Overload retVal='void' descr='// 0x4202BBCB8684563D
// 0x17F9DFE8
BRAIN::RESET_EXCLUSIVE_SCENARIO_GROUP();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ResetScenarioGroupsEnabled' func='yes'>
			<Overload retVal='void' descr='// 0xDD902D0349AFAD3A
// 0xBF55025D
BRAIN::RESET_SCENARIO_GROUPS_ENABLED();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ResetScenarioTypesEnabled' func='yes'>
			<Overload retVal='void' descr='// 0x0D40EE2A7F2B2D6D
// 0xF58FDEB4
BRAIN::RESET_SCENARIO_TYPES_ENABLED();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetAnimLooped' func='yes'>
			<Overload retVal='void' descr='// 0x70033C3CC29A1FF4
// 0x095D61A4
BRAIN::SET_ANIM_LOOPED(Any p0, BOOL p1, Any p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='Any p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAnimRate' func='yes'>
			<Overload retVal='void' descr='// 0x032D49C5E359C847
// 0x6DB46584
BRAIN::SET_ANIM_RATE(Any p0, float p1, Any p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='Any p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAnimWeight' func='yes'>
			<Overload retVal='void' descr='// 0x207F1A47C0342F48
// 0x17229D98
BRAIN::SET_ANIM_WEIGHT(Any p0, float p1, Any p2, Any p3, BOOL p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDrivebyTaskTarget' func='yes'>
			<Overload retVal='void' descr='// 0xE5B302114D8162EE
// 0xDA6A6FC1
BRAIN::SET_DRIVEBY_TASK_TARGET(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float y
----------------------------------------------------------------------------------------------------
oat z);

```

```

For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is o
nce and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has t
he same exact amount of parameters and the 1st and last 3 parameters are right and the same for both
 natives.  

```'>
				<Param name='Ped shootingPed' />
				<Param name='Ped targetPed' />
				<Param name='Vehicle targetVehicle' />
				<Param name='float x' />
				<Param name='float y' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDriveTaskCruiseSpeed' func='yes'>
			<Overload retVal='void' descr='// 0x5C9B84BD7D31D908
// 0x3CEC07B1
BRAIN::SET_DRIVE_TASK_CRUISE_SPEED(Ped driver, float cruiseSpeed);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped driver' />
				<Param name='float cruiseSpeed' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDriveTaskDrivingStyle' func='yes'>
			<Overload retVal='void' descr='// 0xDACE1BE37D88AF67
// 0x59C5FAD7
BRAIN::SET_DRIVE_TASK_DRIVING_STYLE(Ped ped, int drivingStyle);
----------------------------------------------------------------------------------------------------
```

This native is used to set the driving style for specific ped.  

Driving styles id seems to be:  

786468  

262144  

786469  

http://gtaforums.com/topic/822314-guide-driving-styles/  

```'>
				<Param name='Ped ped' />
				<Param name='int drivingStyle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDriveTaskMaxCruiseSpeed' func='yes'>
			<Overload retVal='void' descr='// 0x404A5AA9B9F0B746
// 0x7FDF6131
BRAIN::SET_DRIVE_TASK_MAX_CRUISE_SPEED(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetExclusiveScenarioGroup' func='yes'>
			<Overload retVal='void' descr='// 0x535E97E1F7FC0C6A
// 0x59DB8F26
BRAIN::SET_EXCLUSIVE_SCENARIO_GROUP(char* scenarioGroup);
----------------------------------------------------------------------------------------------------
```

Groups found in the scripts used with this native:  

&quot;AMMUNATION&quot;,  

&quot;QUARRY&quot;,  

&quot;Triathlon_1&quot;,  

&quot;Triathlon_2&quot;,  

&quot;Triathlon_3&quot;  

```'>
				<Param name='char* scenarioGroup' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGlobalMinBirdFlightHeight' func='yes'>
			<Overload retVal='void' descr='// 0x6C6B148586F934F7
// 0x2AFB14B8
BRAIN::SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT(float height);
----------------------------------------------------------------------------------------------------
```

Needs to be looped! And yes, it does work and is not a hash collision.  

Birds will try to reach the given height.  

```'>
				<Param name='float height' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHighFallTask' func='yes'>
			<Overload retVal='void' descr='// 0x8C825BDC7741D37C
// 0xBBB26172
BRAIN::SET_HIGH_FALL_TASK(Ped ped, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
```

Makes the ped ragdoll like when falling from a great height  

```'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMountedWeaponTarget' func='yes'>
			<Overload retVal='void' descr='// 0xCCD892192C6D2BB9
// 0x98713C68
BRAIN::SET_MOUNTED_WEAPON_TARGET(Ped shootingPed, Ped targetPed, Vehicle targetVehicle, float x, float
----------------------------------------------------------------------------------------------------
float z);

```

```

Note: Look in decompiled scripts and the times that p1 and p2 aren&apos;t 0. They are filled with vars. I
f you look through out that script what other natives those vars are used in, you can tell p1 is a p
ed and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set t
argetVehicle to 0 or vice-versa.  

```'>
				<Param name='Ped shootingPed' />
				<Param name='Ped targetPed' />
				<Param name='Vehicle targetVehicle' />
				<Param name='float x' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNextDesiredMoveState' func='yes'>
			<Overload retVal='void' descr='// 0xF1B9F16E89E2C93A
// 0x4E937D57
BRAIN::SET_NEXT_DESIRED_MOVE_STATE(float p0);
----------------------------------------------------------------------------------------------------
```

Not used in the scripts.  

Bullshit! It&apos;s used in spawn_activities  

```'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParachuteTaskTarget' func='yes'>
			<Overload retVal='void' descr='// 0xC313379AF0FCEDA7
// 0x6ED3AD81
BRAIN::SET_PARACHUTE_TASK_TARGET(Ped ped, float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParachuteTaskThrust' func='yes'>
			<Overload retVal='void' descr='// 0x0729BAC1B8C64317
// 0xD07C8AAA
BRAIN::SET_PARACHUTE_TASK_THRUST(Ped ped, float thrust);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float thrust' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDesiredMoveBlendRatio' func='yes'>
			<Overload retVal='void' descr='// 0x1E982AC8716912C5
// 0xC65FC712
BRAIN::SET_PED_DESIRED_MOVE_BLEND_RATIO(Ped ped, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPathAvoidFire' func='yes'>
			<Overload retVal='void' descr='// 0x4455517B28441E60
// 0xDCC5B934
BRAIN::SET_PED_PATH_AVOID_FIRE(Ped ped, BOOL avoidFire);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL avoidFire' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPathCanDropFromHeight' func='yes'>
			<Overload retVal='void' descr='// 0xE361C5C71C431A4F
// 0x394B7AC9
BRAIN::SET_PED_PATH_CAN_DROP_FROM_HEIGHT(Ped ped, BOOL Toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL Toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPathCanUseClimbovers' func='yes'>
			<Overload retVal='Any' descr='// 0x8E06A6FE76C9EFF4
// 0xB7B7D442
BRAIN::SET_PED_PATH_CAN_USE_CLIMBOVERS(Ped ped, BOOL Toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL Toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPathCanUseLadders' func='yes'>
			<Overload retVal='Any' descr='// 0x77A5B103C87F476E
// 0x53A879EE
BRAIN::SET_PED_PATH_CAN_USE_LADDERS(Ped ped, BOOL Toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL Toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPathPreferToAvoidWater' func='yes'>
			<Overload retVal='void' descr='// 0x38FE1EC73743793C
// 0x0EA39A29
BRAIN::SET_PED_PATH_PREFER_TO_AVOID_WATER(Ped ped, BOOL avoidWater);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL avoidWater' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPathsWidthPlant' func='yes'>
			<Overload retVal='void' descr='// 0xF35425A4204367EC
// 0x9C606EE3
BRAIN::SET_PED_PATHS_WIDTH_PLANT(Ped ped, BOOL mayEnterWater);
----------------------------------------------------------------------------------------------------
```

Hash collision!!! Actual name: SET_PED_PATH_MAY_ENTER_WATER  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL mayEnterWater' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedWaypointRouteOffset' func='yes'>
			<Overload retVal='Any' descr='// 0xED98E10B0AFCE4B4
// 0xF867F747
BRAIN::SET_PED_WAYPOINT_ROUTE_OFFSET(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScenarioGroupEnabled' func='yes'>
			<Overload retVal='void' descr='// 0x02C8E5B49848664E
// 0x116997B1
BRAIN::SET_SCENARIO_GROUP_ENABLED(char* scenarioGroup, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Occurrences in the b617d scripts: pastebin.com/Tvg2PRHU  

```'>
				<Param name='char* scenarioGroup' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScenarioTypeEnabled' func='yes'>
			<Overload retVal='void' descr='// 0xEB47EC4E34FB7EE1
// 0xDB18E5DE
BRAIN::SET_SCENARIO_TYPE_ENABLED(char* scenarioType, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

seems to enable/disable specific scenario-types from happening in the game world.  

Here are some scenario types from the scripts:  

&quot;WORLD_MOUNTAIN_LION_REST&quot;                                               

&quot;WORLD_MOUNTAIN_LION_WANDER&quot;                                              

&quot;DRIVE&quot;                                                                    

&quot;WORLD_VEHICLE_POLICE_BIKE&quot;                                               

&quot;WORLD_VEHICLE_POLICE_CAR&quot;                                               

&quot;WORLD_VEHICLE_POLICE_NEXT_TO_CAR&quot;                                          

&quot;WORLD_VEHICLE_DRIVE_SOLO&quot;                                                   

&quot;WORLD_VEHICLE_BIKER&quot;                                                        

&quot;WORLD_VEHICLE_DRIVE_PASSENGERS&quot;                                             

&quot;WORLD_VEHICLE_SALTON_DIRT_BIKE&quot;                                             

&quot;WORLD_VEHICLE_BICYCLE_MOUNTAIN&quot;                                             

&quot;PROP_HUMAN_SEAT_CHAIR&quot;                                               

&quot;WORLD_VEHICLE_ATTRACTOR&quot;                                               

&quot;WORLD_HUMAN_LEANING&quot;                                                   

&quot;WORLD_HUMAN_HANG_OUT_STREET&quot;                                          

&quot;WORLD_HUMAN_DRINKING&quot;                                                  

&quot;WORLD_HUMAN_SMOKING&quot;                                                  

&quot;WORLD_HUMAN_GUARD_STAND&quot;                                              

&quot;WORLD_HUMAN_CLIPBOARD&quot;                                                

&quot;WORLD_HUMAN_HIKER&quot;                                                    

&quot;WORLD_VEHICLE_EMPTY&quot;                                                        

&quot;WORLD_VEHICLE_BIKE_OFF_ROAD_RACE&quot;                                        

&quot;WORLD_HUMAN_PAPARAZZI&quot;                                                 

&quot;WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN&quot;                              

&quot;WORLD_VEHICLE_PARK_PARALLEL&quot;                                                

&quot;WORLD_VEHICLE_CONSTRUCTION_SOLO&quot;                                 

&quot;WORLD_VEHICLE_CONSTRUCTION_PASSENGERS&quot;                                                             
         

&quot;WORLD_VEHICLE_TRUCK_LOGS&quot;   

-alphazolam  

scenarioType could be the same as scenarioName, used in for example AI::TASK_START_SCENARIO_AT_POSIT
ION.  

```'>
				<Param name='char* scenarioType' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSequenceToRepeat' func='yes'>
			<Overload retVal='void' descr='// 0x58C70CF3A41E4AE7
// 0xCDDF1508
BRAIN::SET_SEQUENCE_TO_REPEAT(Object taskSequence, BOOL repeat);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object taskSequence' />
				<Param name='BOOL repeat' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTaskVehicleChaseBehaviorFlag' func='yes'>
			<Overload retVal='void' descr='// 0xCC665AAC360D31E7
// 0x2A83083F
BRAIN::SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG(Ped ped, int flag, BOOL set);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int flag' />
				<Param name='BOOL set' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTaskVehicleChaseIdealPursuitDistance' func='yes'>
			<Overload retVal='void' descr='// 0x639B642FACBE4EDD
// 0x04FD3EE7
BRAIN::SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE(Ped ped, float distance);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float distance' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopAnimPlayback' func='yes'>
			<Overload retVal='void' descr='// 0xEE08C992D238C5D1
// 0xE5F16398
BRAIN::STOP_ANIM_PLAYBACK(Ped ped, int p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

From re_drunkdriver:  

• AI::STOP_ANIM_PLAYBACK(l_5B[0/*1*/], 0, 0);  

Looks like p1 may be a flag, still need to do some research, though.  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopAnimTask' func='yes'>
			<Overload retVal='void' descr='// 0x97FF36A1D40EA00A
// 0x2B520A57
BRAIN::STOP_ANIM_TASK(Ped ped, char* animDictionary, char* animationName, float p3);
----------------------------------------------------------------------------------------------------
```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Ped ped' />
				<Param name='char* animDictionary' />
				<Param name='char* animationName' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskAchieveHeading' func='yes'>
			<Overload retVal='void' descr='// 0x93B93A37987F1F3D
// 0x0A0E9B42
BRAIN::TASK_ACHIEVE_HEADING(Ped ped, float heading, int timeout);
----------------------------------------------------------------------------------------------------
```

Makes the specified ped achieve the specified heading.  

pedHandle: The handle of the ped to assign the task to.  

heading: The desired heading.  

timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is canc
elled, and the ped will stay at the heading it managed to reach in the time.  

```'>
				<Param name='Ped ped' />
				<Param name='float heading' />
				<Param name='int timeout' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskAimGunAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0x6671F3EEC681BDA1
// 0xFBF44AD3
BRAIN::TASK_AIM_GUN_AT_COORD(Ped ped, float x, float y, float z, int time, BOOL p5, BOOL p6);
----------------------------------------------------------------------------------------------------
```

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int time' />
				<Param name='BOOL p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskAimGunAtEntity' func='yes'>
			<Overload retVal='void' descr='// 0x9B53BB6E8943AF53
// 0xBE32B3B6
BRAIN::TASK_AIM_GUN_AT_ENTITY(Ped ped, Entity entity, int duration, BOOL p3);
----------------------------------------------------------------------------------------------------
```

duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until eith
er another task is applied, or CLEAR_ALL_TASKS() is called with the ped  

```'>
				<Param name='Ped ped' />
				<Param name='Entity entity' />
				<Param name='int duration' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskAimGunScripted' func='yes'>
			<Overload retVal='void' descr='// 0x7A192BE16D373D00
// 0x9D296BCD
BRAIN::TASK_AIM_GUN_SCRIPTED(Ped ped, Hash scriptTask, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash scriptTask' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskAimGunScriptedWithTarget' func='yes'>
			<Overload retVal='void' descr='// 0x8605AF0DE8B3A5AC
// 0xFD517CE3
BRAIN::TASK_AIM_GUN_SCRIPTED_WITH_TARGET(Any p0, Any p1, float p2, float p3, float p4, Any p5, BOOL p6
----------------------------------------------------------------------------------------------------
OL p7);

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='Any p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskArrestPed' func='yes'>
			<Overload retVal='void' descr='// 0xF3B9A78A178572B1
// 0xBC0F153D
BRAIN::TASK_ARREST_PED(Ped ped, Ped target);
----------------------------------------------------------------------------------------------------
```

Example from &quot;me_amanda1.ysc.c4&quot;:  

AI::TASK_ARREST_PED(l_19F /* This is a Ped */ , PLAYER::PLAYER_PED_ID());  

Example from &quot;armenian1.ysc.c4&quot;:  

if (!PED::IS_PED_INJURED(l_B18[0/*1*/])) {  

    AI::TASK_ARREST_PED(l_B18[0/*1*/], PLAYER::PLAYER_PED_ID());  

}  

I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make fo
r a good cop mod.  

Looks like only the player can be arrested this way. Peds react and try to arrest you if you task th
em, but the player charater doesn&apos;t do anything if tasked to arrest another ped.  

```'>
				<Param name='Ped ped' />
				<Param name='Ped target' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskBoatMission' func='yes'>
			<Overload retVal='void' descr='// 0x15C86013127CE63F
// 0x5865B031
BRAIN::TASK_BOAT_MISSION(Ped pedDriver, Vehicle boat, Any p2, Any p3, float x, float y, float z, Any p
----------------------------------------------------------------------------------------------------
loat maxSpeed, int drivingStyle, float p10, Any p11);

```

```

You need to call PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS after TASK_BOAT_MISSION in order for the 
task to execute.  

Working example  

float vehicleMaxSpeed = VEHICLE::_GET_VEHICLE_MAX_SPEED(ENTITY::GET_ENTITY_MODEL(pedVehicle));  

AI::TASK_BOAT_MISSION(pedDriver, pedVehicle, 0, 0, waypointCoord.x, waypointCoord.y, waypointCoord.z
, 4, vehicleMaxSpeed, 786469, -1.0, 7);  

PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(pedDriver, 1);  

P8 appears to be driving style flag - see gtaforums.com/topic/822314-guide-driving-styles/ for docum
entation  

```'>
				<Param name='Ped pedDriver' />
				<Param name='Vehicle boat' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Any p' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskChatToPed' func='yes'>
			<Overload retVal='void' descr='// 0x8C338E0263E4FD19
// 0xA2BE1821
BRAIN::TASK_CHAT_TO_PED(Ped ped, Ped target, Any p2, float p3, float p4, float p5, float p6, float p7)
----------------------------------------------------------------------------------------------------
``

```

p2 tend to be 16, 17 or 1  

p3 to p7 tend to be 0.0  

```'>
				<Param name='Ped ped' />
				<Param name='Ped target' />
				<Param name='Any p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
				<Param name='float p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskClearDefensiveArea' func='yes'>
			<Overload retVal='void' descr='// 0x95A6C46A31D1917D
// 0x7A05BF0D
BRAIN::TASK_CLEAR_DEFENSIVE_AREA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskClearLookAt' func='yes'>
			<Overload retVal='void' descr='// 0x0F804F1DB19B9689
// 0x60EB4054
BRAIN::TASK_CLEAR_LOOK_AT(Ped ped);
----------------------------------------------------------------------------------------------------
```

Not clear what it actually does, but here&apos;s how script uses it -   

if (OBJECT::HAS_PICKUP_BEEN_COLLECTED(...)   

{  

	if(ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))  

	{  

AI::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());  

	}  

	...  

}  

Another one where it doesn&apos;t &quot;look&quot; at current player -   

AI::TASK_PLAY_ANIM(l_3ED, &quot;missheist_agency2aig_2&quot;, &quot;look_at_phone_a&quot;, 1000.0, -2.0, -1, 48, v_2, 0,
 0, 0);  

PED::_2208438012482A1A(l_3ED, 0, 0);  

AI::TASK_CLEAR_LOOK_AT(l_3ED);  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskClimb' func='yes'>
			<Overload retVal='void' descr='// 0x89D9FCC2435112F1
// 0x90847790
BRAIN::TASK_CLIMB(Ped ped, BOOL unused);
----------------------------------------------------------------------------------------------------
```

Climbs or vaults the nearest thing.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL unused' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskClimbLadder' func='yes'>
			<Overload retVal='void' descr='// 0xB6C987F9285A3814
// 0x35BB4EE0
BRAIN::TASK_CLIMB_LADDER(Ped ped, int p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskCombatHatedTargetsAroundPed' func='yes'>
			<Overload retVal='void' descr='// 0x7BF835BB9E2698C8
// 0x2E7064E4
BRAIN::TASK_COMBAT_HATED_TARGETS_AROUND_PED(Ped ped, float radius, int p2);
----------------------------------------------------------------------------------------------------
```

Despite its name, it only attacks ONE hated target. The one closest hated target.  

p2 seems to be always 0  

```'>
				<Param name='Ped ped' />
				<Param name='float radius' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskCombatHatedTargetsAroundPedTimed' func='yes'>
			<Overload retVal='void' descr='// 0x2BBA30B854534A0C
// 0xF127AD6A
BRAIN::TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED(Any p0, float p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskCombatHatedTargetsInArea' func='yes'>
			<Overload retVal='void' descr='// 0x4CF5F55DAC3280A0
// 0xDF099E18
BRAIN::TASK_COMBAT_HATED_TARGETS_IN_AREA(Ped ped, float x, float y, float z, float radius, Any p5);
----------------------------------------------------------------------------------------------------
```

Despite its name, it only attacks ONE hated target. The one closest to the specified position.  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskCombatPed' func='yes'>
			<Overload retVal='void' descr='// 0xF166E48407BAC484
// 0xCB0D8932
BRAIN::TASK_COMBAT_PED(Ped ped, Ped targetPed, int p2, int p3);
----------------------------------------------------------------------------------------------------
```

Makes the specified ped attack the target ped.  

p2 should be 0  

p3 should be 16  

```'>
				<Param name='Ped ped' />
				<Param name='Ped targetPed' />
				<Param name='int p2' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskCombatPedTimed' func='yes'>
			<Overload retVal='void' descr='// 0x944F30DCB7096BDE
// 0xF5CA2A45
BRAIN::TASK_COMBAT_PED_TIMED(Any p0, Ped ped, int p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Ped ped' />
				<Param name='int p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskCower' func='yes'>
			<Overload retVal='void' descr='// 0x3EB1FE9E8E908E15
// 0x9CF1C19B
BRAIN::TASK_COWER(Ped ped, int duration);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskDriveBy' func='yes'>
			<Overload retVal='void' descr='// 0x2F8AF0E82773A171
// 0x2B84D1C4
BRAIN::TASK_DRIVE_BY(Ped driverPed, Ped targetPed, Vehicle targetVehicle, float targetX, float targetY
----------------------------------------------------------------------------------------------------
oat targetZ, float distanceToShoot, int pedAccuracy, BOOL p8, Hash firingPattern);

```

```

Example:  

AI::TASK_DRIVE_BY(l_467[1/*22*/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing
_pattern_burst_fire_driveby});  

Needs working example. Doesn&apos;t seem to do anything.  

I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.  

I marked p6 as distanceToShoot as if you think of GTA&apos;s Logic with the native SET_VEHICLE_SHOOT nati
ves, it won&apos;t shoot till it gets within a certain distance of the target.  

I marked p7 as pedAccuracy as it seems it&apos;s mostly 100 (Completely Accurate), 75, 90, etc. Although 
this could be the ammo count within the gun, but I highly doubt it. I will change this comment once 
I find out if it&apos;s ammo count or not.  

```'>
				<Param name='Ped driverPed' />
				<Param name='Ped targetPed' />
				<Param name='Vehicle targetVehicle' />
				<Param name='float targetX' />
				<Param name='float targetY' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskEnterVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xC20E50AA46D09CA8
// 0xB8689B4E
BRAIN::TASK_ENTER_VEHICLE(Ped ped, Vehicle vehicle, int timeout, int seat, float speed, int flag, Any 
----------------------------------------------------------------------------------------------------
```

```

speed 1.0 = walk, 2.0 = run  

p5 1 = normal, 3 = teleport to vehicle, 16 = teleport directly into vehicle  

p6 is always 0  

Usage of seat   

-1 = driver  

0 = passenger  

1 = left back seat  

2 = right back seat  

3 = outside left  

4 = outside right  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='int timeout' />
				<Param name='int seat' />
				<Param name='float speed' />
				<Param name='int flag' />
				<Param name='Any ' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskEveryoneLeaveVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x7F93691AB4B92272
// 0xC1971F30
BRAIN::TASK_EVERYONE_LEAVE_VEHICLE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskExitCover' func='yes'>
			<Overload retVal='void' descr='// 0x79B258E397854D29
// 0xC829FAC9
BRAIN::TASK_EXIT_COVER(Any p0, Any p1, float p2, float p3, float p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskExtendRoute' func='yes'>
			<Overload retVal='void' descr='// 0x1E7889778264843A
// 0x43271F69
BRAIN::TASK_EXTEND_ROUTE(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

MulleKD19: Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call 
to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.  

A maximum of 8 points can be added.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskFlushRoute' func='yes'>
			<Overload retVal='void' descr='// 0x841142A1376E9006
// 0x34219154
BRAIN::TASK_FLUSH_ROUTE();
----------------------------------------------------------------------------------------------------
```

MulleKD19: Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_
ROUTE.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='TaskFollowNavMeshToCoord' func='yes'>
			<Overload retVal='void' descr='// 0x15D3A79D4E44B913
// 0xFE4A10D9
BRAIN::TASK_FOLLOW_NAV_MESH_TO_COORD(Ped ped, float x, float y, float z, float speed, int timeout, flo
----------------------------------------------------------------------------------------------------
toppingRange, BOOL persistFollowing, float unk);

```

```

If no timeout, set timeout to -1.  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float speed' />
				<Param name='int timeout' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskFollowNavMeshToCoordAdvanced' func='yes'>
			<Overload retVal='void' descr='// 0x17F58B88D085DBAC
// 0x6BF6E296
BRAIN::TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED(Ped ped, float x, float y, float z, float speed, int tim
----------------------------------------------------------------------------------------------------
, float unkFloat, int unkInt, float unkX, float unkY, float unkZ, float unk_40000f);

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float speed' />
				<Param name='int tim' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskFollowPointRoute' func='yes'>
			<Overload retVal='void' descr='// 0x595583281858626E
// 0xB837C816
BRAIN::TASK_FOLLOW_POINT_ROUTE(Ped ped, float speed, int unknown);
----------------------------------------------------------------------------------------------------
```

MulleKD19: Makes the ped go on the created point route.  

ped: The ped to give the task to.  

speed: The speed to move at in m/s.  

int: Unknown. Can be 0, 1, 2 or 3.  

Example:  

TASK_FLUSH_ROUTE();  

TASK_EXTEND_ROUTE(0f, 0f, 70f);  

TASK_EXTEND_ROUTE(10f, 0f, 70f);  

TASK_EXTEND_ROUTE(10f, 10f, 70f);  

TASK_FOLLOW_POINT_ROUTE(GET_PLAYER_PED(), 1f, 0);  

```'>
				<Param name='Ped ped' />
				<Param name='float speed' />
				<Param name='int unknown' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskFollowToOffsetOfEntity' func='yes'>
			<Overload retVal='void' descr='// 0x304AE42E357B8C7E
// 0x2DF5A6AC
BRAIN::TASK_FOLLOW_TO_OFFSET_OF_ENTITY(Ped ped, Entity entity, float offsetX, float offsetY, float off
----------------------------------------------------------------------------------------------------
, float movementSpeed, int timeout, float stoppingRange, BOOL persistFollowing);

```

```

p6 always -1  

p7 always 10.0  

p8 always 1  

```'>
				<Param name='Ped ped' />
				<Param name='Entity entity' />
				<Param name='float offsetX' />
				<Param name='float offsetY' />
				<Param name='float off' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskFollowWaypointRecording' func='yes'>
			<Overload retVal='void' descr='// 0x0759591819534F7B
// 0xADF9904D
BRAIN::TASK_FOLLOW_WAYPOINT_RECORDING(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskForceMotionState' func='yes'>
			<Overload retVal='void' descr='// 0x4F056E1AFFEF17AB
// 0xCAD2EF77
BRAIN::TASK_FORCE_MOTION_STATE(Ped ped, Hash state, BOOL p2);
----------------------------------------------------------------------------------------------------
```

p2 always false  

[30/03/2017] ins1de :  

See dev-c.com/nativedb/func/info/f28965d04f570dca  

```'>
				<Param name='Ped ped' />
				<Param name='Hash state' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGetOffBoat' func='yes'>
			<Overload retVal='void' descr='// 0x9C00E77AF14B2DFF
BRAIN::_TASK_GET_OFF_BOAT(Ped ped, Vehicle boat);
----------------------------------------------------------------------------------------------------
```

Jenkins of this native is 0x4293601F. This is the actual name.  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle boat' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGoStraightToCoord' func='yes'>
			<Overload retVal='void' descr='// 0xD76B57B44F1E6F8B
// 0x80A9E7A7
BRAIN::TASK_GO_STRAIGHT_TO_COORD(Ped ped, float x, float y, float z, float speed, int timeout, float t
----------------------------------------------------------------------------------------------------
tHeading, float distanceToSlide);

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float speed' />
				<Param name='int timeout' />
				<Param name='float t' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGoStraightToCoordRelativeToEntity' func='yes'>
			<Overload retVal='void' descr='// 0x61E360B7E040D12E
// 0xD26CAC68
BRAIN::TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY(Entity entity1, Entity entity2, float p2, float p3
----------------------------------------------------------------------------------------------------
oat p4, float p5, Any p6);

```'>
				<Param name='Entity entity1' />
				<Param name='Entity entity2' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGoToCoordAndAimAtHatedEntitiesNearCoord' func='yes'>
			<Overload retVal='void' descr='// 0xA55547801EB331FC
// 0x3F91358E
BRAIN::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(Ped pedHandle, float goToLocationX, float
----------------------------------------------------------------------------------------------------
oLocationY, float goToLocationZ, float focusLocationX, float focusLocationY, float focusLocation
Z, float speed, BOOL shootAtEnemies, float distanceToStopAt, float noRoadsDistance, BOOL unkTrue, in
t unkFlag, int aimingFlag, Hash firingPattern);

```

```

The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (dependi
ng on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.  

If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLo
cation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on t
he other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his dest
ination.  

If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk
 while aiming, 2.0f will run while aiming.  

The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.  

I still can&apos;t figure out what unkTrue is used for. I don&apos;t notice any difference if I set it to fals
e but in the decompiled scripts is always true.  

I think that unkFlag, like the driving styles, could be a flag that &quot;work as a list of 32 bits conve
rted to a decimal integer. Each bit acts as a flag, and enables or disables a function&quot;. What leads 
me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5
 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don&apos;t know what behavior
 enable or disable this possible flag so I leave it at 0.  

Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving toward
s goToLocation.  

The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (
goToLocation).  

Example:  

enum AimFlag  

{  

   AimAtFocusLocation,  

   AimAtGoToLocation  

};  

Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.  

Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.  

Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a lit
tle higher, around +1.0f to avoid aiming at the ground  

// 1st example  

AI::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.
y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f /*run*/, true /*shoot*/,
 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::Aim
AtGoToLocation, -957453492 /*FullAuto pattern*/);  

// 2nd example  

AI::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.
y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f /*walk*/, false /*don&apos;t 
shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimF
lag::AimAtFocusLocation, -957453492 /*FullAuto pattern*/);  

1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards go
ToLocation1, the ped will shoot on sight to any enemy in his path, using &quot;FullAuto&quot; firing pattern. 
The ped will stop once he is closer than distanceToStopAt to goToLocation1.  

2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2
 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path withou
t shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.  

```'>
				<Param name='Ped pedHandle' />
				<Param name='float goToLocationX' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGoToCoordAnyMeans' func='yes'>
			<Overload retVal='void' descr='// 0x5BC448CB78FA3E88
// 0xF91DF93B
BRAIN::TASK_GO_TO_COORD_ANY_MEANS(Ped ped, float x, float y, float z, float speed, Any p5, BOOL p6, in
----------------------------------------------------------------------------------------------------
lkingStyle, float p8);

```

```

example from fm_mission_controller  

AI::TASK_GO_TO_COORD_ANY_MEANS(l_649, sub_f7e86(-1, 0), 1.0, 0, 0, 786603, 0xbf800000);  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float speed' />
				<Param name='Any p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGoToCoordAnyMeansExtraParams' func='yes'>
			<Overload retVal='void' descr='// 0x1DD45F9ECFDB1BC9
// 0x094B75EF
BRAIN::TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS(Ped ped, float x, float y, float z, float speed, Any p5
----------------------------------------------------------------------------------------------------
OL p6, int walkingStyle, float p8, Any p9, Any p10, Any p11);

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float speed' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGoToCoordAnyMeansExtraParamsWithCruiseSpeed' func='yes'>
			<Overload retVal='void' descr='// 0xB8ECD61F531A7B02
// 0x86DC03F9
BRAIN::TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED(Ped ped, float x, float y, float z, f
----------------------------------------------------------------------------------------------------
speed, Any p5, BOOL p6, int walkingStyle, float p8, Any p9, Any p10, Any p11, Any p12);

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGoToCoordWhileAimingAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0x11315AB3385B8AC0
// 0x1552DC91
BRAIN::TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD(Ped ped, float x, float y, float z, float aimAtX, float 
----------------------------------------------------------------------------------------------------
tY, float aimAtZ, float moveSpeed, BOOL p8, float p9, float p10, BOOL p11, Any flags, BOOL p13, 
Hash firingPattern);

```

```

movement_speed: mostly 2f, but also 1/1.2f, etc.  

p8: always false  

p9: 2f  

p10: 0.5f  

p11: true  

p12: 0 / 512 / 513, etc.  

p13: 0  

firing_pattern: ${firing_pattern_full_auto}, 0xC6EE6B4C  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float aimAtX' />
				<Param name='float ' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGoToCoordWhileAimingAtEntity' func='yes'>
			<Overload retVal='void' descr='// 0xB2A16444EAD9AE47
// 0x9BD52ABD
BRAIN::TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY(Any p0, float p1, float p2, float p3, Any p4, float p5,
----------------------------------------------------------------------------------------------------
L p6, float p7, float p8, BOOL p9, Any p10, BOOL p11, Any p12, Any p13);

```'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='Any p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGoToEntity' func='yes'>
			<Overload retVal='void' descr='// 0x6A071245EB0D1882
// 0x374827C2
BRAIN::TASK_GO_TO_ENTITY(Entity entity, Entity target, int duration, float distance, float speed, floa
----------------------------------------------------------------------------------------------------
, int p6);

```

```

The entity will move towards the target until time is over (duration) or get in target&apos;s range (dist
ance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn&apos;t see any d
ifference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0  

Note: I&apos;ve only tested it on entity -&gt; ped and target -&gt; vehicle. It could work differently on other
 entities, didn&apos;t try it yet.  

Example: AI::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)  

Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?
) around the vehicle (with duration = -1, the task duration will be ignored).  

```'>
				<Param name='Entity entity' />
				<Param name='Entity target' />
				<Param name='int duration' />
				<Param name='float distance' />
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGotoEntityAiming' func='yes'>
			<Overload retVal='void' descr='// 0xA9DA48FAB8A76C12
// 0xF1C493CF
BRAIN::TASK_GOTO_ENTITY_AIMING(Ped ped, Entity target, float distanceToStopAt, float StartAimingDist);
----------------------------------------------------------------------------------------------------
`

```

eg  

AI::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);  

		ped = Ped you want to perform this task.  

		target = the Entity they should aim at.  

		distanceToStopAt = distance from the target, where the ped should stop to aim.  

		StartAimingDist = distance where the ped should start to aim.  

```'>
				<Param name='Ped ped' />
				<Param name='Entity target' />
				<Param name='float distanceToStopAt' />
				<Param name='float StartAimingDist' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGotoEntityOffset' func='yes'>
			<Overload retVal='void' descr='// 0xE39B4FF4FDEBDE27
// 0x1A17A85E
BRAIN::TASK_GOTO_ENTITY_OFFSET(Ped ped, Any p1, Any p2, float x, float y, float z, int duration);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGotoEntityOffsetXy' func='yes'>
			<Overload retVal='void' descr='// 0x338E7EF52B6095A9
// 0xBC1E3D0A
BRAIN::TASK_GOTO_ENTITY_OFFSET_XY(Ped ped, Entity entity, int duration, float xOffset, float yOffset, 
----------------------------------------------------------------------------------------------------
t zOffset, float moveBlendRatio, BOOL useNavmesh);

```'>
				<Param name='Ped ped' />
				<Param name='Entity entity' />
				<Param name='int duration' />
				<Param name='float xOffset' />
				<Param name='float yOffset' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGoToEntityWhileAimingAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0x04701832B739DCE5
// 0xD896CD82
BRAIN::TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD(Any p0, Any p1, float p2, float p3, float p4, float p5,
----------------------------------------------------------------------------------------------------
L p6, float p7, float p8, BOOL p9, BOOL p10, Any p11);

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGoToEntityWhileAimingAtEntity' func='yes'>
			<Overload retVal='void' descr='// 0x97465886D35210E9
// 0x68E36B7A
BRAIN::TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY(Ped ped, Entity entityToWalkTo, Entity entityToAimAt, 
----------------------------------------------------------------------------------------------------
t speed, BOOL shootatEntity, float p5, float p6, BOOL p7, BOOL p8, Hash firingPattern);

```

```

shootatEntity:  

If true, peds will shoot at Entity till it is dead.  

If false, peds will just walk till they reach the entity and will cease shooting.  

```'>
				<Param name='Ped ped' />
				<Param name='Entity entityToWalkTo' />
				<Param name='Entity entityToAimAt' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGuardAssignedDefensiveArea' func='yes'>
			<Overload retVal='void' descr='// 0xD2A207EEBDF9889B
// 0x7AF0133D
BRAIN::TASK_GUARD_ASSIGNED_DEFENSIVE_AREA(Any p0, float p1, float p2, float p3, float p4, float p5, An
----------------------------------------------------------------------------------------------------
);

```'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGuardCurrentPosition' func='yes'>
			<Overload retVal='void' descr='// 0x4A58A47A72E3FCB4
// 0x2FB099E9
BRAIN::TASK_GUARD_CURRENT_POSITION(Ped p0, float p1, float p2, BOOL p3);
----------------------------------------------------------------------------------------------------
```

From re_prisonvanbreak:  

AI::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);  

```'>
				<Param name='Ped p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskGuardSphereDefensiveArea' func='yes'>
			<Overload retVal='void' descr='// 0xC946FE14BE0EB5E2
// 0x86B76CB7
BRAIN::TASK_GUARD_SPHERE_DEFENSIVE_AREA(Ped p0, float p1, float p2, float p3, float p4, float p5, Any 
----------------------------------------------------------------------------------------------------
float p7, float p8, float p9, float p10);

```

```

p0 - Guessing PedID  

p1, p2, p3 - XYZ?  

p4 - ???  

p5 - Maybe the size of sphere from XYZ?  

p6 - ???  

p7, p8, p9 - XYZ again?  

p10 - Maybe the size of sphere from second XYZ?  

```'>
				<Param name='Ped p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='Any ' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskHandsUp' func='yes'>
			<Overload retVal='void' descr='// 0xF2EAB31979A7F910
// 0x8DCC19C5
BRAIN::TASK_HANDS_UP(Ped ped, int duration, Ped facingPed, int p3, BOOL p4);
----------------------------------------------------------------------------------------------------
```

In the scripts, p3 was always -1.  

p3 seems to be duration or timeout of turn animation.  

Also facingPed can be 0 or -1 so ped will just raise hands up.  

```'>
				<Param name='Ped ped' />
				<Param name='int duration' />
				<Param name='Ped facingPed' />
				<Param name='int p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskHeliChase' func='yes'>
			<Overload retVal='void' descr='// 0xAC83B1DB38D0ADA0
// 0xAC290A21
BRAIN::TASK_HELI_CHASE(Ped pilot, Entity entityToFollow, float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Ped pilot should be in a heli.  

EntityToFollow can be a vehicle or Ped.  

x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. T
hen the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, i
t tries to go below (if the EntityToFollow is a heli or plane)  

NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to cha
se the Entity given.  

```'>
				<Param name='Ped pilot' />
				<Param name='Entity entityToFollow' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskHeliMission' func='yes'>
			<Overload retVal='void' descr='// 0xDAD029E187A2BEB4
// 0x0C143E97
BRAIN::TASK_HELI_MISSION(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float dest
----------------------------------------------------------------------------------------------------
ionX, float destinationY, float destinationZ, int missionFlag, float maxSpeed, float landingRadi
us, float targetHeading, int unk1, int unk2, Hash unk3, int landingFlags);

```

```

EDITED (8/16/2017)  

DESCRIPTION:  

Allow a ped to fly to a specific destination.  

USAGE:  

-- REQUIRED --  

• pilot = The ped flying the aircraft.  

• aircraft = The aircraft the pilot is flying.  

-- OPTIONAL -- [atleast 1 must be assigned]  

• targetVehicle = The vehicle the pilot will target.  

• targetPed = The ped the pilot will target.  

• destinationX, destinationY, destinationZ = The location the pilot will target.  

-- LOGIC --  

• missionFlag = The type of mission.  

• maxSpeed = The speed in mph that the pilot will limit his/her self to while flying.  

• landingRadius = The distance from the destination that the pilot must be to land.  

• targetHeading = The heading that the pilot will try to achieve while flying.  

• unk1, unk2 = Set to -1 and it will be okay.  

• unk3 = I&apos;m almost sure this is a vehicle record/waypoint recording hash. A value of -1 is for none
. Maybe it&apos;s a float? Idk.  

• landingFlags = Bit flags used for landing. All I know is:  

0 = Hover over the destination.  

32 = Land on destination.  

1024 = Erratic, crash into nearby obstacles.  

4096 = Rushed movement + Hover over destination  

Known Mission Types:  

4 = FlyToCoord  

8 = FleeFromPed  

9 = CircleAroundTarget  

10 = CopyTargetHeading  

20 = LandNearPed  

21 = Crash  

Example C#:  

Function.Call(Hash.TASK_HELI_MISSION, driver, heli, 0, 0, position.X, position.Y, position.Z, 4, 50.
0, 10.0, (position - heli.Position).ToHeading(), -1, -1, -1, 32);  

OLD USAGE: pastebin.com/ndkSjaaW  

```'>
				<Param name='Ped pilot' />
				<Param name='Vehicle aircraft' />
				<Param name='Vehicle targetVehicle' />
				<Param name='Ped targetPed' />
				<Param name='float dest' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskJump' func='yes'>
			<Overload retVal='void' descr='// 0x0AE4086104E067B1
// 0x0356E3CE
BRAIN::TASK_JUMP(Ped ped, BOOL unused);
----------------------------------------------------------------------------------------------------
```

Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4). 
 

v350: Ped ped, bool unused  

v678: Ped ped, bool unused, bool flag1, bool flag2  

flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is t
rue.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL unused' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskLeaveAnyVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x504D54DF3F6F2247
// 0xDBDD79FA
BRAIN::TASK_LEAVE_ANY_VEHICLE(Ped ped, int p1, int p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskLeaveVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xD3DBCE61A490BE02
// 0x7B1141C6
BRAIN::TASK_LEAVE_VEHICLE(Ped ped, Vehicle vehicle, int flags);
----------------------------------------------------------------------------------------------------
```

Flags from decompiled scripts:  

0 = normal exit and closes door.  

1 = normal exit and closes door.  

16 = teleports outside, door kept closed.  

64 = normal exit and closes door, maybe a bit slower animation than 0.  

256 = normal exit but does not close the door.  

4160 = ped is throwing himself out, even when the vehicle is still.  

262144 = ped moves to passenger seat first, then exits normally  

Others to be tried out: 320, 512, 131072.  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskLookAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0x6FA46612594F7973
// 0x7B784DD8
BRAIN::TASK_LOOK_AT_COORD(Entity entity, float x, float y, float z, float duration, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
```

p5 = 0, p6 = 2  

```'>
				<Param name='Entity entity' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float duration' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskLookAtEntity' func='yes'>
			<Overload retVal='void' descr='// 0x69F4BE8C8CC4796C
// 0x991D6619
BRAIN::TASK_LOOK_AT_ENTITY(Ped ped, Entity lookAt, int duration, int unknown1, int unknown2);
----------------------------------------------------------------------------------------------------
```

param3: duration in ms, use -1 to look forever  

param4: using 2048 is fine  

param5: using 3 is fine  

```'>
				<Param name='Ped ped' />
				<Param name='Entity lookAt' />
				<Param name='int duration' />
				<Param name='int unknown1' />
				<Param name='int unknown2' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskMoveNetwork' func='yes'>
			<Overload retVal='void' descr='// 0x2D537BA194896636
// 0x6F5D215F
BRAIN::_TASK_MOVE_NETWORK(Ped ped, char* task, float multiplier, BOOL p3, char* animDict, int flags);
----------------------------------------------------------------------------------------------------
`

```

Example:  

AI::_2D537BA194896636(PLAYER::PLAYER_PED_ID(), &quot;arm_wrestling_sweep_paired_a_rev3&quot;, 0.0, 1, &quot;mini@ar
m_wrestling&quot;, 0);  

```'>
				<Param name='Ped ped' />
				<Param name='char* task' />
				<Param name='float multiplier' />
				<Param name='BOOL p3' />
				<Param name='char* animDict' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskMoveNetworkAdvanced' func='yes'>
			<Overload retVal='void' descr='// 0xD5B35BEA41919ACB
// 0x71A5C5DB
BRAIN::_TASK_MOVE_NETWORK_ADVANCED(Ped ped, char* p1, float p2, float p3, float p4, float p5, float p6
----------------------------------------------------------------------------------------------------
oat p7, Any p8, float p9, BOOL p10, char* animDict, int flags);

```

```

Example:  

AI::_D5B35BEA41919ACB(PLAYER::PLAYER_PED_ID(), &quot;minigame_tattoo_michael_parts&quot;, 324.13, 181.29, 102.
6, 0.0, 0.0, 22.32, 2, 0, 0, 0, 0);  

```'>
				<Param name='Ped ped' />
				<Param name='char* p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskOpenVehicleDoor' func='yes'>
			<Overload retVal='void' descr='// 0x965791A9A488A062
// 0x8EE06BF4
BRAIN::TASK_OPEN_VEHICLE_DOOR(Ped ped, Vehicle vehicle, int timeOut, int doorIndex, float speed);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='int timeOut' />
				<Param name='int doorIndex' />
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskParachute' func='yes'>
			<Overload retVal='void' descr='// 0xD2F1C53C97EE81AB
// 0xEC3060A2
BRAIN::TASK_PARACHUTE(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
```

This function has a third parameter as well (bool).  

Second parameter is unused.  

seconds parameter was for jetpack in the early stages of gta and the hard coded code is now removed 
 

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskParachuteToTarget' func='yes'>
			<Overload retVal='void' descr='// 0xB33E291AFA6BD03A
// 0xE0104D6C
BRAIN::TASK_PARACHUTE_TO_TARGET(Ped ped, float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPatrol' func='yes'>
			<Overload retVal='void' descr='// 0xBDA5DF49D080FE4E
// 0xB92E5AF6
BRAIN::TASK_PATROL(Ped ped, char* p1, Any p2, BOOL p3, BOOL p4);
----------------------------------------------------------------------------------------------------
```

After looking at some scripts the second parameter seems to be an id of some kind. Here are some I f
ound from some R* scripts:  

&quot;miss_Tower_01&quot; (this went from 01 - 10)  

&quot;miss_Ass0&quot; (0, 4, 6, 3)  

&quot;MISS_PATROL_8&quot;  

I think they&apos;re patrol routes, but I&apos;m not sure. And I believe the 3rd parameter is a BOOL, but I ca
n&apos;t confirm other than only seeing 0 and 1 being passed.  

As far as I can see the patrol routes names such as &quot;miss_Ass0&quot; have been defined earlier in the scr
ipts. This leads me to believe we can defined our own new patrol routes by following the same approa
ch.   

From the scripts  

    AI::OPEN_PATROL_ROUTE(&quot;miss_Ass0&quot;);  

    AI::ADD_PATROL_ROUTE_NODE(0, &quot;WORLD_HUMAN_GUARD_STAND&quot;, l_738[0/*3*/], -139.4076690673828, -993.
4732055664062, 26.2754, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000));  

    AI::ADD_PATROL_ROUTE_NODE(1, &quot;WORLD_HUMAN_GUARD_STAND&quot;, l_738[1/*3*/], -116.1391830444336, -987.
4984130859375, 26.38541030883789, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000));  

    AI::ADD_PATROL_ROUTE_NODE(2, &quot;WORLD_HUMAN_GUARD_STAND&quot;, l_738[2/*3*/], -128.46847534179688, -979
.0340576171875, 26.2754, GAMEPLAY::GET_RANDOM_INT_IN_RANGE(5000, 10000));  

    AI::ADD_PATROL_ROUTE_LINK(0, 1);  

    AI::ADD_PATROL_ROUTE_LINK(1, 2);  

    AI::ADD_PATROL_ROUTE_LINK(2, 0);  

    AI::CLOSE_PATROL_ROUTE();  

    AI::CREATE_PATROL_ROUTE();  

```'>
				<Param name='Ped ped' />
				<Param name='char* p1' />
				<Param name='Any p2' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPause' func='yes'>
			<Overload retVal='void' descr='// 0xE73A266DB0CA9042
// 0x17A64668
BRAIN::TASK_PAUSE(Ped ped, int ms);
----------------------------------------------------------------------------------------------------
```

Stand still (?)  

```'>
				<Param name='Ped ped' />
				<Param name='int ms' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPedSlideToCoord' func='yes'>
			<Overload retVal='void' descr='// 0xD04FE6765D990A06
// 0x225380EF
BRAIN::TASK_PED_SLIDE_TO_COORD(Ped ped, float x, float y, float z, float heading, float duration);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float heading' />
				<Param name='float duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPedSlideToCoordHdgRate' func='yes'>
			<Overload retVal='void' descr='// 0x5A4A6A6D3DC64F52
// 0x38A995C1
BRAIN::TASK_PED_SLIDE_TO_COORD_HDG_RATE(Ped ped, float x, float y, float z, float heading, float p5, f
----------------------------------------------------------------------------------------------------
p6);

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float heading' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPerformSequence' func='yes'>
			<Overload retVal='Any' descr='// 0x5ABA3986D90D8A3B
// 0x4D9FBD11
BRAIN::TASK_PERFORM_SEQUENCE(Ped ped, Object taskSequence);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Object taskSequence' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPerformSequenceFromProgress' func='yes'>
			<Overload retVal='void' descr='// 0x89221B16730234F0
// 0xFA60601B
BRAIN::TASK_PERFORM_SEQUENCE_FROM_PROGRESS(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPlaneChase' func='yes'>
			<Overload retVal='void' descr='// 0x2D2386F273FF7A25
// 0x12FA1C28
BRAIN::TASK_PLANE_CHASE(Ped pilot, Entity entityToFollow, float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped pilot' />
				<Param name='Entity entityToFollow' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPlaneLand' func='yes'>
			<Overload retVal='void' descr='// 0xBF19721FA34D32C0
// 0x5F7E23EA
BRAIN::TASK_PLANE_LAND(Ped pilot, Vehicle plane, float runwayStartX, float runwayStartY, float runwayS
----------------------------------------------------------------------------------------------------
Z, float runwayEndX, float runwayEndY, float runwayEndZ);

```

```

Function.Call(Hash.TASK_PLANE_LAND, pilot, selectedAirplane, runwayStartPoint.X, runwayStartPoint.Y,
 runwayStartPoint.Z, runwayEndPoint.X, runwayEndPoint.Y, runwayEndPoint.Z);  

```'>
				<Param name='Ped pilot' />
				<Param name='Vehicle plane' />
				<Param name='float runwayStartX' />
				<Param name='float runwayStartY' />
				<Param name='float runwayS' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPlaneMission' func='yes'>
			<Overload retVal='void' descr='// 0x23703CD154E83B88
// 0x1D007E65
BRAIN::TASK_PLANE_MISSION(Ped pilot, Vehicle aircraft, Vehicle targetVehicle, Ped targetPed, float des
----------------------------------------------------------------------------------------------------
tionX, float destinationY, float destinationZ, int missionFlag, float angularDrag, float unk, fl
oat targetHeading, float maxZ, float minZ);

```

```

EDITED (7/13/2017)  

NOTE: If you want air combat, AI::TASK_COMBAT_PED (while your pilot is in an aircraft) also does the
 same thing as this native.  

DESCRIPTION:  

Ever wish your buddy could shoot down one of your enemies for you? Ever wanted an auto-pilot? Well l
ook no further! This is the native for you! (Ped intelligence may vary)  

USAGE:  

-- REQUIRED --  

• pilot = The ped flying the aircraft.  

• aircraft = The aircraft the pilot is flying  

-- OPTIONAL -- [atleast 1 must be assigned]  

• targetVehicle = The vehicle the pilot will target.  

• targetPed = The ped the pilot will target.  

• destinationX, destinationY, destinationZ = The location the pilot will target.  

-- LOGIC --  

• missionFlag = The type of mission. pastebin.com/R8x73dbv  

• angularDrag = The higher the value, the slower the plane will rotate. Value ranges from 0 - Infini
ty.  

• unk = Set to 0, and you&apos;ll be fine.  

• targetHeading = The target angle (from world space north) that the pilot will try to acheive befor
e executing an attack/landing.  

• maxZ = Maximum Z coordinate height for flying.  

• minZ = Minimum Z coordinate height for flying.  

Z: 2,700 is the default max height a pilot will be able to fly. Anything greater and he will fly dow
nward until reaching 2,700 again.  

Mission Types (incase you don&apos;t like links..):  

0 = None  

1 = Unk  

2 = CTaskVehicleRam  

3 = CTaskVehicleBlock  

4 = CTaskVehicleGoToPlane  

5 = CTaskVehicleStop  

6 = CTaskVehicleAttack  

7 = CTaskVehicleFollow  

8 = CTaskVehicleFleeAirborne  

9 = CTaskVehicleCircle  

10 = CTaskVehicleEscort  

15 = CTaskVehicleFollowRecording  

16 = CTaskVehiclePoliceBehaviour  

17 = CTaskVehicleCrash  

Example C#:  

Function.Call(Hash.TASK_PLANE_MISSION, pilot, vehicle, 0, Game.Player.Character, 0, 0, 0, 6, 0f, 0f,
 0f, 2500.0f, -1500f);  

Example C++  

AI::TASK_PLANE_MISSION(pilot, vehicle, 0, PLAYER::GET_PLAYER_PED(PLAYER::GET_PLAYER_INDEX()), 0, 0, 
0, 6, 0.0, 0.0, 0.0, 2500.0, -1500.0);  

[DEPRECATED] EXAMPLE USAGE:  

pastebin.com/gx7Finsk  

```'>
				<Param name='Ped pilot' />
				<Param name='Vehicle aircraft' />
				<Param name='Vehicle targetVehicle' />
				<Param name='Ped targetPed' />
				<Param name='float des' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPlantBomb' func='yes'>
			<Overload retVal='void' descr='// 0x965FEC691D55E9BF
// 0x33457535
BRAIN::TASK_PLANT_BOMB(Ped ped, float x, float y, float z, float heading);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float heading' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPlayAnim' func='yes'>
			<Overload retVal='void' descr='// 0xEA47FE3719165B94
// 0x5AB552C6
BRAIN::TASK_PLAY_ANIM(Ped ped, char* animDictionary, char* animationName, float speed, float speedMult
----------------------------------------------------------------------------------------------------
er, int duration, int flag, float playbackRate, BOOL lockX, BOOL lockY, BOOL lockZ);

```

```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

float speed &gt; normal speed is 8.0f  

----------------------  

float speedMultiplier &gt; multiply the playback speed  

----------------------  

int duration: time in millisecond  

----------------------  

-1 _ _ _ _ _ _ _&gt; Default (see flag)  

0 _ _ _ _ _ _ _ &gt; Not play at all  

Small value _ _ &gt; Slow down animation speed  

Other _ _ _ _ _ &gt; freeze player control until specific time (ms) has   

_ _ _ _ _ _ _ _ _ passed. (No effect if flag is set to be   

_ _ _ _ _ _ _ _ _ controllable.)  

int flag:  

----------------------  

enum eAnimationFlags  

{  

 ANIM_FLAG_NORMAL = 0,  

   ANIM_FLAG_REPEAT = 1,  

   ANIM_FLAG_STOP_LAST_FRAME = 2,  

   ANIM_FLAG_UPPERBODY = 16,  

   ANIM_FLAG_ENABLE_PLAYER_CONTROL = 32,  

   ANIM_FLAG_CANCELABLE = 120,  

};  

Odd number : loop infinitely  

Even number : Freeze at last frame  

Multiple of 4: Freeze at last frame but controllable  

01 to 15 &gt; Full body  

10 to 31 &gt; Upper body  

32 to 47 &gt; Full body &gt; Controllable  

48 to 63 &gt; Upper body &gt; Controllable  

...  

001 to 255 &gt; Normal  

256 to 511 &gt; Garbled  

...  

playbackRate:  

values are between 0.0 and 1.0  

lockX:    

0 in most cases 1 for rcmepsilonism8 and rcmpaparazzo_3  

&gt; 1 for mini@sprunk  

lockY:  

0 in most cases   

1 for missfam5_yoga, missfra1mcs_2_crew_react  

lockZ:   

    0 for single player   

    Can be 1 but only for MP  

```'>
				<Param name='Ped ped' />
				<Param name='char* animDictionary' />
				<Param name='char* animationName' />
				<Param name='float speed' />
				<Param name='float speedMult' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPlayAnimAdvanced' func='yes'>
			<Overload retVal='void' descr='// 0x83CDB10EA29B370B
// 0x3DDEB0E6
BRAIN::TASK_PLAY_ANIM_ADVANCED(Ped ped, char* animDict, char* animName, float posX, float posY, float 
----------------------------------------------------------------------------------------------------
, float rotX, float rotY, float rotZ, float speed, float speedMultiplier, int duration, Any flag
, float animTime, Any p14, Any p15);

```

```

It&apos;s similar to the one above, except the first 6 floats let you specify the initial position and ro
tation of the task. (Ped gets teleported to the position). animTime is a float from 0.0 -&gt; 1.0, lets
 you start an animation from given point. The rest as in AI::TASK_PLAY_ANIM.   

Rotation information : rotX and rotY don&apos;t seem to have any effect, only rotZ works.  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Ped ped' />
				<Param name='char* animDict' />
				<Param name='char* animName' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float ' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPlayPhoneGestureAnimation' func='yes'>
			<Overload retVal='void' descr='// 0x8FBB6758B3B3E9EC
// 0x1582162C
BRAIN::TASK_PLAY_PHONE_GESTURE_ANIMATION(Ped ped, char* animDict, char* animation, char* boneMaskType,
----------------------------------------------------------------------------------------------------
at p4, float p5, BOOL p6, BOOL p7);

```

```

Example from the scripts:  

AI::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);  

=========================================================  

^^ No offense, but Idk how that would really help anyone.  

As for the animDict & animation, they&apos;re both store in a global in all 5 scripts. So if anyone would
 be so kind as to read that global and comment what strings they use. Thanks.  

Known boneMaskTypes&apos;  

&quot;BONEMASK_HEADONLY&quot;  

&quot;BONEMASK_HEAD_NECK_AND_ARMS&quot;  

&quot;BONEMASK_HEAD_NECK_AND_L_ARM&quot;  

&quot;BONEMASK_HEAD_NECK_AND_R_ARM&quot;  

p4 known args - 0.0f, 0.5f, 0.25f  

p5 known args - 0.0f, 0.25f  

p6 known args - 1 if a global if check is passed.  

p7 known args - 1 if a global if check is passed.  

The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deat
hmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).  

=========================================================  

```'>
				<Param name='Ped ped' />
				<Param name='char* animDict' />
				<Param name='char* animation' />
				<Param name='char* boneMaskType' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPutPedDirectlyIntoCover' func='yes'>
			<Overload retVal='void' descr='// 0x4172393E6BE1FECE
// 0xC9F00E68
BRAIN::TASK_PUT_PED_DIRECTLY_INTO_COVER(Ped ped, float x, float y, float z, Any timeout, BOOL p5, floa
----------------------------------------------------------------------------------------------------
, BOOL p7, BOOL p8, Any p9, BOOL p10);

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Any timeout' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskPutPedDirectlyIntoMelee' func='yes'>
			<Overload retVal='void' descr='// 0x1C6CD14A876FFE39
// 0x79E1D27D
BRAIN::TASK_PUT_PED_DIRECTLY_INTO_MELEE(Ped ped, Ped meleeTarget, float p2, float p3, float p4, BOOL p
----------------------------------------------------------------------------------------------------
```

```

from armenian3.c4  

AI::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);  

```'>
				<Param name='Ped ped' />
				<Param name='Ped meleeTarget' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='BOOL p' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskRappelFromHeli' func='yes'>
			<Overload retVal='void' descr='// 0x09693B0312F91649
// 0x2C7ADB93
BRAIN::TASK_RAPPEL_FROM_HELI(Ped ped, int unused);
----------------------------------------------------------------------------------------------------
```

Only appears twice in the scripts.  

AI::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 0x41200000);  

AI::TASK_RAPPEL_FROM_HELI(a_0, 0x41200000);  

Fixed, definitely not a float and since it&apos;s such a big number obviously not a bool. All though note
 when I thought it was a bool and set it to 1 it seemed to work that same as int 0x41200000.  

0x41200000 = 10.0 as float.  

Not all helicopters support rappelling.  

```'>
				<Param name='Ped ped' />
				<Param name='int unused' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskReactAndFleePed' func='yes'>
			<Overload retVal='void' descr='// 0x72C896464915D1B1
// 0x8A632BD8
BRAIN::TASK_REACT_AND_FLEE_PED(Ped ped, Ped fleeTarget);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Ped fleeTarget' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskReloadWeapon' func='yes'>
			<Overload retVal='void' descr='// 0x62D2916F56B9CD2D
// 0xCA6E91FD
BRAIN::TASK_RELOAD_WEAPON(Ped ped, BOOL unused);
----------------------------------------------------------------------------------------------------
```

The 2nd param (unused) is not implemented.  

-----------------------------------------------------------------------  

The only occurrence I found in a R* script (&quot;assassin_construction.ysc.c4&quot;):  

            if (((v_3 &lt; v_4) && (AI::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 
1)) && (v_5 &gt; v_3)) {  

                AI::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);  

            }  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL unused' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskScriptedAnimation' func='yes'>
			<Overload retVal='void' descr='// 0x126EF75F1E17ABE5
// 0xFC2DCF47
BRAIN::TASK_SCRIPTED_ANIMATION(Ped ped, Any* p1, Any* p2, Any* p3, float p4, float p5);
----------------------------------------------------------------------------------------------------
```

From fm_mission_controller.c:  

reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);  

	vVar28 = {0.094f, 0.02f, -0.005f};  

	vVar29 = {-92.24f, 63.64f, 150.24f};  

	func_253(&uVar30, joaat(&quot;prop_ld_case_01&quot;), Global_1592429.imm_34757[iParam1 &lt;268&gt;], 1, 1, 0, 1);  


	set_entity_lod_dist(net_to_ent(uVar30), 500);  

	attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vV
ar29, 1, 0, 0, 0, 2, 1);  

	Var31.imm_4 = 1065353216;  

	Var31.imm_5 = 1065353216;  

	Var31.imm_9 = 1065353216;  

	Var31.imm_10 = 1065353216;  

	Var31.imm_14 = 1065353216;  

	Var31.imm_15 = 1065353216;  

	Var31.imm_17 = 1040187392;  

	Var31.imm_18 = 1040187392;  

	Var31.imm_19 = -1;  

	Var32.imm_4 = 1065353216;  

	Var32.imm_5 = 1065353216;  

	Var32.imm_9 = 1065353216;  

	Var32.imm_10 = 1065353216;  

	Var32.imm_14 = 1065353216;  

	Var32.imm_15 = 1065353216;  

	Var32.imm_17 = 1040187392;  

	Var32.imm_18 = 1040187392;  

	Var32.imm_19 = -1;  

	Var31 = 1;  

	Var31.imm_1 = &quot;weapons@misc@jerrycan@mp_male&quot;;  

	Var31.imm_2 = &quot;idle&quot;;  

	Var31.imm_20 = 1048633;  

	Var31.imm_4 = 0.5f;  

	Var31.imm_16 = get_hash_key(&quot;BONEMASK_ARMONLY_R&quot;);  

	task_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);  

	set_model_as_no_longer_needed(joaat(&quot;prop_ld_case_01&quot;));  

	remove_anim_dict(&quot;anim@heists@biolab@&quot;);  

```'>
				<Param name='Ped ped' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSeekCoverFromPed' func='yes'>
			<Overload retVal='void' descr='// 0x84D32B3BEC531324
// 0xC1EC907E
BRAIN::TASK_SEEK_COVER_FROM_PED(Ped ped, Ped target, int duration, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Ped target' />
				<Param name='int duration' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSeekCoverFromPos' func='yes'>
			<Overload retVal='void' descr='// 0x75AC2B60386D89F2
// 0x83F18EE9
BRAIN::TASK_SEEK_COVER_FROM_POS(Ped ped, float x, float y, float z, int duration, BOOL p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int duration' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSeekCoverToCoords' func='yes'>
			<Overload retVal='void' descr='// 0x39246A6958EF072C
// 0xFFFE754E
BRAIN::TASK_SEEK_COVER_TO_COORDS(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, 
----------------------------------------------------------------------------------------------------
p7, BOOL p8);

```

```

from michael2:  

AI::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677
734375, -2125.84130859375, 29.4752, -1, 1);  

appears to be shorter variation  

from michael3:  

AI::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0)
;  

```'>
				<Param name='Ped ped' />
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSeekCoverToCoverPoint' func='yes'>
			<Overload retVal='void' descr='// 0xD43D95C7A869447F
// 0x3D026B29
BRAIN::TASK_SEEK_COVER_TO_COVER_POINT(Any p0, Any p1, float p2, float p3, float p4, Any p5, BOOL p6);
----------------------------------------------------------------------------------------------------
`'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='Any p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSetBlockingOfNonTemporaryEvents' func='yes'>
			<Overload retVal='void' descr='// 0x90D2156198831D69
// 0x1B54FB6B
BRAIN::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

I cant believe I have to define this, this is one of the best natives.  

It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or
 gesture, but other than that they just continue their daily activities. This includes shooting and 
wounding the ped. And - most importantly - they do not flee.  

Since it is a task, every time the native is called the ped will stop for a moment.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSetDecisionMaker' func='yes'>
			<Overload retVal='void' descr='// 0xEB8517DDA73720DA
// 0x830AD50C
BRAIN::TASK_SET_DECISION_MAKER(Ped p0, Hash p1);
----------------------------------------------------------------------------------------------------
```

p1 is always GET_HASH_KEY(&quot;empty&quot;) in scripts, for the rare times this is used  

```'>
				<Param name='Ped p0' />
				<Param name='Hash p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSetSphereDefensiveArea' func='yes'>
			<Overload retVal='void' descr='// 0x933C06518B52A9A4
// 0x9F3C5D6A
BRAIN::TASK_SET_SPHERE_DEFENSIVE_AREA(Any p0, float p1, float p2, float p3, float p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskShockingEventReact' func='yes'>
			<Overload retVal='void' descr='// 0x452419CBD838065B
// 0x9BD00ACF
BRAIN::TASK_SHOCKING_EVENT_REACT(Ped ped, int eventHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int eventHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskShootAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0x46A6CC01E0826106
// 0x601C22E3
BRAIN::TASK_SHOOT_AT_COORD(Ped ped, float x, float y, float z, int duration, Hash firingPattern);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int duration' />
				<Param name='Hash firingPattern' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskShootAtEntity' func='yes'>
			<Overload retVal='void' descr='// 0x08DA95E8298AE772
// 0xAC0631C9
BRAIN::TASK_SHOOT_AT_ENTITY(Entity entity, Entity target, int duration, Hash firingPattern);
----------------------------------------------------------------------------------------------------
```

//this part of the code is to determine at which entity the player is aiming, for example if you wan
t to create a mod where you give orders to peds  

Entity aimedentity;  

Player player = PLAYER::PLAYER_ID();  

PLAYER::_GET_AIMED_ENTITY(player, &aimedentity);  

//bg is an array of peds  

AI::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, GAMEPLAY::GET_HASH_KEY(&quot;FIRING_PATTERN_FULL_AUTO&quot;
));  

in practical usage, getting the entity the player is aiming at and then task the peds to shoot at th
e entity, at a button press event would be better.  

```'>
				<Param name='Entity entity' />
				<Param name='Entity target' />
				<Param name='int duration' />
				<Param name='Hash firingPattern' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskShuffleToNextVehicleSeat' func='yes'>
			<Overload retVal='void' descr='// 0x7AA80209BDA643EB
// 0xBEAF8F67
BRAIN::TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT(Ped ped, Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Makes the specified ped shuffle to the next vehicle seat.  

The ped MUST be in a vehicle and the vehicle parameter MUST be the ped&apos;s current vehicle.  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSkyDive' func='yes'>
			<Overload retVal='void' descr='// 0x601736CFE536B0A0
// 0xD3874AFA
BRAIN::TASK_SKY_DIVE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSmartFleeCoord' func='yes'>
			<Overload retVal='void' descr='// 0x94587F17E9C365D5
// 0xB2E686FC
BRAIN::TASK_SMART_FLEE_COORD(Ped ped, float x, float y, float z, float distance, int time, BOOL p6, BO
----------------------------------------------------------------------------------------------------
7);

```

```

Makes the specified ped flee the specified distance from the specified position.  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float distance' />
				<Param name='int time' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSmartFleePed' func='yes'>
			<Overload retVal='void' descr='// 0x22B0D0E37CCB840D
// 0xE52EB560
BRAIN::TASK_SMART_FLEE_PED(Ped ped, Ped fleeTarget, float distance, Any fleeTime, BOOL p4, BOOL p5);
----------------------------------------------------------------------------------------------------
```

Makes a ped run away from another ped (fleeTarget).  

distance = ped will flee this distance.  

fleeTime = ped will flee for this amount of time, set to &quot;-1&quot; to flee forever  

```'>
				<Param name='Ped ped' />
				<Param name='Ped fleeTarget' />
				<Param name='float distance' />
				<Param name='Any fleeTime' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskStandGuard' func='yes'>
			<Overload retVal='void' descr='// 0xAE032F8BBA959E90
// 0xD130F636
BRAIN::TASK_STAND_GUARD(Ped ped, float x, float y, float z, float heading, char* scenarioName);
----------------------------------------------------------------------------------------------------
```

scenarioName example: &quot;WORLD_HUMAN_GUARD_STAND&quot;  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float heading' />
				<Param name='char* scenarioName' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskStandStill' func='yes'>
			<Overload retVal='void' descr='// 0x919BE13EED931959
// 0x6F80965D
BRAIN::TASK_STAND_STILL(Ped ped, int time);
----------------------------------------------------------------------------------------------------
```

Makes the specified ped stand still for (time) milliseconds.  

```'>
				<Param name='Ped ped' />
				<Param name='int time' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskStartScenarioAtPosition' func='yes'>
			<Overload retVal='void' descr='// 0xFA4EFC79F69D4F07
// 0xAA2C4AC2
BRAIN::TASK_START_SCENARIO_AT_POSITION(Ped ped, char* scenarioName, float x, float y, float z, float h
----------------------------------------------------------------------------------------------------
ng, int duration, BOOL sittingScenario, BOOL teleport);

```

```

List of scenarioNames: pastebin.com/6mrYTdQv  

Also a few more listed at AI::TASK_START_SCENARIO_IN_PLACE just above.  

---------------  

The first parameter in every scenario has always been a Ped of some sort. The second like TASK_START
_SCENARIO_IN_PLACE is the name of the scenario.   

The next 4 parameters were harder to decipher. After viewing &quot;hairdo_shop_mp.ysc.c4&quot;, and being conf
used from seeing the case in other scripts, they passed the first three of the arguments as one arra
y from a function, and it looked like it was obviously x, y, and z.  

I haven&apos;t seen the sixth parameter go to or over 360, making me believe that it is rotation, but I r
eally can&apos;t confirm anything.  

I have no idea what the last 3 parameters are, but I&apos;ll try to find out.  

-going on the last 3 parameters, they appear to always be &quot;0, 0, 1&quot;  

p6 -1 also used in scrips  

p7 used for sitting scenarios  

p8 teleports ped to position  

```'>
				<Param name='Ped ped' />
				<Param name='char* scenarioName' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float h' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskStartScenarioInPlace' func='yes'>
			<Overload retVal='void' descr='// 0x142A02425FF02BD9
// 0xE50D6DDE
BRAIN::TASK_START_SCENARIO_IN_PLACE(Ped ped, char* scenarioName, int unkDelay, BOOL playEnterAnim);
----------------------------------------------------------------------------------------------------
```

Plays a scenario on a Ped at their current location.  

unkDelay - Usually 0 or -1, doesn&apos;t seem to have any effect. Might be a delay between sequences.  

playEnterAnim - Plays the &quot;Enter&quot; anim if true, otherwise plays the &quot;Exit&quot; anim. Scenarios that don&apos;
t have any &quot;Enter&quot; anims won&apos;t play if this is set to true.  

----  

From &quot;am_hold_up.ysc.c4&quot; at line 339:  

AI::TASK_START_SCENARIO_IN_PLACE(NETWORK::NET_TO_PED(l_8D._f4), sub_adf(), 0, 1);  

I&apos;m unsure of what the last two parameters are, however sub_adf() randomly returns 1 of 3 scenarios,
 those being:  

WORLD_HUMAN_SMOKING  

WORLD_HUMAN_HANG_OUT_STREET  

WORLD_HUMAN_STAND_MOBILE  

This makes sense, as these are what I commonly see when going by a liquor store.  

-------------------------  

List of scenarioNames: pastebin.com/6mrYTdQv  

(^ Thank you so fucking much for this)  

Also these:  

WORLD_FISH_FLEE  

DRIVE  

WORLD_HUMAN_HIKER  

WORLD_VEHICLE_ATTRACTOR  

WORLD_VEHICLE_BICYCLE_MOUNTAIN  

WORLD_VEHICLE_BIKE_OFF_ROAD_RACE  

WORLD_VEHICLE_BIKER  

WORLD_VEHICLE_CONSTRUCTION_PASSENGERS  

WORLD_VEHICLE_CONSTRUCTION_SOLO  

WORLD_VEHICLE_DRIVE_PASSENGERS  

WORLD_VEHICLE_DRIVE_SOLO  

WORLD_VEHICLE_EMPTY  

WORLD_VEHICLE_PARK_PARALLEL  

WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN  

WORLD_VEHICLE_POLICE_BIKE  

WORLD_VEHICLE_POLICE_CAR  

WORLD_VEHICLE_POLICE_NEXT_TO_CAR  

WORLD_VEHICLE_SALTON_DIRT_BIKE  

WORLD_VEHICLE_TRUCK_LOGS  

```'>
				<Param name='Ped ped' />
				<Param name='char* scenarioName' />
				<Param name='int unkDelay' />
				<Param name='BOOL playEnterAnim' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskStayInCover' func='yes'>
			<Overload retVal='void' descr='// 0xE5DA8615A6180789
// 0xA27A9413
BRAIN::TASK_STAY_IN_COVER(Ped ped);
----------------------------------------------------------------------------------------------------
```

Makes the ped run to take cover  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskStealthKill' func='yes'>
			<Overload retVal='void' descr='// 0xAA5DC05579D60BD9
// 0x0D64C2FA
BRAIN::TASK_STEALTH_KILL(Ped killer, Ped target, Hash actionType, float p3, Any p4);
----------------------------------------------------------------------------------------------------
```

Stealth kill action name hashes:  

stealth kills can be found here: Grand Theft Auto V\common.rpf\data\action\stealth_kills.meta  

...  

{  

    &quot;ACT_stealth_kill_a&quot;,  

    &quot;ACT_stealth_kill_weapon&quot;,  

    &quot;ACT_stealth_kill_b&quot;,  

    &quot;ACT_stealth_kill_c&quot;,  

    &quot;ACT_stealth_kill_d&quot;,  

    &quot;ACT_stealth_kill_a_gardener&quot;  

}  

Only known script using this native: fbi4_prep2  

EXAMPLE:  

ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key(&quot;AR_stealth_kill_a&quot;), 1f, 0);ai::ta
sk_stealth_kill(iParam1, Local_252, gameplay::get_hash_key(&quot;AR_stealth_kill_knife&quot;), 1f, 0);  

Also it may be important to note, that each time this task is called, it&apos;s followed by AI::CLEAR_PED
_TASKS on the target  

```'>
				<Param name='Ped killer' />
				<Param name='Ped target' />
				<Param name='Hash actionType' />
				<Param name='float p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskStopPhoneGestureAnimation' func='yes'>
			<Overload retVal='void' descr='// 0x3FA00D4F4641BFAE
BRAIN::_TASK_STOP_PHONE_GESTURE_ANIMATION(Ped ped);
----------------------------------------------------------------------------------------------------
```

TODO: add hash from x360  

^^^  

I got you, x360 Hash: 0x5A32D4B4.   

Note: Whoever named this I just compared it and the hash matches, it was the correct name thanks.   


Note: Alexander Blade, needs to fix this site or his code one, as when we do find the right name the
 server throws an error saying the name is already in use. AB is a legend coder, so I&apos;m sure this is
 a simple fix for him.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSwapWeapon' func='yes'>
			<Overload retVal='void' descr='// 0xA21C51255B205245
// 0xDAF4F8FC
BRAIN::TASK_SWAP_WEAPON(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSweepAimEntity' func='yes'>
			<Overload retVal='void' descr='// 0x2047C02158D6405A
// 0x4D210467
BRAIN::TASK_SWEEP_AIM_ENTITY(Ped ped, char* anim, char* p2, char* p3, char* p4, int p5, Vehicle vehicl
----------------------------------------------------------------------------------------------------
loat p7, float p8);

```

```

This function is called on peds in vehicles.  

anim: animation name  

p2, p3, p4: &quot;sweep_low&quot;, &quot;sweep_med&quot; or &quot;sweep_high&quot;  

p5: no idea what it does but is usually -1  

```'>
				<Param name='Ped ped' />
				<Param name='char* anim' />
				<Param name='char* p2' />
				<Param name='char* p3' />
				<Param name='char* p4' />
				<Param name='int p5' />
				<Param name='Vehicle vehicl' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSweepAimPosition' func='yes'>
			<Overload retVal='void' descr='// 0x7AFE8FDC10BC07D2
// 0x1683FE66
BRAIN::TASK_SWEEP_AIM_POSITION(Any p0, Any* p1, Any* p2, Any* p3, Any* p4, Any p5, float p6, float p7,
----------------------------------------------------------------------------------------------------
at p8, float p9, float p10);

```'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
				<Param name='Any* p4' />
				<Param name='Any p5' />
				<Param name='float p6' />
				<Param name='float p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskSynchronizedScene' func='yes'>
			<Overload retVal='void' descr='// 0xEEA929141F699854
// 0x4F217E7B
BRAIN::TASK_SYNCHRONIZED_SCENE(Ped ped, int scene, char* animDictionary, char* animationName, float sp
----------------------------------------------------------------------------------------------------
float speedMultiplier, int duration, int flag, float playbackRate, Any p9);

```

```

AI::TASK_SYNCHRONIZED_SCENE(ped, scene, &quot;creatures@rottweiler@in_vehicle@std_car&quot;, &quot;get_in&quot;, 1000.0,
 -8.0, 4, 0, 0x447a0000, 0);  

Animations List : www.ls-multiplayer.com/dev/index.php?section=3  

```'>
				<Param name='Ped ped' />
				<Param name='int scene' />
				<Param name='char* animDictionary' />
				<Param name='char* animationName' />
				<Param name='float sp' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskThrowProjectile' func='yes'>
			<Overload retVal='void' descr='// 0x7285951DBF6B5A51
// 0xF65C20A7
BRAIN::TASK_THROW_PROJECTILE(int ped, float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

In every case of this native, I&apos;ve only seen the first parameter passed as 0, although I believe it&apos;
s a Ped after seeing tasks around it using 0. That&apos;s because it&apos;s used in a Sequence Task.  

The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even
 being used straight from the player&apos;s coordinates.  

---  

It seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to th
row a projectile out the window at the player. This is something any ped will naturally do if they h
ave a throwable and they are doing driveby-combat (although not very accurately).  

It is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.  


----------------------------------------------------  

The first comment is right it definately is the ped as if you look in script finale_heist2b.c line 5
9628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_559[2 &lt;
14&gt;] if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local
_559[2 &lt;14&gt;] and we all know the first param of that native is ped. So it guaranteed has to be ped. 
0 just may mean to use your ped by default for some reason.  

```'>
				<Param name='int ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskToggleDuck' func='yes'>
			<Overload retVal='void' descr='// 0xAC96609B9995EDF8
// 0x61CFBCBF
BRAIN::TASK_TOGGLE_DUCK(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

used in sequence task  

both parameters seems to be always 0  

```'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskTurnPedToFaceCoord' func='yes'>
			<Overload retVal='void' descr='// 0x1DDA930A0AC38571
// 0x30463D73
BRAIN::TASK_TURN_PED_TO_FACE_COORD(Ped ped, float x, float y, float z, int duration);
----------------------------------------------------------------------------------------------------
```

duration in milliseconds  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskTurnPedToFaceEntity' func='yes'>
			<Overload retVal='void' descr='// 0x5AD23D40115353AC
// 0x3C37C767
BRAIN::TASK_TURN_PED_TO_FACE_ENTITY(Ped ped, Entity entity, int duration);
----------------------------------------------------------------------------------------------------
```

duration: the amount of time in milliseconds to do the task. -1 will keep the task going until eithe
r another task is applied, or CLEAR_ALL_TASKS() is called with the ped  

```'>
				<Param name='Ped ped' />
				<Param name='Entity entity' />
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskUseMobilePhone' func='yes'>
			<Overload retVal='void' descr='// 0xBD2A8EC3AF4DE7DB
// 0x225A38C8
BRAIN::TASK_USE_MOBILE_PHONE(Ped ped, int p1);
----------------------------------------------------------------------------------------------------
```

Actually has 3 params, not 2.  

p0: Ped  

p1: int (or bool?)  

p2: int  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskUseMobilePhoneTimed' func='yes'>
			<Overload retVal='void' descr='// 0x5EE02954A14C69DB
// 0xC99C19F5
BRAIN::TASK_USE_MOBILE_PHONE_TIMED(Ped ped, int duration);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskUseNearestScenarioChainToCoord' func='yes'>
			<Overload retVal='void' descr='// 0x9FDA1B3D7E7028B3
// 0xE32FFB22
BRAIN::TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD(Any p0, float p1, float p2, float p3, float p4, Any p5
----------------------------------------------------------------------------------------------------
```'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskUseNearestScenarioChainToCoordWarp' func='yes'>
			<Overload retVal='void' descr='// 0x97A28E63F0BA5631
// 0xBAB4C0AE
BRAIN::TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP(Any p0, float p1, float p2, float p3, float p4, A
----------------------------------------------------------------------------------------------------
5);

```'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskUseNearestScenarioToCoord' func='yes'>
			<Overload retVal='void' descr='// 0x277F471BA9DB000B
// 0x9C50FBF0
BRAIN::TASK_USE_NEAREST_SCENARIO_TO_COORD(Ped ped, float x, float y, float z, float distance, int dura
----------------------------------------------------------------------------------------------------
);

```

```

Updated variables  

An alternative to AI::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario in
stead.  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float distance' />
				<Param name='int dura' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskUseNearestScenarioToCoordWarp' func='yes'>
			<Overload retVal='void' descr='// 0x58E2E0F23F6B76C3
// 0x1BE9D65C
BRAIN::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP(Ped ped, float x, float y, float z, float radius, Any p
----------------------------------------------------------------------------------------------------
```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Any p' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleAimAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0x447C1E9EF844BC0F
// 0x010F47CE
BRAIN::TASK_VEHICLE_AIM_AT_COORD(Ped ped, float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleAimAtPed' func='yes'>
			<Overload retVal='void' descr='// 0xE41885592B08B097
// 0x920AE6DB
BRAIN::TASK_VEHICLE_AIM_AT_PED(Ped ped, Ped target);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Ped target' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleChase' func='yes'>
			<Overload retVal='void' descr='// 0x3C08A8E30363B353
// 0x55634798
BRAIN::TASK_VEHICLE_CHASE(Ped driver, Entity targetEnt);
----------------------------------------------------------------------------------------------------
```

chases targetEnt fast and aggressively  

--  

Makes ped (needs to be in vehicle) chase targetEnt.  

```'>
				<Param name='Ped driver' />
				<Param name='Entity targetEnt' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleDriveToCoord' func='yes'>
			<Overload retVal='void' descr='// 0xE2A2AA2F659D77A7
// 0xE4AC0387
BRAIN::TASK_VEHICLE_DRIVE_TO_COORD(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, A
----------------------------------------------------------------------------------------------------
6, Hash vehicleModel, int drivingMode, float stopRange, float p10);

```

```

info about driving modes: HTTP://gtaforums.com/topic/822314-guide-driving-styles/  

---------------------------------------------------------------  

Passing P6 value as floating value didn&apos;t throw any errors, though unsure what is it exactly, looks 
like radius or something.  

P10 though, it is mentioned as float, however, I used bool and set it to true, that too worked.  

Here the e.g. code I used  

Function.Call(Hash.TASK_VEHICLE_DRIVE_TO_COORD, Ped, Vehicle, Cor X, Cor Y, Cor Z, 30f, 1f, Vehicle.
GetHashCode(), 16777216, 1f, true);  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleDriveToCoordLongrange' func='yes'>
			<Overload retVal='void' descr='// 0x158BB33F920D360C
// 0x1490182A
BRAIN::TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(Ped ped, Vehicle vehicle, float x, float y, float z, floa
----------------------------------------------------------------------------------------------------
eed, int driveMode, float stopRange);

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleDriveWander' func='yes'>
			<Overload retVal='void' descr='// 0x480142959D337D00
// 0x36EC0EB0
BRAIN::TASK_VEHICLE_DRIVE_WANDER(Ped ped, Vehicle vehicle, float speed, int drivingStyle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='float speed' />
				<Param name='int drivingStyle' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleEscort' func='yes'>
			<Overload retVal='void' descr='// 0x0FA6E4B75F302400
// 0x9FDCB250
BRAIN::TASK_VEHICLE_ESCORT(Ped ped, Vehicle vehicle, Vehicle targetVehicle, int mode, float speed, int
----------------------------------------------------------------------------------------------------
vingStyle, float minDistance, int p7, float noRoadsDistance);

```

```

Makes a ped follow the targetVehicle with &lt;minDistance&gt; in between.  

note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.  

Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its 
vehicle there.  

-1 = behind  

0 = ahead  

1 = left  

2 = right  

3 = back left  

4 = back right  

if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you di
rectly.  

Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='Vehicle targetVehicle' />
				<Param name='int mode' />
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleFollow' func='yes'>
			<Overload retVal='void' descr='// 0xFC545A9F0626E3B6
BRAIN::_TASK_VEHICLE_FOLLOW(Ped driver, Vehicle vehicle, Entity targetEntity, float speed, int driving
----------------------------------------------------------------------------------------------------
e, int minDistance);

```

```

Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)  

Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/  

Console Hash: 0xA8B917D7  

AI::_TASK_VEHICLE_FOLLOW(l_244[3/*1*/], l_268[3/*1*/], l_278, 40.0, 262144, 10);  

What is this known as in the decompiled scripts ffs. I need more examples. I&apos;ve searched in all scri
pts for keywords suchas,  

TASK_VEHICLE_FOLLOW, FC545A9F0626E3B6, 0xFC545A9F0626E3B6, all the parameters in the above example e
ven just search the last few params &apos;40.0, 262144, 10&apos; and couldnt find where this native is used in
 scripts at all unless whoever decompiled the scripts gave it a whack a.. name.  

```'>
				<Param name='Ped driver' />
				<Param name='Vehicle vehicle' />
				<Param name='Entity targetEntity' />
				<Param name='float speed' />
				<Param name='int driving' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleFollowWaypointRecording' func='yes'>
			<Overload retVal='void' descr='// 0x3123FAA6DB1CF7ED
// 0x959818B6
BRAIN::TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING(Ped ped, Vehicle vehicle, char* WPRecording, int p3, int
----------------------------------------------------------------------------------------------------
int p5, int p6, float p7, BOOL p8, float p9);

```

```

task_vehicle_follow_waypoint_recording(Ped p0, Vehicle p1, string p2, int p3, int p4, int p5, int p6
, float.x p7, float.Y p8, float.Z p9, bool p10, int p11)  

p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf  

p3 = 786468  

p4 = 0  

p5 = 16  

p6 = -1 (angle?)  

p7/8/9 = usually v3.zero  

p10 = bool (repeat?)  

p11 = 1073741824  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='char* WPRecording' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleGotoNavmesh' func='yes'>
			<Overload retVal='void' descr='// 0x195AEEB13CEFE2EE
// 0x55CF3BCD
BRAIN::TASK_VEHICLE_GOTO_NAVMESH(Ped ped, Vehicle vehicle, float x, float y, float z, float speed, int
----------------------------------------------------------------------------------------------------
aviorFlag, float stoppingRange);

```

```

Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route with
out taking one-way streets and other &quot;road laws&quot; into consideration.  

WARNING:  

A behaviorFlag value of 0 will result in a clunky, stupid driver!  

Recommended settings:  

speed = 30.0f,  

behaviorFlag = 156,   

stoppingRange = 5.0f;  

If you simply want to have your driver move to a fixed location, call it only once, or, when necessa
ry in the event of interruption.   

If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.
  Call it in with the Ped&apos;s updated coordinates every 20 ticks or so and you will have one hell of a
 smart, fast-reacting NPC driver -- provided he doesn&apos;t get stuck.  If your update frequency is too 
fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.
  One way around this would be to implement an &quot;anti-stuck&quot; mechanism, which allows the driver to re
alize he&apos;s stuck, temporarily pause the tick, unstuck, then resume the tick.  

EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-t
o-make-peds-clever-and-insanely-fast-c/  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleHeliProtect' func='yes'>
			<Overload retVal='void' descr='// 0x1E09C32048FEFD1C
// 0x0CB415EE
BRAIN::TASK_VEHICLE_HELI_PROTECT(Ped pilot, Vehicle vehicle, Entity entityToFollow, float targetSpeed,
----------------------------------------------------------------------------------------------------
p4, float radius, int altitude, int p7);

```

```

pilot, vehicle and altitude are rather self-explanatory.  

p4: is unused variable in the function.  

entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.  

&apos;targetSpeed&apos;:  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS
 POSSIBLE.  As such, you&apos;ll want to modulate it as opposed to calling it via a hard-wired, constant 
#.  

&apos;radius&apos; isn&apos;t just &quot;stop within radius of X of target&quot; like with ground vehicles.  In this case, th
e pilot will fly an entire circle around &apos;radius&apos; and continue to do so.  

NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but
 playing around with values here appears to result in different -behavior- as opposed to offsetting 
coordinates, altitude, target speed, etc.  

NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protec
t the ped/vehicle given shortly thereafter.  

```'>
				<Param name='Ped pilot' />
				<Param name='Vehicle vehicle' />
				<Param name='Entity entityToFollow' />
				<Param name='float targetSpeed' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleMission' func='yes'>
			<Overload retVal='void' descr='// 0x659427E0EF36BCDE
// 0x20609E56
BRAIN::TASK_VEHICLE_MISSION(int p0, int p1, Vehicle veh, Any p3, float p4, Any p5, float p6, float p7,
----------------------------------------------------------------------------------------------------
L p8);

```'>
				<Param name='int p0' />
				<Param name='int p1' />
				<Param name='Vehicle veh' />
				<Param name='Any p3' />
				<Param name='float p4' />
				<Param name='Any p5' />
				<Param name='float p6' />
				<Param name='float p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleMissionCoorsTarget' func='yes'>
			<Overload retVal='void' descr='// 0xF0AF20AA7731F8C3
// 0x6719C109
BRAIN::TASK_VEHICLE_MISSION_COORS_TARGET(Ped ped, Vehicle vehicle, float x, float y, float z, int p5, 
----------------------------------------------------------------------------------------------------
p6, int p7, float p8, float p9, BOOL p10);

```

```

Example from fm_mission_controller.c4:  

AI::TASK_VEHICLE_MISSION_COORS_TARGET(l_65E1, l_65E2, 324.84588623046875, 325.09619140625, 104.3525,
 4, 15.0, 802987, 5.0, 5.0, 0);  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleMissionPedTarget' func='yes'>
			<Overload retVal='void' descr='// 0x9454528DF15D657A
// 0xC81C4677
BRAIN::TASK_VEHICLE_MISSION_PED_TARGET(Ped ped, Vehicle vehicle, Ped pedTarget, int mode, float maxSpe
----------------------------------------------------------------------------------------------------
int drivingStyle, float minDistance, float p7, BOOL p8);

```

```

Modes:  

8= flees  

1=drives around the ped  

4=drives and stops near  

7=follows  

10=follows to the left  

11=follows to the  right  

12 = follows behind  

13=follows ahead  

14=follows, stop when near  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='Ped pedTarget' />
				<Param name='int mode' />
				<Param name='float maxSpe' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehiclePark' func='yes'>
			<Overload retVal='void' descr='// 0x0F3E34E968EA374E
// 0x5C85FF90
BRAIN::TASK_VEHICLE_PARK(Ped ped, Vehicle vehicle, float x, float y, float z, float heading, int mode,
----------------------------------------------------------------------------------------------------
at radius, BOOL keepEngineOn);

```

```

Modes:  

0 - ignore heading  

1 - park forward  

2 - park backwards  

Depending on the angle of approach, the vehicle can park at the specified heading or at its exact op
posite (-180) angle.  

Radius seems to define how close the vehicle has to be -after parking- to the position for this task
 considered completed. If the value is too small, the vehicle will try to park again until it&apos;s exac
tly where it should be. 20.0 Works well but lower values don&apos;t, like the radius is measured in centi
meters or something.  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float heading' />
				<Param name='int mode' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehiclePlayAnim' func='yes'>
			<Overload retVal='void' descr='// 0x69F5C3BD0F3EBD89
// 0x2B28F598
BRAIN::TASK_VEHICLE_PLAY_ANIM(Vehicle vehicle, char* animation_set, char* animation_name);
----------------------------------------------------------------------------------------------------
```

Most probably plays a specific animation on vehicle. For example getting chop out of van etc...  

Here&apos;s how its used -   

AI::TASK_VEHICLE_PLAY_ANIM(l_325, &quot;rcmnigel1b&quot;, &quot;idle_speedo&quot;);  

AI::TASK_VEHICLE_PLAY_ANIM(l_556[0/*1*/], &quot;missfra0_chop_drhome&quot;, &quot;InCar_GetOutofBack_Speedo&quot;);  

FYI : Speedo is the name of van in which chop was put in the mission.  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='char* animation_set' />
				<Param name='char* animation_name' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleShootAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0x5190796ED39C9B6D
// 0xA7AAA4D6
BRAIN::TASK_VEHICLE_SHOOT_AT_COORD(Ped ped, float x, float y, float z, float p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleShootAtPed' func='yes'>
			<Overload retVal='void' descr='// 0x10AB107B887214D8
// 0x59677BA0
BRAIN::TASK_VEHICLE_SHOOT_AT_PED(Ped ped, Ped target, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Ped target' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskVehicleTempAction' func='yes'>
			<Overload retVal='void' descr='// 0xC429DCEEB339E129
// 0x0679DFB8
BRAIN::TASK_VEHICLE_TEMP_ACTION(Ped driver, Vehicle vehicle, int action, int time);
----------------------------------------------------------------------------------------------------
```

&apos;1   

&apos;3 - brake + reverse  

&apos;4 - turn left 90 + braking  

&apos;5 - turn right 90 + braking  

&apos;6 - brake strong (handbrake?) until time ends  

&apos;7 - turn left + accelerate  

&apos;7 - turn right + accelerate  

&apos;9 - weak acceleration  

&apos;10 - turn left + restore wheel pos to center in the end  

&apos;11 - turn right + restore wheel pos to center in the end  

&apos;13 - turn left + go reverse  

&apos;14 - turn left + go reverse  

&apos;16 - crash the game after like 2 seconds :)  

&apos;17 - keep actual state, game crashed after few tries  

&apos;18 - game crash  

&apos;19 - strong brake + turn left/right  

&apos;20 - weak brake + turn left then turn right  

&apos;21 - weak brake + turn right then turn left  

&apos;22 - brake + reverse  

&apos;23 - accelerate fast  

&apos;24   

&apos;25 - brake turning left then when almost stopping it turns left more  

&apos;26 - brake turning right then when almost stopping it turns right more  

&apos;27 - brake until car stop or until time ends  

&apos;28 - brake + strong reverse acceleration  

&apos;30 - performs a burnout (brake until stop + brake and accelerate)  

&apos;31 - accelerate + handbrake  

&apos;32 - accelerate very strong  

Seems to be this:  

Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last t
ask), &quot;time&quot; will work, otherwise the task will be performed forever until tasked with something els
e  

```'>
				<Param name='Ped driver' />
				<Param name='Vehicle vehicle' />
				<Param name='int action' />
				<Param name='int time' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskWanderInArea' func='yes'>
			<Overload retVal='void' descr='// 0xE054346CA3A0F315
// 0xC6981FB9
BRAIN::TASK_WANDER_IN_AREA(Ped ped, float x, float y, float z, float radius, float minimalLength, floa
----------------------------------------------------------------------------------------------------
meBetweenWalks);

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='float minimalLength' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskWanderStandard' func='yes'>
			<Overload retVal='void' descr='// 0xBB9CE077274F6A1B
// 0xAF59151A
BRAIN::TASK_WANDER_STANDARD(Ped ped, float p1, int p2);
----------------------------------------------------------------------------------------------------
```

Makes ped walk around the area.  

set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.  

```'>
				<Param name='Ped ped' />
				<Param name='float p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskWarpPedIntoVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x9A7D091411C5F684
// 0x65D4A35D
BRAIN::TASK_WARP_PED_INTO_VEHICLE(Ped ped, Vehicle vehicle, int seat);
----------------------------------------------------------------------------------------------------
```

Seat Numbers  

-------------------------------  

Driver = -1  

Any = -2  

Left-Rear = 1  

Right-Front = 0  

Right-Rear = 2  

Extra seats = 3-14(This may differ from vehicle type e.g. Firetruck Rear Stand, Ambulance Rear)  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='int seat' />
			</Overload>
		</KeyWord>
		<KeyWord name='TaskWrithe' func='yes'>
			<Overload retVal='void' descr='// 0xCDDC2B77CE54AC6E
// 0x0FDC54FC
BRAIN::TASK_WRITHE(Ped ped, Ped target, int time, int p3);
----------------------------------------------------------------------------------------------------
```

EX: Function.Call(Ped1, Ped2, Time, 0);  

The last parameter is always 0 for some reason I do not know. The first parameter is the pedestrian 
who will writhe to the pedestrian in the other parameter. The third paremeter is how long until the 
Writhe task ends. When the task ends, the ped will die. If set to -1, he will not die automatically,
 and the task will continue until something causes it to end. This can be being touched by an entity
, being shot, explosion, going into ragdoll, having task cleared. Anything that ends the current tas
k will kill the ped at this point.  

MulleDK19: Third parameter does not appear to be time. The last parameter is not implemented (It&apos;s n
ot used, regardless of value).  

```'>
				<Param name='Ped ped' />
				<Param name='Ped target' />
				<Param name='int time' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='UncuffPed' func='yes'>
			<Overload retVal='void' descr='// 0x67406F2C8F87FC4F
// 0xA23A1D61
BRAIN::UNCUFF_PED(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='UpdateTaskAimGunScriptedTarget' func='yes'>
			<Overload retVal='void' descr='// 0x9724FB59A3E72AD0
// 0x67E73525
BRAIN::UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET(Ped p0, Ped p1, float p2, float p3, float p4, BOOL p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped p0' />
				<Param name='Ped p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='UpdateTaskHandsUpDuration' func='yes'>
			<Overload retVal='void' descr='// 0xA98FCAFD7893C834
// 0x3AA39BE9
BRAIN::UPDATE_TASK_HANDS_UP_DURATION(Ped ped, int duration);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='UpdateTaskSweepAimEntity' func='yes'>
			<Overload retVal='void' descr='// 0xE4973DBDBE6E44B3
// 0xF65F0F4F
BRAIN::UPDATE_TASK_SWEEP_AIM_ENTITY(Ped ped, Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='UpdateTaskSweepAimPosition' func='yes'>
			<Overload retVal='void' descr='// 0xBB106883F5201FC4
// 0x6345EC80
BRAIN::UPDATE_TASK_SWEEP_AIM_POSITION(Any p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='UseWaypointRecordingAsAssistedMovementRoute' func='yes'>
			<Overload retVal='void' descr='// 0x5A353B8E6B1095B5
// 0x4DFD5FEC
BRAIN::USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE(Any* p0, BOOL p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='BOOL p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='VehicleWaypointPlaybackOverrideSpeed' func='yes'>
			<Overload retVal='void' descr='// 0x121F0593E0A431D7
// 0xBE1E7BB4
BRAIN::VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='VehicleWaypointPlaybackPause' func='yes'>
			<Overload retVal='void' descr='// 0x8A4E6AC373666BC5
// 0x7C00B415
BRAIN::VEHICLE_WAYPOINT_PLAYBACK_PAUSE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='VehicleWaypointPlaybackResume' func='yes'>
			<Overload retVal='void' descr='// 0xDC04FCAA7839D492
// 0xBEB14C82
BRAIN::VEHICLE_WAYPOINT_PLAYBACK_RESUME(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='VehicleWaypointPlaybackUseDefaultSpeed' func='yes'>
			<Overload retVal='void' descr='// 0x5CEB25A7D2848963
// 0x923C3AA4
BRAIN::VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointPlaybackGetIsPaused' func='yes'>
			<Overload retVal='BOOL' descr='// 0x701375A7D43F01CB
// 0xA6BB5717
BRAIN::WAYPOINT_PLAYBACK_GET_IS_PAUSED(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointPlaybackOverrideSpeed' func='yes'>
			<Overload retVal='void' descr='// 0x7D7D2B47FA788E85
// 0x23E6BA96
BRAIN::WAYPOINT_PLAYBACK_OVERRIDE_SPEED(Any p0, float p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointPlaybackPause' func='yes'>
			<Overload retVal='void' descr='// 0x0F342546AA06FED5
// 0xFE39ECF8
BRAIN::WAYPOINT_PLAYBACK_PAUSE(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointPlaybackResume' func='yes'>
			<Overload retVal='void' descr='// 0x244F70C84C547D2D
// 0x50F392EF
BRAIN::WAYPOINT_PLAYBACK_RESUME(Any p0, BOOL p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointPlaybackStartAimingAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0x8968400D900ED8B3
// 0xF120A34E
BRAIN::WAYPOINT_PLAYBACK_START_AIMING_AT_COORD(Any p0, float p1, float p2, float p3, BOOL p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointPlaybackStartAimingAtPed' func='yes'>
			<Overload retVal='void' descr='// 0x20E330937C399D29
// 0x75E60CF6
BRAIN::WAYPOINT_PLAYBACK_START_AIMING_AT_PED(Any p0, Any p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointPlaybackStartShootingAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0x057A25CFCC9DB671
// 0xCDDB44D5
BRAIN::WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD(Any p0, float p1, float p2, float p3, BOOL p4, Any p5
----------------------------------------------------------------------------------------------------
```'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='BOOL p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointPlaybackStopAimingOrShooting' func='yes'>
			<Overload retVal='void' descr='// 0x47EFA040EBB8E2EA
// 0x6D7CF40C
BRAIN::WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointPlaybackUseDefaultSpeed' func='yes'>
			<Overload retVal='void' descr='// 0x6599D834B12D0800
// 0x1BBB2CAC
BRAIN::WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointRecordingGetClosestWaypoint' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB629A298081F876F
// 0xC4CD35AF
BRAIN::WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT(char* name, float x, float y, float z, int* point);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/Tp0XpBMN  

For a full list of the points, see here: goo.gl/wIH0vn  

```'>
				<Param name='char* name' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int* point' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointRecordingGetCoord' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2FB897405C90B361
// 0x19266913
BRAIN::WAYPOINT_RECORDING_GET_COORD(char* name, int point, Vector3* coord);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/Tp0XpBMN  

For a full list of the points, see here: goo.gl/wIH0vn  

```'>
				<Param name='char* name' />
				<Param name='int point' />
				<Param name='Vector3* coord' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointRecordingGetNumPoints' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5343532C01A07234
// 0xF5F9B71E
BRAIN::WAYPOINT_RECORDING_GET_NUM_POINTS(char* name, int* points);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/Tp0XpBMN  

For a full list of the points, see here: goo.gl/wIH0vn  

```'>
				<Param name='char* name' />
				<Param name='int* points' />
			</Overload>
		</KeyWord>
		<KeyWord name='WaypointRecordingGetSpeedAtPoint' func='yes'>
			<Overload retVal='float' descr='// 0x005622AEBC33ACA9
// 0xC765633A
BRAIN::WAYPOINT_RECORDING_GET_SPEED_AT_POINT(char* name, int point);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* name' />
				<Param name='int point' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddCamSplineNode' func='yes'>
			<Overload retVal='void' descr='// 0x8609C75EC438FB3B
// 0xAD3C7EAA
CAM::ADD_CAM_SPLINE_NODE(Cam camera, float x, float y, float z, float xRot, float yRot, float zRot, 
----------------------------------------------------------------------------------------------------
length, int p8, int transitionType);

```

```

I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I se
e no other method. So if a test from anyone proves them wrong please correct.  

p7 (length) determines the length of the spline, affects camera path and duration of transition betw
een previous node and this one  

p8 big values ~100 will slow down the camera movement before reaching this node  

p9 != 0 seems to override the rotation/pitch (bool?)  

```'>
				<Param name='Cam camera' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float xRot' />
				<Param name='float yRot' />
				<Param name='float zRot' />
			</Overload>
		</KeyWord>
		<KeyWord name='AnimatedShakeCam' func='yes'>
			<Overload retVal='void' descr='// 0xA2746EEAE3E577CD
// 0xE1168767
CAM::ANIMATED_SHAKE_CAM(Cam cam, char* p1, char* p2, char* p3, float amplitude);
----------------------------------------------------------------------------------------------------
```

Example from michael2 script.  

CAM::ANIMATED_SHAKE_CAM(l_5069, &quot;shake_cam_all@&quot;, &quot;light&quot;, &quot;&quot;, 1f);  

```'>
				<Param name='Cam cam' />
				<Param name='char* p1' />
				<Param name='char* p2' />
				<Param name='char* p3' />
				<Param name='float amplitude' />
			</Overload>
		</KeyWord>
		<KeyWord name='AnimateGameplayCamZoom' func='yes'>
			<Overload retVal='void' descr='// 0xDF2E1F7742402E81
// 0x77340650
CAM::_ANIMATE_GAMEPLAY_CAM_ZOOM(float p0, float distance);
----------------------------------------------------------------------------------------------------
```

Seems to animate the gameplay camera zoom.  

Eg. _ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1000f);  

will animate the camera zooming in from 1000 meters away.  

Game scripts use it like this:  

// Setting this to 1 prevents V key from changing zoom  

PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);  

// These restrict how far you can move cam up/down left/right  

CAM::_CLAMP_GAMEPLAY_CAM_YAW(-20f, 50f);  

CAM::_CLAMP_GAMEPLAY_CAM_PITCH(-60f, 0f);  

CAM::_ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1f);  

```'>
				<Param name='float p0' />
				<Param name='float distance' />
			</Overload>
		</KeyWord>
		<KeyWord name='AttachCamToEntity' func='yes'>
			<Overload retVal='void' descr='// 0xFEDB7D269E8C60E3
// 0xAD7C45F6
CAM::ATTACH_CAM_TO_ENTITY(Cam cam, Entity entity, float xOffset, float yOffset, float zOffset, BOOL 
----------------------------------------------------------------------------------------------------
lative);

```

```

Last param determines if its relative to the Entity  

```'>
				<Param name='Cam cam' />
				<Param name='Entity entity' />
				<Param name='float xOffset' />
				<Param name='float yOffset' />
				<Param name='float zOffset' />
				<Param name='BOOL ' />
			</Overload>
		</KeyWord>
		<KeyWord name='AttachCamToPedBone' func='yes'>
			<Overload retVal='void' descr='// 0x61A3DBA14AB7F411
// 0x506BB35C
CAM::ATTACH_CAM_TO_PED_BONE(Cam cam, Ped ped, int boneIndex, float x, float y, float z, BOOL heading
----------------------------------------------------------------------------------------------------
```'>
				<Param name='Cam cam' />
				<Param name='Ped ped' />
				<Param name='int boneIndex' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL heading' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClampGameplayCamPitch' func='yes'>
			<Overload retVal='Any' descr='// 0xA516C198B7DCA1E1
// 0xFA3A16E7
CAM::_CLAMP_GAMEPLAY_CAM_PITCH(float minimum, float maximum);
----------------------------------------------------------------------------------------------------
```

minimum: Degrees between -90f and 90f.  

maximum: Degrees between -90f and 90f.  

Clamps the gameplay camera&apos;s current pitch.  

Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.  


```'>
				<Param name='float minimum' />
				<Param name='float maximum' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClampGameplayCamYaw' func='yes'>
			<Overload retVal='Any' descr='// 0x8F993D26E0CA5E8E
// 0x749909AC
CAM::_CLAMP_GAMEPLAY_CAM_YAW(float minimum, float maximum);
----------------------------------------------------------------------------------------------------
```

minimum: Degrees between -180f and 180f.  

maximum: Degrees between -180f and 180f.  

Clamps the gameplay camera&apos;s current yaw.  

Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.  


```'>
				<Param name='float minimum' />
				<Param name='float maximum' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateCam' func='yes'>
			<Overload retVal='Cam' descr='// 0xC3981DCE61D9E13F
// 0xE9BF2A7D
CAM::CREATE_CAM(char* Gippo, BOOL p1);
----------------------------------------------------------------------------------------------------
```

&quot;DEFAULT_SCRIPTED_CAMERA&quot;  

&quot;DEFAULT_ANIMATED_CAMERA&quot;  

&quot;DEFAULT_SPLINE_CAMERA&quot;  

&quot;DEFAULT_SCRIPTED_FLY_CAMERA&quot;  

&quot;TIMED_SPLINE_CAMERA&quot;  

```'>
				<Param name='char* Gippo' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateCamera' func='yes'>
			<Overload retVal='Cam' descr='// 0x5E3CF89C6BCCA67D
// 0x5D6739AE
CAM::CREATE_CAMERA(Hash camHash, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash camHash' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateCameraWithParams' func='yes'>
			<Overload retVal='Cam' descr='// 0x6ABFA3E16460F22D
// 0x0688BE9A
CAM::CREATE_CAMERA_WITH_PARAMS(Hash camHash, float posX, float posY, float posZ, float rotX, float ro
----------------------------------------------------------------------------------------------------
float rotZ, float fov, BOOL p8, Any p9);

```

```

CAM::_GET_GAMEPLAY_CAM_COORDS can be used instead of posX,Y,Z  

CAM::_GET_GAMEPLAY_CAM_ROT can be used instead of rotX,Y,Z  

CAM::_80EC114669DAEFF4() can be used instead of p7 (Possible p7 is FOV parameter. )  

p8 ???  

p9 uses 2 by default  

```'>
				<Param name='Hash camHash' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float rotX' />
				<Param name='float ro' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateCamWithParams' func='yes'>
			<Overload retVal='Cam' descr='// 0xB51194800B257161
// 0x23B02F15
CAM::CREATE_CAM_WITH_PARAMS(char* camName, float posX, float posY, float posZ, float rotX, float rotY
----------------------------------------------------------------------------------------------------
oat rotZ, float fov, BOOL p8, int p9);

```

```

camName is always set to &quot;DEFAULT_SCRIPTED_CAMERA&quot; in Rockstar&apos;s scripts.  

------------  

Camera names found in the b617d scripts:  

&quot;DEFAULT_ANIMATED_CAMERA&quot;  

&quot;DEFAULT_SCRIPTED_CAMERA&quot;  

&quot;DEFAULT_SCRIPTED_FLY_CAMERA&quot;  

&quot;DEFAULT_SPLINE_CAMERA&quot;  

------------  

Side Note: It seems p8 is basically to represent what would be the bool p1 within CREATE_CAM native.
 As well as the p9 since it&apos;s always 2 in scripts seems to represent what would be the last param wi
thin SET_CAM_ROT native which normally would be 2.  

```'>
				<Param name='char* camName' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float rotX' />
				<Param name='float rotY' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateCinematicShot' func='yes'>
			<Overload retVal='void' descr='// 0x741B0129D4560F31
// 0xAC494E35
CAM::CREATE_CINEMATIC_SHOT(Any p0, int p1, Any p2, Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='int p1' />
				<Param name='Any p2' />
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='CustomMenuCoordinates' func='yes'>
			<Overload retVal='void' descr='// 0x487A82C650EB7799
// 0xA6E73135
CAM::CUSTOM_MENU_COORDINATES(float p0);
----------------------------------------------------------------------------------------------------
```

some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with
 the shaking effects once the drunk cheat is disabled.  

```'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='DestroyAllCams' func='yes'>
			<Overload retVal='void' descr='// 0x8E5FB15663F79120
// 0x10C151CE
CAM::DESTROY_ALL_CAMS(BOOL thisScriptCheck);
----------------------------------------------------------------------------------------------------
```

BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.  

```'>
				<Param name='BOOL thisScriptCheck' />
			</Overload>
		</KeyWord>
		<KeyWord name='DestroyCam' func='yes'>
			<Overload retVal='void' descr='// 0x865908C81A2C22E9
// 0xC39302BD
CAM::DESTROY_CAM(Cam cam, BOOL thisScriptCheck);
----------------------------------------------------------------------------------------------------
```

BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.  

```'>
				<Param name='Cam cam' />
				<Param name='BOOL thisScriptCheck' />
			</Overload>
		</KeyWord>
		<KeyWord name='DetachCam' func='yes'>
			<Overload retVal='void' descr='// 0xA2FABBE87F4BAD82
// 0xF4FBF14A
CAM::DETACH_CAM(Cam cam);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableAimCamThisUpdate' func='yes'>
			<Overload retVal='void' descr='// 0x1A31FE0049E542F6
// 0x1BAA7182
CAM::DISABLE_AIM_CAM_THIS_UPDATE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='DisableFirstPersonCamThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xDE2EF5DA284CC8DF
CAM::_DISABLE_FIRST_PERSON_CAM_THIS_FRAME();
----------------------------------------------------------------------------------------------------
```

Disables first person camera for the current frame.  

Found in decompiled scripts:  

GRAPHICS::DRAW_DEBUG_TEXT_2D(&quot;Disabling First Person Cam&quot;, 0.5, 0.8, 0.0, 0, 0, 255, 255);  

CAM::_DE2EF5DA284CC8DF();  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='DisableVehicleFirstPersonCamThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xADFF1B2A555F5FBA
// 0x5AC6DAC9
CAM::_DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='DoesCamExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA7A932170592B50E
// 0x1EF89DC0
CAM::DOES_CAM_EXIST(Cam cam);
----------------------------------------------------------------------------------------------------
```

Returns whether or not the passed camera handle exists.  

```'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoScreenFadeIn' func='yes'>
			<Overload retVal='void' descr='// 0xD4E8E24955024033
// 0x66C1BDEE
CAM::DO_SCREEN_FADE_IN(int duration);
----------------------------------------------------------------------------------------------------
```

Fades the screen in.  

duration: The time the fade should take, in milliseconds.  

```'>
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoScreenFadeOut' func='yes'>
			<Overload retVal='void' descr='// 0x891B5B39AC6302AF
// 0x89D01805
CAM::DO_SCREEN_FADE_OUT(int duration);
----------------------------------------------------------------------------------------------------
```

Fades the screen out.  

duration: The time the fade should take, in milliseconds.  

```'>
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableCrosshairThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xEA7F0AD7E9BA676F
// 0xA61FF9AC
CAM::_ENABLE_CROSSHAIR_THIS_FRAME();
----------------------------------------------------------------------------------------------------
```

Shows the crosshair even if it wouldn&apos;t show normally. Only works for one frame, so make sure to cal
l it repeatedly.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetCamAnimCurrentPhase' func='yes'>
			<Overload retVal='float' descr='// 0xA10B2DB49E92A6B0
// 0x345F72D0
CAM::GET_CAM_ANIM_CURRENT_PHASE(Cam cam);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCamCoord' func='yes'>
			<Overload retVal='Vector3' descr='// 0xBAC038F7459AE5AE
// 0x7C40F09C
CAM::GET_CAM_COORD(Cam cam);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCamFarClip' func='yes'>
			<Overload retVal='float' descr='// 0xB60A9CFEB21CA6AA
// 0x09F119B8
CAM::GET_CAM_FAR_CLIP(Cam cam);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCamFarDof' func='yes'>
			<Overload retVal='float' descr='// 0x255F8DAFD540D397
// 0x98C5CCE9
CAM::GET_CAM_FAR_DOF(Cam cam);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCamFov' func='yes'>
			<Overload retVal='float' descr='// 0xC3330A45CCCDB26A
// 0xD6E9FCF5
CAM::GET_CAM_FOV(Cam cam);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCamNearClip' func='yes'>
			<Overload retVal='float' descr='// 0xC520A34DAFBF24B1
// 0xCFCD35EE
CAM::GET_CAM_NEAR_CLIP(Cam cam);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCamRot' func='yes'>
			<Overload retVal='Vector3' descr='// 0x7D304C1C955E3E12
// 0xDAC84C9F
CAM::GET_CAM_ROT(Cam cam, int rotationOrder);
----------------------------------------------------------------------------------------------------
```

The last parameter, as in other &quot;ROT&quot; methods, is usually 2.  

```'>
				<Param name='Cam cam' />
				<Param name='int rotationOrder' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCamSplineNodeIndex' func='yes'>
			<Overload retVal='int' descr='// 0xB22B17DF858716A6
// 0xF8AEB6BD
CAM::GET_CAM_SPLINE_NODE_INDEX(Cam cam);
----------------------------------------------------------------------------------------------------
```

I named the beginning from Any to BOOL as this native is used in an if statement as well.   

Big surprise it returns an int.  

```'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCamSplineNodePhase' func='yes'>
			<Overload retVal='float' descr='// 0xD9D0E694C8282C96
// 0x7B9522F6
CAM::GET_CAM_SPLINE_NODE_PHASE(Cam cam);
----------------------------------------------------------------------------------------------------
```

I&apos;m pretty sure the parameter is the camera as usual, but I am not certain so I&apos;m going to leave it 
as is.  

```'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCamSplinePhase' func='yes'>
			<Overload retVal='float' descr='// 0xB5349E36C546509A
// 0x39784DD9
CAM::GET_CAM_SPLINE_PHASE(Cam cam);
----------------------------------------------------------------------------------------------------
```

Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.  

(returns 1.0f when no nodes has been added, reached end of non existing spline)  

```'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetFollowPedCamViewMode' func='yes'>
			<Overload retVal='int' descr='// 0x8D4D46230B2C353A
// 0xA65FF946
CAM::GET_FOLLOW_PED_CAM_VIEW_MODE();
----------------------------------------------------------------------------------------------------
```

Returns  

0 - Third Person Close  

1 - Third Person Mid  

2 - Third Person Far  

4 - First Person  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetFollowPedCamZoomLevel' func='yes'>
			<Overload retVal='int' descr='// 0x33E6C8EFD0CD93E9
// 0x57583DF1
CAM::GET_FOLLOW_PED_CAM_ZOOM_LEVEL();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetFollowVehicleCamViewMode' func='yes'>
			<Overload retVal='int' descr='// 0xA4FF579AC0E3AAAE
// 0xA4B4DB03
CAM::GET_FOLLOW_VEHICLE_CAM_VIEW_MODE();
----------------------------------------------------------------------------------------------------
```

Returns the type of camera:  

0 - Third Person Close  

1 - Third Person Mid  

2 - Third Person Far  

4 - First Person  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetFollowVehicleCamZoomLevel' func='yes'>
			<Overload retVal='int' descr='// 0xEE82280AB767B690
// 0x8CD67DE3
CAM::GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameplayCamCoord' func='yes'>
			<Overload retVal='Vector3' descr='// 0x14D6F5678D8F1B37
// 0x9388CF79
CAM::GET_GAMEPLAY_CAM_COORD();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameplayCamCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0xA200EB1EE790F448
// 0x9C84BDA0
CAM::_GET_GAMEPLAY_CAM_COORDS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameplayCamFarClip' func='yes'>
			<Overload retVal='float' descr='// 0xDFC8CBC606FDB0FC
// 0x46CB3A49
CAM::_GET_GAMEPLAY_CAM_FAR_CLIP();
----------------------------------------------------------------------------------------------------
```

Gets the gameplay camera&apos;s far clipping plane.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameplayCamFarDof' func='yes'>
			<Overload retVal='float' descr='// 0x9780F32BCAF72431
// 0xF24777CA
CAM::_GET_GAMEPLAY_CAM_FAR_DOF();
----------------------------------------------------------------------------------------------------
```

Gets the gameplay camera&apos;s far depth of field distance.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameplayCamFov' func='yes'>
			<Overload retVal='float' descr='// 0x65019750A0324133
// 0x4D6B3BFA
CAM::GET_GAMEPLAY_CAM_FOV();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameplayCamNearDof' func='yes'>
			<Overload retVal='float' descr='// 0xA03502FC581F7D9B
// 0x19297A7A
CAM::_GET_GAMEPLAY_CAM_NEAR_DOF();
----------------------------------------------------------------------------------------------------
```

Gets the gameplay camera&apos;s near depth of field distance.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameplayCamRelativeHeading' func='yes'>
			<Overload retVal='float' descr='// 0x743607648ADD4587
// 0xCAF839C2
CAM::GET_GAMEPLAY_CAM_RELATIVE_HEADING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameplayCamRelativePitch' func='yes'>
			<Overload retVal='float' descr='// 0x3A6867B4845BEDA2
// 0xFC5A4946
CAM::GET_GAMEPLAY_CAM_RELATIVE_PITCH();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameplayCamRot' func='yes'>
			<Overload retVal='Vector3' descr='// 0x837765A25378F0BB
// 0x13A010B5
CAM::GET_GAMEPLAY_CAM_ROT(int rotationOrder);
----------------------------------------------------------------------------------------------------
```

p0 dosen&apos;t seem to change much, I tried it with 0, 1, 2:  

0-Pitch(X): -70.000092  

0-Roll(Y): -0.000001  

0-Yaw(Z): -43.886459  

1-Pitch(X): -70.000092  

1-Roll(Y): -0.000001  

1-Yaw(Z): -43.886463  

2-Pitch(X): -70.000092  

2-Roll(Y): -0.000002  

2-Yaw(Z): -43.886467  

```'>
				<Param name='int rotationOrder' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameplayCamRot_2' func='yes'>
			<Overload retVal='Vector3' descr='// 0x5B4E4C817FCC2DFB
// 0x1FFBEFC5
CAM::_GET_GAMEPLAY_CAM_ROT_2(int rotationOrder);
----------------------------------------------------------------------------------------------------
```

p0 seems to consistently be 2 across scripts  

Function is called faily often by CAM::CREATE_CAM_WITH_PARAMS  

```'>
				<Param name='int rotationOrder' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameplayCamZoom' func='yes'>
			<Overload retVal='float' descr='// 0x7EC52CC40597D170
// 0x33951005
CAM::_GET_GAMEPLAY_CAM_ZOOM();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetIsMultiplayerBrief' func='yes'>
			<Overload retVal='void' descr='// 0xE3433EADAAF7EE40
// 0x2F0CE859
CAM::GET_IS_MULTIPLAYER_BRIEF(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Hash collision  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRenderingCam' func='yes'>
			<Overload retVal='Cam' descr='// 0x5234F9F10919EABA
// 0x0FCF4DF1
CAM::GET_RENDERING_CAM();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsAimCamActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x68EDDA28A5976D07
// 0xC24B4F6F
CAM::IS_AIM_CAM_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsCamActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDFB2B516207D3534
// 0x4B58F177
CAM::IS_CAM_ACTIVE(Cam cam);
----------------------------------------------------------------------------------------------------
```

Returns whether or not the passed camera handle is active.  

```'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsCamInterpolating' func='yes'>
			<Overload retVal='BOOL' descr='// 0x036F97C908C2B52C
// 0x7159CB5D
CAM::IS_CAM_INTERPOLATING(Cam cam);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsCamPlayingAnim' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC90621D8A0CEECF2
// 0xB998CB49
CAM::IS_CAM_PLAYING_ANIM(Cam cam, char* animName, char* animDictionary);
----------------------------------------------------------------------------------------------------
```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Cam cam' />
				<Param name='char* animName' />
				<Param name='char* animDictionary' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsCamRendering' func='yes'>
			<Overload retVal='BOOL' descr='// 0x02EC0AF5C5A49B7A
// 0x6EC6B5B2
CAM::IS_CAM_RENDERING(Cam cam);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsCamShaking' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6B24BFE83A2BE47B
// 0x0961FD9B
CAM::IS_CAM_SHAKING(Cam cam);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsCamSplinePaused' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0290F35C0AD97864
// 0x60B34FF5
CAM::IS_CAM_SPLINE_PAUSED(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsCinematicCamRendering' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB15162CB5826E9E8
// 0x80471AD9
CAM::IS_CINEMATIC_CAM_RENDERING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsCinematicCamShaking' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBBC08F6B4CB8FF0A
// 0x8376D939
CAM::IS_CINEMATIC_CAM_SHAKING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsCinematicShotActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCC9F3371A7C28BC9
// 0xA4049042
CAM::IS_CINEMATIC_SHOT_ACTIVE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsFirstPersonAimCamActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5E346D934122613F
// 0xD6280468
CAM::IS_FIRST_PERSON_AIM_CAM_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsFollowPedCamActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC6D3D26810C8E0F9
// 0x9F9E856C
CAM::IS_FOLLOW_PED_CAM_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsFollowVehicleCamActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCBBDE6D335D6D496
// 0x8DD49B77
CAM::IS_FOLLOW_VEHICLE_CAM_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsGameplayCamLookingBehind' func='yes'>
			<Overload retVal='BOOL' descr='// 0x70FDA869F3317EA9
// 0x33C83F17
CAM::IS_GAMEPLAY_CAM_LOOKING_BEHIND();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsGameplayCamRendering' func='yes'>
			<Overload retVal='BOOL' descr='// 0x39B5D1B10383F0C8
// 0x0EF276DA
CAM::IS_GAMEPLAY_CAM_RENDERING();
----------------------------------------------------------------------------------------------------
```

Examples when this function will return 0 are:  

- During busted screen.  

- When player is coming out from a hospital.  

- When player is coming out from a police station.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsGameplayCamShaking' func='yes'>
			<Overload retVal='BOOL' descr='// 0x016C090630DF1F89
// 0x3457D681
CAM::IS_GAMEPLAY_CAM_SHAKING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsGameplayHintActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE520FF1AD2785B40
// 0xAD8DA205
CAM::IS_GAMEPLAY_HINT_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsInVehicleCamDisabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4F32C0D5A90A9B40
CAM::_IS_IN_VEHICLE_CAM_DISABLED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsScreenFadedIn' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5A859503B0C08678
// 0x4F37276D
CAM::IS_SCREEN_FADED_IN();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsScreenFadedOut' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB16FCE9DDC7BA182
// 0x9CAA05FA
CAM::IS_SCREEN_FADED_OUT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsScreenFadingIn' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5C544BC6C57AC575
// 0xC7C82800
CAM::IS_SCREEN_FADING_IN();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsScreenFadingOut' func='yes'>
			<Overload retVal='BOOL' descr='// 0x797AC7CB535BA28F
// 0x79275A57
CAM::IS_SCREEN_FADING_OUT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsScriptGlobalShaking' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC912AF078AF19212
// 0x6AEFE6A5
CAM::IS_SCRIPT_GLOBAL_SHAKING();
----------------------------------------------------------------------------------------------------
```

In drunk_controller.c4, sub_309  

if (CAM::_C912AF078AF19212()) {  

    CAM::_1C9D7949FA533490(0);  

}  

What does &quot;IS_SCRIPT_GLOBAL_SHAKING&quot; mean..? :/ Is this a hash collision?  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsSphereVisible' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE33D59DA70B58FDF
// 0xDD1329E2
CAM::IS_SPHERE_VISIBLE(float x, float y, float z, float radius);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0225778816fdc28c' func='yes'>
			<Overload retVal='void' descr='// 0x0225778816FDC28C
// 0x1126E37C
CAM::_0x0225778816FDC28C(float p0);
----------------------------------------------------------------------------------------------------
```

some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) alo
ng with the shaking effects once the drunk cheat is disabled. Possibly a cinematic or script-cam ver
sion of _0x487A82C650EB7799  

```'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0a9f2a468b328e74' func='yes'>
			<Overload retVal='void' descr='// 0x0A9F2A468B328E74
// 0x30510511
CAM::_0x0A9F2A468B328E74(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0aa27680a0bd43fa' func='yes'>
			<Overload retVal='void' descr='// 0x0AA27680A0BD43FA
CAM::_0x0AA27680A0BD43FA();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0fb82563989cf4fb' func='yes'>
			<Overload retVal='void' descr='// 0x0FB82563989CF4FB
// 0xBA6C085B
CAM::_0x0FB82563989CF4FB(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x11fa5d3479c7dd47' func='yes'>
			<Overload retVal='void' descr='// 0x11FA5D3479C7DD47
CAM::_0x11FA5D3479C7DD47(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x12ded8ca53d47ea5' func='yes'>
			<Overload retVal='void' descr='// 0x12DED8CA53D47EA5
// 0x067BA6F5
CAM::_0x12DED8CA53D47EA5(float p0);
----------------------------------------------------------------------------------------------------
```

Hardcoded to only work in multiplayer.  

```'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x162f9d995753dc19' func='yes'>
			<Overload retVal='float' descr='// 0x162F9D995753DC19
// 0x38992E83
CAM::_0x162F9D995753DC19();
----------------------------------------------------------------------------------------------------
```

gets some camera far clip  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x17fca7199a530203' func='yes'>
			<Overload retVal='Any' descr='// 0x17FCA7199A530203
CAM::_0x17FCA7199A530203();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x19cafa3c87f7c2ff' func='yes'>
			<Overload retVal='Any' descr='// 0x19CAFA3C87F7C2FF
CAM::_0x19CAFA3C87F7C2FF();
----------------------------------------------------------------------------------------------------
```

Seems to return the current type of view  

example: // checks if you&apos;re currently in first person  

if ((CAM::_EE778F8C7E1142E2(CAM::_19CAFA3C87F7C2FF()) == 4) && (!__463_$28ED382849B17AFC())) {  

    UI::_FDEC055AB549E328();  

    UI::_SET_NOTIFICATION_TEXT_ENTRY(&quot;REC_FEED_WAR&quot;);  

    l_CE[0/*1*/] = UI::_DRAW_NOTIFICATION(0, 1);  

}  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1f2300cb7fa7b7f6' func='yes'>
			<Overload retVal='Any' descr='// 0x1F2300CB7FA7B7F6
// 0x6739AD55
CAM::_0x1F2300CB7FA7B7F6();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x21e253a7f8da5dfb' func='yes'>
			<Overload retVal='void' descr='// 0x21E253A7F8DA5DFB
CAM::_0x21E253A7F8DA5DFB(char* vehicleName);
----------------------------------------------------------------------------------------------------
```

From b617 scripts:  

CAM::_21E253A7F8DA5DFB(&quot;DINGHY&quot;);  

CAM::_21E253A7F8DA5DFB(&quot;ISSI2&quot;);  

CAM::_21E253A7F8DA5DFB(&quot;SPEEDO&quot;);  

```'>
				<Param name='char* vehicleName' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x247acbc4abbc9d1c' func='yes'>
			<Overload retVal='void' descr='// 0x247ACBC4ABBC9D1C
CAM::_0x247ACBC4ABBC9D1C(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x26903d9cd1175f2c' func='yes'>
			<Overload retVal='int' descr='// 0x26903D9CD1175F2C
// 0xACADF916
CAM::_0x26903D9CD1175F2C(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x271017b9ba825366' func='yes'>
			<Overload retVal='void' descr='// 0x271017B9BA825366
// 0x43220969
CAM::_0x271017B9BA825366(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x271401846bd26e92' func='yes'>
			<Overload retVal='void' descr='// 0x271401846BD26E92
// 0x8DC53629
CAM::_0x271401846BD26E92(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2a2173e46daecd12' func='yes'>
			<Overload retVal='void' descr='// 0x2A2173E46DAECD12
// 0x1DEBCB45
CAM::_0x2A2173E46DAECD12(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2aed6301f67007d5' func='yes'>
			<Overload retVal='void' descr='// 0x2AED6301F67007D5
// 0x2701A9AD
CAM::_0x2AED6301F67007D5(Entity entity);
----------------------------------------------------------------------------------------------------
```

if (ENTITY::DOES_ENTITY_EXIST(l_228)) {  

CAM::_2AED6301F67007D5(l_228);  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2f7f2b26dd3f18ee' func='yes'>
			<Overload retVal='void' descr='// 0x2F7F2B26DD3F18EE
// 0x2F29F0D5
CAM::_0x2F7F2B26DD3F18EE(float p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3044240d2e0fa842' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3044240D2E0FA842
// 0xC0B00C20
CAM::_0x3044240D2E0FA842();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4008edf7d6e48175' func='yes'>
			<Overload retVal='void' descr='// 0x4008EDF7D6E48175
// 0xD1EEBC45
CAM::_0x4008EDF7D6E48175(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x469f2ecdec046337' func='yes'>
			<Overload retVal='void' descr='// 0x469F2ECDEC046337
CAM::_0x469F2ECDEC046337(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x47b595d60664cffa' func='yes'>
			<Overload retVal='void' descr='// 0x47B595D60664CFFA
CAM::_0x47B595D60664CFFA(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x48608c3464f58ab4' func='yes'>
			<Overload retVal='void' descr='// 0x48608C3464F58AB4
CAM::_0x48608C3464F58AB4(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4879e4fe39074cdf' func='yes'>
			<Overload retVal='Any' descr='// 0x4879E4FE39074CDF
CAM::_0x4879E4FE39074CDF();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x49482f9fcd825aaa' func='yes'>
			<Overload retVal='void' descr='// 0x49482F9FCD825AAA
// 0xC4736ED3
CAM::_0x49482F9FCD825AAA(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x503f5920162365b2' func='yes'>
			<Overload retVal='void' descr='// 0x503F5920162365B2
// 0x56F9ED27
CAM::_0x503F5920162365B2(Any p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x59424bd75174c9b1' func='yes'>
			<Overload retVal='void' descr='// 0x59424BD75174C9B1
CAM::_0x59424BD75174C9B1();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5a43c76f7fc7ba5f' func='yes'>
			<Overload retVal='void' descr='// 0x5A43C76F7FC7BA5F
// 0xE206C450
CAM::_0x5A43C76F7FC7BA5F();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5c41e6babc9e2112' func='yes'>
			<Overload retVal='void' descr='// 0x5C41E6BABC9E2112
CAM::_0x5C41E6BABC9E2112(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5c48a1d6e3b33179' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5C48A1D6E3B33179
// 0xDA931D65
CAM::_0x5C48A1D6E3B33179(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5d7b620dae436138' func='yes'>
			<Overload retVal='void' descr='// 0x5D7B620DAE436138
// 0xFC7464A0
CAM::_0x5D7B620DAE436138(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5f35f6732c3fbba0' func='yes'>
			<Overload retVal='float' descr='// 0x5F35F6732C3FBBA0
// 0x23E3F106
CAM::_0x5F35F6732C3FBBA0(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x609278246a29ca34' func='yes'>
			<Overload retVal='void' descr='// 0x609278246A29CA34
// 0xB4737F03
CAM::_0x609278246A29CA34(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x62374889a4d59f72' func='yes'>
			<Overload retVal='void' descr='// 0x62374889A4D59F72
CAM::_0x62374889A4D59F72();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x62ecfcfdee7885d6' func='yes'>
			<Overload retVal='void' descr='// 0x62ECFCFDEE7885D6
// 0x837F8581
CAM::_0x62ECFCFDEE7885D6();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6493cf69859b116a' func='yes'>
			<Overload retVal='void' descr='// 0x6493CF69859B116A
CAM::_0x6493CF69859B116A();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x661b5c8654add825' func='yes'>
			<Overload retVal='void' descr='// 0x661B5C8654ADD825
// 0xE1A0B2F1
CAM::_0x661B5C8654ADD825(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x705a276ebff3133d' func='yes'>
			<Overload retVal='BOOL' descr='// 0x705A276EBFF3133D
// 0x60C23785
CAM::_0x705A276EBFF3133D();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x70894bd0915c5bca' func='yes'>
			<Overload retVal='Any' descr='// 0x70894BD0915C5BCA
// 0x9F4AF763
CAM::_0x70894BD0915C5BCA(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x74bd83ea840f6bc9' func='yes'>
			<Overload retVal='BOOL' descr='// 0x74BD83EA840F6BC9
// 0x8F320DE4
CAM::_0x74BD83EA840F6BC9();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7b8a361c1813fbef' func='yes'>
			<Overload retVal='void' descr='// 0x7B8A361C1813FBEF
CAM::_0x7B8A361C1813FBEF();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7bf1a54ae67ac070' func='yes'>
			<Overload retVal='void' descr='// 0x7BF1A54AE67AC070
// 0xC90B2DDC
CAM::_0x7BF1A54AE67AC070(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x80ec114669daeff4' func='yes'>
			<Overload retVal='float' descr='// 0x80EC114669DAEFF4
// 0x721B763B
CAM::_0x80EC114669DAEFF4();
----------------------------------------------------------------------------------------------------
```

gets some camera fov  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x83b8201ed82a9a2d' func='yes'>
			<Overload retVal='void' descr='// 0x83B8201ED82A9A2D
// 0x21D275DA
CAM::_0x83B8201ED82A9A2D(Any p0, Any p1, Any p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x89215ec747df244a' func='yes'>
			<Overload retVal='Entity' descr='// 0x89215EC747DF244A
// 0xFD99BE2B
CAM::_0x89215EC747DF244A(float p0, int p1, float p2, float p3, float p4, float p5, float p6, int p
----------------------------------------------------------------------------------------------------
nt p8);

```'>
				<Param name='float p0' />
				<Param name='int p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
				<Param name='int p' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8bbacbf51da047a8' func='yes'>
			<Overload retVal='void' descr='// 0x8BBACBF51DA047A8
// 0x7D3007A2
CAM::_0x8BBACBF51DA047A8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8bfceb5ea1b161b6' func='yes'>
			<Overload retVal='Any' descr='// 0x8BFCEB5EA1B161B6
CAM::_0x8BFCEB5EA1B161B6();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x91ef6ee6419e5b97' func='yes'>
			<Overload retVal='void' descr='// 0x91EF6EE6419E5B97
// 0x9DB5D391
CAM::_0x91EF6EE6419E5B97(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9e4cfff989258472' func='yes'>
			<Overload retVal='void' descr='// 0x9E4CFFF989258472
// 0x65DDE8AF
CAM::_0x9E4CFFF989258472();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa2767257a320fc82' func='yes'>
			<Overload retVal='void' descr='// 0xA2767257A320FC82
CAM::_0xA2767257A320FC82(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa41bcd7213805aac' func='yes'>
			<Overload retVal='void' descr='// 0xA41BCD7213805AAC
// 0xFBB85E02
CAM::_0xA41BCD7213805AAC(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa6385deb180f319f' func='yes'>
			<Overload retVal='void' descr='// 0xA6385DEB180F319F
// 0xA3BD9E94
CAM::_0xA6385DEB180F319F(Any p0, Any p1, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbf72910d0f26f025' func='yes'>
			<Overload retVal='Any' descr='// 0xBF72910D0F26F025
CAM::_0xBF72910D0F26F025();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc2eae3fb8cdbed31' func='yes'>
			<Overload retVal='void' descr='// 0xC2EAE3FB8CDBED31
// 0xCB75BD9C
CAM::_0xC2EAE3FB8CDBED31(char* p0, char* p1, char* p2, float p3);
----------------------------------------------------------------------------------------------------
```

CAM::_C2EAE3FB8CDBED31(&quot;SHAKE_CAM_medium&quot;, &quot;medium&quot;, &quot;&quot;, 0.5f);  

```'>
				<Param name='char* p0' />
				<Param name='char* p1' />
				<Param name='char* p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc8391c309684595a' func='yes'>
			<Overload retVal='void' descr='// 0xC8391C309684595A
// 0x1F9DE6E4
CAM::_0xC8391C309684595A();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc8b5c4a79cc18b94' func='yes'>
			<Overload retVal='void' descr='// 0xC8B5C4A79CC18B94
// 0x44473EFC
CAM::_0xC8B5C4A79CC18B94(Cam p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc91c6c55199308ca' func='yes'>
			<Overload retVal='void' descr='// 0xC91C6C55199308CA
// 0x60B345DE
CAM::_0xC91C6C55199308CA(Any p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc92717ef615b6704' func='yes'>
			<Overload retVal='void' descr='// 0xC92717EF615B6704
// 0x3554AA0E
CAM::_0xC92717EF615B6704(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xca9d2aa3e326d720' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCA9D2AA3E326D720
// 0x96A07066
CAM::_0xCA9D2AA3E326D720();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xccd078c2665d2973' func='yes'>
			<Overload retVal='void' descr='// 0xCCD078C2665D2973
// 0xCAFEE798
CAM::_0xCCD078C2665D2973(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xced08cbe8ebb97c7' func='yes'>
			<Overload retVal='void' descr='// 0xCED08CBE8EBB97C7
// 0x68BA0730
CAM::_0xCED08CBE8EBB97C7(float p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd0082607100d7193' func='yes'>
			<Overload retVal='float' descr='// 0xD0082607100D7193
// 0x457AE195
CAM::_0xD0082607100D7193();
----------------------------------------------------------------------------------------------------
```

Maybe gets gameplay cam near clip?  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd1b0f412f109ea5d' func='yes'>
			<Overload retVal='void' descr='// 0xD1B0F412F109EA5D
// 0x15E141CE
CAM::_0xD1B0F412F109EA5D(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd1f8363dfad03848' func='yes'>
			<Overload retVal='void' descr='// 0xD1F8363DFAD03848
// 0x79472AE3
CAM::_0xD1F8363DFAD03848(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd7360051c885628b' func='yes'>
			<Overload retVal='Any' descr='// 0xD7360051C885628B
CAM::_0xD7360051C885628B();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdb90c6cca48940f1' func='yes'>
			<Overload retVal='void' descr='// 0xDB90C6CCA48940F1
// 0x20BFF6E5
CAM::_0xDB90C6CCA48940F1(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdc9da9e8789f5246' func='yes'>
			<Overload retVal='void' descr='// 0xDC9DA9E8789F5246
// 0x4938C82F
CAM::_0xDC9DA9E8789F5246();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdd79df9f4d26e1c9' func='yes'>
			<Overload retVal='void' descr='// 0xDD79DF9F4D26E1C9
// 0x6B0E9D57
CAM::_0xDD79DF9F4D26E1C9();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe111a7c0d200cbc5' func='yes'>
			<Overload retVal='void' descr='// 0xE111A7C0D200CBC5
CAM::_0xE111A7C0D200CBC5(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe827b9382cfb41ba' func='yes'>
			<Overload retVal='void' descr='// 0xE827B9382CFB41BA
CAM::_0xE827B9382CFB41BA(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe9ea16d6e54cdca4' func='yes'>
			<Overload retVal='Any' descr='// 0xE9EA16D6E54CDCA4
// 0x4B22C5CB
CAM::_0xE9EA16D6E54CDCA4(Vehicle p0, int p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle p0' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xeaf0fa793d05c592' func='yes'>
			<Overload retVal='Any' descr='// 0xEAF0FA793D05C592
CAM::_0xEAF0FA793D05C592();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xee778f8c7e1142e2' func='yes'>
			<Overload retVal='Any' descr='// 0xEE778F8C7E1142E2
// 0xF3B148A6
CAM::_0xEE778F8C7E1142E2(Any p0);
----------------------------------------------------------------------------------------------------
```

interprets the result of CAM::_0x19CAFA3C87F7C2FF()  

example: // checks if you&apos;re currently in first person  

if ((CAM::_EE778F8C7E1142E2(CAM::_19CAFA3C87F7C2FF()) == 4) && (!__463_$28ED382849B17AFC())) {  

UI::_FDEC055AB549E328();  

UI::_SET_NOTIFICATION_TEXT_ENTRY(&quot;REC_FEED_WAR&quot;);  

l_CE[0/*1*/] = UI::_DRAW_NOTIFICATION(0, 1);  

}  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf4c8cf9e353afeca' func='yes'>
			<Overload retVal='void' descr='// 0xF4C8CF9E353AFECA
// 0x2B0F05CD
CAM::_0xF4C8CF9E353AFECA(char* p0, float p1);
----------------------------------------------------------------------------------------------------
```

Something to do with shake:  

CAM::_F4C8CF9E353AFECA(&quot;HAND_SHAKE&quot;, 0.2);  

```'>
				<Param name='char* p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf4f2c0d4ee209e20' func='yes'>
			<Overload retVal='void' descr='// 0xF4F2C0D4EE209E20
// 0xD75CDD75
CAM::_0xF4F2C0D4EE209E20();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf55e4046f6f831dc' func='yes'>
			<Overload retVal='void' descr='// 0xF55E4046F6F831DC
CAM::_0xF55E4046F6F831DC(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf8bdbf3d573049a1' func='yes'>
			<Overload retVal='void' descr='// 0xF8BDBF3D573049A1
// 0x72E8CD3A
CAM::_0xF8BDBF3D573049A1(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfd3151cd37ea2245' func='yes'>
			<Overload retVal='void' descr='// 0xFD3151CD37EA2245
CAM::_0xFD3151CD37EA2245(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='OverrideCamSplineMotionBlur' func='yes'>
			<Overload retVal='void' descr='// 0x7DCF7C708D292D55
// 0x633179E6
CAM::OVERRIDE_CAM_SPLINE_MOTION_BLUR(Cam cam, int p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
```

Max value for p1 is 15.  

```'>
				<Param name='Cam cam' />
				<Param name='int p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='OverrideCamSplineVelocity' func='yes'>
			<Overload retVal='void' descr='// 0x40B62FA033EB0346
// 0x326A17E2
CAM::OVERRIDE_CAM_SPLINE_VELOCITY(Cam cam, int p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='int p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayCamAnim' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9A2D0FB2E7852392
// 0xBCEFB87E
CAM::PLAY_CAM_ANIM(Cam cam, char* animName, char* animDictionary, float x, float y, float z, float x
----------------------------------------------------------------------------------------------------
float yRot, float zRot, BOOL p9, int p10);

```

```

Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the paramete
r.  

p9 is unknown at this time.  

p10 throughout all the X360 Scripts is always 2.  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Cam cam' />
				<Param name='char* animName' />
				<Param name='char* animDictionary' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float x' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaySynchronizedCamAnim' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE32EFE9AB4A9AA0C
// 0x9458459E
CAM::PLAY_SYNCHRONIZED_CAM_ANIM(Any p0, Any p1, char* animName, char* animDictionary);
----------------------------------------------------------------------------------------------------
```

Examples:  

CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::_02C40BF885C567B6(l_2739), &quot;PLAYER_EXIT_L_CAM&quot;, &quot;mp
_doorbell&quot;);  

CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7/*1*/], l_F4D[15/*1*/], &quot;ah3b_attackheli_cam2&quot;, &quot;missheistfbi
3b_helicrash&quot;);  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='char* animName' />
				<Param name='char* animDictionary' />
			</Overload>
		</KeyWord>
		<KeyWord name='PointCamAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0xF75497BB865F0803
// 0x914BC21A
CAM::POINT_CAM_AT_COORD(Cam cam, float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='PointCamAtEntity' func='yes'>
			<Overload retVal='void' descr='// 0x5640BFF86B16E8DC
// 0x7597A0F7
CAM::POINT_CAM_AT_ENTITY(Cam cam, Entity entity, float p2, float p3, float p4, BOOL p5);
----------------------------------------------------------------------------------------------------
```

p5 always seems to be 1 i.e TRUE  

```'>
				<Param name='Cam cam' />
				<Param name='Entity entity' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='PointCamAtPedBone' func='yes'>
			<Overload retVal='void' descr='// 0x68B2B5F33BA63C41
// 0x09F47049
CAM::POINT_CAM_AT_PED_BONE(Cam cam, int ped, int boneIndex, float x, float y, float z, BOOL p6);
----------------------------------------------------------------------------------------------------
```

Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it&apos;s always 1.
 Please correct p0-p5 if any prove to be wrong.  

```'>
				<Param name='Cam cam' />
				<Param name='int ped' />
				<Param name='int boneIndex' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='RenderFirstPersonCam' func='yes'>
			<Overload retVal='void' descr='// 0xC819F3CBB62BF692
// 0xD3C08183
CAM::_RENDER_FIRST_PERSON_CAM(BOOL render, float p1, int p2);
----------------------------------------------------------------------------------------------------
```

This native makes the gameplay camera zoom into first person/third person with a special effect.  

For example, if you were first person in a mission and after the cutscene ends, the camera would the
n zoom into the first person camera view.  

if (CAM::GET_FOLLOW_PED_CAM_VIEW_MODE() != 4)  

           CAM::_C819F3CBB62BF692(1, 0, 3, 0)  

This makes the camera zoom in to first person.  

--------------------------------------------  

1st Param Options: 0 or 1 (Changes quit often, toggle?)  

2nd Param Options: 0, 0f, 1f, 3.8f, 10f, 20f (Mostly 0)   

3rd Param Options: 3, 2, 1 (Mostly 3);  

Note for the 2nd param 10f (offroad_race.c) and 3rd param 20f (range_modern.c) are the only times th
ose 2 high floats are called.  

Note for the 3rd param 2 is only ever set in (franklin0.c), but it also sets it as 3. (0, 0, 3) ||(0
, 0f, 2) || (0, 0, 3)  

```'>
				<Param name='BOOL render' />
				<Param name='float p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='RenderScriptCams' func='yes'>
			<Overload retVal='void' descr='// 0x07E5B515DB0636FC
// 0x74337969
CAM::RENDER_SCRIPT_CAMS(BOOL render, BOOL ease, int easeTime, BOOL p3, BOOL p4);
----------------------------------------------------------------------------------------------------
```

ease - smooth transition between the camera&apos;s positions  

easeTime - Time in milliseconds for the transition to happen  

If you have created a script (rendering) camera, and want to go back to the   

character (gameplay) camera, call this native with render set to 0.  

Setting ease to 1 will smooth the transition.  

```'>
				<Param name='BOOL render' />
				<Param name='BOOL ease' />
				<Param name='int easeTime' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamActive' func='yes'>
			<Overload retVal='void' descr='// 0x026FB97D0A425F84
// 0x064659C2
CAM::SET_CAM_ACTIVE(Cam cam, BOOL active);
----------------------------------------------------------------------------------------------------
```

Set camera as active/inactive.  

```'>
				<Param name='Cam cam' />
				<Param name='BOOL active' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamActiveWithInterp' func='yes'>
			<Overload retVal='void' descr='// 0x9FBDA379383A52A4
// 0x7983E7F0
CAM::SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, int easeLocation, int easeRota
----------------------------------------------------------------------------------------------------
);

```

```

Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL ease
Location, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...  

```'>
				<Param name='Cam camTo' />
				<Param name='Cam camFrom' />
				<Param name='int duration' />
				<Param name='int easeLocation' />
				<Param name='int easeRota' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamAffectsAiming' func='yes'>
			<Overload retVal='void' descr='// 0x8C1DC7770C51DC8D
// 0x0C74F9AF
CAM::SET_CAM_AFFECTS_AIMING(Cam cam, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Allows you to aim and shoot at the direction the camera is facing.  

```'>
				<Param name='Cam cam' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamAnimCurrentPhase' func='yes'>
			<Overload retVal='void' descr='// 0x4145A4C44FF3B5A6
// 0x3CB1D17F
CAM::SET_CAM_ANIM_CURRENT_PHASE(Cam cam, float phase);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float phase' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamCoord' func='yes'>
			<Overload retVal='void' descr='// 0x4D41783FB745E42E
// 0x7A8053AF
CAM::SET_CAM_COORD(Cam cam, float posX, float posY, float posZ);
----------------------------------------------------------------------------------------------------
```

Sets the position of the cam.  

```'>
				<Param name='Cam cam' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamDebugName' func='yes'>
			<Overload retVal='void' descr='// 0x1B93E0107865DD40
// 0x9B00DF3F
CAM::SET_CAM_DEBUG_NAME(Cam camera, char* name);
----------------------------------------------------------------------------------------------------
```

NOTE: Debugging functions are not present in the retail version of the game.  

```'>
				<Param name='Cam camera' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamDofFnumberOfLens' func='yes'>
			<Overload retVal='void' descr='// 0x7DD234D6F3914C5B
CAM::_SET_CAM_DOF_FNUMBER_OF_LENS(Cam camera, float p1);
----------------------------------------------------------------------------------------------------
```

This native has its name defined inside its codE  

```'>
				<Param name='Cam camera' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamDofFocusDistanceBias' func='yes'>
			<Overload retVal='void' descr='// 0xC669EEA5D031B7DE
CAM::_SET_CAM_DOF_FOCUS_DISTANCE_BIAS(Cam camera, float p1);
----------------------------------------------------------------------------------------------------
```

This native has a name defined inside its code  

```'>
				<Param name='Cam camera' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamDofMaxNearInFocusDistance' func='yes'>
			<Overload retVal='void' descr='// 0xC3654A441402562D
CAM::_SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE(Cam camera, float p1);
----------------------------------------------------------------------------------------------------
```

This native has a name defined inside its code  

```'>
				<Param name='Cam camera' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamDofMaxNearInFocusDistanceBlendLevel' func='yes'>
			<Overload retVal='void' descr='// 0x2C654B4943BDDF7C
CAM::_SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL(Cam camera, float p1);
----------------------------------------------------------------------------------------------------
```

This native has a name defined inside its code  

```'>
				<Param name='Cam camera' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamDofPlanes' func='yes'>
			<Overload retVal='void' descr='// 0x3CF48F6F96E749DC
// 0xAD6C2B8F
CAM::SET_CAM_DOF_PLANES(Cam cam, float p1, float p2, float p3, float p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamDofStrength' func='yes'>
			<Overload retVal='void' descr='// 0x5EE29B4D7D5DF897
// 0x3CC4EB3F
CAM::SET_CAM_DOF_STRENGTH(Cam cam, float dofStrength);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float dofStrength' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamEffect' func='yes'>
			<Overload retVal='void' descr='// 0x80C8B1846639BB19
// 0xB06CCD38
CAM::_SET_CAM_EFFECT(int p0);
----------------------------------------------------------------------------------------------------
```

if p0 is 0, effect is cancelled  

if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion bl
ur is active until cancelled.  

if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gra
dually tilts cam back to normal. The wobbling will continue until the effect is cancelled.  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCameraRange' func='yes'>
			<Overload retVal='void' descr='// 0xF9D02130ECDD1D77
// 0x71570DBA
CAM::_SET_CAMERA_RANGE(Cam cam, float range);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float range' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamFarClip' func='yes'>
			<Overload retVal='void' descr='// 0xAE306F2A904BF86E
// 0x0D23E381
CAM::SET_CAM_FAR_CLIP(Cam cam, float farClip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float farClip' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamFarDof' func='yes'>
			<Overload retVal='void' descr='// 0xEDD91296CD01AEE0
// 0x58515E8E
CAM::SET_CAM_FAR_DOF(Cam cam, float farDOF);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float farDOF' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamFov' func='yes'>
			<Overload retVal='void' descr='// 0xB13C14F66A00D047
// 0xD3D5D74F
CAM::SET_CAM_FOV(Cam cam, float fieldOfView);
----------------------------------------------------------------------------------------------------
```

Sets the field of view of the cam.  

---------------------------------------------  

Min: 1.0f  

Max: 130.0f  

```'>
				<Param name='Cam cam' />
				<Param name='float fieldOfView' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamInheritRollVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x45F1DE9C34B93AE6
// 0xE4BD5342
CAM::SET_CAM_INHERIT_ROLL_VEHICLE(Cam cam, BOOL p1);
----------------------------------------------------------------------------------------------------
```

The native seems to only be called once.  

The native is used as so,  

CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));  

In the exile1 script.  

```'>
				<Param name='Cam cam' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamMotionBlurStrength' func='yes'>
			<Overload retVal='void' descr='// 0x6F0F77FBA9A8F2E6
// 0xFD6E0D67
CAM::SET_CAM_MOTION_BLUR_STRENGTH(Cam cam, float strength);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float strength' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamNearClip' func='yes'>
			<Overload retVal='void' descr='// 0xC7848EFCCC545182
// 0x46DB13B1
CAM::SET_CAM_NEAR_CLIP(Cam cam, float nearClip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float nearClip' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamNearDof' func='yes'>
			<Overload retVal='void' descr='// 0x3FA4BF0A7AB7DE2C
// 0xF28254DF
CAM::SET_CAM_NEAR_DOF(Cam cam, float nearDOF);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float nearDOF' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamParams' func='yes'>
			<Overload retVal='void' descr='// 0xBFD8727AEA3CCEBA
// 0x2167CEBF
CAM::SET_CAM_PARAMS(Cam cam, float posX, float posY, float posZ, float rotX, float rotY, float rotZ,
----------------------------------------------------------------------------------------------------
at fieldOfView, Any p8, int p9, int p10, int p11);

```'>
				<Param name='Cam cam' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float rotX' />
				<Param name='float rotY' />
				<Param name='float rotZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamRot' func='yes'>
			<Overload retVal='void' descr='// 0x85973643155D0B07
// 0xEE38B3C1
CAM::SET_CAM_ROT(Cam cam, float rotX, float rotY, float rotZ, int rotationOrder);
----------------------------------------------------------------------------------------------------
```

Sets the rotation of the cam.  

Last parameter unknown.  

Last parameter seems to always be set to 2.  

```'>
				<Param name='Cam cam' />
				<Param name='float rotX' />
				<Param name='float rotY' />
				<Param name='float rotZ' />
				<Param name='int rotationOrder' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamShakeAmplitude' func='yes'>
			<Overload retVal='void' descr='// 0xD93DB43B82BC0D00
// 0x60FF6382
CAM::SET_CAM_SHAKE_AMPLITUDE(Cam cam, float amplitude);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float amplitude' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamSplineDuration' func='yes'>
			<Overload retVal='void' descr='// 0x1381539FEE034CDA
// 0x3E91FC8A
CAM::SET_CAM_SPLINE_DURATION(int cam, int timeDuration);
----------------------------------------------------------------------------------------------------
```

I named p1 as timeDuration as it is obvious. I&apos;m assuming tho it is ran in ms(Milliseconds) as usual
.  

```'>
				<Param name='int cam' />
				<Param name='int timeDuration' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamSplinePhase' func='yes'>
			<Overload retVal='void' descr='// 0x242B5874F0A4E052
// 0xF0AED233
CAM::SET_CAM_SPLINE_PHASE(Cam cam, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCamUseShallowDofMode' func='yes'>
			<Overload retVal='void' descr='// 0x16A96863A17552BB
// 0x8306C256
CAM::SET_CAM_USE_SHALLOW_DOF_MODE(Cam cam, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCinematicButtonActive' func='yes'>
			<Overload retVal='void' descr='// 0x51669F7D1FB53D9F
// 0x3FBC5D00
CAM::SET_CINEMATIC_BUTTON_ACTIVE(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCinematicCamShakeAmplitude' func='yes'>
			<Overload retVal='void' descr='// 0xC724C701C30B2FE7
// 0x67510C4B
CAM::SET_CINEMATIC_CAM_SHAKE_AMPLITUDE(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCinematicModeActive' func='yes'>
			<Overload retVal='void' descr='// 0xDCF0754AC3D6FD4E
// 0x2009E747
CAM::SET_CINEMATIC_MODE_ACTIVE(BOOL p0);
----------------------------------------------------------------------------------------------------
```

p0 = 0/1 or true/false  

It doesn&apos;t seems to work  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFirstPersonCamNearClip' func='yes'>
			<Overload retVal='void' descr='// 0x0AF7B437918103B3
// 0x0E21069D
CAM::_SET_FIRST_PERSON_CAM_NEAR_CLIP(float distance);
----------------------------------------------------------------------------------------------------
```

Sets the near clipping plane of the first person camera.  

```'>
				<Param name='float distance' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFirstPersonCamPitchRange' func='yes'>
			<Overload retVal='void' descr='// 0xBCFC632DB7673BF0
// 0x76DAC96C
CAM::_SET_FIRST_PERSON_CAM_PITCH_RANGE(float minAngle, float maxAngle);
----------------------------------------------------------------------------------------------------
```

Similar to _CLAMP_GAMEPLAY_CAM_PITCH except this is specifically for the FP camera, and it only lets
 you clamp the pitch within the normal range.  

```'>
				<Param name='float minAngle' />
				<Param name='float maxAngle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFollowPedCamCutsceneChat' func='yes'>
			<Overload retVal='BOOL' descr='// 0x44A113DD6FFC48D1
// 0x1425F6AC
CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(char* p0, int p1);
----------------------------------------------------------------------------------------------------
```

From the b617d scripts:  

CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(&quot;FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA&quot;, 0);  

 CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(&quot;FOLLOW_PED_ON_EXILE1_LADDER_CAMERA&quot;, 1500);  

 CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(&quot;FOLLOW_PED_SKY_DIVING_CAMERA&quot;, 0);  

 CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(&quot;FOLLOW_PED_SKY_DIVING_CAMERA&quot;, 3000);  

 CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(&quot;FOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA&quot;, 0);  

CAM::SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(&quot;FOLLOW_PED_SKY_DIVING_CAMERA&quot;, 0);  

```'>
				<Param name='char* p0' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFollowPedCamViewMode' func='yes'>
			<Overload retVal='void' descr='// 0x5A4F9EDF1673F704
// 0x495DBE8D
CAM::SET_FOLLOW_PED_CAM_VIEW_MODE(int viewMode);
----------------------------------------------------------------------------------------------------
```

Sets the type of Player camera:  

0 - Third Person Close  

1 - Third Person Mid  

2 - Third Person Far  

4 - First Person  

```'>
				<Param name='int viewMode' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFollowVehicleCamViewMode' func='yes'>
			<Overload retVal='void' descr='// 0xAC253D7842768F48
// 0xC4FBBBD3
CAM::SET_FOLLOW_VEHICLE_CAM_VIEW_MODE(int viewMode);
----------------------------------------------------------------------------------------------------
```

Sets the type of Player camera in vehicles:  

0 - Third Person Close  

1 - Third Person Mid  

2 - Third Person Far  

4 - First Person  

```'>
				<Param name='int viewMode' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFollowVehicleCamZoomLevel' func='yes'>
			<Overload retVal='void' descr='// 0x19464CB6E4078C8A
// 0x8F55EBBE
CAM::SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL(int zoomLevel);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int zoomLevel' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameplayCamRawPitch' func='yes'>
			<Overload retVal='void' descr='// 0x759E13EBC1C15C5A
CAM::_SET_GAMEPLAY_CAM_RAW_PITCH(float pitch);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float pitch' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameplayCamRawYaw' func='yes'>
			<Overload retVal='void' descr='// 0x103991D4A307D472
CAM::_SET_GAMEPLAY_CAM_RAW_YAW(float yaw);
----------------------------------------------------------------------------------------------------
```

Does nothing  

```'>
				<Param name='float yaw' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameplayCamRelativeHeading' func='yes'>
			<Overload retVal='void' descr='// 0xB4EC2312F4E5B1F1
// 0x20C6217C
CAM::SET_GAMEPLAY_CAM_RELATIVE_HEADING(float heading);
----------------------------------------------------------------------------------------------------
```

Sets the camera position relative to heading in float from -360 to +360.  

Heading is alwyas 0 in aiming camera.  

```'>
				<Param name='float heading' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameplayCamRelativePitch' func='yes'>
			<Overload retVal='void' descr='// 0x6D0858B8EDFD2B7D
// 0x6381B963
CAM::SET_GAMEPLAY_CAM_RELATIVE_PITCH(float x, float Value2);
----------------------------------------------------------------------------------------------------
```

Sets the camera pitch.  

Parameters:  

x = pitches the camera on the x axis.  

Value2 = always seems to be hex 0x3F800000 (1.000000 float).  

```'>
				<Param name='float x' />
				<Param name='float Value2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameplayCamShakeAmplitude' func='yes'>
			<Overload retVal='void' descr='// 0xA87E00932DB4D85D
// 0x9219D44A
CAM::SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE(float amplitude);
----------------------------------------------------------------------------------------------------
```

Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script &quot;drunk_control
ler.ysc.c4&quot; to simulate making the player drunk.  

```'>
				<Param name='float amplitude' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameplayCoordHint' func='yes'>
			<Overload retVal='void' descr='// 0xD51ADCD2D8BC0FB3
// 0xF27483C9
CAM::SET_GAMEPLAY_COORD_HINT(float x, float y, float z, int duration, int blendOutDuration, int blen
----------------------------------------------------------------------------------------------------
uration, int unk);

```

```

Example C#:  

Function.Call(Hash.SET_GAMEPLAY_COORD_HINT, position.X, position.Y, position.Z, hintDuration, 1500, 
1000, 0);  

The camera look-at is canceled if the user is already panning the camera around.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int duration' />
				<Param name='int blendOutDuration' />
				<Param name='int blen' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameplayEntityHint' func='yes'>
			<Overload retVal='void' descr='// 0x189E955A8313E298
// 0x66C32306
CAM::SET_GAMEPLAY_ENTITY_HINT(Entity entity, float xOffset, float yOffset, float zOffset, BOOL p4, i
----------------------------------------------------------------------------------------------------
5, int p6, int p7, Any p8);

```

```

p6 & p7 - possibly length or time  

```'>
				<Param name='Entity entity' />
				<Param name='float xOffset' />
				<Param name='float yOffset' />
				<Param name='float zOffset' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameplayHintFov' func='yes'>
			<Overload retVal='void' descr='// 0x513403FB9C56211F
// 0x96FD173B
CAM::SET_GAMEPLAY_HINT_FOV(float FOV);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float FOV' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameplayObjectHint' func='yes'>
			<Overload retVal='void' descr='// 0x83E87508A2CA2AC6
// 0x2ED5E2F8
CAM::SET_GAMEPLAY_OBJECT_HINT(Any p0, float p1, float p2, float p3, BOOL p4, Any p5, Any p6, Any p7)
----------------------------------------------------------------------------------------------------
``'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='BOOL p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameplayPedHint' func='yes'>
			<Overload retVal='void' descr='// 0x2B486269ACD548D3
// 0x7C27343E
CAM::SET_GAMEPLAY_PED_HINT(Ped p0, float x1, float y1, float z1, BOOL p4, Any p5, Any p6, Any p7);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped p0' />
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='BOOL p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameplayVehicleHint' func='yes'>
			<Overload retVal='void' descr='// 0xA2297E18F3E71C2E
// 0x2C9A11D8
CAM::SET_GAMEPLAY_VEHICLE_HINT(Any p0, float p1, float p2, float p3, BOOL p4, Any p5, Any p6, Any p7
----------------------------------------------------------------------------------------------------
```'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='BOOL p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetThirdPersonAimCamNearClip' func='yes'>
			<Overload retVal='void' descr='// 0x42156508606DE65E
// 0x71E9C63E
CAM::_SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP(float distance);
----------------------------------------------------------------------------------------------------
```

Sets the near clipping plane of the third person aim camera.  

```'>
				<Param name='float distance' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTimeIdleDrop' func='yes'>
			<Overload retVal='void' descr='// 0x9DFE13ECDC1EC196
// 0x92302899
CAM::SET_TIME_IDLE_DROP(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

hash collision?  

```'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetUseHiDof' func='yes'>
			<Overload retVal='void' descr='// 0xA13B0222F3D94A94
// 0x8BBF2950
CAM::SET_USE_HI_DOF();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetWidescreenBorders' func='yes'>
			<Overload retVal='Any' descr='// 0xDCD4EA924F42D01A
// 0x1A75DC9A
CAM::SET_WIDESCREEN_BORDERS(BOOL p0, int p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShakeCam' func='yes'>
			<Overload retVal='void' descr='// 0x6A25241C340D3822
// 0x1D4211B0
CAM::SHAKE_CAM(Cam cam, char* type, float amplitude);
----------------------------------------------------------------------------------------------------
```

Possible shake types (updated b617d):  

DEATH_FAIL_IN_EFFECT_SHAKE  

DRUNK_SHAKE  

FAMILY5_DRUG_TRIP_SHAKE  

HAND_SHAKE  

JOLT_SHAKE  

LARGE_EXPLOSION_SHAKE  

MEDIUM_EXPLOSION_SHAKE  

SMALL_EXPLOSION_SHAKE  

ROAD_VIBRATION_SHAKE  

SKY_DIVING_SHAKE  

VIBRATE_SHAKE  

```'>
				<Param name='Cam cam' />
				<Param name='char* type' />
				<Param name='float amplitude' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShakeCinematicCam' func='yes'>
			<Overload retVal='void' descr='// 0xDCE214D9ED58F3CF
// 0x61815F31
CAM::SHAKE_CINEMATIC_CAM(char* p0, float p1);
----------------------------------------------------------------------------------------------------
```

p0 argument found in the b617d scripts: &quot;DRUNK_SHAKE&quot;  

```'>
				<Param name='char* p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShakeGameplayCam' func='yes'>
			<Overload retVal='void' descr='// 0xFD55E49555E017CF
// 0xF2EFE660
CAM::SHAKE_GAMEPLAY_CAM(char* shakeName, float intensity);
----------------------------------------------------------------------------------------------------
```

Possible shake types (updated b617d):  

DEATH_FAIL_IN_EFFECT_SHAKE  

DRUNK_SHAKE  

FAMILY5_DRUG_TRIP_SHAKE  

HAND_SHAKE  

JOLT_SHAKE  

LARGE_EXPLOSION_SHAKE  

MEDIUM_EXPLOSION_SHAKE  

SMALL_EXPLOSION_SHAKE  

ROAD_VIBRATION_SHAKE  

SKY_DIVING_SHAKE  

VIBRATE_SHAKE  

```'>
				<Param name='char* shakeName' />
				<Param name='float intensity' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopCamPointing' func='yes'>
			<Overload retVal='void' descr='// 0xF33AB75780BA57DE
// 0x5435F6A5
CAM::STOP_CAM_POINTING(Cam cam);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopCamShaking' func='yes'>
			<Overload retVal='void' descr='// 0xBDECF64367884AC3
// 0x40D0EB87
CAM::STOP_CAM_SHAKING(Cam cam, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Cam cam' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopCinematicCamShaking' func='yes'>
			<Overload retVal='void' descr='// 0x2238E588E588A6D7
// 0x71C12904
CAM::STOP_CINEMATIC_CAM_SHAKING(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopCinematicShot' func='yes'>
			<Overload retVal='void' descr='// 0x7660C6E75D3A078E
// 0xD78358C5
CAM::STOP_CINEMATIC_SHOT(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopCutsceneCamShaking' func='yes'>
			<Overload retVal='void' descr='// 0xDB629FFD9285FA06
// 0xF07D603D
CAM::STOP_CUTSCENE_CAM_SHAKING();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='StopGameplayCamShaking' func='yes'>
			<Overload retVal='void' descr='// 0x0EF93E9F3D08C178
// 0xFD569E4E
CAM::STOP_GAMEPLAY_CAM_SHAKING(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopGameplayHint' func='yes'>
			<Overload retVal='void' descr='// 0xF46C581C61718916
// 0x1BC28B7B
CAM::STOP_GAMEPLAY_HINT(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopScriptGlobalShaking' func='yes'>
			<Overload retVal='void' descr='// 0x1C9D7949FA533490
// 0x26FCFB96
CAM::STOP_SCRIPT_GLOBAL_SHAKING(BOOL p0);
----------------------------------------------------------------------------------------------------
```

In drunk_controller.c4, sub_309  

if (CAM::_C912AF078AF19212()) {  

    CAM::_1C9D7949FA533490(0);  

}  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddMinimapOverlay' func='yes'>
			<Overload retVal='int' descr='CFX::ADD_MINIMAP_OVERLAY(char* name);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Loads a minimap overlay from a GFx file in the current resource.'>
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddReplaceTexture' func='yes'>
			<Overload retVal='void' descr='CFX::ADD_REPLACE_TEXTURE(char* origTxd, char* origTxn, char* newTxd, char* newTxn);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Experimental natives, please do not use in a live environment.'>
				<Param name='char* origTxd' />
				<Param name='char* origTxn' />
				<Param name='char* newTxd' />
				<Param name='char* newTxn' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddTextEntry' func='yes'>
			<Overload retVal='void' descr='CFX::ADD_TEXT_ENTRY(char* entryKey, char* entryText);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* entryKey' />
				<Param name='char* entryText' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddTextEntryByHash' func='yes'>
			<Overload retVal='void' descr='CFX::ADD_TEXT_ENTRY_BY_HASH(Hash entryKey, char* entryText);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash entryKey' />
				<Param name='char* entryText' />
			</Overload>
		</KeyWord>
		<KeyWord name='CallMinimapScaleformFunction' func='yes'>
			<Overload retVal='BOOL' descr='CFX::CALL_MINIMAP_SCALEFORM_FUNCTION(int miniMap, char* fnName);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
This is similar to the PushScaleformMovieFunction natives, except it calls in the `TIMELINE` of a mi
nimap overlay.'>
				<Param name='int miniMap' />
				<Param name='char* fnName' />
			</Overload>
		</KeyWord>
		<KeyWord name='CancelEvent' func='yes'>
			<Overload retVal='void' descr='CFX::CANCEL_EVENT();
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
Cancels the currently executing event.'>
			</Overload>
		</KeyWord>
		<KeyWord name='CommitRuntimeTexture' func='yes'>
			<Overload retVal='void' descr='CFX::COMMIT_RUNTIME_TEXTURE(long tex);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Commits the backing pixels to the specified runtime texture.'>
				<Param name='long tex' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateDui' func='yes'>
			<Overload retVal='long' descr='CFX::CREATE_DUI(char* url, int width, int height);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Creates a DUI browser. This can be used to draw on a runtime texture using CREATE\_RUNTIME\_TEXTURE\
_FROM\_DUI\_HANDLE.'>
				<Param name='char* url' />
				<Param name='int width' />
				<Param name='int height' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateRuntimeTexture' func='yes'>
			<Overload retVal='long' descr='CFX::CREATE_RUNTIME_TEXTURE(long txd, char* txn, int width, int height);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Creates a blank runtime texture.'>
				<Param name='long txd' />
				<Param name='char* txn' />
				<Param name='int width' />
				<Param name='int height' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateRuntimeTextureFromDuiHandle' func='yes'>
			<Overload retVal='long' descr='CFX::CREATE_RUNTIME_TEXTURE_FROM_DUI_HANDLE(long txd, long txn, char* duiHandle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Creates a runtime texture from a DUI handle.'>
				<Param name='long txd' />
				<Param name='long txn' />
				<Param name='char* duiHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateRuntimeTextureFromImage' func='yes'>
			<Overload retVal='long' descr='CFX::CREATE_RUNTIME_TEXTURE_FROM_IMAGE(long txd, char* txn, char* fileName);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Creates a runtime texture from the specified file in the current resource.'>
				<Param name='long txd' />
				<Param name='char* txn' />
				<Param name='char* fileName' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateRuntimeTxd' func='yes'>
			<Overload retVal='long' descr='CFX::CREATE_RUNTIME_TXD(char* name);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Creates a runtime texture dictionary with the specified name.

Example:

```lua

local txd = CreateRuntimeTxd(&apos;meow&apos;)

```'>
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteFunctionReference' func='yes'>
			<Overload retVal='void' descr='CFX::DELETE_FUNCTION_REFERENCE(char* referenceIdentity);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* referenceIdentity' />
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteResourceKvp' func='yes'>
			<Overload retVal='void' descr='CFX::DELETE_RESOURCE_KVP(char* key);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='DestroyDui' func='yes'>
			<Overload retVal='void' descr='CFX::DESTROY_DUI(long duiObject);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Destroys a DUI browser.'>
				<Param name='long duiObject' />
			</Overload>
		</KeyWord>
		<KeyWord name='DropPlayer' func='yes'>
			<Overload retVal='void' descr='CFX::DROP_PLAYER(char* playerSrc, char* reason);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* playerSrc' />
				<Param name='char* reason' />
			</Overload>
		</KeyWord>
		<KeyWord name='DuplicateFunctionReference' func='yes'>
			<Overload retVal='char*' descr='CFX::DUPLICATE_FUNCTION_REFERENCE(char* referenceIdentity);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* referenceIdentity' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableEnhancedHostSupport' func='yes'>
			<Overload retVal='void' descr='CFX::ENABLE_ENHANCED_HOST_SUPPORT(BOOL enabled);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL enabled' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndFindKvp' func='yes'>
			<Overload retVal='void' descr='CFX::END_FIND_KVP(int handle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int handle' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndFindObject' func='yes'>
			<Overload retVal='void' descr='CFX::END_FIND_OBJECT(int findHandle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int findHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndFindPed' func='yes'>
			<Overload retVal='void' descr='CFX::END_FIND_PED(int findHandle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int findHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndFindPickup' func='yes'>
			<Overload retVal='void' descr='CFX::END_FIND_PICKUP(int findHandle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int findHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndFindVehicle' func='yes'>
			<Overload retVal='void' descr='CFX::END_FIND_VEHICLE(int findHandle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int findHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ExecuteCommand' func='yes'>
			<Overload retVal='void' descr='CFX::EXECUTE_COMMAND(char* commandString);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* commandString' />
			</Overload>
		</KeyWord>
		<KeyWord name='ExperimentalLoadCloneCreate' func='yes'>
			<Overload retVal='Entity' descr='CFX::EXPERIMENTAL_LOAD_CLONE_CREATE(char* data, int objectId, char* tree);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
This native is not implemented.'>
				<Param name='char* data' />
				<Param name='int objectId' />
				<Param name='char* tree' />
			</Overload>
		</KeyWord>
		<KeyWord name='ExperimentalLoadCloneSync' func='yes'>
			<Overload retVal='void' descr='CFX::EXPERIMENTAL_LOAD_CLONE_SYNC(Entity entity, char* data);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
This native is not implemented.'>
				<Param name='Entity entity' />
				<Param name='char* data' />
			</Overload>
		</KeyWord>
		<KeyWord name='ExperimentalSaveCloneCreate' func='yes'>
			<Overload retVal='char*' descr='CFX::EXPERIMENTAL_SAVE_CLONE_CREATE(Entity entity);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
This native is not implemented.'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='ExperimentalSaveCloneSync' func='yes'>
			<Overload retVal='char*' descr='CFX::EXPERIMENTAL_SAVE_CLONE_SYNC(Entity entity);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
This native is not implemented.'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FindFirstObject' func='yes'>
			<Overload retVal='int' descr='CFX::FIND_FIRST_OBJECT(Entity* outEntity);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity* outEntity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FindFirstPed' func='yes'>
			<Overload retVal='int' descr='CFX::FIND_FIRST_PED(Entity* outEntity);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity* outEntity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FindFirstPickup' func='yes'>
			<Overload retVal='int' descr='CFX::FIND_FIRST_PICKUP(Entity* outEntity);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity* outEntity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FindFirstVehicle' func='yes'>
			<Overload retVal='int' descr='CFX::FIND_FIRST_VEHICLE(Entity* outEntity);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity* outEntity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FindKvp' func='yes'>
			<Overload retVal='char*' descr='CFX::FIND_KVP(int handle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int handle' />
			</Overload>
		</KeyWord>
		<KeyWord name='FindNextObject' func='yes'>
			<Overload retVal='BOOL' descr='CFX::FIND_NEXT_OBJECT(int findHandle, Entity* outEntity);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int findHandle' />
				<Param name='Entity* outEntity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FindNextPed' func='yes'>
			<Overload retVal='BOOL' descr='CFX::FIND_NEXT_PED(int findHandle, Entity* outEntity);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int findHandle' />
				<Param name='Entity* outEntity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FindNextPickup' func='yes'>
			<Overload retVal='BOOL' descr='CFX::FIND_NEXT_PICKUP(int findHandle, Entity* outEntity);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int findHandle' />
				<Param name='Entity* outEntity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FindNextVehicle' func='yes'>
			<Overload retVal='BOOL' descr='CFX::FIND_NEXT_VEHICLE(int findHandle, Entity* outEntity);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int findHandle' />
				<Param name='Entity* outEntity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FlagServerAsPrivate' func='yes'>
			<Overload retVal='void' descr='CFX::FLAG_SERVER_AS_PRIVATE(BOOL private_);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL private_' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCamMatrix' func='yes'>
			<Overload retVal='void' descr='CFX::GET_CAM_MATRIX(Cam camera, Vector3* rightVector, Vector3* forwardVector, Vector3* upVector, Vec
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
* position);

```

Returns the world matrix of the specified camera. To turn this into a view matrix, calculate the inv
erse.'>
				<Param name='Cam camera' />
				<Param name='Vector3* rightVector' />
				<Param name='Vector3* forwardVector' />
				<Param name='Vector3* upVector' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetConvar' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_CONVAR(char* varName, char* default_);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* varName' />
				<Param name='char* default_' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetConvarInt' func='yes'>
			<Overload retVal='int' descr='CFX::GET_CONVAR_INT(char* varName, int default_);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* varName' />
				<Param name='int default_' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCurrentResourceName' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_CURRENT_RESOURCE_NAME();
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
Returns the name of the currently executing resource.

## Return value

The name of the resource.'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetDuiHandle' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_DUI_HANDLE(long duiObject);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Returns the NUI window handle for a specified DUI browser object.'>
				<Param name='long duiObject' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityCoords' func='yes'>
			<Overload retVal='Vector3' descr='CFX::GET_ENTITY_COORDS(Entity entity);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityHeading' func='yes'>
			<Overload retVal='float' descr='CFX::GET_ENTITY_HEADING(Entity entity);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityRotation' func='yes'>
			<Overload retVal='Vector3' descr='CFX::GET_ENTITY_ROTATION(Entity entity);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityRotationVelocity' func='yes'>
			<Overload retVal='Vector3' descr='CFX::GET_ENTITY_ROTATION_VELOCITY(Entity entity);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityVelocity' func='yes'>
			<Overload retVal='Vector3' descr='CFX::GET_ENTITY_VELOCITY(Entity entity);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameTimer' func='yes'>
			<Overload retVal='long' descr='CFX::GET_GAME_TIMER();
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
Gets the current game timer in milliseconds.

## Return value

The game time.'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetHashKey' func='yes'>
			<Overload retVal='Hash' descr='CFX::GET_HASH_KEY(char* model);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
This native converts the passed string to a hash.'>
				<Param name='char* model' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHostId' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_HOST_ID();
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetInstanceId' func='yes'>
			<Overload retVal='int' descr='CFX::GET_INSTANCE_ID();
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetInvokingResource' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_INVOKING_RESOURCE();
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNuiCursorPosition' func='yes'>
			<Overload retVal='void' descr='CFX::GET_NUI_CURSOR_POSITION(int* x, int* y);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* x' />
				<Param name='int* y' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumPlayerIdentifiers' func='yes'>
			<Overload retVal='int' descr='CFX::GET_NUM_PLAYER_IDENTIFIERS(char* playerSrc);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* playerSrc' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumPlayerIndices' func='yes'>
			<Overload retVal='int' descr='CFX::GET_NUM_PLAYER_INDICES();
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumResourceMetadata' func='yes'>
			<Overload retVal='int' descr='CFX::GET_NUM_RESOURCE_METADATA(char* resourceName, char* metadataKey);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
Gets the amount of metadata values with the specified key existing in the specified resource&apos;s manif
est.

See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)'>
				<Param name='char* resourceName' />
				<Param name='char* metadataKey' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumResources' func='yes'>
			<Overload retVal='int' descr='CFX::GET_NUM_RESOURCES();
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPasswordHash' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_PASSWORD_HASH(char* password);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* password' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerEndpoint' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_PLAYER_ENDPOINT(char* playerSrc);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* playerSrc' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerFromIndex' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_PLAYER_FROM_INDEX(int index);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerFromServerId' func='yes'>
			<Overload retVal='Player' descr='CFX::GET_PLAYER_FROM_SERVER_ID(int serverId);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='int serverId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerGuid' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_PLAYER_GUID(char* playerSrc);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* playerSrc' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerIdentifier' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_PLAYER_IDENTIFIER(char* playerSrc, int identifier);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* playerSrc' />
				<Param name='int identifier' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerLastMsg' func='yes'>
			<Overload retVal='int' descr='CFX::GET_PLAYER_LAST_MSG(char* playerSrc);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* playerSrc' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerName' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_PLAYER_NAME(char* playerSrc);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* playerSrc' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerPed' func='yes'>
			<Overload retVal='Entity' descr='CFX::GET_PLAYER_PED(char* playerSrc);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* playerSrc' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerPing' func='yes'>
			<Overload retVal='int' descr='CFX::GET_PLAYER_PING(char* playerSrc);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* playerSrc' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerServerId' func='yes'>
			<Overload retVal='int' descr='CFX::GET_PLAYER_SERVER_ID(Player player);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRegisteredCommands' func='yes'>
			<Overload retVal='object' descr='CFX::GET_REGISTERED_COMMANDS();
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
Returns all commands that are registered in the command system.

The data returned adheres to the following layout:

```

[

{

&quot;name&quot;: &quot;cmdlist&quot;

},

{

&quot;name&quot;: &quot;command1&quot;

}

]

```

## Return value

An object containing registered commands.'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetResourceByFindIndex' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_RESOURCE_BY_FIND_INDEX(int findIndex);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
'>
				<Param name='int findIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetResourceKvpFloat' func='yes'>
			<Overload retVal='float' descr='CFX::GET_RESOURCE_KVP_FLOAT(char* key);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetResourceKvpInt' func='yes'>
			<Overload retVal='int' descr='CFX::GET_RESOURCE_KVP_INT(char* key);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetResourceKvpString' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_RESOURCE_KVP_STRING(char* key);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetResourceMetadata' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_RESOURCE_METADATA(char* resourceName, char* metadataKey, int index);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
Gets the metadata value at a specified key/index from a resource&apos;s manifest.

See also: [Resource manifest](https://docs.fivem.net/resources/manifest/)'>
				<Param name='char* resourceName' />
				<Param name='char* metadataKey' />
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetResourcePath' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_RESOURCE_PATH(char* resourceName);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
Returns the physical on-disk path of the specified resource.'>
				<Param name='char* resourceName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetResourceState' func='yes'>
			<Overload retVal='char*' descr='CFX::GET_RESOURCE_STATE(char* resourceName);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
Returns the current state of the specified resource.'>
				<Param name='char* resourceName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRuntimeTextureHeight' func='yes'>
			<Overload retVal='int' descr='CFX::GET_RUNTIME_TEXTURE_HEIGHT(long tex);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Gets the height of the specified runtime texture.'>
				<Param name='long tex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRuntimeTexturePitch' func='yes'>
			<Overload retVal='int' descr='CFX::GET_RUNTIME_TEXTURE_PITCH(long tex);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Gets the row pitch of the specified runtime texture, for use when creating data for `SET_RUNTIME_TEX
TURE_ARGB_DATA`.'>
				<Param name='long tex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRuntimeTextureWidth' func='yes'>
			<Overload retVal='int' descr='CFX::GET_RUNTIME_TEXTURE_WIDTH(long tex);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Gets the width of the specified runtime texture.'>
				<Param name='long tex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleAcceleration' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_ACCELERATION(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleAlarmTimeLeft' func='yes'>
			<Overload retVal='int' descr='CFX::GET_VEHICLE_ALARM_TIME_LEFT(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleClutch' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_CLUTCH(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleCurrentGear' func='yes'>
			<Overload retVal='int' descr='CFX::GET_VEHICLE_CURRENT_GEAR(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleCurrentRpm' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_CURRENT_RPM(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleDashboardSpeed' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_DASHBOARD_SPEED(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleEngineTemperature' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_ENGINE_TEMPERATURE(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleFuelLevel' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_FUEL_LEVEL(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleGravityAmount' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_GRAVITY_AMOUNT(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleHandbrake' func='yes'>
			<Overload retVal='BOOL' descr='CFX::GET_VEHICLE_HANDBRAKE(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleHandlingFloat' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_HANDLING_FLOAT(Vehicle vehicle, char* class_, char* fieldName);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Returns the effective handling data of a vehicle as a floating-point value.

Example: `local fSteeringLock = GetVehicleHandlingFloat(vehicle, &apos;CHandlingData&apos;, &apos;fSteeringLock&apos;)`'>
				<Param name='Vehicle vehicle' />
				<Param name='char* class_' />
				<Param name='char* fieldName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleHandlingInt' func='yes'>
			<Overload retVal='int' descr='CFX::GET_VEHICLE_HANDLING_INT(Vehicle vehicle, char* class_, char* fieldName);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Returns the effective handling data of a vehicle as an integer value.

Example: `local modelFlags = GetVehicleHandlingInt(vehicle, &apos;CHandlingData&apos;, &apos;strModelFlags&apos;)`'>
				<Param name='Vehicle vehicle' />
				<Param name='char* class_' />
				<Param name='char* fieldName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleHandlingVector' func='yes'>
			<Overload retVal='Vector3' descr='CFX::GET_VEHICLE_HANDLING_VECTOR(Vehicle vehicle, char* class_, char* fieldName);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Returns the effective handling data of a vehicle as a vector value.

Example: `local inertiaMultiplier = GetVehicleHandlingVector(vehicle, &apos;CHandlingData&apos;, &apos;vecInertiaMu
ltiplier&apos;)`'>
				<Param name='Vehicle vehicle' />
				<Param name='char* class_' />
				<Param name='char* fieldName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleHighGear' func='yes'>
			<Overload retVal='int' descr='CFX::GET_VEHICLE_HIGH_GEAR(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleIndicatorLights' func='yes'>
			<Overload retVal='int' descr='CFX::GET_VEHICLE_INDICATOR_LIGHTS(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Gets the vehicle indicator light state. 0 = off, 1 = left, 2 = right, 3 = both'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleNextGear' func='yes'>
			<Overload retVal='int' descr='CFX::GET_VEHICLE_NEXT_GEAR(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleNumberOfWheels' func='yes'>
			<Overload retVal='int' descr='CFX::GET_VEHICLE_NUMBER_OF_WHEELS(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleOilLevel' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_OIL_LEVEL(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleSteeringAngle' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_STEERING_ANGLE(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleSteeringScale' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_STEERING_SCALE(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleTurboPressure' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_TURBO_PRESSURE(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleWheelHealth' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_WHEEL_HEALTH(Vehicle vehicle, int wheelIndex);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int wheelIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleWheelSpeed' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_WHEEL_SPEED(Vehicle vehicle, int wheelIndex);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Gets speed of a wheel at the tyre.

Max number of wheels can be retrieved with the native GET_VEHICLE_NUMBER_OF_WHEELS.'>
				<Param name='Vehicle vehicle' />
				<Param name='int wheelIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleWheelXOffset' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_WHEEL_X_OFFSET(Vehicle vehicle, int wheelIndex);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Returns the offset of the specified wheel relative to the wheel&apos;s axle center.'>
				<Param name='Vehicle vehicle' />
				<Param name='int wheelIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleWheelYRotation' func='yes'>
			<Overload retVal='float' descr='CFX::GET_VEHICLE_WHEEL_Y_ROTATION(Vehicle vehicle, int wheelIndex);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: GET_VEHICLE_WHEEL_XROT'>
				<Param name='Vehicle vehicle' />
				<Param name='int wheelIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GET_VEHICLE_WHEEL_XROT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetVehicleWheelYRotation' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='HasMinimapOverlayLoaded' func='yes'>
			<Overload retVal='BOOL' descr='CFX::HAS_MINIMAP_OVERLAY_LOADED(int id);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Returns whether or not the specific minimap overlay has loaded.'>
				<Param name='int id' />
			</Overload>
		</KeyWord>
		<KeyWord name='InvokeFunctionReference' func='yes'>
			<Overload retVal='char*' descr='CFX::INVOKE_FUNCTION_REFERENCE(char* referenceIdentity, char* argsSerialized, int argsLength, int* 
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
alLength);

```'>
				<Param name='char* referenceIdentity' />
				<Param name='char* argsSerialized' />
				<Param name='int argsLength' />
				<Param name='int* ' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAceAllowed' func='yes'>
			<Overload retVal='BOOL' descr='CFX::IS_ACE_ALLOWED(char* object);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* object' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsDuiAvailable' func='yes'>
			<Overload retVal='BOOL' descr='CFX::IS_DUI_AVAILABLE(long duiObject);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Returns whether or not a browser is created for a specified DUI browser object.'>
				<Param name='long duiObject' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsDuplicityVersion' func='yes'>
			<Overload retVal='BOOL' descr='CFX::IS_DUPLICITY_VERSION();
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
Gets whether or not this is the CitizenFX server.

## Return value

A boolean value.'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerAceAllowed' func='yes'>
			<Overload retVal='BOOL' descr='CFX::IS_PLAYER_ACE_ALLOWED(char* playerSrc, char* object);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* playerSrc' />
				<Param name='char* object' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPrincipalAceAllowed' func='yes'>
			<Overload retVal='BOOL' descr='CFX::IS_PRINCIPAL_ACE_ALLOWED(char* principal, char* object);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* principal' />
				<Param name='char* object' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleAlarmSet' func='yes'>
			<Overload retVal='BOOL' descr='CFX::IS_VEHICLE_ALARM_SET(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleEngineStarting' func='yes'>
			<Overload retVal='BOOL' descr='CFX::IS_VEHICLE_ENGINE_STARTING(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleInteriorLightOn' func='yes'>
			<Overload retVal='BOOL' descr='CFX::IS_VEHICLE_INTERIOR_LIGHT_ON(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleNeedsToBeHotwired' func='yes'>
			<Overload retVal='BOOL' descr='CFX::IS_VEHICLE_NEEDS_TO_BE_HOTWIRED(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehiclePreviouslyOwnedByPlayer' func='yes'>
			<Overload retVal='BOOL' descr='CFX::IS_VEHICLE_PREVIOUSLY_OWNED_BY_PLAYER(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleWanted' func='yes'>
			<Overload retVal='BOOL' descr='CFX::IS_VEHICLE_WANTED(Vehicle vehicle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='LoadResourceFile' func='yes'>
			<Overload retVal='char*' descr='CFX::LOAD_RESOURCE_FILE(char* resourceName, char* fileName);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
Reads the contents of a text file in a specified resource.

If executed on the client, this file has to be included in `files` in the resource manifest.

Example: `local data = LoadResourceFile(&quot;devtools&quot;, &quot;data.json&quot;)`'>
				<Param name='char* resourceName' />
				<Param name='char* fileName' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetNetworkIdFromEntity' func='yes'>
			<Overload retVal='int' descr='CFX::NETWORK_GET_NETWORK_ID_FROM_ENTITY(Entity entity);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='PerformHttpRequestInternal' func='yes'>
			<Overload retVal='int' descr='CFX::PERFORM_HTTP_REQUEST_INTERNAL(char* requestData, int requestDataLength);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* requestData' />
				<Param name='int requestDataLength' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterCommand' func='yes'>
			<Overload retVal='void' descr='CFX::REGISTER_COMMAND(char* commandName, func handler, BOOL restricted);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* commandName' />
				<Param name='func handler' />
				<Param name='BOOL restricted' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterFontFile' func='yes'>
			<Overload retVal='void' descr='CFX::REGISTER_FONT_FILE(char* fileName);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Registers a specified .gfx file as GFx font library.

The .gfx file has to be registered with the streamer already.'>
				<Param name='char* fileName' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterFontId' func='yes'>
			<Overload retVal='int' descr='CFX::REGISTER_FONT_ID(char* fontName);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Registers a specified font name for use with text draw commands.'>
				<Param name='char* fontName' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterNuiCallbackType' func='yes'>
			<Overload retVal='void' descr='CFX::REGISTER_NUI_CALLBACK_TYPE(char* callbackType);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* callbackType' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterResourceBuildTaskFactory' func='yes'>
			<Overload retVal='void' descr='CFX::REGISTER_RESOURCE_BUILD_TASK_FACTORY(char* factoryId, func factoryFn);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
Registers a build task factory for resources.

The function should return an object (msgpack map) with the following fields:

```

{

// returns whether the specific resource should be built

shouldBuild = func(resourceName: string): bool,

// asynchronously start building the specific resource.

// call cb when completed

build = func(resourceName: string, cb: func(success: bool, status: string): void): void

}

```'>
				<Param name='char* factoryId' />
				<Param name='func factoryFn' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveReplaceTexture' func='yes'>
			<Overload retVal='void' descr='CFX::REMOVE_REPLACE_TEXTURE(char* origTxd, char* origTxn);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Experimental natives, please do not use in a live environment.'>
				<Param name='char* origTxd' />
				<Param name='char* origTxn' />
			</Overload>
		</KeyWord>
		<KeyWord name='SaveResourceFile' func='yes'>
			<Overload retVal='BOOL' descr='CFX::SAVE_RESOURCE_FILE(char* resourceName, char* fileName, char* data, int dataLength);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
Writes the specified data to a file in the specified resource.

Using a length of `-1` will automatically detect the length assuming the data is a C string.'>
				<Param name='char* resourceName' />
				<Param name='char* fileName' />
				<Param name='char* data' />
				<Param name='int dataLength' />
			</Overload>
		</KeyWord>
		<KeyWord name='SendDuiMessage' func='yes'>
			<Overload retVal='void' descr='CFX::SEND_DUI_MESSAGE(long duiObject, char* jsonString);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sends a message to the specific DUI root page. This is similar to SEND\_NUI\_MESSAGE.'>
				<Param name='long duiObject' />
				<Param name='char* jsonString' />
			</Overload>
		</KeyWord>
		<KeyWord name='SendDuiMouseDown' func='yes'>
			<Overload retVal='void' descr='CFX::SEND_DUI_MOUSE_DOWN(long duiObject, char* button);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Injects a &apos;mouse down&apos; event for a DUI object. Coordinates are expected to be set using SEND\_DUI\_M
OUSE\_MOVE.'>
				<Param name='long duiObject' />
				<Param name='char* button' />
			</Overload>
		</KeyWord>
		<KeyWord name='SendDuiMouseMove' func='yes'>
			<Overload retVal='void' descr='CFX::SEND_DUI_MOUSE_MOVE(long duiObject, int x, int y);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Injects a &apos;mouse move&apos; event for a DUI object. Coordinates are in browser space.'>
				<Param name='long duiObject' />
				<Param name='int x' />
				<Param name='int y' />
			</Overload>
		</KeyWord>
		<KeyWord name='SendDuiMouseUp' func='yes'>
			<Overload retVal='void' descr='CFX::SEND_DUI_MOUSE_UP(long duiObject, char* button);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Injects a &apos;mouse up&apos; event for a DUI object. Coordinates are expected to be set using SEND\_DUI\_MOU
SE\_MOVE.'>
				<Param name='long duiObject' />
				<Param name='char* button' />
			</Overload>
		</KeyWord>
		<KeyWord name='SendDuiMouseWheel' func='yes'>
			<Overload retVal='void' descr='CFX::SEND_DUI_MOUSE_WHEEL(long duiObject, int deltaY, int deltaX);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Injects a &apos;mouse wheel&apos; event for a DUI object.'>
				<Param name='long duiObject' />
				<Param name='int deltaY' />
				<Param name='int deltaX' />
			</Overload>
		</KeyWord>
		<KeyWord name='SendLoadingScreenMessage' func='yes'>
			<Overload retVal='BOOL' descr='CFX::SEND_LOADING_SCREEN_MESSAGE(char* jsonString);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sends a message to the `loadingScreen` NUI frame, which contains the HTML page referenced in `loadsc
reen` resources.'>
				<Param name='char* jsonString' />
			</Overload>
		</KeyWord>
		<KeyWord name='SendNuiMessage' func='yes'>
			<Overload retVal='BOOL' descr='CFX::SEND_NUI_MESSAGE(char* jsonString);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* jsonString' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetConvar' func='yes'>
			<Overload retVal='void' descr='CFX::SET_CONVAR(char* varName, char* value);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* varName' />
				<Param name='char* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetConvarReplicated' func='yes'>
			<Overload retVal='void' descr='CFX::SET_CONVAR_REPLICATED(char* varName, char* value);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* varName' />
				<Param name='char* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetConvarServerInfo' func='yes'>
			<Overload retVal='void' descr='CFX::SET_CONVAR_SERVER_INFO(char* varName, char* value);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* varName' />
				<Param name='char* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDiscordAppId' func='yes'>
			<Overload retVal='void' descr='CFX::SET_DISCORD_APP_ID(char* appId);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
This native sets the app id for the discord rich presence implementation.'>
				<Param name='char* appId' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDiscordRichPresenceAsset' func='yes'>
			<Overload retVal='void' descr='CFX::SET_DISCORD_RICH_PRESENCE_ASSET(char* assetName);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
This native sets the image asset for the discord rich presence implementation.'>
				<Param name='char* assetName' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDuiUrl' func='yes'>
			<Overload retVal='void' descr='CFX::SET_DUI_URL(long duiObject, char* url);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Navigates the specified DUI browser to a different URL.'>
				<Param name='long duiObject' />
				<Param name='char* url' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGameType' func='yes'>
			<Overload retVal='void' descr='CFX::SET_GAME_TYPE(char* gametypeName);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* gametypeName' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHandlingField' func='yes'>
			<Overload retVal='void' descr='CFX::SET_HANDLING_FIELD(char* vehicle, char* class_, char* fieldName, Any value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sets a global handling override for a specific vehicle class. The name is supposed to match the `han
dlingName` field from handling.meta.

Example: `SetHandlingField(&apos;AIRTUG&apos;, &apos;CHandlingData&apos;, &apos;fSteeringLock&apos;, 360.0)`'>
				<Param name='char* vehicle' />
				<Param name='char* class_' />
				<Param name='char* fieldName' />
				<Param name='Any value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHandlingFloat' func='yes'>
			<Overload retVal='void' descr='CFX::SET_HANDLING_FLOAT(char* vehicle, char* class_, char* fieldName, float value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sets a global handling override for a specific vehicle class. The name is supposed to match the `han
dlingName` field from handling.meta.

Example: `SetHandlingFloat(&apos;AIRTUG&apos;, &apos;CHandlingData&apos;, &apos;fSteeringLock&apos;, 360.0)`'>
				<Param name='char* vehicle' />
				<Param name='char* class_' />
				<Param name='char* fieldName' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHandlingInt' func='yes'>
			<Overload retVal='void' descr='CFX::SET_HANDLING_INT(char* vehicle, char* class_, char* fieldName, int value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sets a global handling override for a specific vehicle class. The name is supposed to match the `han
dlingName` field from handling.meta.'>
				<Param name='char* vehicle' />
				<Param name='char* class_' />
				<Param name='char* fieldName' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHandlingVector' func='yes'>
			<Overload retVal='void' descr='CFX::SET_HANDLING_VECTOR(char* vehicle, char* class_, char* fieldName, Vector3 value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sets a global handling override for a specific vehicle class. The name is supposed to match the `han
dlingName` field from handling.meta.

Example: `SetHandlingVector(&apos;AIRTUG&apos;, &apos;CHandlingData&apos;, &apos;vecCentreOfMassOffset&apos;, vector3(0.0, 0.0, -5
.0))`'>
				<Param name='char* vehicle' />
				<Param name='char* class_' />
				<Param name='char* fieldName' />
				<Param name='Vector3 value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHttpHandler' func='yes'>
			<Overload retVal='void' descr='CFX::SET_HTTP_HANDLER(func handler);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='func handler' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetManualShutdownLoadingScreenNui' func='yes'>
			<Overload retVal='void' descr='CFX::SET_MANUAL_SHUTDOWN_LOADING_SCREEN_NUI(BOOL manualShutdown);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sets whether or not `SHUTDOWN_LOADING_SCREEN` automatically shuts down the NUI frame for the loading
 screen. If this is enabled,

you will have to manually invoke `SHUTDOWN_LOADING_SCREEN_NUI` whenever you want to hide the NUI loa
ding screen.'>
				<Param name='BOOL manualShutdown' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMapName' func='yes'>
			<Overload retVal='void' descr='CFX::SET_MAP_NAME(char* mapName);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* mapName' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMinimapOverlayDisplay' func='yes'>
			<Overload retVal='void' descr='CFX::SET_MINIMAP_OVERLAY_DISPLAY(int miniMap, float x, float y, float xScale, float yScale, float al
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
;

```

Sets the display info for a minimap overlay.'>
				<Param name='int miniMap' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float xScale' />
				<Param name='float yScale' />
				<Param name='float al' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetModelHeadlightConfiguration' func='yes'>
			<Overload retVal='void' descr='CFX::SET_MODEL_HEADLIGHT_CONFIGURATION(Hash modelHash, float ratePerSecond, float headlightRotation,
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
L invertRotation);

```'>
				<Param name='Hash modelHash' />
				<Param name='float ratePerSecond' />
				<Param name='float headlightRotation' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNuiFocus' func='yes'>
			<Overload retVal='void' descr='CFX::SET_NUI_FOCUS(BOOL hasFocus, BOOL hasCursor);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL hasFocus' />
				<Param name='BOOL hasCursor' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerTalkingOverride' func='yes'>
			<Overload retVal='void' descr='CFX::SET_PLAYER_TALKING_OVERRIDE(Player player, BOOL state);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
the status of default voip system. It affects on `NETWORK_IS_PLAYER_TALKING` and `mp_facial` animati
on.

This function doesn&apos;t need to be called every frame, it works like a switcher.'>
				<Param name='Player player' />
				<Param name='BOOL state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetResourceKvp' func='yes'>
			<Overload retVal='void' descr='CFX::SET_RESOURCE_KVP(char* key, char* value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* key' />
				<Param name='char* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetResourceKvpFloat' func='yes'>
			<Overload retVal='void' descr='CFX::SET_RESOURCE_KVP_FLOAT(char* key, float value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* key' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetResourceKvpInt' func='yes'>
			<Overload retVal='void' descr='CFX::SET_RESOURCE_KVP_INT(char* key, int value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* key' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRichPresence' func='yes'>
			<Overload retVal='void' descr='CFX::SET_RICH_PRESENCE(char* presenceState);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sets the player&apos;s rich presence detail state for social platform providers to a specified string.'>
				<Param name='char* presenceState' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRuntimeTextureArgbData' func='yes'>
			<Overload retVal='BOOL' descr='CFX::SET_RUNTIME_TEXTURE_ARGB_DATA(long tex, char* buffer, int length);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='long tex' />
				<Param name='char* buffer' />
				<Param name='int length' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRuntimeTexturePixel' func='yes'>
			<Overload retVal='void' descr='CFX::SET_RUNTIME_TEXTURE_PIXEL(long tex, int x, int y, int r, int g, int b, int a);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sets a pixel in the specified runtime texture. This will have to be committed using `COMMIT_RUNTIME_
TEXTURE` to have any effect.'>
				<Param name='long tex' />
				<Param name='int x' />
				<Param name='int y' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
				<Param name='int a' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSnakeoilForEntry' func='yes'>
			<Overload retVal='void' descr='CFX::SET_SNAKEOIL_FOR_ENTRY(char* name, char* path, char* data);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* name' />
				<Param name='char* path' />
				<Param name='char* data' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextChatEnabled' func='yes'>
			<Overload retVal='BOOL' descr='CFX::SET_TEXT_CHAT_ENABLED(BOOL enabled);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL enabled' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleAlarmTimeLeft' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_ALARM_TIME_LEFT(Vehicle vehicle, int time);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int time' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleAutoRepairDisabled' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_AUTO_REPAIR_DISABLED(Vehicle vehicle, BOOL value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Disables the vehicle from being repaired when a vehicle extra is enabled.'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleClutch' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_CLUTCH(Vehicle vehicle, float clutch);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float clutch' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleCurrentRpm' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_CURRENT_RPM(Vehicle vehicle, float rpm);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float rpm' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleEngineTemperature' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_ENGINE_TEMPERATURE(Vehicle vehicle, float temperature);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float temperature' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleFuelLevel' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_FUEL_LEVEL(Vehicle vehicle, float level);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float level' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleGravityAmount' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_GRAVITY_AMOUNT(Vehicle vehicle, float gravity);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float gravity' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleHandlingField' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_HANDLING_FIELD(Vehicle vehicle, char* class_, char* fieldName, Any value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sets a handling override for a specific vehicle. Certain handling flags can only be set globally usi
ng `SET_HANDLING_FIELD`, this might require some experimentation.

Example: `SetVehicleHandlingField(vehicle, &apos;CHandlingData&apos;, &apos;fSteeringLock&apos;, 360.0)`'>
				<Param name='Vehicle vehicle' />
				<Param name='char* class_' />
				<Param name='char* fieldName' />
				<Param name='Any value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleHandlingFloat' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_HANDLING_FLOAT(Vehicle vehicle, char* class_, char* fieldName, float value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sets a handling override for a specific vehicle. Certain handling flags can only be set globally usi
ng `SET_HANDLING_FLOAT`, this might require some experimentation.

Example: `SetVehicleHandlingFloat(vehicle, &apos;CHandlingData&apos;, &apos;fSteeringLock&apos;, 360.0)`'>
				<Param name='Vehicle vehicle' />
				<Param name='char* class_' />
				<Param name='char* fieldName' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleHandlingInt' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_HANDLING_INT(Vehicle vehicle, char* class_, char* fieldName, int value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sets a handling override for a specific vehicle. Certain handling flags can only be set globally usi
ng `SET_HANDLING_INT`, this might require some experimentation.'>
				<Param name='Vehicle vehicle' />
				<Param name='char* class_' />
				<Param name='char* fieldName' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleHandlingVector' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_HANDLING_VECTOR(Vehicle vehicle, char* class_, char* fieldName, Vector3 value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Sets a handling override for a specific vehicle. Certain handling flags can only be set globally usi
ng `SET_HANDLING_VECTOR`, this might require some experimentation.'>
				<Param name='Vehicle vehicle' />
				<Param name='char* class_' />
				<Param name='char* fieldName' />
				<Param name='Vector3 value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleHighGear' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_HIGH_GEAR(Vehicle vehicle, int gear);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int gear' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleOilLevel' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_OIL_LEVEL(Vehicle vehicle, float level);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float level' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleSteeringAngle' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_STEERING_ANGLE(Vehicle vehicle, float angle);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float angle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleSteeringScale' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_STEERING_SCALE(Vehicle vehicle, float scale);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float scale' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleTurboPressure' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_TURBO_PRESSURE(Vehicle vehicle, float pressure);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float pressure' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleWheelHealth' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_WHEEL_HEALTH(Vehicle vehicle, int wheelIndex, float health);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int wheelIndex' />
				<Param name='float health' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleWheelXOffset' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_WHEEL_X_OFFSET(Vehicle vehicle, int wheelIndex, float offset);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Adjusts the offset of the specified wheel relative to the wheel&apos;s axle center.

Needs to be called every frame in order to function properly, as GTA will reset the offset otherwise
.

This function can be especially useful to set the track width of a vehicle, for example:

```

function SetVehicleFrontTrackWidth(vehicle, width)

SetVehicleWheelXOffset(vehicle, 0, -width/2)

SetVehicleWheelXOffset(vehicle, 1, width/2)

end

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int wheelIndex' />
				<Param name='float offset' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleWheelYRotation' func='yes'>
			<Overload retVal='void' descr='CFX::SET_VEHICLE_WHEEL_Y_ROTATION(Vehicle vehicle, int wheelIndex, float value);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: SET_VEHICLE_WHEEL_XROT'>
				<Param name='Vehicle vehicle' />
				<Param name='int wheelIndex' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SET_VEHICLE_WHEEL_XROT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetVehicleWheelYRotation' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='ShutdownLoadingScreenNui' func='yes'>
			<Overload retVal='void' descr='CFX::SHUTDOWN_LOADING_SCREEN_NUI();
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
Shuts down the `loadingScreen` NUI frame, similarly to `SHUTDOWN_LOADING_SCREEN`.'>
			</Overload>
		</KeyWord>
		<KeyWord name='StartFindKvp' func='yes'>
			<Overload retVal='int' descr='CFX::START_FIND_KVP(char* prefix);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* prefix' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartResource' func='yes'>
			<Overload retVal='BOOL' descr='CFX::START_RESOURCE(char* resourceName);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* resourceName' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopResource' func='yes'>
			<Overload retVal='BOOL' descr='CFX::STOP_RESOURCE(char* resourceName);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* resourceName' />
			</Overload>
		</KeyWord>
		<KeyWord name='TempBanPlayer' func='yes'>
			<Overload retVal='void' descr='CFX::TEMP_BAN_PLAYER(char* playerSrc, char* reason);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* playerSrc' />
				<Param name='char* reason' />
			</Overload>
		</KeyWord>
		<KeyWord name='TriggerClientEventInternal' func='yes'>
			<Overload retVal='void' descr='CFX::TRIGGER_CLIENT_EVENT_INTERNAL(char* eventName, char* eventTarget, char* eventPayload, int paylo
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
ngth);

```

The backing function for TriggerClientEvent.'>
				<Param name='char* eventName' />
				<Param name='char* eventTarget' />
				<Param name='char* eventPayload' />
				<Param name='int paylo' />
			</Overload>
		</KeyWord>
		<KeyWord name='TriggerEventInternal' func='yes'>
			<Overload retVal='void' descr='CFX::TRIGGER_EVENT_INTERNAL(char* eventName, char* eventPayload, int payloadLength);
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
The backing function for TriggerEvent.'>
				<Param name='char* eventName' />
				<Param name='char* eventPayload' />
				<Param name='int payloadLength' />
			</Overload>
		</KeyWord>
		<KeyWord name='TriggerServerEventInternal' func='yes'>
			<Overload retVal='void' descr='CFX::TRIGGER_SERVER_EVENT_INTERNAL(char* eventName, char* eventPayload, int payloadLength);
CitizenFX API Set: client
----------------------------------------------------------------------------------------------------
The backing function for TriggerServerEvent.'>
				<Param name='char* eventName' />
				<Param name='char* eventPayload' />
				<Param name='int payloadLength' />
			</Overload>
		</KeyWord>
		<KeyWord name='VerifyPasswordHash' func='yes'>
			<Overload retVal='BOOL' descr='CFX::VERIFY_PASSWORD_HASH(char* password, char* hash);
CitizenFX API Set: server
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* password' />
				<Param name='char* hash' />
			</Overload>
		</KeyWord>
		<KeyWord name='WasEventCanceled' func='yes'>
			<Overload retVal='BOOL' descr='CFX::WAS_EVENT_CANCELED();
CitizenFX API Set: shared
----------------------------------------------------------------------------------------------------
Returns whether or not the currently executing event was canceled.

## Return value

A boolean.'>
			</Overload>
		</KeyWord>
		<KeyWord name='AddToClockTime' func='yes'>
			<Overload retVal='void' descr='// 0xD716F30D8C8980E2
// 0xCC40D20D
CLOCK::ADD_TO_CLOCK_TIME(int hours, int minutes, int seconds);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int hours' />
				<Param name='int minutes' />
				<Param name='int seconds' />
			</Overload>
		</KeyWord>
		<KeyWord name='AdvanceClockTimeTo' func='yes'>
			<Overload retVal='void' descr='// 0xC8CA9670B9D83B3B
// 0x57B8DA7C
CLOCK::ADVANCE_CLOCK_TIME_TO(int hour, int minute, int second);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int hour' />
				<Param name='int minute' />
				<Param name='int second' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetClockDayOfMonth' func='yes'>
			<Overload retVal='int' descr='// 0x3D10BC92A4DB1D35
// 0xC7A5ACB7
CLOCK::GET_CLOCK_DAY_OF_MONTH();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetClockDayOfWeek' func='yes'>
			<Overload retVal='int' descr='// 0xD972E4BD7AEB235F
// 0x84E4A289
CLOCK::GET_CLOCK_DAY_OF_WEEK();
----------------------------------------------------------------------------------------------------
```

Gets the current day of the week.  

0: Sunday  

1: Monday  

2: Tuesday  

3: Wednesday  

4: Thursday  

5: Friday  

6: Saturday  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetClockHours' func='yes'>
			<Overload retVal='int' descr='// 0x25223CA6B4D20B7F
// 0x7EF8316F
CLOCK::GET_CLOCK_HOURS();
----------------------------------------------------------------------------------------------------
```

Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetClockMinutes' func='yes'>
			<Overload retVal='int' descr='// 0x13D2B8ADD79640F2
// 0x94AAC486
CLOCK::GET_CLOCK_MINUTES();
----------------------------------------------------------------------------------------------------
```

Gets the current ingame clock minute.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetClockMonth' func='yes'>
			<Overload retVal='int' descr='// 0xBBC72712E80257A1
// 0x3C48A3D5
CLOCK::GET_CLOCK_MONTH();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetClockSeconds' func='yes'>
			<Overload retVal='int' descr='// 0x494E97C2EF27C470
// 0x099C927E
CLOCK::GET_CLOCK_SECONDS();
----------------------------------------------------------------------------------------------------
```

Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day 
in GTA is only 48 minutes in real life.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetClockYear' func='yes'>
			<Overload retVal='int' descr='// 0x961777E64BDAF717
// 0xB8BECF15
CLOCK::GET_CLOCK_YEAR();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetLocalTime' func='yes'>
			<Overload retVal='void' descr='// 0x50C7A99057A69748
// 0x124BCFA2
CLOCK::GET_LOCAL_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second);
----------------------------------------------------------------------------------------------------
```

Gets local system time as year, month, day, hour, minute and second.  

Example usage:  

int year;  

int month;  

int day;  

int hour;  

int minute;  

int second;  

or use std::tm struct  

TIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);  

```'>
				<Param name='int* year' />
				<Param name='int* month' />
				<Param name='int* day' />
				<Param name='int* hour' />
				<Param name='int* minute' />
				<Param name='int* second' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMillisecondsPerGameMinute' func='yes'>
			<Overload retVal='int' descr='// 0x2F8B4D1C595B11DB
// 0x3B74095C
CLOCK::GET_MILLISECONDS_PER_GAME_MINUTE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPosixTime' func='yes'>
			<Overload retVal='void' descr='// 0xDA488F299A5B164E
// 0xE15A5281
CLOCK::GET_POSIX_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second);
----------------------------------------------------------------------------------------------------
```

Gets system time as year, month, day, hour, minute and second.  

Example usage:  

	int year;  

	int month;  

	int day;  

	int hour;  

	int minute;  

	int second;  

	TIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);  

```'>
				<Param name='int* year' />
				<Param name='int* month' />
				<Param name='int* day' />
				<Param name='int* hour' />
				<Param name='int* minute' />
				<Param name='int* second' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetUtcTime' func='yes'>
			<Overload retVal='void' descr='// 0x8117E09A19EEF4D3
CLOCK::_GET_UTC_TIME(int* year, int* month, int* day, int* hour, int* minute, int* second);
----------------------------------------------------------------------------------------------------
```

console hash: 0xC589CD7D = GET_UTC_TIME  

gets current UTC time  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_LOCAL_TIME'>
				<Param name='int* year' />
				<Param name='int* month' />
				<Param name='int* day' />
				<Param name='int* hour' />
				<Param name='int* minute' />
				<Param name='int* second' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_LOCAL_TIME' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetUtcTime' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='PauseClock' func='yes'>
			<Overload retVal='void' descr='// 0x4055E40BD2DBEC1D
// 0xB02D6124
CLOCK::PAUSE_CLOCK(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetClockDate' func='yes'>
			<Overload retVal='void' descr='// 0xB096419DF0D06CE7
// 0x96891C94
CLOCK::SET_CLOCK_DATE(int day, int month, int year);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int day' />
				<Param name='int month' />
				<Param name='int year' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetClockTime' func='yes'>
			<Overload retVal='void' descr='// 0x47C3B5848C3E45D8
// 0x26F6AF14
CLOCK::SET_CLOCK_TIME(int hour, int minute, int second);
----------------------------------------------------------------------------------------------------
```

SET_CLOCK_TIME(12, 34, 56);  

```'>
				<Param name='int hour' />
				<Param name='int minute' />
				<Param name='int second' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanSetEnterStateForRegisteredEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x645D0B458D8E17B5
// 0x55C30B26
CUTSCENE::CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY(char* cutsceneEntName, Hash modelHash);
----------------------------------------------------------------------------------------------------
```

modelHash (p1) was always 0 in R* scripts  

```'>
				<Param name='char* cutsceneEntName' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanSetExitStateForCamera' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB2CBCD0930DFB420
// 0xEDAE6C02
CUTSCENE::CAN_SET_EXIT_STATE_FOR_CAMERA(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanSetExitStateForRegisteredEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4C6A6451C79E4662
// 0x8FF5D3C4
CUTSCENE::CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY(char* cutsceneEntName, Hash modelHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* cutsceneEntName' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesCutsceneEntityExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0x499EF20C5DB25C59
// 0x58E67409
CUTSCENE::DOES_CUTSCENE_ENTITY_EXIST(char* cutsceneEntName, Hash modelHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* cutsceneEntName' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCutsceneSectionPlaying' func='yes'>
			<Overload retVal='int' descr='// 0x49010A6A396553D8
// 0x1026F0D6
CUTSCENE::GET_CUTSCENE_SECTION_PLAYING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetCutsceneTime' func='yes'>
			<Overload retVal='int' descr='// 0xE625BEABBAFFDAB9
// 0x53F5B5AB
CUTSCENE::GET_CUTSCENE_TIME();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetCutsceneTotalDuration' func='yes'>
			<Overload retVal='int' descr='// 0xEE53B14A19E480D4
// 0x0824EBE8
CUTSCENE::GET_CUTSCENE_TOTAL_DURATION();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityIndexOfCutsceneEntity' func='yes'>
			<Overload retVal='Entity' descr='// 0x0A2E9FDB9A8C62F6
// 0x1D09ABC7
CUTSCENE::GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY(char* cutsceneEntName, Hash modelHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* cutsceneEntName' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityIndexOfRegisteredEntity' func='yes'>
			<Overload retVal='Entity' descr='// 0xC0741A26499654CD
// 0x46D18755
CUTSCENE::GET_ENTITY_INDEX_OF_REGISTERED_ENTITY(char* cutsceneEntName, Hash modelHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* cutsceneEntName' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasCutsceneFinished' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7C0A893088881D57
// 0x5DED14B4
CUTSCENE::HAS_CUTSCENE_FINISHED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='HasCutsceneLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC59F528E9AB9F339
// 0xF9998582
CUTSCENE::HAS_CUTSCENE_LOADED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='HasThisCutsceneLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x228D3D94F8A11C3C
// 0x3C5619F2
CUTSCENE::HAS_THIS_CUTSCENE_LOADED(char* cutsceneName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* cutsceneName' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsCutsceneActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x991251AFC3981F84
// 0xCCE2FE9D
CUTSCENE::IS_CUTSCENE_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsCutscenePlaying' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD3C2E180A40F031E
// 0xA3A78392
CUTSCENE::IS_CUTSCENE_PLAYING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x011883f41211432a' func='yes'>
			<Overload retVal='void' descr='// 0x011883F41211432A
CUTSCENE::_0x011883F41211432A(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x06a3524161c502ba' func='yes'>
			<Overload retVal='void' descr='// 0x06A3524161C502BA
CUTSCENE::_0x06A3524161C502BA(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x06ee9048fd080382' func='yes'>
			<Overload retVal='void' descr='// 0x06EE9048FD080382
CUTSCENE::_0x06EE9048FD080382(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0abc54de641dc0fc' func='yes'>
			<Overload retVal='Any' descr='// 0x0ABC54DE641DC0FC
CUTSCENE::_0x0ABC54DE641DC0FC(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x20746f7b1032a3c7' func='yes'>
			<Overload retVal='void' descr='// 0x20746F7B1032A3C7
CUTSCENE::_0x20746F7B1032A3C7(BOOL p0, BOOL p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2a56c06ebef2b0d9' func='yes'>
			<Overload retVal='void' descr='// 0x2A56C06EBEF2B0D9
// 0x1E7DA95E
CUTSCENE::_0x2A56C06EBEF2B0D9(char* cutsceneEntName, Ped ped, Hash modelHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* cutsceneEntName' />
				<Param name='Ped ped' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2f137b508de238f2' func='yes'>
			<Overload retVal='void' descr='// 0x2F137B508DE238F2
// 0x8338DA1D
CUTSCENE::_0x2F137B508DE238F2(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x41faa8fb2ece8720' func='yes'>
			<Overload retVal='void' descr='// 0x41FAA8FB2ECE8720
// 0x28D54A7F
CUTSCENE::_0x41FAA8FB2ECE8720(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4c61c75bee8184c2' func='yes'>
			<Overload retVal='void' descr='// 0x4C61C75BEE8184C2
// 0x47DB08A9
CUTSCENE::_0x4C61C75BEE8184C2(char* p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4cebc1ed31e8925e' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4CEBC1ED31E8925E
CUTSCENE::_0x4CEBC1ED31E8925E(char* cutsceneName);
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 1.  

```'>
				<Param name='char* cutsceneName' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x583df8e3d4afbd98' func='yes'>
			<Overload retVal='int' descr='// 0x583DF8E3D4AFBD98
// 0x5AE68AE6
CUTSCENE::_0x583DF8E3D4AFBD98();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5edef0cf8c1dab3c' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5EDEF0CF8C1DAB3C
// 0xDBD88708
CUTSCENE::_0x5EDEF0CF8C1DAB3C();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x708bdd8cd795b043' func='yes'>
			<Overload retVal='void' descr='// 0x708BDD8CD795B043
// 0x4315A7C5
CUTSCENE::_0x708BDD8CD795B043();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x71b74d2ae19338d0' func='yes'>
			<Overload retVal='BOOL' descr='// 0x71B74D2AE19338D0
// 0x7B93CDAA
CUTSCENE::_0x71B74D2AE19338D0(int p0);
----------------------------------------------------------------------------------------------------
```

It&apos;s 100% an IS_CUTSCENE_* native.  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7f96f23fa9b73327' func='yes'>
			<Overload retVal='void' descr='// 0x7F96F23FA9B73327
CUTSCENE::_0x7F96F23FA9B73327(Hash modelHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8d9df6eca8768583' func='yes'>
			<Overload retVal='void' descr='// 0x8D9DF6ECA8768583
// 0x25A2CABC
CUTSCENE::_0x8D9DF6ECA8768583(int p0);
----------------------------------------------------------------------------------------------------
```

Example of usage:  

v_2 = SCRIPT::_30B4FA1C82DD4B9F(); // int _GET_ID_OF_NEXT_SCRIPT_IN_ENUMERATION()  

CUTSCENE::_8D9DF6ECA8768583(v_2);  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa0fe76168a189ddb' func='yes'>
			<Overload retVal='int' descr='// 0xA0FE76168A189DDB
CUTSCENE::_0xA0FE76168A189DDB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa1c996c2a744262e' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA1C996C2A744262E
CUTSCENE::_0xA1C996C2A744262E(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb56bbbcc2955d9cb' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB56BBBCC2955D9CB
// 0xDD8878E9
CUTSCENE::_0xB56BBBCC2955D9CB();
----------------------------------------------------------------------------------------------------
```

&quot;Can request assets for cutscene entity&quot;? (found in decompiled scripts)  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc61b86c9f61eb404' func='yes'>
			<Overload retVal='void' descr='// 0xC61B86C9F61EB404
// 0x35721A08
CUTSCENE::_0xC61B86C9F61EB404(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Toggles a value (bool) for cutscenes.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd00d76a7dfc9d852' func='yes'>
			<Overload retVal='void' descr='// 0xD00D76A7DFC9D852
CUTSCENE::_0xD00D76A7DFC9D852(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe36a98d8ab3d3c66' func='yes'>
			<Overload retVal='void' descr='// 0xE36A98D8AB3D3C66
// 0x04377C10
CUTSCENE::_0xE36A98D8AB3D3C66(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterEntityForCutscene' func='yes'>
			<Overload retVal='void' descr='// 0xE40C1C56DF95C2E8
// 0x7CBC3EC7
CUTSCENE::REGISTER_ENTITY_FOR_CUTSCENE(Ped cutscenePed, char* cutsceneEntName, int p2, Hash modelHash, in
----------------------------------------------------------------------------------------------------
);

```'>
				<Param name='Ped cutscenePed' />
				<Param name='char* cutsceneEntName' />
				<Param name='int p2' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterSynchronisedScriptSpeech' func='yes'>
			<Overload retVal='void' descr='// 0x2131046957F31B04
// 0xB60CFBB9
CUTSCENE::REGISTER_SYNCHRONISED_SCRIPT_SPEECH();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveCutscene' func='yes'>
			<Overload retVal='void' descr='// 0x440AF51A3462B86F
// 0x8052F533
CUTSCENE::REMOVE_CUTSCENE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='RequestCutscene' func='yes'>
			<Overload retVal='void' descr='// 0x7A86743F475D9E09
// 0xB5977853
CUTSCENE::REQUEST_CUTSCENE(char* cutsceneName, int p1);
----------------------------------------------------------------------------------------------------
```

p1: usually 8  

Cutscene list: pastebin.com/Bbj7ANpQ  

```'>
				<Param name='char* cutsceneName' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestCutsceneEx' func='yes'>
			<Overload retVal='void' descr='// 0xC23DE0E91C30B58C
// 0xD98F656A
CUTSCENE::_REQUEST_CUTSCENE_EX(char* cutsceneName, int p1, int p2);
----------------------------------------------------------------------------------------------------
```

Example:  

CUTSCENE::_0xC23DE0E91C30B58C(&quot;JOSH_1_INT_CONCAT&quot;, 13, 8);  

Cutscene list: pastebin.com/Bbj7ANpQ  

```'>
				<Param name='char* cutsceneName' />
				<Param name='int p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCutsceneFadeValues' func='yes'>
			<Overload retVal='void' descr='// 0x8093F23ABACCC7D4
// 0xD19EF0DD
CUTSCENE::SET_CUTSCENE_FADE_VALUES(BOOL p0, BOOL p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCutsceneOrigin' func='yes'>
			<Overload retVal='void' descr='// 0xB812B3FD1C01CF27
// 0xB0AD7792
CUTSCENE::SET_CUTSCENE_ORIGIN(float x, float y, float z, float p3, int p4);
----------------------------------------------------------------------------------------------------
```

p3 could be heading. Needs more research.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float p3' />
				<Param name='int p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCutscenePedComponentVariation' func='yes'>
			<Overload retVal='void' descr='// 0xBA01E7B6DEEFBBC9
// 0x6AF994A1
CUTSCENE::SET_CUTSCENE_PED_COMPONENT_VARIATION(char* cutsceneEntName, int p1, int p2, int p3, Hash modelH
----------------------------------------------------------------------------------------------------
;

```'>
				<Param name='char* cutsceneEntName' />
				<Param name='int p1' />
				<Param name='int p2' />
				<Param name='int p3' />
				<Param name='Hash modelH' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCutscenePedPropVariation' func='yes'>
			<Overload retVal='void' descr='// 0x0546524ADE2E9723
// 0x22E9A9DE
CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION(char* cutsceneEntName, int p1, int p2, int p3, Hash modelHash);
----------------------------------------------------------------------------------------------------
`

```

Thanks R*! ;)  

if ((l_161 == 0) || (l_161 == 2)) {  

    sub_2ea27(&quot;Trying to set Jimmy prop variation&quot;);  

    CUTSCENE::_0546524ADE2E9723(&quot;Jimmy_Boston&quot;, 1, 0, 0, 0);  

}  

```'>
				<Param name='char* cutsceneEntName' />
				<Param name='int p1' />
				<Param name='int p2' />
				<Param name='int p3' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCutsceneTriggerArea' func='yes'>
			<Overload retVal='void' descr='// 0x9896CE4721BE84BA
// 0x9D76D9DE
CUTSCENE::SET_CUTSCENE_TRIGGER_AREA(float p0, float p1, float p2, float p3, float p4, float p5);
----------------------------------------------------------------------------------------------------
```

Only used twice in R* scripts  

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartCutscene' func='yes'>
			<Overload retVal='void' descr='// 0x186D5CB5E7B0FF7B
// 0x210106F6
CUTSCENE::START_CUTSCENE(int p0);
----------------------------------------------------------------------------------------------------
```

some kind of flag. Usually 0.  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartCutsceneAtCoords' func='yes'>
			<Overload retVal='void' descr='// 0x1C9ADDA3244A1FBF
// 0x58BEA436
CUTSCENE::START_CUTSCENE_AT_COORDS(float x, float y, float z, int p3);
----------------------------------------------------------------------------------------------------
```

p3: some kind of flag. Usually 0.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopCutscene' func='yes'>
			<Overload retVal='void' descr='// 0xC7272775B4DC786E
// 0x5EE84DC7
CUTSCENE::STOP_CUTSCENE(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopCutsceneImmediately' func='yes'>
			<Overload retVal='void' descr='// 0xD220BDD222AC4A1E
// 0xF528A2AD
CUTSCENE::STOP_CUTSCENE_IMMEDIATELY();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='WasCutsceneSkipped' func='yes'>
			<Overload retVal='BOOL' descr='// 0x40C8656EDAEDD569
// 0xC9B6949D
CUTSCENE::WAS_CUTSCENE_SKIPPED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueAddBoolean' func='yes'>
			<Overload retVal='void' descr='// 0xF8B0F5A43E928C76
// 0x08174B90
DATAFILE::_ARRAY_VALUE_ADD_BOOLEAN(Any* arrayData, BOOL value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
				<Param name='BOOL value' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueAddFloat' func='yes'>
			<Overload retVal='void' descr='// 0x57A995FD75D37F56
// 0xE4302123
DATAFILE::_ARRAY_VALUE_ADD_FLOAT(Any* arrayData, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueAddInteger' func='yes'>
			<Overload retVal='void' descr='// 0xCABDB751D86FE93B
// 0xF29C0B36
DATAFILE::_ARRAY_VALUE_ADD_INTEGER(Any* arrayData, int value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueAddObject' func='yes'>
			<Overload retVal='Any*' descr='// 0x6889498B3E19C797
// 0xC174C71B
DATAFILE::_ARRAY_VALUE_ADD_OBJECT(Any* arrayData);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueAddString' func='yes'>
			<Overload retVal='void' descr='// 0x2F0661C155AEEEAA
// 0xF3C01350
DATAFILE::_ARRAY_VALUE_ADD_STRING(Any* arrayData, char* value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
				<Param name='char* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueAddVector3' func='yes'>
			<Overload retVal='void' descr='// 0x407F8D034F70F0C2
// 0x16F464B6
DATAFILE::_ARRAY_VALUE_ADD_VECTOR3(Any* arrayData, float valueX, float valueY, float valueZ);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
				<Param name='float valueX' />
				<Param name='float valueY' />
				<Param name='float valueZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueGetBoolean' func='yes'>
			<Overload retVal='BOOL' descr='// 0x50C1B2874E50C114
// 0xA2E5F921
DATAFILE::_ARRAY_VALUE_GET_BOOLEAN(Any* arrayData, int arrayIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
				<Param name='int arrayIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueGetFloat' func='yes'>
			<Overload retVal='float' descr='// 0xC0C527B525D7CFB5
// 0x08AD2CC2
DATAFILE::_ARRAY_VALUE_GET_FLOAT(Any* arrayData, int arrayIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
				<Param name='int arrayIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueGetInteger' func='yes'>
			<Overload retVal='int' descr='// 0x3E5AE19425CD74BE
// 0xBB120CFC
DATAFILE::_ARRAY_VALUE_GET_INTEGER(Any* arrayData, int arrayIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
				<Param name='int arrayIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueGetObject' func='yes'>
			<Overload retVal='Any*' descr='// 0x8B5FADCC4E3A145F
// 0xECE81278
DATAFILE::_ARRAY_VALUE_GET_OBJECT(Any* arrayData, int arrayIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
				<Param name='int arrayIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueGetSize' func='yes'>
			<Overload retVal='int' descr='// 0x065DB281590CEA2D
// 0xA8A21766
DATAFILE::_ARRAY_VALUE_GET_SIZE(Any* arrayData);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueGetString' func='yes'>
			<Overload retVal='char*' descr='// 0xD3F2FFEB8D836F52
// 0x93F985A6
DATAFILE::_ARRAY_VALUE_GET_STRING(Any* arrayData, int arrayIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
				<Param name='int arrayIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueGetType' func='yes'>
			<Overload retVal='int' descr='// 0x3A0014ADB172A3C5
// 0xFA2402C8
DATAFILE::_ARRAY_VALUE_GET_TYPE(Any* arrayData, int arrayIndex);
----------------------------------------------------------------------------------------------------
```

Types:  

1 = Boolean  

2 = Integer  

3 = Float  

4 = String  

5 = Vector3  

6 = Object  

7 = Array  

```'>
				<Param name='Any* arrayData' />
				<Param name='int arrayIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArrayValueGetVector3' func='yes'>
			<Overload retVal='Vector3' descr='// 0x8D2064E5B64A628A
// 0x80E3DA55
DATAFILE::_ARRAY_VALUE_GET_VECTOR3(Any* arrayData, int arrayIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* arrayData' />
				<Param name='int arrayIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='DatafileCreate' func='yes'>
			<Overload retVal='void' descr='// 0xD27058A1CA2B13EE
// 0x95F8A221
DATAFILE::DATAFILE_CREATE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='DatafileDelete' func='yes'>
			<Overload retVal='void' descr='// 0x9AB9C1CFC8862DFB
// 0xDEF31B0A
DATAFILE::DATAFILE_DELETE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='DatafileGetFileDict' func='yes'>
			<Overload retVal='char*' descr='// 0x906B778CA1DC72B6
// 0x86DDF9C2
DATAFILE::DATAFILE_GET_FILE_DICT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='DatafileIsSavePending' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBEDB96A7584AA8CF
// 0x5DCD0796
DATAFILE::DATAFILE_IS_SAVE_PENDING();
----------------------------------------------------------------------------------------------------
```

Example:  

if (!DATAFILE::_BEDB96A7584AA8CF())  

{  

    if (!g_109E3)  

	{  

        if (((sub_d4f() == 2) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))  

{  

            if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE())  

	{  

                g_17A8B = 0;  

            }  

            if (!g_D52C)  

	{  

                sub_730();  

            }  

        }  

    }  

}  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='LoadUgcFile' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC5238C011AF405E4
// 0x660C468E
DATAFILE::_LOAD_UGC_FILE(char* filename);
----------------------------------------------------------------------------------------------------
```

Loads a User-Generated Content (UGC) file. These files can be found in &quot;[GTA5]\data\ugc&quot; and &quot;[GTA5]
\common\patch\ugc&quot;. They seem to follow a naming convention, most likely of &quot;[name]_[part].ugc&quot;. See
 example below for usage.  

Returns whether or not the file was successfully loaded.  

Example:  

DATAFILE::_LOAD_UGC_FILE(&quot;RockstarPlaylists&quot;) // loads &quot;rockstarplaylists_00.ugc&quot;  

```'>
				<Param name='char* filename' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x01095c95cd46b624' func='yes'>
			<Overload retVal='BOOL' descr='// 0x01095C95CD46B624
// 0xB8515B2F
DATAFILE::_0x01095C95CD46B624(int p0);
----------------------------------------------------------------------------------------------------
```

if ((NETWORK::_597F8DBA9B206FC7() &gt; 0) && DATAFILE::_01095C95CD46B624(0)) {  

v_10 = DATAFILE::_GET_ROOT_OBJECT();  

v_11 = DATAFILE::_OBJECT_VALUE_GET_INTEGER(v_10, &quot;pt&quot;);  

sub_20202(2, v_11);  

a_0 += 1;  

		} else {   

a_0 += 1;  

		}  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x15ff52b809db2353' func='yes'>
			<Overload retVal='BOOL' descr='// 0x15FF52B809DB2353
DATAFILE::_0x15FF52B809DB2353(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x22da66936e0fff37' func='yes'>
			<Overload retVal='BOOL' descr='// 0x22DA66936E0FFF37
// 0xB41064A4
DATAFILE::_0x22DA66936E0FFF37(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2ed61456317b8178' func='yes'>
			<Overload retVal='void' descr='// 0x2ED61456317B8178
// 0x4E03F632
DATAFILE::_0x2ED61456317B8178();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4645de9980999e93' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4645DE9980999E93
// 0xDBB83E2B
DATAFILE::_0x4645DE9980999E93(char* p0, char* p1, char* p2, char* p3, char* type);
----------------------------------------------------------------------------------------------------
```

NOTE: &apos;p2&apos; might be some kind of array.  

```'>
				<Param name='char* p0' />
				<Param name='char* p1' />
				<Param name='char* p2' />
				<Param name='char* p3' />
				<Param name='char* type' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4dfdd9eb705f8140' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4DFDD9EB705F8140
// 0x0B4087F7
DATAFILE::_0x4DFDD9EB705F8140(BOOL* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x52818819057f2b40' func='yes'>
			<Overload retVal='BOOL' descr='// 0x52818819057F2B40
// 0xA4D1B30E
DATAFILE::_0x52818819057F2B40(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x648e7a5434af7969' func='yes'>
			<Overload retVal='BOOL' descr='// 0x648E7A5434AF7969
// 0x459F2683
DATAFILE::_0x648E7A5434AF7969(char* p0, Any* p1, BOOL p2, Any* p3, Any* p4, Any* p5, char* type);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='Any* p1' />
				<Param name='BOOL p2' />
				<Param name='Any* p3' />
				<Param name='Any* p4' />
				<Param name='Any* p5' />
				<Param name='char* type' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x692d808c34a82143' func='yes'>
			<Overload retVal='BOOL' descr='// 0x692D808C34A82143
// 0xBB6321BD
DATAFILE::_0x692D808C34A82143(char* p0, float p1, char* type);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='float p1' />
				<Param name='char* type' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6cc86e78358d5119' func='yes'>
			<Overload retVal='void' descr='// 0x6CC86E78358D5119
DATAFILE::_0x6CC86E78358D5119();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x83bcce3224735f05' func='yes'>
			<Overload retVal='BOOL' descr='// 0x83BCCE3224735F05
// 0x768CBB35
DATAFILE::_0x83BCCE3224735F05(char* filename);
----------------------------------------------------------------------------------------------------
```

Saves a JSON file? It might even be saving it to the Rockstar Cloud, but I have no way of verifying 
this  

&quot;shrinkletter.c4&quot;, line ~378:  

DATAFILE::DATAFILE_CREATE();  

v_5 = DATAFILE::_GET_ROOT_OBJECT();  

DATAFILE::_OBJECT_VALUE_ADD_INTEGER(v_5, &quot;in&quot;, a_2);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;st&quot;, &a_2._f1);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;mp&quot;, &a_2._f2);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;ms&quot;, &a_2._f3);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;sc&quot;, &a_2._f5);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;pr&quot;, &a_2._f6);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;fa&quot;, &a_2._f7);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;sm&quot;, &a_2._f8);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;kp&quot;, &a_2._f9);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;sv&quot;, &a_2._fA);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;yo&quot;, &a_2._fB);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;fi&quot;, &a_2._fC);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;rc&quot;, &a_2._fD);  

DATAFILE::_OBJECT_VALUE_ADD_STRING(v_5, &quot;co&quot;, &a_2._fE);  

DATAFILE::_OBJECT_VALUE_ADD_INTEGER(v_5, &quot;su&quot;, a_2._fF);  

DATAFILE::_83BCCE3224735F05(&quot;gta5/psych/index.json&quot;); // saves the file?  

```'>
				<Param name='char* filename' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8f5ea1c01d65a100' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8F5EA1C01D65A100
// 0x9DB63CFF
DATAFILE::_0x8F5EA1C01D65A100(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9cb0bfa7a9342c3d' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9CB0BFA7A9342C3D
// 0xCB6A351E
DATAFILE::_0x9CB0BFA7A9342C3D(int p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa5efc3e847d60507' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA5EFC3E847D60507
// 0xD96860FC
DATAFILE::_0xA5EFC3E847D60507(char* p0, char* p1, char* p2, char* p3, BOOL p4);
----------------------------------------------------------------------------------------------------
```

NOTE: &apos;p1&apos; might be some kind of array.  

```'>
				<Param name='char* p0' />
				<Param name='char* p1' />
				<Param name='char* p2' />
				<Param name='char* p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa69ac4ade82b57a4' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA69AC4ADE82B57A4
// 0xE8D56DA2
DATAFILE::_0xA69AC4ADE82B57A4(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xad6875bbc0fc899c' func='yes'>
			<Overload retVal='void' descr='// 0xAD6875BBC0FC899C
// 0x621388FF
DATAFILE::_0xAD6875BBC0FC899C(Blip x);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip x' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc55854c7d7274882' func='yes'>
			<Overload retVal='void' descr='// 0xC55854C7D7274882
// 0xF11F956F
DATAFILE::_0xC55854C7D7274882();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc84527e235fca219' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC84527E235FCA219
// 0xF09157B0
DATAFILE::_0xC84527E235FCA219(char* p0, BOOL p1, char* p2, Any* p3, Any* p4, char* type, BOOL p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='BOOL p1' />
				<Param name='char* p2' />
				<Param name='Any* p3' />
				<Param name='Any* p4' />
				<Param name='char* type' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf8cc1ebe0b62e29f' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF8CC1EBE0B62E29F
DATAFILE::_0xF8CC1EBE0B62E29F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfccae5b92a830878' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFCCAE5B92A830878
DATAFILE::_0xFCCAE5B92A830878(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueAddArray' func='yes'>
			<Overload retVal='Any*' descr='// 0x5B11728527CA6E5F
// 0x03939B8D
DATAFILE::_OBJECT_VALUE_ADD_ARRAY(Any* objectData, char* key);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueAddBoolean' func='yes'>
			<Overload retVal='void' descr='// 0x35124302A556A325
// 0x9B29D99B
DATAFILE::_OBJECT_VALUE_ADD_BOOLEAN(Any* objectData, char* key, BOOL value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
				<Param name='BOOL value' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueAddFloat' func='yes'>
			<Overload retVal='void' descr='// 0xC27E1CC2D795105E
// 0xE972CACF
DATAFILE::_OBJECT_VALUE_ADD_FLOAT(Any* objectData, char* key, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueAddInteger' func='yes'>
			<Overload retVal='void' descr='// 0xE7E035450A7948D5
// 0xEFCF554A
DATAFILE::_OBJECT_VALUE_ADD_INTEGER(Any* objectData, char* key, int value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueAddObject' func='yes'>
			<Overload retVal='Any*' descr='// 0xA358F56F10732EE1
// 0x96A8E05F
DATAFILE::_OBJECT_VALUE_ADD_OBJECT(Any* objectData, char* key);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueAddString' func='yes'>
			<Overload retVal='void' descr='// 0x8FF3847DADD8E30C
// 0xD437615C
DATAFILE::_OBJECT_VALUE_ADD_STRING(Any* objectData, char* key, char* value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
				<Param name='char* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueAddVector3' func='yes'>
			<Overload retVal='void' descr='// 0x4CD49B76338C7DEE
// 0x75FC6C3C
DATAFILE::_OBJECT_VALUE_ADD_VECTOR3(Any* objectData, char* key, float valueX, float valueY, float valueZ)
----------------------------------------------------------------------------------------------------
``'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
				<Param name='float valueX' />
				<Param name='float valueY' />
				<Param name='float valueZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueGetArray' func='yes'>
			<Overload retVal='Any*' descr='// 0x7A983AA9DA2659ED
// 0x1F2F7D00
DATAFILE::_OBJECT_VALUE_GET_ARRAY(Any* objectData, char* key);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueGetBoolean' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1186940ED72FFEEC
// 0x8876C872
DATAFILE::_OBJECT_VALUE_GET_BOOLEAN(Any* objectData, char* key);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueGetFloat' func='yes'>
			<Overload retVal='float' descr='// 0x06610343E73B9727
// 0xA92C1AF4
DATAFILE::_OBJECT_VALUE_GET_FLOAT(Any* objectData, char* key);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueGetInteger' func='yes'>
			<Overload retVal='int' descr='// 0x78F06F6B1FB5A80C
// 0xA6C68693
DATAFILE::_OBJECT_VALUE_GET_INTEGER(Any* objectData, char* key);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueGetObject' func='yes'>
			<Overload retVal='Any*' descr='// 0xB6B9DDC412FCEEE2
// 0xC9C13D8D
DATAFILE::_OBJECT_VALUE_GET_OBJECT(Any* objectData, char* key);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueGetString' func='yes'>
			<Overload retVal='char*' descr='// 0x3D2FD9E763B24472
// 0x942160EC
DATAFILE::_OBJECT_VALUE_GET_STRING(Any* objectData, char* key);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueGetType' func='yes'>
			<Overload retVal='int' descr='// 0x031C55ED33227371
// 0x2678342A
DATAFILE::_OBJECT_VALUE_GET_TYPE(Any* objectData, char* key);
----------------------------------------------------------------------------------------------------
```

Types:  

1 = Boolean  

2 = Integer  

3 = Float  

4 = String  

5 = Vector3  

6 = Object  

7 = Array  

```'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectValueGetVector3' func='yes'>
			<Overload retVal='Vector3' descr='// 0x46CD3CB66E0825CC
// 0xE84A127A
DATAFILE::_OBJECT_VALUE_GET_VECTOR3(Any* objectData, char* key);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* objectData' />
				<Param name='char* key' />
			</Overload>
		</KeyWord>
		<KeyWord name='DecorExistOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0x05661B80A8C9165F
// 0x74EF9C40
DECORATOR::DECOR_EXIST_ON(Entity entity, char* propertyName);
----------------------------------------------------------------------------------------------------
```

Returns whether or not the specified property is set for the entity.  

```'>
				<Param name='Entity entity' />
				<Param name='char* propertyName' />
			</Overload>
		</KeyWord>
		<KeyWord name='DecorGetBool' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDACE671663F2F5DB
// 0xDBCE51E0
DECORATOR::DECOR_GET_BOOL(Entity entity, char* propertyName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='char* propertyName' />
			</Overload>
		</KeyWord>
		<KeyWord name='DecorGetFloat' func='yes'>
			<Overload retVal='float' descr='// 0x6524A2F114706F43
DECORATOR::_DECOR_GET_FLOAT(Entity entity, char* propertyName);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0x8DE5382F  

The native name is correct but the db automatically prefixes &quot;_&quot; to unknown natives when changed.  


```'>
				<Param name='Entity entity' />
				<Param name='char* propertyName' />
			</Overload>
		</KeyWord>
		<KeyWord name='DecorGetInt' func='yes'>
			<Overload retVal='int' descr='// 0xA06C969B02A97298
// 0xDDDE59B5
DECORATOR::DECOR_GET_INT(Entity entity, char* propertyName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='char* propertyName' />
			</Overload>
		</KeyWord>
		<KeyWord name='DecorIsRegisteredAsType' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4F14F9F870D6FBC8
// 0x7CF0971D
DECORATOR::DECOR_IS_REGISTERED_AS_TYPE(char* propertyName, int type);
----------------------------------------------------------------------------------------------------
```

Is property of that type.  

enum eDecorType  

{  

	DECOR_TYPE_FLOAT = 1,  

	DECOR_TYPE_BOOL,  

	DECOR_TYPE_INT,  

	DECOR_TYPE_UNK,  

	DECOR_TYPE_TIME  

};  

```'>
				<Param name='char* propertyName' />
				<Param name='int type' />
			</Overload>
		</KeyWord>
		<KeyWord name='DecorRegister' func='yes'>
			<Overload retVal='void' descr='// 0x9FD90732F56403CE
// 0x68BD42A9
DECORATOR::DECOR_REGISTER(char* propertyName, int type);
----------------------------------------------------------------------------------------------------
```

Found this in standard_global_init.c4 line 1898  

void sub_523a() {  

    DECORATOR::DECOR_REGISTER(&quot;Player_Vehicle&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;PV_Slot&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;Previous_Owner&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;Sprayed_Vehicle_Decorator&quot;, 2);  

    DECORATOR::DECOR_REGISTER(&quot;Sprayed_Vehicle_Timer_Dec&quot;, 5);  

    DECORATOR::DECOR_REGISTER(&quot;Vehicle_Reward&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;Vehicle_Reward_Teams&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;Skill_Blocker&quot;, 2);  

    DECORATOR::DECOR_REGISTER(&quot;TargetPlayerForTeam&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;XP_Blocker&quot;, 2);  

    DECORATOR::DECOR_REGISTER(&quot;CrowdControlSetUp&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;Bought_Drugs&quot;, 2);  

    DECORATOR::DECOR_REGISTER(&quot;HeroinInPossession&quot;, 1);  

    DECORATOR::DECOR_REGISTER(&quot;CokeInPossession&quot;, 1);  

    DECORATOR::DECOR_REGISTER(&quot;WeedInPossession&quot;, 1);  

    DECORATOR::DECOR_REGISTER(&quot;MethInPossession&quot;, 1);  

    DECORATOR::DECOR_REGISTER(&quot;bombdec&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;bombdec1&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;bombowner&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;noPlateScan&quot;, 2);  

    DECORATOR::DECOR_REGISTER(&quot;prisonBreakBoss&quot;, 2);  

    DECORATOR::DECOR_REGISTER(&quot;cashondeadbody&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;MissionType&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;MatchId&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;TeamId&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;Not_Allow_As_Saved_Veh&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;Veh_Modded_By_Player&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;MPBitset&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;MC_EntityID&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;MC_ChasePedID&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;MC_Team0_VehDeliveredRules&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;MC_Team1_VehDeliveredRules&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;MC_Team2_VehDeliveredRules&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;MC_Team3_VehDeliveredRules&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;AttributeDamage&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;GangBackup&quot;, 3);  

    DECORATOR::DECOR_REGISTER(&quot;CreatedByPegasus&quot;, 2);  

    DECORATOR::DECOR_REGISTER(&quot;BeforeCorona_0&quot;, 2);  

}  

-----------------------------------------------------------------------  

Defines type of property for property name.  

enum eDecorType  

{  

	DECOR_TYPE_FLOAT = 1,  

	DECOR_TYPE_BOOL,  

	DECOR_TYPE_INT,  

	DECOR_TYPE_UNK,  

	DECOR_TYPE_TIME  

};  

```'>
				<Param name='char* propertyName' />
				<Param name='int type' />
			</Overload>
		</KeyWord>
		<KeyWord name='DecorRegisterLock' func='yes'>
			<Overload retVal='void' descr='// 0xA9D14EEA259F9248
// 0x7F3F1C02
DECORATOR::DECOR_REGISTER_LOCK();
----------------------------------------------------------------------------------------------------
```

Called after all decorator type initializations.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='DecorRemove' func='yes'>
			<Overload retVal='BOOL' descr='// 0x00EE9F297C738720
// 0xE0E2640B
DECORATOR::DECOR_REMOVE(Entity entity, char* propertyName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='char* propertyName' />
			</Overload>
		</KeyWord>
		<KeyWord name='DecorSetBool' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6B1E8E2ED1335B71
// 0x8E101F5C
DECORATOR::DECOR_SET_BOOL(Entity entity, char* propertyName, BOOL value);
----------------------------------------------------------------------------------------------------
```

This function sets metadata of type bool to specified entity.  

```'>
				<Param name='Entity entity' />
				<Param name='char* propertyName' />
				<Param name='BOOL value' />
			</Overload>
		</KeyWord>
		<KeyWord name='DecorSetFloat' func='yes'>
			<Overload retVal='BOOL' descr='// 0x211AB1DD8D0F363A
DECORATOR::_DECOR_SET_FLOAT(Entity entity, char* propertyName, float value);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0xBC7BD5CB  

The native name is correct but the db automatically prefixes &quot;_&quot; to unknown natives when changed.  


```'>
				<Param name='Entity entity' />
				<Param name='char* propertyName' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='DecorSetInt' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0CE3AA5E1CA19E10
// 0xDB718B21
DECORATOR::DECOR_SET_INT(Entity entity, char* propertyName, int value);
----------------------------------------------------------------------------------------------------
```

Sets property to int.  

```'>
				<Param name='Entity entity' />
				<Param name='char* propertyName' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='DecorSetTime' func='yes'>
			<Overload retVal='BOOL' descr='// 0x95AED7B8E39ECAA4
// 0xBBAEEF94
DECORATOR::DECOR_SET_TIME(Entity entity, char* propertyName, int timestamp);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='char* propertyName' />
				<Param name='int timestamp' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x241fca5b1aa14f75' func='yes'>
			<Overload retVal='BOOL' descr='// 0x241FCA5B1AA14F75
DECORATOR::_0x241FCA5B1AA14F75();
----------------------------------------------------------------------------------------------------
```

------------------------  

| Belongs in DLC2 |  

------------------------  

Console Hash: 0x0AF83036  

Only used once in scripts, in maintransition.  

maintransition.c4, line ~82432:  

if (PED::_7350823473013C02(PLAYER::PLAYER_PED_ID()) && (DECORATOR::_241FCA5B1AA14F75() == 0)) {  

    g_2542A5 = a_1; // &apos;g_2542A5&apos; used in &apos;building_controller.ysc&apos; for IPL stuff?  

    return 1;  

}  

Likely used solely for the players ped. The function it&apos;s in seems to only be used for initializatio
n/quitting. Called among natives to discard scaleforms, disable frontend, fading in/out, etc. Neighb
oring strings to some calls include &quot;HUD_JOINING&quot;, &quot;HUD_QUITTING&quot;.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetIsLoadingScreenActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x10D0A8F259E93EC9
// 0x517B601B
DLC::GET_IS_LOADING_SCREEN_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsDlcPresent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x812595A0644CE1DE
// 0x1F321943
DLC::IS_DLC_PRESENT(Hash dlcHash);
----------------------------------------------------------------------------------------------------
```

Example:  

DLC2::IS_DLC_PRESENT($\mpbusiness2\);  

($ = gethashkey)  

bruteforce these:  

0xB119F6D  

0x96F02EE6  

```'>
				<Param name='Hash dlcHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='LoadMpDlcMaps' func='yes'>
			<Overload retVal='void' descr='// 0x0888C3502DBBEEF5
DLC::_LOAD_MP_DLC_MAPS();
----------------------------------------------------------------------------------------------------
```

This loads the GTA:O dlc map parts (high end garages, apartments).  

Works in singleplayer.  

In order to use GTA:O heist IPL&apos;s you have to call this native with the following params: _9BAE5AD25
08DF078(1);  

console hash: 0xC65586A9  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='Nullify' func='yes'>
			<Overload retVal='BOOL' descr='// 0x46E2B844905BC5F0
// 0x6087C10C
DLC::_NULLIFY(Any* variable, Any unused);
----------------------------------------------------------------------------------------------------
```

Sets the value of the specified variable to 0.  

Always returns true.  

bool _NULLIFY(void* variable, int unused)  

{  

    *variable = NULL;  

    return true;  

}  

```'>
				<Param name='Any* variable' />
				<Param name='Any unused' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8d30f648014a92b5' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8D30F648014A92B5
// 0xF69B729C
DLC::_0x8D30F648014A92B5();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9489659372a81585' func='yes'>
			<Overload retVal='Any' descr='// 0x9489659372A81585
// 0xC2169164
DLC::_0x9489659372A81585();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa213b11dff526300' func='yes'>
			<Overload retVal='Any' descr='// 0xA213B11DFF526300
// 0xF79A97F5
DLC::_0xA213B11DFF526300();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd7c10c4a637992c9' func='yes'>
			<Overload retVal='void' descr='// 0xD7C10C4A637992C9
DLC::_0xD7C10C4A637992C9();
----------------------------------------------------------------------------------------------------
```

Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888
C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).  

The original (and wrong) definition is below:  

This unload the GTA:O DLC map parts (like high end garages/apartments).  

Works in singleplayer.  

console hash: 0x8BF60FC3  

```

----------------------------------------------------------------------------------------------------

Old name: _LOAD_SP_DLC_MAPS'>
			</Overload>
		</KeyWord>
		<KeyWord name='_LOAD_SP_DLC_MAPS' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: N_0xd7c10c4a637992c9' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='N_0xf2e07819ef1a5289' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF2E07819EF1A5289
// 0x881B1FDB
DLC::_0xF2E07819EF1A5289();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='ApplyForceToEntity' func='yes'>
			<Overload retVal='void' descr='// 0xC5F68BE9613E2D18
// 0xC1C0855A
ENTITY::APPLY_FORCE_TO_ENTITY(Entity entity, int forceFlags, float x, float y, float z, float offX, flo
----------------------------------------------------------------------------------------------------
ffY, float offZ, int boneIndex, BOOL isDirectionRel, BOOL ignoreUpVec, BOOL isForceRel, BOOL p12
, BOOL p13);

```

```

Documented here:  

gtaforums.com/topic/885669-precisely-define-object-physics/  

gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/  

forceFlags:  

First bit (lowest): Strong force flag, factor 100  

Second bit: Unkown flag  

Third bit: Momentum flag=1 (vector (x,y,z) is a momentum, more research needed)  

If higher bits are unequal 0 the function doesn&apos;t applay any forces at all.  

(As integer possible values are 0-7)  

0: weak force  

1: strong force  

2: same as 0 (2nd bit?)  

3: same as 1  

4: weak momentum  

5: strong momentum  

6: same as 4  

7: same as 5  

isDirectionRel: vector defined in local (body-fixed) coordinate frame  

isForceRel: if true the force gets multiplied with the objects mass (this is why it was known as hig
hForce) and different objects will have the same acceleration.  

```'>
				<Param name='Entity entity' />
				<Param name='int forceFlags' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float offX' />
			</Overload>
		</KeyWord>
		<KeyWord name='ApplyForceToEntityCenterOfMass' func='yes'>
			<Overload retVal='void' descr='// 0x18FF00FC7EFF559E
// 0x28924E98
ENTITY::APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(Entity entity, int forceType, float x, float y, float z, B
----------------------------------------------------------------------------------------------------
p5, BOOL isDirectionRel, BOOL isForceRel, BOOL p8);

```'>
				<Param name='Entity entity' />
				<Param name='int forceType' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='AttachEntityToEntity' func='yes'>
			<Overload retVal='void' descr='// 0x6B9BBD38AB0796DF
// 0xEC024237
ENTITY::ATTACH_ENTITY_TO_ENTITY(Entity entity1, Entity entity2, int boneIndex, float xPos, float yPos, 
----------------------------------------------------------------------------------------------------
t zPos, float xRot, float yRot, float zRot, BOOL p9, BOOL useSoftPinning, BOOL collision, BOOL i
sPed, int vertexIndex, BOOL fixedRot);

```

```

Attaches entity1 to bone (boneIndex) of entity2.  

boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use th
e index for attaching to specific bones. entity1 will be attached to entity2&apos;s centre if bone index 
given doesn&apos;t correspond to bone indexes for that entity type.  

useSoftPinning - when 2 entities with collision collide and form into a ball they will break the att
achment of the entity that they were attached to. Or when an entity is attached far away and then th
e resets.  

collision - controls collision between the two entities (FALSE disables collision).  

isPed - pitch doesnt work when false and roll will only work on negative numbers (only peds)  

vertexIndex - position of vertex  

fixedRot - if false it ignores entity vector  

```'>
				<Param name='Entity entity1' />
				<Param name='Entity entity2' />
				<Param name='int boneIndex' />
				<Param name='float xPos' />
				<Param name='float yPos' />
			</Overload>
		</KeyWord>
		<KeyWord name='AttachEntityToEntityPhysically' func='yes'>
			<Overload retVal='void' descr='// 0xC3675780C92F90F9
// 0x0547417F
ENTITY::ATTACH_ENTITY_TO_ENTITY_PHYSICALLY(Entity entity1, Entity entity2, int boneIndex1, int boneInde
----------------------------------------------------------------------------------------------------
float xPos1, float yPos1, float zPos1, float xPos2, float yPos2, float zPos2, float xRot, float 
yRot, float zRot, float breakForce, BOOL fixedRot, BOOL p15, BOOL collision, BOOL teleport, int p18)
;

```

```

breakForce is the amount of force required to break the bond.  

fixedRot - if false it ignores entity vector  

p15 - is 1 or 0 in scripts - unknoun what it does  

collision - controls collision between the two entities (FALSE disables collision).  

teleport - do not teleport entity to be attached to the position of the bone Index of the target ent
ity (if 1, entity will not be teleported to target bone)  

p18 - is always 2 in scripts.  

-------------------------  

teleport is not exactly &quot;doNotTeleport&quot;. What it actually does is the following:  

if true, entities will be attached as if loosely tethered, up to the maximum offset position specifi
ed. Almost as if attached by an invisible rope.  

if false, entities will be attached in a fixed position as specified in the offset position.  

When p15 = true, it seems to force teleport to false.  

It also lets the Rotation params actually work.  

```'>
				<Param name='Entity entity1' />
				<Param name='Entity entity2' />
				<Param name='int boneIndex1' />
				<Param name='int boneInde' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearEntityLastDamageEntity' func='yes'>
			<Overload retVal='Any' descr='// 0xA72CD9CA74A5ECBA
// 0x2B83F43B
ENTITY::CLEAR_ENTITY_LAST_DAMAGE_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateForcedObject' func='yes'>
			<Overload retVal='void' descr='// 0x150E808B375A385A
// 0x335190A2
ENTITY::CREATE_FORCED_OBJECT(float x, float y, float z, Any p3, Hash modelHash, BOOL p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Any p3' />
				<Param name='Hash modelHash' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateModelHide' func='yes'>
			<Overload retVal='void' descr='// 0x8A97BCA30A0CE478
// 0x7BD5CF2F
ENTITY::CREATE_MODEL_HIDE(float x, float y, float z, float radius, Hash model, BOOL p5);
----------------------------------------------------------------------------------------------------
```

p5 = sets as true in scripts  

Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with 
objects as well.  

Network players do not see changes done with this.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Hash model' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateModelHideExcludingScriptObjects' func='yes'>
			<Overload retVal='void' descr='// 0x3A52AE588830BF7F
// 0x07AAF22C
ENTITY::CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS(float x, float y, float z, float radius, Hash model,
----------------------------------------------------------------------------------------------------
L p5);

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateModelSwap' func='yes'>
			<Overload retVal='void' descr='// 0x92C47782FDA8B2A3
// 0x0BC12F9E
ENTITY::CREATE_MODEL_SWAP(float x, float y, float z, float radius, Hash originalModel, Hash newModel, B
----------------------------------------------------------------------------------------------------
p6);

```

```

Only works with objects!  

Network players do not see changes done with this.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Hash originalModel' />
				<Param name='Hash newModel' />
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteEntity' func='yes'>
			<Overload retVal='void' descr='// 0xAE3CBE5BF394C9C9
// 0xFAA3D236
ENTITY::DELETE_ENTITY(Entity* entity);
----------------------------------------------------------------------------------------------------
```

Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.  

```'>
				<Param name='Entity* entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='DetachEntity' func='yes'>
			<Overload retVal='void' descr='// 0x961AC54BF0613F5D
// 0xC8EFCB41
ENTITY::DETACH_ENTITY(Entity entity, BOOL p1, BOOL collision);
----------------------------------------------------------------------------------------------------
```

p1 and p2 have no effect   

maybe a quick disassembly will tell us what they do  

the statement below seems to be false. when I tried it with 2 vehicles:  

if p2 is set to true, the both entities won&apos;t collide with the other until the distance between them
 is above 4 meters.  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL p1' />
				<Param name='BOOL collision' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesEntityBelongToThisScript' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDDE6DF5AE89981D2
// 0xACFEB3F9
ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(Entity entity, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesEntityExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7239B21A38F536BA
// 0x3AC90869
ENTITY::DOES_ENTITY_EXIST(Object entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesEntityHaveDrawable' func='yes'>
			<Overload retVal='BOOL' descr='// 0x060D6E96F8B8E48D
// 0xA5B33300
ENTITY::DOES_ENTITY_HAVE_DRAWABLE(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesEntityHavePhysics' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDA95EA3317CC5064
// 0x9BCD2979
ENTITY::DOES_ENTITY_HAVE_PHYSICS(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FindAnimEventPhase' func='yes'>
			<Overload retVal='BOOL' descr='// 0x07F1BE2BCCAA27A7
// 0xC41DDA62
ENTITY::FIND_ANIM_EVENT_PHASE(char* animDictionary, char* animName, char* p2, Any* p3, Any* p4);
----------------------------------------------------------------------------------------------------
```

In the script &quot;player_scene_t_bbfight.c4&quot;:  

&quot;if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4/*16*/], v_9, &v_A, &v_B))&quot;  

-- &l_16E (p0) is requested as an anim dictionary earlier in the script.  

-- &l_19F[v_4/*16*/] (p1) is used in other natives in the script as the &quot;animation&quot; param.  

-- v_9 (p2) is instantiated as &quot;victim_fall&quot;; I&apos;m guessing that&apos;s another anim  

--v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for:   


&quot;if (v_A &lt; ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))&quot;  

Both v_A and v_B are seemingly used to contain both Vector3&apos;s and floats, so I can&apos;t say what either
 really is other than that they are both output parameters. p4 looks more like a *Vector3 though  

-alphazolam  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='char* animDictionary' />
				<Param name='char* animName' />
				<Param name='char* p2' />
				<Param name='Any* p3' />
				<Param name='Any* p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='ForceEntityAiAndAnimationUpdate' func='yes'>
			<Overload retVal='void' descr='// 0x40FDEDB72F8293B2
// 0x58D9775F
ENTITY::FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(Entity entity);
----------------------------------------------------------------------------------------------------
```

Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is do
ne on initial enter.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FreezeEntityPosition' func='yes'>
			<Overload retVal='void' descr='// 0x428CA6DBD1094446
// 0x65C16D57
ENTITY::FREEZE_ENTITY_POSITION(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

No, this should be called SET_ENTITY_KINEMATIC. It does more than just &quot;freeze&quot; it&apos;s position.  

^Rockstar Devs named it like that, Now cry about it.  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetAnimDuration' func='yes'>
			<Overload retVal='float' descr='// 0xFEDDF04D62B8D790
ENTITY::_GET_ANIM_DURATION(char* animDict, char* animName);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0x8B5E3E3D = GET_ANIM_DURATION  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='char* animDict' />
				<Param name='char* animName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCollisionNormalOfLastHitForEntity' func='yes'>
			<Overload retVal='Vector3' descr='// 0xE465D4AB7CA6AE72
// 0xAB415C07
ENTITY::GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityAlpha' func='yes'>
			<Overload retVal='int' descr='// 0x5A47B3B5E63E94C6
// 0x1560B017
ENTITY::GET_ENTITY_ALPHA(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityAnimCurrentTime' func='yes'>
			<Overload retVal='float' descr='// 0x346D81500D088F42
// 0x83943F41
ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(Entity entity, char* animDict, char* animName);
----------------------------------------------------------------------------------------------------
```

Returns a float value representing animation&apos;s current playtime with respect to its total playtime. 
This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.  

Example:  

0.000000 - mark the starting of animation.  

0.500000 - mark the midpoint of the animation.  

1.000000 - mark the end of animation.  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Entity entity' />
				<Param name='char* animDict' />
				<Param name='char* animName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityAnimTotalTime' func='yes'>
			<Overload retVal='float' descr='// 0x50BD2730B191E360
// 0x433A9D18
ENTITY::GET_ENTITY_ANIM_TOTAL_TIME(Entity entity, char* animDict, char* animName);
----------------------------------------------------------------------------------------------------
```

Returns a float value representing animation&apos;s total playtime in milliseconds.  

Example:  

GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),&quot;amb@world_human_yoga@female@base&quot;,&quot;base_b&quot;)   

return 20800.000000  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Entity entity' />
				<Param name='char* animDict' />
				<Param name='char* animName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityAttachedTo' func='yes'>
			<Overload retVal='Entity' descr='// 0x48C2BED9180FE123
// 0xFE1589F9
ENTITY::GET_ENTITY_ATTACHED_TO(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityBoneIndexByName' func='yes'>
			<Overload retVal='int' descr='// 0xFB71170B7E76ACBA
// 0xE4ECAC22
ENTITY::GET_ENTITY_BONE_INDEX_BY_NAME(Entity entity, char* boneName);
----------------------------------------------------------------------------------------------------
```

Returns the index of the bone. If the bone was not found, -1 will be returned.   

list:  

pastebin.com/D7JMnX1g  

BoneNames:  

	chassis,  

	windscreen,  

	seat_pside_r,  

	seat_dside_r,  

	bodyshell,  

	suspension_lm,  

	suspension_lr,  

	platelight,  

	attach_female,  

	attach_male,  

	bonnet,  

	boot,  

	chassis_dummy,	//Center of the dummy  

	chassis_Control,	//Not found yet  

	door_dside_f,	//Door left, front  

	door_dside_r,	//Door left, back  

	door_pside_f,	//Door right, front  

	door_pside_r,	//Door right, back  

	Gun_GripR,  

	windscreen_f,  

	platelight,	//Position where the light above the numberplate is located  

	VFX_Emitter,  

	window_lf,	//Window left, front  

	window_lr,	//Window left, back  

	window_rf,	//Window right, front  

	window_rr,	//Window right, back  

	engine,	//Position of the engine  

	gun_ammo,  

	ROPE_ATTATCH,	//Not misspelled. In script &quot;finale_heist2b.c4&quot;.  

	wheel_lf,	//Wheel left, front  

	wheel_lr,	//Wheel left, back  

	wheel_rf,	//Wheel right, front  

	wheel_rr,	//Wheel right, back  

	exhaust,	//Exhaust. shows only the position of the stock-exhaust  

	overheat,	//A position on the engine(not exactly sure, how to name it)  

	misc_e,	//Not a car-bone.  

	seat_dside_f,	//Driver-seat  

	seat_pside_f,	//Seat next to driver  

	Gun_Nuzzle,  

	seat_r  

I doubt that the function is case-sensitive, since I found a &quot;Chassis&quot; and a &quot;chassis&quot;. - Just teste
d: Definitely not case-sensitive.  

```'>
				<Param name='Entity entity' />
				<Param name='char* boneName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityCollisonDisabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCCF1E97BEFDAE480
ENTITY::_GET_ENTITY_COLLISON_DISABLED(Entity entity);
----------------------------------------------------------------------------------------------------
```

console hash: 0xE8C0C629  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0x3FEF770D40960D5A
// 0x1647F1CB
ENTITY::GET_ENTITY_COORDS(Entity entity, BOOL alive);
----------------------------------------------------------------------------------------------------
Gets the current coordinates for a specified entity.

## Parameters

* **entity**: The entity to get the coordinates from.

* **alive**: Unused by the game, potentially used by debug builds of GTA in order to assert whether 
or not an entity was alive.

## Return value

The current entity coordinates.'>
				<Param name='Entity entity' />
				<Param name='BOOL alive' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityForwardVector' func='yes'>
			<Overload retVal='Vector3' descr='// 0x0A794A5A57F8DF91
// 0x84DCECBF
ENTITY::GET_ENTITY_FORWARD_VECTOR(Entity entity);
----------------------------------------------------------------------------------------------------
```

Gets the entity&apos;s forward vector.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityForwardX' func='yes'>
			<Overload retVal='float' descr='// 0x8BB4EF4214E0E6D5
// 0x49FAE914
ENTITY::GET_ENTITY_FORWARD_X(Entity entity);
----------------------------------------------------------------------------------------------------
```

Gets the X-component of the entity&apos;s forward vector.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityForwardY' func='yes'>
			<Overload retVal='float' descr='// 0x866A4A5FAE349510
// 0x9E2F917C
ENTITY::GET_ENTITY_FORWARD_Y(Entity entity);
----------------------------------------------------------------------------------------------------
```

Gets the Y-component of the entity&apos;s forward vector.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityHeading' func='yes'>
			<Overload retVal='float' descr='// 0xE83D4F9BA2A38914
// 0x972CC383
ENTITY::GET_ENTITY_HEADING(Entity entity);
----------------------------------------------------------------------------------------------------
```

Returns the heading of the entity in degrees. Also know as the &quot;Yaw&quot; of an entity.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityHealth' func='yes'>
			<Overload retVal='int' descr='// 0xEEF059FAD016D209
// 0x8E3222B7
ENTITY::GET_ENTITY_HEALTH(Entity entity);
----------------------------------------------------------------------------------------------------
```

Returns an integer value of entity&apos;s current health.  

Example of range for ped:  

- Player [0 to 200]  

- Ped [100 to 200]  

- Vehicle [0 to 1000]  

- Object [0 to 1000]  

Health is actually a float value but this native casts it to int.  

In order to get the actual value, do:  

float health = *(float *)(entityAddress + 0x280);  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityHeight' func='yes'>
			<Overload retVal='float' descr='// 0x5A504562485944DD
// 0xEE443481
ENTITY::GET_ENTITY_HEIGHT(Entity entity, float X, float Y, float Z, BOOL atTop, BOOL inWorldCoords);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='float X' />
				<Param name='float Y' />
				<Param name='float Z' />
				<Param name='BOOL atTop' />
				<Param name='BOOL inWorldCoords' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityHeightAboveGround' func='yes'>
			<Overload retVal='float' descr='// 0x1DD55701034110E5
// 0x57F56A4D
ENTITY::GET_ENTITY_HEIGHT_ABOVE_GROUND(Entity entity);
----------------------------------------------------------------------------------------------------
```

Return height (z-dimension) above ground.   

Example: The pilot in a titan plane is 1.844176 above ground.  

How can i convert it to meters?  

Everything seems to be in meters, probably this too.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityLodDist' func='yes'>
			<Overload retVal='int' descr='// 0x4159C2762B5791D6
// 0x4DA3D51F
ENTITY::GET_ENTITY_LOD_DIST(Entity entity);
----------------------------------------------------------------------------------------------------
```

Returns the LOD distance of an entity.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityMatrix' func='yes'>
			<Overload retVal='void' descr='// 0xECB2FC7235A7D137
// 0xEB9EB001
ENTITY::GET_ENTITY_MATRIX(Entity entity, Vector3* rightVector, Vector3* forwardVector, Vector3* upVecto
----------------------------------------------------------------------------------------------------
ector3* position);

```'>
				<Param name='Entity entity' />
				<Param name='Vector3* rightVector' />
				<Param name='Vector3* forwardVector' />
				<Param name='Vector3* upVecto' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityMaxHealth' func='yes'>
			<Overload retVal='int' descr='// 0x15D757606D170C3C
// 0xC7AE6AA1
ENTITY::GET_ENTITY_MAX_HEALTH(Entity entity);
----------------------------------------------------------------------------------------------------
```

Return an integer value of entity&apos;s maximum health.  

Example:  

- Player = 200  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityModel' func='yes'>
			<Overload retVal='Hash' descr='// 0x9F47B058362C84B5
// 0xDAFCB3EC
ENTITY::GET_ENTITY_MODEL(Entity entity);
----------------------------------------------------------------------------------------------------
```

Returns the model hash from the entity  

Sometimes throws an exception, idk what causes it though.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityPhysicsHeading' func='yes'>
			<Overload retVal='float' descr='// 0x846BF6291198A71E
ENTITY::_GET_ENTITY_PHYSICS_HEADING(Entity entity);
----------------------------------------------------------------------------------------------------
```

Gets the heading of the entity physics in degrees, which tends to be more accurate than just &quot;GET_EN
TITY_HEADING&quot;. This can be clearly seen while, for example, ragdolling a ped/player.  

NOTE: The name and description of this native are based on independent research. If you find this na
tive to be more suitable under a different name and/or described differently, please feel free to do
 so.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityPitch' func='yes'>
			<Overload retVal='float' descr='// 0xD45DC2893621E1FE
// 0xFCE6ECE5
ENTITY::GET_ENTITY_PITCH(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityPopulationType' func='yes'>
			<Overload retVal='int' descr='// 0xF6F5161F4534EDFF
ENTITY::_GET_ENTITY_POPULATION_TYPE(Entity entity);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0xFC30DDFF  

Returns range from 0-10  

--------------------------------------------------------------  

The type name can be retrieved by using this:  

typedef LPSTR(__fastcall *GetEntityPopulationTypeName_t)(unsigned __int16 entityPopulationType, bool
 scriptName);  

	GetEntityPopulationTypeName_t GetEntityPopulationTypeName = (GetEntityPopulationTypeName_t)FindPatt
ern(&quot;44 0F B7 C1 4C 8D 0D ?? ?? ?? ?? 41 83 F8 07&quot;);  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityQuaternion' func='yes'>
			<Overload retVal='void' descr='// 0x7B3703D2D32DFA18
// 0x5154EC90
ENTITY::GET_ENTITY_QUATERNION(Entity entity, float* x, float* y, float* z, float* w);
----------------------------------------------------------------------------------------------------
```

w is the correct parameter name!  

```'>
				<Param name='Entity entity' />
				<Param name='float* x' />
				<Param name='float* y' />
				<Param name='float* z' />
				<Param name='float* w' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityRoll' func='yes'>
			<Overload retVal='float' descr='// 0x831E0242595560DF
// 0x36610842
ENTITY::GET_ENTITY_ROLL(Entity entity);
----------------------------------------------------------------------------------------------------
```

Displays the current ROLL axis of the entity [-180.0000/180.0000+]  

(Sideways Roll) such as a vehicle tipped on its side  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityRotation' func='yes'>
			<Overload retVal='Vector3' descr='// 0xAFBD61CC738D9EB9
// 0x8FF45B04
ENTITY::GET_ENTITY_ROTATION(Entity entity, int rotationOrder);
----------------------------------------------------------------------------------------------------
```

rotationOrder refers to the order yaw pitch roll is applied  

value ranges from 0 to 5. What you use for rotationOrder when getting must be the same as rotationOr
der when setting the rotation.   

Unsure what value corresponds to what rotation order, more testing will be needed for that.  

------  

rotationOrder is usually 2 in scripts  

------  

ENTITY::GET_ENTITY_ROTATION(Any p0, false or true);  

if false than return from -180 to 180  

if true than return from -90 to 90  

---  

As said above, the value of p1 affects the outcome. R* uses 1 and 2 instead of 0 and 1, so I marked 
it as an int.  

What it returns is the yaw on the z part of the vector, which makes sense considering R* considers z
 as vertical. Here&apos;s a picture for those of you who don&apos;t understand pitch, yaw, and roll:  

www.allstar.fiu.edu/aero/images/pic5-1.gif  

I don&apos;t know why it returns a Vec3, but sometimes the values x and y go negative, yet they&apos;re always
 zero. Just use GET_ENTITY_PITCH and GET_ENTITY_ROLL for pitch and roll.  

```'>
				<Param name='Entity entity' />
				<Param name='int rotationOrder' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityRotationVelocity' func='yes'>
			<Overload retVal='Vector3' descr='// 0x213B91045D09B983
// 0x9BF8A73F
ENTITY::GET_ENTITY_ROTATION_VELOCITY(Entity entity);
----------------------------------------------------------------------------------------------------
```

ANGULAR_VELOCITY*  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityScript' func='yes'>
			<Overload retVal='char*' descr='// 0xA6E9C38DB51D7748
// 0xB7F70784
ENTITY::GET_ENTITY_SCRIPT(Entity entity, ScrHandle* script);
----------------------------------------------------------------------------------------------------
```

All ambient entities in-world seem to have the same value for the second argument (Any *script), dep
ending on when the scripthook was activated/re-activated. I&apos;ve seen numbers from ~5 to almost 70 whe
n the value was translated with to_string. The function return value seems to always be 0.  

```'>
				<Param name='Entity entity' />
				<Param name='ScrHandle* script' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntitySpeed' func='yes'>
			<Overload retVal='float' descr='// 0xD5037BA82E12416F
// 0x9E1E4798
ENTITY::GET_ENTITY_SPEED(Entity entity);
----------------------------------------------------------------------------------------------------
```

result is in meters per second  

------------------------------------------------------------  

So would the conversion to mph and km/h, be along the lines of this.  

float speed = GET_ENTITY_SPEED(veh);  

float kmh = (speed * 3.6);  

float mph = (speed * 2.236936);  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntitySpeedVector' func='yes'>
			<Overload retVal='Vector3' descr='// 0x9A8D700A51CB7B0D
// 0x3ED2B997
ENTITY::GET_ENTITY_SPEED_VECTOR(Entity entity, BOOL relative);
----------------------------------------------------------------------------------------------------
```

Relative can be used for getting speed relative to the frame of the vehicle, to determine for exampl
e, if you are going in reverse (-y speed) or not (+y speed).  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL relative' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntitySubmergedLevel' func='yes'>
			<Overload retVal='float' descr='// 0xE81AFC1BC4CC41CE
// 0x0170F68C
ENTITY::GET_ENTITY_SUBMERGED_LEVEL(Entity entity);
----------------------------------------------------------------------------------------------------
```

Get how much of the entity is submerged.  1.0f is whole entity.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityType' func='yes'>
			<Overload retVal='int' descr='// 0x8ACD366038D14505
// 0x0B1BD08D
ENTITY::GET_ENTITY_TYPE(Entity entity);
----------------------------------------------------------------------------------------------------
```

Returns:  

0 = no entity  

1 = ped  

2 = vehicle  

3 = object  

This is weird, because in memory atleast on xbox360 it stores it from testing with a variety of (ped
, vehicle, and objects).  

03   

04   

05   

The above is more then likely true for the native&apos;s return, but if you were to skip using the native
 it&apos;s a bit weird it returns different results.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityUprightValue' func='yes'>
			<Overload retVal='float' descr='// 0x95EED5A694951F9F
// 0xF4268190
ENTITY::GET_ENTITY_UPRIGHT_VALUE(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityVelocity' func='yes'>
			<Overload retVal='Vector3' descr='// 0x4805D2B1D8CF94A9
// 0xC14C9B6B
ENTITY::GET_ENTITY_VELOCITY(Entity entity);
----------------------------------------------------------------------------------------------------
```

the unit is m/s along each axis  

GET_ENTITY_VELOCITY(aEntity) is the same as GET_ENTITY_SPEED_VECTOR(aEntity,false)  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetLastMaterialHitByEntity' func='yes'>
			<Overload retVal='Hash' descr='// 0x5C3D0A935F535C4C
// 0xC0E3AA47
ENTITY::GET_LAST_MATERIAL_HIT_BY_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNearestPlayerToEntity' func='yes'>
			<Overload retVal='Player' descr='// 0x7196842CB375CDB3
// 0xCE17FDEC
ENTITY::GET_NEAREST_PLAYER_TO_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNearestPlayerToEntityOnTeam' func='yes'>
			<Overload retVal='Player' descr='// 0x4DC9A62F844D9337
// 0xB1808F56
ENTITY::GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM(Entity entity, int team);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='int team' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetObjectIndexFromEntityIndex' func='yes'>
			<Overload retVal='Object' descr='// 0xD7E3B9735C0F89D6
// 0xBC5A9C58
ENTITY::GET_OBJECT_INDEX_FROM_ENTITY_INDEX(Entity entity);
----------------------------------------------------------------------------------------------------
```

Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetOffsetFromEntityGivenWorldCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0x2274BC1C4885E333
// 0x6477EC9E
ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(Entity entity, float posX, float posY, float posZ)
----------------------------------------------------------------------------------------------------
``

```

Converts world coords (posX - Z) to coords relative to the entity  

Example:  

posX = 50  

posY = 1000  

posZ = 60  

Entity&apos;s coords are: x=30, y=1000, z=60.  

All three returned coords will then be in range of [-20,20] depending on rotation of the entity.  

```'>
				<Param name='Entity entity' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetOffsetFromEntityInWorldCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0x1899F328B0E12848
// 0xABCF043A
ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(Entity entity, float offsetX, float offsetY, float of
----------------------------------------------------------------------------------------------------
Z);

```

```

Offset values are relative to the entity.  

x = left/right  

y = forward/backward  

z = up/down  

```'>
				<Param name='Entity entity' />
				<Param name='float offsetX' />
				<Param name='float offsetY' />
				<Param name='float of' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedIndexFromEntityIndex' func='yes'>
			<Overload retVal='Ped' descr='// 0x04A2A40C73395041
// 0xC46F74AC
ENTITY::GET_PED_INDEX_FROM_ENTITY_INDEX(Entity entity);
----------------------------------------------------------------------------------------------------
```

Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleIndexFromEntityIndex' func='yes'>
			<Overload retVal='Vehicle' descr='// 0x4B53F92932ADFAC0
// 0xC69CF43D
ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(Entity entity);
----------------------------------------------------------------------------------------------------
```

Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWorldPositionOfEntityBone' func='yes'>
			<Overload retVal='Vector3' descr='// 0x44A8FCB8ED227738
// 0x7C6339DF
ENTITY::GET_WORLD_POSITION_OF_ENTITY_BONE(Entity entity, int boneIndex);
----------------------------------------------------------------------------------------------------
```

Returns the coordinates of an entity-bone.  

```'>
				<Param name='Entity entity' />
				<Param name='int boneIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasAnimEventFired' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEAF4CD9EA3E7E922
// 0x66571CA0
ENTITY::HAS_ANIM_EVENT_FIRED(Entity entity, Hash actionHash);
----------------------------------------------------------------------------------------------------
```

if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(&quot;CreateObject&quot;)))  


```'>
				<Param name='Entity entity' />
				<Param name='Hash actionHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasCollisionLoadedAroundEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE9676F61BC0B3321
// 0x851687F9
ENTITY::HAS_COLLISION_LOADED_AROUND_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasEntityAnimFinished' func='yes'>
			<Overload retVal='BOOL' descr='// 0x20B711662962B472
// 0x1D9CAB92
ENTITY::HAS_ENTITY_ANIM_FINISHED(Entity entity, char* animDict, char* animName, int p3);
----------------------------------------------------------------------------------------------------
```

P3 is always 3 as far as i cant tell  

Animations List : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Entity entity' />
				<Param name='char* animDict' />
				<Param name='char* animName' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasEntityBeenDamagedByAnyObject' func='yes'>
			<Overload retVal='BOOL' descr='// 0x95EB9964FF5C5C65
// 0x6B74582E
ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasEntityBeenDamagedByAnyPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x605F5A140F202491
// 0x53FD4A25
ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasEntityBeenDamagedByAnyVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDFD5033FDBA0A9C8
// 0x878C2CE0
ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasEntityBeenDamagedByEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC86D67D52A707CF8
// 0x07FC77E0
ENTITY::HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(Entity entity1, Entity entity2, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Entity 1 = Victim  

Entity 2 = Attacker  

p2 seems to always be 1  

```'>
				<Param name='Entity entity1' />
				<Param name='Entity entity2' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasEntityClearLosToEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFCDFF7B72D23A1AC
// 0x53576FA7
ENTITY::HAS_ENTITY_CLEAR_LOS_TO_ENTITY(Entity entity1, Entity entity2, int traceType);
----------------------------------------------------------------------------------------------------
```

traceType is always 17 in the scripts.  

There is other codes used for traceType:  

19 - in jewelry_prep1a  

126 - in am_hunt_the_beast  

256 & 287 - in fm_mission_controller  

```'>
				<Param name='Entity entity1' />
				<Param name='Entity entity2' />
				<Param name='int traceType' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasEntityClearLosToEntityInFront' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0267D00AF114F17A
// 0x210D87C8
ENTITY::HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT(Entity entity1, Entity entity2);
----------------------------------------------------------------------------------------------------
```

Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
  

This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like ne
sted for-loops  

```'>
				<Param name='Entity entity1' />
				<Param name='Entity entity2' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasEntityCollidedWithAnything' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8BAD02F0368D9E14
// 0x662A2F41
ENTITY::HAS_ENTITY_COLLIDED_WITH_ANYTHING(Entity entity);
----------------------------------------------------------------------------------------------------
```

Called on tick.  

Tested with vehicles, returns true whenever the vehicle is touching any entity.  

Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body 
of the vehicle touches the ground, it will return true.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAnEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x731EC8A916BD11A1
// 0xD4B9715A
ENTITY::IS_AN_ENTITY(int handle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int handle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityAMissionEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0A7B270912999B3C
// 0x2632E124
ENTITY::IS_ENTITY_A_MISSION_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityAnObject' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8D68C8FD0FACA94E
// 0x3F52E561
ENTITY::IS_ENTITY_AN_OBJECT(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityAPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x524AC5ECEA15343E
// 0x55D33EAB
ENTITY::IS_ENTITY_A_PED(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityAtCoord' func='yes'>
			<Overload retVal='BOOL' descr='// 0x20B60995556D004F
// 0xD749B606
ENTITY::IS_ENTITY_AT_COORD(Entity entity, float xPos, float yPos, float zPos, float xSize, float ySize,
----------------------------------------------------------------------------------------------------
at zSize, BOOL p7, BOOL p8, int p9);

```

```

Checks if entity is within x/y/zSize distance of x/y/z.   

Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0  

```'>
				<Param name='Entity entity' />
				<Param name='float xPos' />
				<Param name='float yPos' />
				<Param name='float zPos' />
				<Param name='float xSize' />
				<Param name='float ySize' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityAtEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x751B70C3D034E187
// 0xDABDCB52
ENTITY::IS_ENTITY_AT_ENTITY(Entity entity1, Entity entity2, float xSize, float ySize, float zSize, BOOL
----------------------------------------------------------------------------------------------------
BOOL p6, int p7);

```

```

Checks if entity1 is within the box defined by x/y/zSize of entity2.  

Last three parameters are almost alwasy p5 = 0, p6 = 1, p7 = 0  

```'>
				<Param name='Entity entity1' />
				<Param name='Entity entity2' />
				<Param name='float xSize' />
				<Param name='float ySize' />
				<Param name='float zSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityAttached' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB346476EF1A64897
// 0xEC1479D5
ENTITY::IS_ENTITY_ATTACHED(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityAttachedToAnyObject' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCF511840CEEDE0CC
// 0x0B5DE340
ENTITY::IS_ENTITY_ATTACHED_TO_ANY_OBJECT(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityAttachedToAnyPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB1632E9A5F988D11
// 0x9D7A609C
ENTITY::IS_ENTITY_ATTACHED_TO_ANY_PED(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityAttachedToAnyVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x26AA915AD89BFB4B
// 0xDE5C995E
ENTITY::IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityAttachedToEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEFBE71898A993728
// 0xB0ABFEA8
ENTITY::IS_ENTITY_ATTACHED_TO_ENTITY(Entity from, Entity to);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity from' />
				<Param name='Entity to' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityAVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6AC7003FA6E5575E
// 0xBE800B01
ENTITY::IS_ENTITY_A_VEHICLE(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityDead' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5F9532F3B5CC2551
// 0xB6F7CBAC
ENTITY::IS_ENTITY_DEAD(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityInAir' func='yes'>
			<Overload retVal='BOOL' descr='// 0x886E37EC497200B6
// 0xA4157987
ENTITY::IS_ENTITY_IN_AIR(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityInAngledArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x51210CED3DA1C78A
// 0x883622FA
ENTITY::IS_ENTITY_IN_ANGLED_AREA(Entity entity, float originX, float originY, float originZ, float edge
----------------------------------------------------------------------------------------------------
loat edgeY, float edgeZ, float angle, BOOL p8, BOOL p9, Any p10);

```

```

Creates a spherical cone at origin that extends to surface with the angle specified. Then returns tr
ue if the entity is inside the spherical cone  

Angle is measured in degrees.  

These values are constant, most likely bogus:  

p8 = 0, p9 = 1, p10 = 0  

This method can also take two float&lt;3&gt; instead of 6 floats.  

```'>
				<Param name='Entity entity' />
				<Param name='float originX' />
				<Param name='float originY' />
				<Param name='float originZ' />
				<Param name='float edge' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x54736AA40E271165
// 0x8C2DFA9D
ENTITY::IS_ENTITY_IN_AREA(Entity entity, float x1, float y1, float z1, float x2, float y2, float z2, BO
----------------------------------------------------------------------------------------------------
7, BOOL p8, Any p9);

```'>
				<Param name='Entity entity' />
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityInWater' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCFB0A0D8EDD145A3
// 0x4C3C2508
ENTITY::IS_ENTITY_IN_WATER(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityInZone' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB6463CF6AF527071
// 0x45C82B21
ENTITY::IS_ENTITY_IN_ZONE(Entity entity, char* zone);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='char* zone' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityOccluded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE31C2C72B8692B64
// 0x46BC5B40
ENTITY::IS_ENTITY_OCCLUDED(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityOnScreen' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE659E47AF827484B
// 0xC1FEC5ED
ENTITY::IS_ENTITY_ON_SCREEN(Entity entity);
----------------------------------------------------------------------------------------------------
```

Returns true if the entity is in between the minimum and maximum values for the 2d screen coords.   


This means that it will return true even if the entity is behind a wall for example, as long as you&apos;
re looking at their location.   

Chipping  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityPlayingAnim' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1F0B79228E461EC9
// 0x0D130D34
ENTITY::IS_ENTITY_PLAYING_ANIM(Entity entity, char* animDict, char* animName, int taskFlag);
----------------------------------------------------------------------------------------------------
```

See also PED::IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM 0x6EC47A344923E1ED 0x3C30B447  

Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), &quot;creatures@shark@move&quot;, &quot;attack_p
layer&quot;, 3)  

p4 is always 3 in the scripts.  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

taskFlag:  

2 - Check synchronized scene  

```'>
				<Param name='Entity entity' />
				<Param name='char* animDict' />
				<Param name='char* animName' />
				<Param name='int taskFlag' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityStatic' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1218E6886D3D8327
// 0x928E12E9
ENTITY::IS_ENTITY_STATIC(Entity entity);
----------------------------------------------------------------------------------------------------
```

A static ped will not react to natives like &quot;APPLY_FORCE_TO_ENTITY&quot; or &quot;SET_ENTITY_VELOCITY&quot; and oft
entimes will not react to task-natives like &quot;AI::TASK_COMBAT_PED&quot;. The only way I know of to make on
e of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static 
peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a cro
sswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-
static without ragdolling them, please edit this with the solution.  

^ Attach a phCollider to the ped.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityTouchingEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x17FFC1B2BA35A494
// 0x6B931477
ENTITY::IS_ENTITY_TOUCHING_ENTITY(Entity entity, Entity targetEntity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='Entity targetEntity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityTouchingModel' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0F42323798A58C8C
// 0x307E7611
ENTITY::IS_ENTITY_TOUCHING_MODEL(Entity entity, Hash modelHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityUpright' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5333F526F6AB19AA
// 0x3BCDF4E1
ENTITY::IS_ENTITY_UPRIGHT(Entity entity, float angle);
----------------------------------------------------------------------------------------------------
```

// add this to your CSS to view code with formatting intact.  

// pre + hr + p { white-space: pre; } // -  

bool isEntityUpright(Entity e, float angle) {  

    bool bIsUpright; // bl@1  

    CDynamicEntity* pEntity; // rdi@1  

    bIsUpright = 0;  

    pEntity = getEntityAddressIfPhysical(e);  

    if (pEntity) {  

        bIsUpright = 0;  

        if (pEntity-&gt;Matrix.up.z &gt;= cosf(angle * 0.017453292)) // radians(angle)  

            bIsUpright = 1;  

    }  

    return bIsUpright;  

}  

```'>
				<Param name='Entity entity' />
				<Param name='float angle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityUpsidedown' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1DBD58820FA61D71
// 0x5ACAA48F
ENTITY::IS_ENTITY_UPSIDEDOWN(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityVisible' func='yes'>
			<Overload retVal='BOOL' descr='// 0x47D6F43D77935C75
// 0x120B4ED5
ENTITY::IS_ENTITY_VISIBLE(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityVisibleToScript' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD796CB5BA8F20E32
// 0x5D240E9D
ENTITY::IS_ENTITY_VISIBLE_TO_SCRIPT(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityWaitingForWorldCollision' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD05BFF0C0A12C68F
// 0x00AB7A4A
ENTITY::IS_ENTITY_WAITING_FOR_WORLD_COLLISION(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1a092bb0c3808b96' func='yes'>
			<Overload retVal='void' descr='// 0x1A092BB0C3808B96
ENTITY::_0x1A092BB0C3808B96(Entity entity, BOOL p1);
----------------------------------------------------------------------------------------------------
```

SET_ENTITY_*  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2c2e3dc128f44309' func='yes'>
			<Overload retVal='void' descr='// 0x2C2E3DC128F44309
ENTITY::_0x2C2E3DC128F44309(Entity entity, BOOL p1);
----------------------------------------------------------------------------------------------------
```

SET_ENTITY_*  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x352e2b5cf420bf3b' func='yes'>
			<Overload retVal='void' descr='// 0x352E2B5CF420BF3B
ENTITY::_0x352E2B5CF420BF3B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x36f32de87082343e' func='yes'>
			<Overload retVal='void' descr='// 0x36F32DE87082343E
ENTITY::_0x36F32DE87082343E(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x46f8696933a63c9b' func='yes'>
			<Overload retVal='Vector3' descr='// 0x46F8696933A63C9B
ENTITY::_0x46F8696933A63C9B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x490861b88f4fd846' func='yes'>
			<Overload retVal='void' descr='// 0x490861B88F4FD846
ENTITY::_0x490861B88F4FD846(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5c3b791d580e0bc2' func='yes'>
			<Overload retVal='void' descr='// 0x5C3B791D580E0BC2
ENTITY::_0x5C3B791D580E0BC2(Entity entity, float p1);
----------------------------------------------------------------------------------------------------
```

Only called once in the scripts.  

Related to weapon objects.  

```'>
				<Param name='Entity entity' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5c48b75732c8456c' func='yes'>
			<Overload retVal='void' descr='// 0x5C48B75732C8456C
ENTITY::_0x5C48B75732C8456C(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x694e00132f2823ed' func='yes'>
			<Overload retVal='void' descr='// 0x694E00132F2823ED
// 0x40C84A74
ENTITY::_0x694E00132F2823ED(Entity entity, BOOL p1);
----------------------------------------------------------------------------------------------------
```

what does it do?  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6ce177d014502e8a' func='yes'>
			<Overload retVal='void' descr='// 0x6CE177D014502E8A
ENTITY::_0x6CE177D014502E8A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x78e8e3a640178255' func='yes'>
			<Overload retVal='void' descr='// 0x78E8E3A640178255
ENTITY::_0x78E8E3A640178255(Entity entity);
----------------------------------------------------------------------------------------------------
```

Related to cutscene entities. Unsure about the use.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa80ae305e0a3044f' func='yes'>
			<Overload retVal='void' descr='// 0xA80AE305E0A3044F
// 0xE224A6A5
ENTITY::_0xA80AE305E0A3044F(Entity entity, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p1 always false.  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb17bc6453f6cf5ac' func='yes'>
			<Overload retVal='void' descr='// 0xB17BC6453F6CF5AC
ENTITY::_0xB17BC6453F6CF5AC(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb328dcc3a3aa401b' func='yes'>
			<Overload retVal='Any' descr='// 0xB328DCC3A3AA401B
ENTITY::_0xB328DCC3A3AA401B(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc34bc448da29f5e9' func='yes'>
			<Overload retVal='void' descr='// 0xC34BC448DA29F5E9
ENTITY::_0xC34BC448DA29F5E9(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xce6294a232d03786' func='yes'>
			<Overload retVal='Vector3' descr='// 0xCE6294A232D03786
ENTITY::_0xCE6294A232D03786(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcea7c8e1b48ff68c' func='yes'>
			<Overload retVal='void' descr='// 0xCEA7C8E1B48FF68C
ENTITY::_0xCEA7C8E1B48FF68C(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd95cc5d2ab15a09f' func='yes'>
			<Overload retVal='Any' descr='// 0xD95CC5D2AB15A09F
ENTITY::_0xD95CC5D2AB15A09F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdc6f8601faf2e893' func='yes'>
			<Overload retVal='void' descr='// 0xDC6F8601FAF2E893
ENTITY::_0xDC6F8601FAF2E893(Entity entity, BOOL p1);
----------------------------------------------------------------------------------------------------
```

SET_ENTITY_*  

x360 Hash: 0xA0466A69  

Only called within 1 script for x360. &apos;fm_mission_controller&apos; and it used on an object.   

Ran after these 2 natives,  

set_object_targettable(uParam0, 0);  

set_entity_invincible(uParam0, 1);  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe12abe5e3a389a6c' func='yes'>
			<Overload retVal='void' descr='// 0xE12ABE5E3A389A6C
// 0x44767B31
ENTITY::_0xE12ABE5E3A389A6C(Entity entity, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p1 always false.  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfd1695c5d3b05439' func='yes'>
			<Overload retVal='void' descr='// 0xFD1695C5D3B05439
ENTITY::_0xFD1695C5D3B05439(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayEntityAnim' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7FB218262B810701
// 0x878753D5
ENTITY::PLAY_ENTITY_ANIM(Entity entity, char* animName, char* animDict, float p3, BOOL loop, BOOL stayI
----------------------------------------------------------------------------------------------------
m, BOOL p6, float delta, Any bitset);

```

```

delta and bitset are guessed fields. They are based on the fact that most of the calls have 0 or nil
 field types passed in.  

The only time bitset has a value is 0x4000 and the only time delta has a value is during stealth wit
h usually &lt;1.0f values.  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Entity entity' />
				<Param name='char* animName' />
				<Param name='char* animDict' />
				<Param name='float p3' />
				<Param name='BOOL loop' />
				<Param name='BOOL stayI' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaySynchronizedEntityAnim' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC77720A12FE14A86
// 0x012760AA
ENTITY::PLAY_SYNCHRONIZED_ENTITY_ANIM(Entity entity, int syncedScene, char* animation, char* propName, 
----------------------------------------------------------------------------------------------------
t p4, float p5, Any p6, float p7);

```

```

p4 and p7 are usually 1000.0f.  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Entity entity' />
				<Param name='int syncedScene' />
				<Param name='char* animation' />
				<Param name='char* propName' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaySynchronizedMapEntityAnim' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB9C54555ED30FBC4
// 0xEB4CBA74
ENTITY::PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM(float p0, float p1, float p2, float p3, Any p4, Any p5, Any* 
----------------------------------------------------------------------------------------------------
Any* p7, float p8, float p9, Any p10, float p11);

```

```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any* ' />
			</Overload>
		</KeyWord>
		<KeyWord name='ProcessEntityAttachments' func='yes'>
			<Overload retVal='void' descr='// 0xF4080490ADC51C6F
// 0x6909BA59
ENTITY::PROCESS_ENTITY_ATTACHMENTS(Entity entity);
----------------------------------------------------------------------------------------------------
```

Called to update entity attachments.  

When using ATTACH_ENTITY_TO_ENTITY and using bone &apos;0&apos; then you set the first entity invisible. The a
ttachments will mess up, use bone &apos;-1&apos; to fix that issue  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveForcedObject' func='yes'>
			<Overload retVal='void' descr='// 0x61B6775E83C0DB6F
// 0xAED73ADD
ENTITY::REMOVE_FORCED_OBJECT(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveModelHide' func='yes'>
			<Overload retVal='void' descr='// 0xD9E3006FB3CBD765
// 0x993DBC10
ENTITY::REMOVE_MODEL_HIDE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveModelSwap' func='yes'>
			<Overload retVal='void' descr='// 0x033C0F9A64E229AE
// 0xCE0AA8BC
ENTITY::REMOVE_MODEL_SWAP(float x, float y, float z, float radius, Hash originalModel, Hash newModel, B
----------------------------------------------------------------------------------------------------
p6);

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Hash originalModel' />
				<Param name='Hash newModel' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetEntityAlpha' func='yes'>
			<Overload retVal='Any' descr='// 0x9B1E824FFBB7027A
// 0x8A30761C
ENTITY::RESET_ENTITY_ALPHA(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityAlpha' func='yes'>
			<Overload retVal='void' descr='// 0x44A0870B7E92D7C0
// 0xAE667CB0
ENTITY::SET_ENTITY_ALPHA(Entity entity, int alphaLevel, int skin);
----------------------------------------------------------------------------------------------------
```

skin - everything alpha except skin  

Set entity alpha level. Ranging from 0 to 255 but chnages occur after every 20 percent (after every 
51).  

```'>
				<Param name='Entity entity' />
				<Param name='int alphaLevel' />
				<Param name='int skin' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityAlwaysPrerender' func='yes'>
			<Overload retVal='void' descr='// 0xACAD101E1FB66689
// 0xD8FF798A
ENTITY::SET_ENTITY_ALWAYS_PRERENDER(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityAnimCurrentTime' func='yes'>
			<Overload retVal='void' descr='// 0x4487C259F0F70977
// 0x99D90735
ENTITY::SET_ENTITY_ANIM_CURRENT_TIME(Entity entity, char* animDictionary, char* animName, float time);
----------------------------------------------------------------------------------------------------
`

```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Entity entity' />
				<Param name='char* animDictionary' />
				<Param name='char* animName' />
				<Param name='float time' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityAnimSpeed' func='yes'>
			<Overload retVal='void' descr='// 0x28D1A16553C51776
// 0x3990C90A
ENTITY::SET_ENTITY_ANIM_SPEED(Entity entity, char* animDictionary, char* animName, float speedMultiplie
----------------------------------------------------------------------------------------------------
```

```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Entity entity' />
				<Param name='char* animDictionary' />
				<Param name='char* animName' />
				<Param name='float speedMultiplie' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityAsMissionEntity' func='yes'>
			<Overload retVal='void' descr='// 0xAD738C3085FE7E11
// 0x5D1F9E0F
ENTITY::SET_ENTITY_AS_MISSION_ENTITY(Entity entity, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automat
ically be removed by the engine.  

p1 has no effect when either its on or off   

maybe a quick disassembly will tell us what it does  

p2 has no effect when either its on or off   

maybe a quick disassembly will tell us what it does  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityAsNoLongerNeeded' func='yes'>
			<Overload retVal='void' descr='// 0xB736A491E64A32CF
// 0xADF2267C
ENTITY::SET_ENTITY_AS_NO_LONGER_NEEDED(Entity* entity);
----------------------------------------------------------------------------------------------------
```

Marks the specified entity (ped, vehicle or object) as no longer needed.  

Entities marked as no longer needed, will be deleted as the engine sees fit.  

```'>
				<Param name='Entity* entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityCanBeDamaged' func='yes'>
			<Overload retVal='void' descr='// 0x1760FFA8AB074D66
// 0x60B6E744
ENTITY::SET_ENTITY_CAN_BE_DAMAGED(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityCanBeDamagedByRelationshipGroup' func='yes'>
			<Overload retVal='void' descr='// 0xE22D8FDE858B8119
// 0x34165B5D
ENTITY::SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP(Entity entity, BOOL bCanBeDamaged, int relGroup
----------------------------------------------------------------------------------------------------
```'>
				<Param name='Entity entity' />
				<Param name='BOOL bCanBeDamaged' />
				<Param name='int relGroup' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityCanBeTargetedWithoutLos' func='yes'>
			<Overload retVal='void' descr='// 0xD3997889736FD899
// 0x3B13797C
ENTITY::SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Sets whether the entity can be targeted without being in line-of-sight.  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityCollision' func='yes'>
			<Overload retVal='void' descr='// 0x1A9205C1B9EE827F
// 0x139FD37D
ENTITY::SET_ENTITY_COLLISION(Entity entity, BOOL toggle, BOOL keepPhysics);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
				<Param name='BOOL keepPhysics' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityCollision_2' func='yes'>
			<Overload retVal='void' descr='// 0x9EBC85ED0FFFE51C
ENTITY::_SET_ENTITY_COLLISION_2(Entity entity, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

console hash: 0xBD0D4831  

internally it calls the same function as &apos;SET_ENTITY_COLLISION&apos;. but uses a hard coded parameter tha
t only activates when p1 is set to true   

=============================  

Weirdly enough in the 3 scripts it&apos;s used in on PC,  

- director_mode (2 hits)  

- re_duel (2 hits)  

- re_seaplane (1 hit)  

Most of the time in the hits its actually used after the normal SET_ENTITY_COLLISION. Example from r
e_seaplane,  

Local_49[iParam0 /*6*/] = create_ped(26, iVar4, vVar0, fVar3, 1, true);  

set_entity_collision(Local_49[iParam0 /*6*/], iVar42, 0);  

_0x9EBC85ED0FFFE51C(Local_49[iParam0 /*6*/], !iVar66, 0); (_SET_ENTITY_COLLISION_2)  

iVar42 being true so the normal collision native is true, 0  

iVar66 being false so !false so it&apos;s true, 0  

Gonna ignore the &apos;vars&apos; for the create_ped no point in defining them.  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityCoords' func='yes'>
			<Overload retVal='void' descr='// 0x06843DA7060A026B
// 0xDF70B41B
ENTITY::SET_ENTITY_COORDS(Entity entity, float xPos, float yPos, float zPos, BOOL xAxis, BOOL yAxis, BO
----------------------------------------------------------------------------------------------------
Axis, BOOL clearArea);

```

```

p7 is always 1 in the scripts. Set to 1, an area around the destination coords for the moved entity 
is cleared from other entities.   

Often ends with 1, 0, 0, 1); in the scripts. It works.   

Axis - Invert Axis Flags  

```'>
				<Param name='Entity entity' />
				<Param name='float xPos' />
				<Param name='float yPos' />
				<Param name='float zPos' />
				<Param name='BOOL xAxis' />
				<Param name='BOOL yAxis' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityCoordsNoOffset' func='yes'>
			<Overload retVal='void' descr='// 0x239A3351AC1DA385
// 0x4C83DE8D
ENTITY::SET_ENTITY_COORDS_NO_OFFSET(Entity entity, float xPos, float yPos, float zPos, BOOL xAxis, BOOL
----------------------------------------------------------------------------------------------------
is, BOOL zAxis);

```

```

Axis - Invert Axis Flags  

```'>
				<Param name='Entity entity' />
				<Param name='float xPos' />
				<Param name='float yPos' />
				<Param name='float zPos' />
				<Param name='BOOL xAxis' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityCoords_2' func='yes'>
			<Overload retVal='void' descr='// 0x621873ECE1178967
ENTITY::_SET_ENTITY_COORDS_2(Entity entity, float xPos, float yPos, float zPos, BOOL xAxis, BOOL yAxis,
----------------------------------------------------------------------------------------------------
L zAxis, BOOL clearArea);

```

```

does the same as SET_ENTITY_COORDS.  

Console Hash: 0x749B282E  

```'>
				<Param name='Entity entity' />
				<Param name='float xPos' />
				<Param name='float yPos' />
				<Param name='float zPos' />
				<Param name='BOOL xAxis' />
				<Param name='BOOL yAxis' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityDynamic' func='yes'>
			<Overload retVal='void' descr='// 0x1718DE8E3F2823CA
// 0x236F525B
ENTITY::SET_ENTITY_DYNAMIC(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityHasGravity' func='yes'>
			<Overload retVal='void' descr='// 0x4A4722448F18EEF5
// 0xE2F262BF
ENTITY::SET_ENTITY_HAS_GRAVITY(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityHeading' func='yes'>
			<Overload retVal='void' descr='// 0x8E2530AA8ADA980E
// 0xE0FF064D
ENTITY::SET_ENTITY_HEADING(Entity entity, float heading);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='float heading' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityHealth' func='yes'>
			<Overload retVal='void' descr='// 0x6B76DC1F3AE6E6A3
// 0xFBCD1831
ENTITY::SET_ENTITY_HEALTH(Entity entity, int health);
----------------------------------------------------------------------------------------------------
```

health &gt;= 0  

```'>
				<Param name='Entity entity' />
				<Param name='int health' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityInvincible' func='yes'>
			<Overload retVal='void' descr='// 0x3882114BDE571AD4
// 0xC1213A21
ENTITY::SET_ENTITY_INVINCIBLE(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Sets a ped or an object totally invincible. It doesn&apos;t take any kind of damage. Peds will not ragdol
l on explosions and the tazer animation won&apos;t apply either.  

If you use this for a ped and you want Ragdoll to stay enabled, then do:  

*(DWORD *)(pedAddress + 0x188) |= (1 &lt;&lt; 9);  

Use this if you want to get the invincibility status:  

	bool IsPedInvincible(Ped ped)  

	{  

auto addr = getScriptHandleBaseAddress(ped);	  

if (addr)  

{  

	DWORD flag = *(DWORD *)(addr + 0x188);  

	return ((flag & (1 &lt;&lt; 8)) != 0) || ((flag & (1 &lt;&lt; 9)) != 0);  

}  

return false;  

	}  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityIsTargetPriority' func='yes'>
			<Overload retVal='void' descr='// 0xEA02E132F5C68722
// 0x9729EE32
ENTITY::SET_ENTITY_IS_TARGET_PRIORITY(Entity entity, BOOL p1, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityLights' func='yes'>
			<Overload retVal='void' descr='// 0x7CFBA6A80BDF3874
// 0xE8FC85AF
ENTITY::SET_ENTITY_LIGHTS(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityLoadCollisionFlag' func='yes'>
			<Overload retVal='void' descr='// 0x0DC7CABAB1E9B67E
// 0xC52F295B
ENTITY::SET_ENTITY_LOAD_COLLISION_FLAG(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Certainly not the main usage of this native but when set to true for a Vehicle, it will prevent the 
vehicle to explode if it is spawned far away from the player.  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityLodDist' func='yes'>
			<Overload retVal='void' descr='// 0x5927F96A78577363
// 0xD7ACC7AD
ENTITY::SET_ENTITY_LOD_DIST(Entity entity, int value);
----------------------------------------------------------------------------------------------------
```

LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 
16-bit value (aka uint16_t).  

```'>
				<Param name='Entity entity' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityMaxHealth' func='yes'>
			<Overload retVal='void' descr='// 0x166E7CF68597D8B5
// 0x96F84DF8
ENTITY::SET_ENTITY_MAX_HEALTH(Entity entity, int value);
----------------------------------------------------------------------------------------------------
```

For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 6784
9  

```'>
				<Param name='Entity entity' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityMaxSpeed' func='yes'>
			<Overload retVal='void' descr='// 0x0E46A3FCBDE2A1B1
// 0x46AFFED3
ENTITY::SET_ENTITY_MAX_SPEED(Entity entity, float speed);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityMotionBlur' func='yes'>
			<Overload retVal='void' descr='// 0x295D82A8559F9150
// 0xE90005B8
ENTITY::SET_ENTITY_MOTION_BLUR(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityNoCollisionEntity' func='yes'>
			<Overload retVal='void' descr='// 0xA53ED5520C07654A
// 0x1E11BFE9
ENTITY::SET_ENTITY_NO_COLLISION_ENTITY(Entity entity1, Entity entity2, BOOL unknown);
----------------------------------------------------------------------------------------------------
```

Calling this function, regardless of the &quot;unknown&quot; value, disabled collision between two entities.  


Importance of entity1 and 2 order is unclear.  

```'>
				<Param name='Entity entity1' />
				<Param name='Entity entity2' />
				<Param name='BOOL unknown' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityOnlyDamagedByPlayer' func='yes'>
			<Overload retVal='void' descr='// 0x79F020FF9EDC0748
// 0x4B707F50
ENTITY::SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityOnlyDamagedByRelationshipGroup' func='yes'>
			<Overload retVal='void' descr='// 0x7022BD828FA0B082
// 0x202237E2
ENTITY::SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP(Entity entity, BOOL p1, Hash relationshipHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL p1' />
				<Param name='Hash relationshipHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityProofs' func='yes'>
			<Overload retVal='void' descr='// 0xFAEE099C6F890BB8
// 0x7E9EAB66
ENTITY::SET_ENTITY_PROOFS(Entity entity, BOOL bulletProof, BOOL fireProof, BOOL explosionProof, BOOL co
----------------------------------------------------------------------------------------------------
ionProof, BOOL meleeProof, BOOL p6, BOOL p7, BOOL p8);

```

```

Enable / disable each type of damage.  

--------------  

p7 is to to &apos;1&apos; in am_mp_property_ext/int: entity::set_entity_proofs(uParam0-&gt;f_19, true, true, true
, true, true, true, 1, true);  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL bulletProof' />
				<Param name='BOOL fireProof' />
				<Param name='BOOL explosionProof' />
				<Param name='BOOL co' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityQuaternion' func='yes'>
			<Overload retVal='void' descr='// 0x77B21BE7AC540F07
// 0x83B6046F
ENTITY::SET_ENTITY_QUATERNION(Entity entity, float x, float y, float z, float w);
----------------------------------------------------------------------------------------------------
```

w is the correct parameter name!  

```'>
				<Param name='Entity entity' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float w' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityRecordsCollisions' func='yes'>
			<Overload retVal='void' descr='// 0x0A50A1EEDAD01E65
// 0x6B189A1A
ENTITY::SET_ENTITY_RECORDS_COLLISIONS(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityRenderScorched' func='yes'>
			<Overload retVal='void' descr='// 0x730F5F8D3F0F2050
// 0xAAC9317B
ENTITY::SET_ENTITY_RENDER_SCORCHED(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityRotation' func='yes'>
			<Overload retVal='void' descr='// 0x8524A8B0171D5E07
// 0x0A345EFE
ENTITY::SET_ENTITY_ROTATION(Entity entity, float pitch, float roll, float yaw, int rotationOrder, BOOL 
----------------------------------------------------------------------------------------------------
```

```

rotationOrder refers to the order yaw pitch roll is applied  

value ranges from 0 to 5. What you use for rotationOrder when setting must be the same as rotationOr
der when getting the rotation.   

Unsure what value corresponds to what rotation order, more testing will be needed for that.  

For the most part R* uses 1 or 2 as the order.  

p5 is usually set as true  

```'>
				<Param name='Entity entity' />
				<Param name='float pitch' />
				<Param name='float roll' />
				<Param name='float yaw' />
				<Param name='int rotationOrder' />
				<Param name='BOOL ' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntitySomething' func='yes'>
			<Overload retVal='void' descr='// 0x3910051CCECDB00C
// 0xD3850671
ENTITY::_SET_ENTITY_SOMETHING(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

what does this native do?  

bool IsEntitySomething(Entity entity)  

{  

	auto addr = getScriptHandleBaseAddress(entity);  

	printf(&quot;addr: 0x%X \n&quot;, addr);  

	if (addr)  

	{  

DWORD flag = *(DWORD *)(addr + 0x48D);  

printf(&quot;flag: 0x%X \n&quot;, flag);  

return ((flag & (1 &lt;&lt; 3)) != 0) || ((flag & (1 &lt;&lt; 30)) != 0);  

	}  

	return false;  

}  

wot ?  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_ENTITY_REGISTER'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_ENTITY_REGISTER' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetEntitySomething' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetEntityTrafficlightOverride' func='yes'>
			<Overload retVal='void' descr='// 0x57C5DB656185EAC4
// 0xC47F5B91
ENTITY::SET_ENTITY_TRAFFICLIGHT_OVERRIDE(Entity entity, int state);
----------------------------------------------------------------------------------------------------
```

Example here: www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-cras
h-into-each-other/#entry1068211340  

0 = green  

1 = red  

2 = yellow  

changing lights may not change the behavior of vehicles  

```'>
				<Param name='Entity entity' />
				<Param name='int state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityVelocity' func='yes'>
			<Overload retVal='void' descr='// 0x1C99BB7B6E96D16F
// 0xFF5A1988
ENTITY::SET_ENTITY_VELOCITY(Entity entity, float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Note that the third parameter(denoted as z) is &quot;up and down&quot; with positive ment.  

```'>
				<Param name='Entity entity' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityVisible' func='yes'>
			<Overload retVal='void' descr='// 0xEA1C610A04DB6BBB
// 0xD043E8E1
ENTITY::SET_ENTITY_VISIBLE(Entity entity, BOOL toggle, BOOL unk);
----------------------------------------------------------------------------------------------------
```

unk was always 0.  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
				<Param name='BOOL unk' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetObjectAsNoLongerNeeded' func='yes'>
			<Overload retVal='void' descr='// 0x3AE22DEB5BA5A3E6
// 0x3F6B949F
ENTITY::SET_OBJECT_AS_NO_LONGER_NEEDED(Object* object);
----------------------------------------------------------------------------------------------------
```

This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.  

```'>
				<Param name='Object* object' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAsNoLongerNeeded' func='yes'>
			<Overload retVal='void' descr='// 0x2595DD4236549CE3
// 0x9A388380
ENTITY::SET_PED_AS_NO_LONGER_NEEDED(Ped* ped);
----------------------------------------------------------------------------------------------------
```

This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.  

```'>
				<Param name='Ped* ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleAsNoLongerNeeded' func='yes'>
			<Overload retVal='void' descr='// 0x629BFA74418D6239
// 0x9B0E10BE
ENTITY::SET_VEHICLE_AS_NO_LONGER_NEEDED(Vehicle* vehicle);
----------------------------------------------------------------------------------------------------
```

This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.  

```'>
				<Param name='Vehicle* vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopEntityAnim' func='yes'>
			<Overload retVal='Any' descr='// 0x28004F88151E03E0
// 0xC4769830
ENTITY::STOP_ENTITY_ANIM(Entity entity, char* animation, char* animGroup, float p3);
----------------------------------------------------------------------------------------------------
```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm  

```'>
				<Param name='Entity entity' />
				<Param name='char* animation' />
				<Param name='char* animGroup' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopSynchronizedEntityAnim' func='yes'>
			<Overload retVal='BOOL' descr='// 0x43D3807C077261E3
// 0xE27D2FC1
ENTITY::STOP_SYNCHRONIZED_ENTITY_ANIM(Entity entity, float p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

p1 sync task id?  

```'>
				<Param name='Entity entity' />
				<Param name='float p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopSynchronizedMapEntityAnim' func='yes'>
			<Overload retVal='BOOL' descr='// 0x11E79CAB7183B6F5
// 0x7253D5B2
ENTITY::STOP_SYNCHRONIZED_MAP_ENTITY_ANIM(float p0, float p1, float p2, float p3, Any p4, float p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='Any p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='WouldEntityBeOccluded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEE5D2A122E09EC42
// 0xEA127CBC
ENTITY::WOULD_ENTITY_BE_OCCLUDED(Hash entityModelHash, float x, float y, float z, BOOL p4);
----------------------------------------------------------------------------------------------------
```

First parameter was previously an Entity but after further research it is definitely a hash.  

```'>
				<Param name='Hash entityModelHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddShockingEventAtPosition' func='yes'>
			<Overload retVal='ScrHandle' descr='// 0xD9F8455409B525E9
// 0x0B30F779
EVENT::ADD_SHOCKING_EVENT_AT_POSITION(int type, float x, float y, float z, float duration);
----------------------------------------------------------------------------------------------------
```

duration is float here  

Event types- camx.me/gtav/tasks/shockingevents.txt  

```'>
				<Param name='int type' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddShockingEventForEntity' func='yes'>
			<Overload retVal='ScrHandle' descr='// 0x7FD8F3BE76F89422
// 0xA81B5B71
EVENT::ADD_SHOCKING_EVENT_FOR_ENTITY(int type, Entity entity, float duration);
----------------------------------------------------------------------------------------------------
```

duration is float here  

Event types - camx.me/gtav/tasks/shockingevents.txt  

```'>
				<Param name='int type' />
				<Param name='Entity entity' />
				<Param name='float duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='BlockDecisionMakerEvent' func='yes'>
			<Overload retVal='void' descr='// 0xE42FCDFD0E4196F7
// 0x57506EA6
EVENT::BLOCK_DECISION_MAKER_EVENT(Hash name, int type);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash name' />
				<Param name='int type' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearDecisionMakerEventResponse' func='yes'>
			<Overload retVal='void' descr='// 0x4FC9381A7AEE8968
// 0x07ABD94D
EVENT::CLEAR_DECISION_MAKER_EVENT_RESPONSE(Hash name, int type);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash name' />
				<Param name='int type' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsShockingEventInSphere' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1374ABB7C15BAB92
// 0x2F98823E
EVENT::IS_SHOCKING_EVENT_IN_SPHERE(int type, float x, float y, float z, float radius);
----------------------------------------------------------------------------------------------------
```

Some events that i found, not sure about them, but seems to have logic based on my tests:  

&apos;82 - dead body  

&apos;86   

&apos;87   

&apos;88 - shooting, fire extinguisher in use  

&apos;89   

&apos;93 - ped using horn  

&apos;95 - ped receiving melee attack  

&apos;102 - living ped receiving shot  

&apos;104 - player thrown grenade, tear gas, smoke grenade, jerry can dropping gasoline  

&apos;105 - melee attack against veh  

&apos;106 - player running  

&apos;108 - vehicle theft  

&apos;112 - melee attack  

&apos;113 - veh rollover ped  

&apos;114 - dead ped receiving shot  

&apos;116 - aiming at ped  

&apos;121   

		Here is full dump of shocking event types from the exe camx.me/gtav/tasks/shockingevents.txt  

```'>
				<Param name='int type' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveAllShockingEvents' func='yes'>
			<Overload retVal='void' descr='// 0xEAABE8FDFA21274C
// 0x64DF6282
EVENT::REMOVE_ALL_SHOCKING_EVENTS(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveShockingEvent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2CDA538C44C6CCE5
// 0xF82D5A87
EVENT::REMOVE_SHOCKING_EVENT(ScrHandle event);
----------------------------------------------------------------------------------------------------
'>
				<Param name='ScrHandle event' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveShockingEventSpawnBlockingAreas' func='yes'>
			<Overload retVal='void' descr='// 0x340F1415B68AEADE
// 0xA0CE89C8
EVENT::REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetDecisionMaker' func='yes'>
			<Overload retVal='void' descr='// 0xB604A2942ADED0EE
// 0x19CEAC9E
EVENT::SET_DECISION_MAKER(Ped ped, Hash name);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash name' />
			</Overload>
		</KeyWord>
		<KeyWord name='SuppressAgitationEventsNextFrame' func='yes'>
			<Overload retVal='void' descr='// 0x5F3B7749C112D552
// 0x80340396
EVENT::SUPPRESS_AGITATION_EVENTS_NEXT_FRAME();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SuppressShockingEventsNextFrame' func='yes'>
			<Overload retVal='void' descr='// 0x2F9A292AD0A3BD89
// 0x4CC674B5
EVENT::SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SuppressShockingEventTypeNextFrame' func='yes'>
			<Overload retVal='void' descr='// 0x3FD2EC8BF1F1CF30
// 0xA0FDCB82
EVENT::SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME(int type);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int type' />
			</Overload>
		</KeyWord>
		<KeyWord name='UnblockDecisionMakerEvent' func='yes'>
			<Overload retVal='void' descr='// 0xD7CD9CF34F2C99E8
// 0x62A3161D
EVENT::UNBLOCK_DECISION_MAKER_EVENT(Hash name, int type);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash name' />
				<Param name='int type' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetDlcVehicleData' func='yes'>
			<Overload retVal='BOOL' descr='// 0x33468EDC08E371F6
// 0xCF428FA4
FILE::GET_DLC_VEHICLE_DATA(int dlcVehicleIndex, int* outData);
----------------------------------------------------------------------------------------------------
```

dlcVehicleIndex takes a number from 0 - GET_NUM_DLC_VEHICLES() - 1.  

outData is a struct of 3 8-byte items.  

The Second item in the struct *(Hash *)(outData + 1) is the vehicle hash.  

```'>
				<Param name='int dlcVehicleIndex' />
				<Param name='int* outData' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetDlcVehicleFlags' func='yes'>
			<Overload retVal='int' descr='// 0x5549EE11FA22FCF2
// 0xAB12738C
FILE::GET_DLC_VEHICLE_FLAGS(int dlcVehicleIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int dlcVehicleIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetDlcVehicleModel' func='yes'>
			<Overload retVal='Hash' descr='// 0xECC01B7C5763333C
// 0xA2201E09
FILE::GET_DLC_VEHICLE_MODEL(int dlcVehicleIndex);
----------------------------------------------------------------------------------------------------
```

dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS()  

```'>
				<Param name='int dlcVehicleIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetDlcWeaponComponentData' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6CF598A2957C2BF8
// 0x4B83FCAF
FILE::GET_DLC_WEAPON_COMPONENT_DATA(int dlcWeaponIndex, int dlcWeapCompIndex, Any* ComponentDataPtr);
----------------------------------------------------------------------------------------------------
`

```

p0 seems to be the weapon index  

p1 seems to be the weapon component index  

struct DlcComponentData{  

int attachBone;  

int padding1;  

int bActiveByDefault;  

int padding2;  

int unk;  

int padding3;  

int componentHash;  

int padding4;  

int unk2;  

int padding5;  

int componentCost;  

int padding6;  

char nameLabel[64];  

char descLabel[64];  

};  

```'>
				<Param name='int dlcWeaponIndex' />
				<Param name='int dlcWeapCompIndex' />
				<Param name='Any* ComponentDataPtr' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetDlcWeaponData' func='yes'>
			<Overload retVal='BOOL' descr='// 0x79923CD21BECE14E
// 0xD88EC8EA
FILE::GET_DLC_WEAPON_DATA(int dlcWeaponIndex, int* outData);
----------------------------------------------------------------------------------------------------
```

dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.  

struct DlcWeaponData  

{  

int emptyCheck; //use DLC1::_IS_DLC_DATA_EMPTY on this  

int padding1;  

int weaponHash;  

int padding2;  

int unk;  

int padding3;  

int weaponCost;  

int padding4;  

int ammoCost;  

int padding5;  

int ammoType;  

int padding6;  

int defaultClipSize;  

int padding7;  

char nameLabel[64];  

char descLabel[64];  

char desc2Label[64]; // usually &quot;the&quot; + name  

char upperCaseNameLabel[64];  

};  

```'>
				<Param name='int dlcWeaponIndex' />
				<Param name='int* outData' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetForcedComponent' func='yes'>
			<Overload retVal='void' descr='// 0x6C93ED8C2F74859B
// 0x382C70BE
FILE::GET_FORCED_COMPONENT(Hash componentHash, int componentId, Any* p2, Any* p3, Any* p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash componentHash' />
				<Param name='int componentId' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
				<Param name='Any* p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHashNameForComponent' func='yes'>
			<Overload retVal='Hash' descr='// 0x0368B3A838070348
// 0xC8A4BF12
FILE::GET_HASH_NAME_FOR_COMPONENT(Entity entity, int componentId, int drawableVariant, int textureVar
----------------------------------------------------------------------------------------------------
);

```'>
				<Param name='Entity entity' />
				<Param name='int componentId' />
				<Param name='int drawableVariant' />
				<Param name='int textureVar' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHashNameForProp' func='yes'>
			<Overload retVal='Hash' descr='// 0x5D6160275CAEC8DD
// 0x7D876DC0
FILE::GET_HASH_NAME_FOR_PROP(Entity entity, int componentId, int propIndex, int propTextureIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='int componentId' />
				<Param name='int propIndex' />
				<Param name='int propTextureIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumDecorations' func='yes'>
			<Overload retVal='int' descr='// 0x278F76C3B0A8F109
// 0x71D0CF3E
FILE::_GET_NUM_DECORATIONS(int character);
----------------------------------------------------------------------------------------------------
```

only documented to be continued...  

```'>
				<Param name='int character' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumDlcVehicles' func='yes'>
			<Overload retVal='int' descr='// 0xA7A866D21CD2329B
// 0x8EAF9CF6
FILE::GET_NUM_DLC_VEHICLES();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumDlcWeaponComponents' func='yes'>
			<Overload retVal='int' descr='// 0x405425358A7D61FE
// 0x476B23A9
FILE::GET_NUM_DLC_WEAPON_COMPONENTS(int dlcWeaponIndex);
----------------------------------------------------------------------------------------------------
```

Allowed Values from 0 - DLC1::GET_NUM_DLC_WEAPONS()  

```'>
				<Param name='int dlcWeaponIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumDlcWeapons' func='yes'>
			<Overload retVal='int' descr='// 0xEE47635F352DA367
// 0x2B757E6C
FILE::GET_NUM_DLC_WEAPONS();
----------------------------------------------------------------------------------------------------
```

Gets the total number of DLC weapons.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumForcedComponents' func='yes'>
			<Overload retVal='int' descr='// 0xC6B9DB42C04DD8C3
// 0xCE70F183
FILE::_GET_NUM_FORCED_COMPONENTS(Hash componentHash);
----------------------------------------------------------------------------------------------------
```

Returns number of possible values of the componentId argument of GET_FORCED_COMPONENT.  

```'>
				<Param name='Hash componentHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumPropsFromOutfit' func='yes'>
			<Overload retVal='int' descr='// 0x9BDF59818B1E38C1
// 0x594E862C
FILE::_GET_NUM_PROPS_FROM_OUTFIT(int character, int p1, int p2, BOOL p3, int p4, int componentId);
----------------------------------------------------------------------------------------------------
```

character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode fe
male.  

componentId is between 0 and 11 and corresponds to the usual component slots.  

p1 could be the outfit number; unsure.  

p2 is usually -1; unknown function.  

p3 appears to be a boolean flag; unknown function.  

p4 is usually -1; unknown function.  

```'>
				<Param name='int character' />
				<Param name='int p1' />
				<Param name='int p2' />
				<Param name='BOOL p3' />
				<Param name='int p4' />
				<Param name='int componentId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPropFromOutfit' func='yes'>
			<Overload retVal='BOOL' descr='// 0x19F2A026EDF0013F
// 0x818534AC
FILE::_GET_PROP_FROM_OUTFIT(Any outfit, int slot, Any* item);
----------------------------------------------------------------------------------------------------
```

outfit = a structure passing though it - see GET_SHOP_PED_QUERY_OUTFIT  

slot - outfit slot  

item - hold 3 ints in a struct, you can use Vector3 structure  

GET_SHOP_PED_???  

```'>
				<Param name='Any outfit' />
				<Param name='int slot' />
				<Param name='Any* item' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetShopPedComponent' func='yes'>
			<Overload retVal='void' descr='// 0x74C0E2A57EC66760
// 0xB39677C5
FILE::GET_SHOP_PED_COMPONENT(Hash p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetShopPedOutfit' func='yes'>
			<Overload retVal='void' descr='// 0xB7952076E444979D
// 0xCAFE9209
FILE::GET_SHOP_PED_OUTFIT(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetShopPedOutfitLocate' func='yes'>
			<Overload retVal='Any' descr='// 0x073CA26B079F956E
// 0x2798F56F
FILE::GET_SHOP_PED_OUTFIT_LOCATE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetShopPedQueryComponent' func='yes'>
			<Overload retVal='void' descr='// 0x249E310B2D920699
// 0xC0718904
FILE::GET_SHOP_PED_QUERY_COMPONENT(int componentId, int* outComponent);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int componentId' />
				<Param name='int* outComponent' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetShopPedQueryOutfit' func='yes'>
			<Overload retVal='void' descr='// 0x6D793F03A631FE56
// 0x2F8013A1
FILE::GET_SHOP_PED_QUERY_OUTFIT(Any p0, Any* outfit);
----------------------------------------------------------------------------------------------------
```

struct Outfit_s  

{  

	int mask, torso, pants, parachute, shoes, misc1, tops1, armour, crew, tops2, hat, glasses, earpiece
;  

	int maskTexture, torsoTexture, pantsTexture, parachuteTexture, shoesTexture, misc1Texture, tops1Tex
ture,   

		armourTexture, crewTexture, tops2Texture, hatTexture, glassesTexture, earpieceTexture;  

};  

```'>
				<Param name='Any p0' />
				<Param name='Any* outfit' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetShopPedQueryProp' func='yes'>
			<Overload retVal='void' descr='// 0xDE44A00999B2837D
// 0x1D3C1466
FILE::GET_SHOP_PED_QUERY_PROP(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVariantComponent' func='yes'>
			<Overload retVal='void' descr='// 0x6E11F282F11863B6
// 0xE4FF7103
FILE::GET_VARIANT_COMPONENT(Hash componentHash, int componentId, Any* p2, Any* p3, Any* p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash componentHash' />
				<Param name='int componentId' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
				<Param name='Any* p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='InitShopPedComponent' func='yes'>
			<Overload retVal='void' descr='// 0x1E8C308FD312C036
// 0xB818C7FC
FILE::INIT_SHOP_PED_COMPONENT(int* outComponent);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* outComponent' />
			</Overload>
		</KeyWord>
		<KeyWord name='InitShopPedProp' func='yes'>
			<Overload retVal='void' descr='// 0xEB0A2B758F7B850F
// 0xF5659E50
FILE::INIT_SHOP_PED_PROP(int* outProp);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* outProp' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsDlcDataEmpty' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD4D7B033C3AA243C
// 0x06396058
FILE::_IS_DLC_DATA_EMPTY(Any* dlcData);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _IS_OUTFIT_EMPTY'>
				<Param name='Any* dlcData' />
			</Overload>
		</KeyWord>
		<KeyWord name='_IS_OUTFIT_EMPTY' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: IsDlcDataEmpty' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='IsDlcVehicleMod' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0564B9FF9631B82C
// 0x35BCA844
FILE::IS_DLC_VEHICLE_MOD(Any modData);
----------------------------------------------------------------------------------------------------
```

Use _GET_VEHICLE_MOD_DATA for modData  

```'>
				<Param name='Any modData' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x017568a8182d98a6' func='yes'>
			<Overload retVal='Any' descr='// 0x017568A8182D98A6
FILE::_0x017568A8182D98A6(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x341de7ed1d2a1bfd' func='yes'>
			<Overload retVal='BOOL' descr='// 0x341DE7ED1D2A1BFD
// 0x8E2C7FD5
FILE::_0x341DE7ED1D2A1BFD(Hash componentHash, Hash drawableSlotHash, int componentId);
----------------------------------------------------------------------------------------------------
```

6,000+ calls from scripts, all with either 0 or 1 for p2, that&apos;s a boolean in my book  

---  

 ^ The last one is the componentId  

iVar8 = dlc1::get_hash_name_for_component(iParam0, 8, ped::get_ped_drawable_variation(iParam0, 8), p
ed::get_ped_texture_variation(iParam0, 8));  

	if (dlc1::_0x341DE7ED1D2A1BFD(iVar8, 240476421, 8))  

```'>
				<Param name='Hash componentHash' />
				<Param name='Hash drawableSlotHash' />
				<Param name='int componentId' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x50f457823ce6eb5f' func='yes'>
			<Overload retVal='int' descr='// 0x50F457823CE6EB5F
// 0xC937FF3D
FILE::_0x50F457823CE6EB5F(int p0, int p1, int p2, int p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='int p1' />
				<Param name='int p2' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5d5caff661ddf6fc' func='yes'>
			<Overload retVal='void' descr='// 0x5D5CAFF661DDF6FC
FILE::_0x5D5CAFF661DDF6FC(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa9f9c2e0fde11cbb' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA9F9C2E0FDE11CBB
// 0x6641A864
FILE::_0xA9F9C2E0FDE11CBB(Any p0, Any p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc098810437312fff' func='yes'>
			<Overload retVal='int' descr='// 0xC098810437312FFF
// 0x59352658
FILE::_0xC098810437312FFF(int modData);
----------------------------------------------------------------------------------------------------
```

Use _GET_VEHICLE_MOD_DATA for modData  

Appears to be a GET_DLC_VEHICLE_MOD_* native.  

```'>
				<Param name='int modData' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc17ad0e5752becda' func='yes'>
			<Overload retVal='int' descr='// 0xC17AD0E5752BECDA
// 0x159751B4
FILE::_0xC17AD0E5752BECDA(Hash componentHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash componentHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe1ca84ebf72e691d' func='yes'>
			<Overload retVal='void' descr='// 0xE1CA84EBF72E691D
FILE::_0xE1CA84EBF72E691D(Any p0, Any p1, Any* p2, Any* p3, Any* p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
				<Param name='Any* p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf3fbe2d50a6a8c28' func='yes'>
			<Overload retVal='int' descr='// 0xF3FBE2D50A6A8C28
// 0x1ECD23E7
FILE::_0xF3FBE2D50A6A8C28(int character, BOOL p1);
----------------------------------------------------------------------------------------------------
```

characters  

0: Michael  

1: Franklin  

2: Trevor  

3: MPMale  

4: MPFemale  

```'>
				<Param name='int character' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xff56381874f82086' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFF56381874F82086
// 0x2E9D628C
FILE::_0xFF56381874F82086(int p0, int p1, int* outComponent);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='int p1' />
				<Param name='int* outComponent' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd40aac51e8e4c663' func='yes'>
			<Overload retVal='Any' descr='// 0xD40AAC51E8E4C663
FILES::_0xD40AAC51E8E4C663(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd81b7f27bc773e66' func='yes'>
			<Overload retVal='void' descr='// 0xD81B7F27BC773E66
FILES::_0xD81B7F27BC773E66(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddExplosion' func='yes'>
			<Overload retVal='void' descr='// 0xE3AD2BDBAEE269AC
// 0x10AF5258
FIRE::ADD_EXPLOSION(float x, float y, float z, int explosionType, float damageScale, BOOL isAudible, 
----------------------------------------------------------------------------------------------------
isInvisible, float cameraShake);

```

```

BOOL isAudible = If explosion makes a sound.  

BOOL isInvisible = If the explosion is invisible or not.  

this native is missing a new argument: noDamage  

nodamage = false: damage || nodamage = true: no damage  

enum ExplosionTypes  

{  

	EXPLOSION_GRENADE,  

	EXPLOSION_GRENADELAUNCHER,  

	EXPLOSION_STICKYBOMB,  

	EXPLOSION_MOLOTOV,  

	EXPLOSION_ROCKET,  

	EXPLOSION_TANKSHELL,  

	EXPLOSION_HI_OCTANE,  

	EXPLOSION_CAR,  

	EXPLOSION_PLANE,  

	EXPLOSION_PETROL_PUMP,  

	EXPLOSION_BIKE,  

	EXPLOSION_DIR_STEAM,  

	EXPLOSION_DIR_FLAME,  

	EXPLOSION_DIR_WATER_HYDRANT,  

	EXPLOSION_DIR_GAS_CANISTER,  

	EXPLOSION_BOAT,  

	EXPLOSION_SHIP_DESTROY,  

	EXPLOSION_TRUCK,  

	EXPLOSION_BULLET,  

	EXPLOSION_SMOKEGRENADELAUNCHER,  

	EXPLOSION_SMOKEGRENADE,  

	EXPLOSION_BZGAS,  

	EXPLOSION_FLARE,  

	EXPLOSION_GAS_CANISTER,  

	EXPLOSION_EXTINGUISHER,  

	EXPLOSION_PROGRAMMABLEAR,  

	EXPLOSION_TRAIN,  

	EXPLOSION_BARREL,  

	EXPLOSION_PROPANE,  

	EXPLOSION_BLIMP,  

	EXPLOSION_DIR_FLAME_EXPLODE,  

	EXPLOSION_TANKER,  

	EXPLOSION_PLANE_ROCKET,  

	EXPLOSION_VEHICLE_BULLET,  

	EXPLOSION_GAS_TANK,  

	EXPLOSION_BIRD_CRAP  

};  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int explosionType' />
				<Param name='float damageScale' />
				<Param name='BOOL isAudible' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddExplosionWithUserVfx' func='yes'>
			<Overload retVal='void' descr='// 0x36DD3FE58B5E5212
// 0xCF358946
FIRE::ADD_EXPLOSION_WITH_USER_VFX(float x, float y, float z, int explosionType, Hash explosionFx, flo
----------------------------------------------------------------------------------------------------
amageScale, BOOL isAudible, BOOL isInvisible, float cameraShake);

```

```

```

----------------------------------------------------------------------------------------------------

Old name: _ADD_SPECFX_EXPLOSION'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int explosionType' />
				<Param name='Hash explosionFx' />
			</Overload>
		</KeyWord>
		<KeyWord name='_ADD_SPECFX_EXPLOSION' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: AddExplosionWithUserVfx' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='AddOwnedExplosion' func='yes'>
			<Overload retVal='void' descr='// 0x172AA1B624FA1013
// 0x27EE0D67
FIRE::ADD_OWNED_EXPLOSION(Ped ped, float x, float y, float z, int explosionType, float damageScale, B
----------------------------------------------------------------------------------------------------
isAudible, BOOL isInvisible, float cameraShake);

```

```

enum ExplosionTypes  

{  

	EXPLOSION_GRENADE,  

	EXPLOSION_GRENADELAUNCHER,  

	EXPLOSION_STICKYBOMB,  

	EXPLOSION_MOLOTOV,  

	EXPLOSION_ROCKET,  

	EXPLOSION_TANKSHELL,  

	EXPLOSION_HI_OCTANE,  

	EXPLOSION_CAR,  

	EXPLOSION_PLANE,  

	EXPLOSION_PETROL_PUMP,  

	EXPLOSION_BIKE,  

	EXPLOSION_DIR_STEAM,  

	EXPLOSION_DIR_FLAME,  

	EXPLOSION_DIR_WATER_HYDRANT,  

	EXPLOSION_DIR_GAS_CANISTER,  

	EXPLOSION_BOAT,  

	EXPLOSION_SHIP_DESTROY,  

	EXPLOSION_TRUCK,  

	EXPLOSION_BULLET,  

	EXPLOSION_SMOKEGRENADELAUNCHER,  

	EXPLOSION_SMOKEGRENADE,  

	EXPLOSION_BZGAS,  

	EXPLOSION_FLARE,  

	EXPLOSION_GAS_CANISTER,  

	EXPLOSION_EXTINGUISHER,  

	EXPLOSION_PROGRAMMABLEAR,  

	EXPLOSION_TRAIN,  

	EXPLOSION_BARREL,  

	EXPLOSION_PROPANE,  

	EXPLOSION_BLIMP,  

	EXPLOSION_DIR_FLAME_EXPLODE,  

	EXPLOSION_TANKER,  

	EXPLOSION_PLANE_ROCKET,  

	EXPLOSION_VEHICLE_BULLET,  

	EXPLOSION_GAS_TANK,  

	EXPLOSION_BIRD_CRAP  

};  

BOOL isAudible = If explosion makes a sound.  

BOOL isInvisible = If the explosion is invisible or not.  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int explosionType' />
				<Param name='float damageScale' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetClosestFirePos' func='yes'>
			<Overload retVal='BOOL' descr='// 0x352A9F6BCF90081F
// 0xC4977B47
FIRE::GET_CLOSEST_FIRE_POS(Vector3* outPosition, float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Returns TRUE if it found something. FALSE if not.  

```'>
				<Param name='Vector3* outPosition' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfFiresInRange' func='yes'>
			<Overload retVal='int' descr='// 0x50CAD495A460B305
// 0x654D93B7
FIRE::GET_NUMBER_OF_FIRES_IN_RANGE(float x, float y, float z, float radius);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedInsideExplosionArea' func='yes'>
			<Overload retVal='Entity' descr='// 0x14BA4BA137AF6CEC
// 0xAEC0D176
FIRE::_GET_PED_INSIDE_EXPLOSION_AREA(int explosionType, float x1, float y1, float z1, float x2, flo
----------------------------------------------------------------------------------------------------
2, float z2, float radius);

```

```

Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius. 
It could return a ped or an entity, but the scripts expect a ped, but still check if it&apos;s a ped.  

```'>
				<Param name='int explosionType' />
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityOnFire' func='yes'>
			<Overload retVal='BOOL' descr='// 0x28D3FED7190D3A0B
// 0x8C73E64F
FIRE::IS_ENTITY_ON_FIRE(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsExplosionInAngledArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA079A6C51525DC4B
// 0x0128FED9
FIRE::IS_EXPLOSION_IN_ANGLED_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2
----------------------------------------------------------------------------------------------------
oat z2, float angle);

```'>
				<Param name='int explosionType' />
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsExplosionInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2E2EBA0EE7CED0E0
// 0xFB40075B
FIRE::IS_EXPLOSION_IN_AREA(int explosionType, float x1, float y1, float z1, float x2, float y2, float
----------------------------------------------------------------------------------------------------
;

```'>
				<Param name='int explosionType' />
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsExplosionInSphere' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAB0F816885B0E483
// 0xD455A7F3
FIRE::IS_EXPLOSION_IN_SPHERE(int explosionType, float x, float y, float z, float radius);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int explosionType' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6070104b699b2ef4' func='yes'>
			<Overload retVal='Any' descr='// 0x6070104B699B2EF4
FIRE::_0x6070104B699B2EF4(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0x37C388DB  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveScriptFire' func='yes'>
			<Overload retVal='void' descr='// 0x7FF548385680673F
// 0x6B21FE26
FIRE::REMOVE_SCRIPT_FIRE(int fireHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int fireHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartEntityFire' func='yes'>
			<Overload retVal='Any' descr='// 0xF6A9D9708F6F23DF
// 0x8928428E
FIRE::START_ENTITY_FIRE(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartScriptFire' func='yes'>
			<Overload retVal='int' descr='// 0x6B83617E04503888
// 0xE7529357
FIRE::START_SCRIPT_FIRE(float X, float Y, float Z, int maxChildren, BOOL isGasFire);
----------------------------------------------------------------------------------------------------
```

Starts a fire:  

xyz: Location of fire  

maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the 
function will do nothing.  

isGasFire: Whether or not the fire is powered by gasoline.  

```'>
				<Param name='float X' />
				<Param name='float Y' />
				<Param name='float Z' />
				<Param name='int maxChildren' />
				<Param name='BOOL isGasFire' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopEntityFire' func='yes'>
			<Overload retVal='void' descr='// 0x7F0DD2EBBB651AFF
// 0xCE8C9066
FIRE::STOP_ENTITY_FIRE(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopFireInRange' func='yes'>
			<Overload retVal='void' descr='// 0x056A8A219B8E829F
// 0x725C7205
FIRE::STOP_FIRE_IN_RANGE(float x, float y, float z, float radius);
----------------------------------------------------------------------------------------------------
```

This doesn&apos;t stop fire nor the fire propagation in a loop... for some reasons.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddClanDecalToVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x428BDCB9DA58DA53
// 0x12077738
GRAPHICS::_ADD_CLAN_DECAL_TO_VEHICLE(Vehicle vehicle, Ped ped, int boneIndex, float x1, float x2, float x
----------------------------------------------------------------------------------------------------
loat y1, float y2, float y3, float z1, float z2, float z3, float scale, Any p13, int alpha);

```

```

Now has 15 parameters, previous declaration:  

BOOL _0x428BDCB9DA58DA53(Any p0, Any p1, Any p2, float p3, float p4, float p5, float p6, float p7, f
loat p8, float p9, float p10, float p11, float p12, Any p13)  

boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chas
sis bone. They are usually rotations and measurements. Haven&apos;t reversed which are what yet.  

Scale is how big the decal will be.  

p13 is always 0.  

For alpha, 200 seems to match what the game is doing, I think. I don&apos;t have access to the new script
s to see what this parameter is, but based on guessing this seems (kind of) accurate.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Ped ped' />
				<Param name='int boneIndex' />
				<Param name='float x1' />
				<Param name='float x2' />
				<Param name='float x' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddDecal' func='yes'>
			<Overload retVal='Object' descr='// 0xB302244A1839BDAD
// 0xEAD0C412
GRAPHICS::ADD_DECAL(int decalType, float posX, float posY, float posZ, float p4, float p5, float p6, fl
----------------------------------------------------------------------------------------------------
p7, float p8, float p9, float width, float height, float rCoef, float gCoef, float bCoef, float 
opacity, float timeout, BOOL p17, BOOL p18, BOOL p19);

```

```

decal types:  

public enum DecalTypes  

{  

    splatters_blood = 1010,  

    splatters_blood_dir = 1015,  

    splatters_blood_mist = 1017,  

    splatters_mud = 1020,  

    splatters_paint = 1030,  

    splatters_water = 1040,  

    splatters_water_hydrant = 1050,  

    splatters_blood2 = 1110,  

    weapImpact_metal = 4010,  

    weapImpact_concrete = 4020,  

    weapImpact_mattress = 4030,  

    weapImpact_mud = 4032,  

    weapImpact_wood = 4050,  

    weapImpact_sand = 4053,  

    weapImpact_cardboard = 4040,  

    weapImpact_melee_glass = 4100,  

    weapImpact_glass_blood = 4102,  

    weapImpact_glass_blood2 = 4104,  

    weapImpact_shotgun_paper = 4200,  

    weapImpact_shotgun_mattress,  

    weapImpact_shotgun_metal,  

    weapImpact_shotgun_wood,  

    weapImpact_shotgun_dirt,  

    weapImpact_shotgun_tvscreen,  

    weapImpact_shotgun_tvscreen2,  

    weapImpact_shotgun_tvscreen3,  

    weapImpact_melee_concrete = 4310,  

    weapImpact_melee_wood = 4312,  

    weapImpact_melee_metal = 4314,  

    burn1 = 4421,  

    burn2,  

    burn3,  

    burn4,  

    burn5,  

    bang_concrete_bang = 5000,  

    bang_concrete_bang2,  

    bang_bullet_bang,  

    bang_bullet_bang2 = 5004,  

    bang_glass = 5031,  

    bang_glass2,  

    solidPool_water = 9000,  

    solidPool_blood,  

    solidPool_oil,  

    solidPool_petrol,  

    solidPool_mud,  

    porousPool_water,  

    porousPool_blood,  

    porousPool_oil,  

    porousPool_petrol,  

    porousPool_mud,  

    porousPool_water_ped_drip,  

    liquidTrail_water = 9050  

}  

```'>
				<Param name='int decalType' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddDecalToMarker' func='yes'>
			<Overload retVal='void' descr='// 0x8A35C742130C6080
// 0x335695CF
GRAPHICS::_ADD_DECAL_TO_MARKER(int decalType, char* textureDict, char* textureName);
----------------------------------------------------------------------------------------------------
```

REQUEST_STREAMED_TEXTURE_DICT(&quot;MPOnMissMarkers&quot;, false);  

*uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVa
r1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);  

_0x8A35C742130C6080(9120, &quot;MPOnMissMarkers&quot;, &quot;Capture_The_Flag_Base_Icon&quot;);  

```'>
				<Param name='int decalType' />
				<Param name='char* textureDict' />
				<Param name='char* textureName' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddEntityIcon' func='yes'>
			<Overload retVal='Any' descr='// 0x9CD43EEE12BF4DD0
// 0xF3027D21
GRAPHICS::ADD_ENTITY_ICON(Entity entity, char* icon);
----------------------------------------------------------------------------------------------------
```

Example:  

GRAPHICS::ADD_ENTITY_ICON(a_0, &quot;MP_Arrow&quot;);  

I tried this and nothing happened...  

```'>
				<Param name='Entity entity' />
				<Param name='char* icon' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddPetrolDecal' func='yes'>
			<Overload retVal='Any' descr='// 0x4F5212C7AD880DF8
// 0x1259DF42
GRAPHICS::ADD_PETROL_DECAL(float x, float y, float z, float groundLvl, float width, float transparency);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float groundLvl' />
				<Param name='float width' />
				<Param name='float transparency' />
			</Overload>
		</KeyWord>
		<KeyWord name='AttachTvAudioToEntity' func='yes'>
			<Overload retVal='void' descr='// 0x845BAD77CC770633
// 0x784944DB
GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
```

Might be more appropriate in AUDIO?  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='BeginScaleformMovieMethod' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF6E48914C7A8694E
// 0x215ABBE8
GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD(int scaleform, char* functionName);
----------------------------------------------------------------------------------------------------
```

Push a function from the Scaleform onto the stack  

```

----------------------------------------------------------------------------------------------------

Old name: _PUSH_SCALEFORM_MOVIE_FUNCTION'>
				<Param name='int scaleform' />
				<Param name='char* functionName' />
			</Overload>
		</KeyWord>
		<KeyWord name='_PUSH_SCALEFORM_MOVIE_FUNCTION' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: BeginScaleformMovieMethod' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='BeginScaleformMovieMethodHudComponent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x98C494FD5BDFBFD5
// 0x5D66CE1E
GRAPHICS::_BEGIN_SCALEFORM_MOVIE_METHOD_HUD_COMPONENT(int hudComponent, char* functionName);
----------------------------------------------------------------------------------------------------
```

Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::_PUSH_
SCALEFORM_MOVIE_FUNCTION, just a hud component id instead of a Scaleform.  

Known components:  

19   

20   

This native requires more research - all information can be found inside of &apos;hud.gfx&apos;. Using a decom
piler, the different components are located under &quot;scripts\__Packages\com\rockstargames\gtav\hud\hud
Components&quot; and &quot;scripts\__Packages\com\rockstargames\gtav\Multiplayer&quot;.  

```

----------------------------------------------------------------------------------------------------

Old name: _PUSH_SCALEFORM_MOVIE_FUNCTION_FROM_HUD_COMPONENT'>
				<Param name='int hudComponent' />
				<Param name='char* functionName' />
			</Overload>
		</KeyWord>
		<KeyWord name='_PUSH_SCALEFORM_MOVIE_FUNCTION_FROM_HUD_COMPONENT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: BeginScaleformMovieMethodHudComponent' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='BeginScaleformMovieMethodN' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAB58C27C2E6123C6
// 0xF6015178
GRAPHICS::_BEGIN_SCALEFORM_MOVIE_METHOD_N(char* functionName);
----------------------------------------------------------------------------------------------------
```

Possibly calls &quot;global&quot; Scaleform functions - needs more research!  

```

----------------------------------------------------------------------------------------------------

Old name: _PUSH_SCALEFORM_MOVIE_FUNCTION_N'>
				<Param name='char* functionName' />
			</Overload>
		</KeyWord>
		<KeyWord name='_PUSH_SCALEFORM_MOVIE_FUNCTION_N' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: BeginScaleformMovieMethodN' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='BeginScaleformMovieMethodV' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB9449845F73F5E9C
// 0x5E219B67
GRAPHICS::_BEGIN_SCALEFORM_MOVIE_METHOD_V(char* functionName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* functionName' />
			</Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandScaleformString' func='yes'>
			<Overload retVal='void' descr='// 0x80338406F3475E55
// 0x3AC9CB55
GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(char* componentType);
----------------------------------------------------------------------------------------------------
```

Previously called _BEGIN_TEXT_COMPONENT  

Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEF
ORM_STRING is called.  

Examples:  

GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(&quot;NUMBER&quot;);  

UI::ADD_TEXT_COMPONENT_INTEGER(GAMEPLAY::ABSI(a_1));  

GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();  

GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(&quot;STRING&quot;);  

UI::_ADD_TEXT_COMPONENT_STRING(a_2);  

GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();  

GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(&quot;STRTNM2&quot;);  

UI::_0x17299B63C7683A2B(v_3);  

UI::_0x17299B63C7683A2B(v_4);  

GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();  

GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING(&quot;STRTNM1&quot;);  

UI::_0x17299B63C7683A2B(v_3);  

GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();  

```

----------------------------------------------------------------------------------------------------

Old name: _BEGIN_TEXT_COMPONENT'>
				<Param name='char* componentType' />
			</Overload>
		</KeyWord>
		<KeyWord name='_BEGIN_TEXT_COMPONENT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: BeginTextCommandScaleformString' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='CallScaleformMovieFunctionFloatParams' func='yes'>
			<Overload retVal='void' descr='// 0xD0837058AE2E4BEE
// 0x557EDA1D
GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_FLOAT_PARAMS(int scaleform, char* functionName, float param1, fl
----------------------------------------------------------------------------------------------------
param2, float param3, float param4, float param5);

```

```

Calls the Scaleform function and passes the parameters as floats.  

The number of parameters passed to the function varies, so the end of the parameter list is represen
ted by -1.0.  

```'>
				<Param name='int scaleform' />
				<Param name='char* functionName' />
				<Param name='float param1' />
			</Overload>
		</KeyWord>
		<KeyWord name='CallScaleformMovieFunctionMixedParams' func='yes'>
			<Overload retVal='void' descr='// 0xEF662D8D57E290B1
// 0x6EAF56DE
GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(int scaleform, char* functionName, float floatParam
----------------------------------------------------------------------------------------------------
loat floatParam2, float floatParam3, float floatParam4, float floatParam5, char* stringParam1, c
har* stringParam2, char* stringParam3, char* stringParam4, char* stringParam5);

```

```

Calls the Scaleform function and passes both float and string parameters (in their respective order)
.  

The number of parameters passed to the function varies, so the end of the float parameters is repres
ented by -1.0, and the end of the string parameters is represented by 0 (NULL).  

NOTE: The order of parameters in the function prototype is important! All float parameters must come
 first, followed by the string parameters.  

Examples:  

// function MY_FUNCTION(floatParam1, floatParam2, stringParam)  

GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, &quot;MY_FUNCTION&quot;, 10.0, 20.0, -1.0, -1
.0, -1.0, &quot;String param&quot;, 0, 0, 0, 0);  

// function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)  

GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, &quot;MY_FUNCTION_2&quot;, 10.0, -1.0, -1.0, 
-1.0, -1.0, &quot;String param #1&quot;, &quot;String param #2&quot;, 0, 0, 0);  

```'>
				<Param name='int scaleform' />
				<Param name='char* functionName' />
				<Param name='float floatParam' />
			</Overload>
		</KeyWord>
		<KeyWord name='CallScaleformMovieFunctionStringParams' func='yes'>
			<Overload retVal='void' descr='// 0x51BC1ED3CC44E8F7
// 0x91A7FCEB
GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_STRING_PARAMS(int scaleform, char* functionName, char* param1, c
----------------------------------------------------------------------------------------------------
param2, char* param3, char* param4, char* param5);

```

```

Calls the Scaleform function and passes the parameters as strings.  

The number of parameters passed to the function varies, so the end of the parameter list is represen
ted by 0 (NULL).  

```'>
				<Param name='int scaleform' />
				<Param name='char* functionName' />
				<Param name='char* param1' />
			</Overload>
		</KeyWord>
		<KeyWord name='CallScaleformMovieMethod' func='yes'>
			<Overload retVal='void' descr='// 0xFBD96D87AC96D533
// 0x7AB77B57
GRAPHICS::CALL_SCALEFORM_MOVIE_METHOD(int scaleform, char* method);
----------------------------------------------------------------------------------------------------
```

Calls the Scaleform function.  

```

----------------------------------------------------------------------------------------------------

Old name: _CALL_SCALEFORM_MOVIE_FUNCTION_VOID'>
				<Param name='int scaleform' />
				<Param name='char* method' />
			</Overload>
		</KeyWord>
		<KeyWord name='_CALL_SCALEFORM_MOVIE_FUNCTION_VOID' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: CallScaleformMovieMethod' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='ClearDrawOrigin' func='yes'>
			<Overload retVal='void' descr='// 0xFF0B610F6BE0D7AF
// 0xDD76B263
GRAPHICS::CLEAR_DRAW_ORIGIN();
----------------------------------------------------------------------------------------------------
```

Resets the screen&apos;s draw-origin which was changed by the function GRAPHICS::SET_DRAW_ORIGIN(...) bac
k to x=0,y=0.  

See GRAPHICS::SET_DRAW_ORIGIN(...) for further information.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearTimecycleModifier' func='yes'>
			<Overload retVal='void' descr='// 0x0F07E7745A236711
// 0x8D8DF8EE
GRAPHICS::CLEAR_TIMECYCLE_MODIFIER();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='CreateCheckpoint' func='yes'>
			<Overload retVal='int' descr='// 0x0134F0835AB6BFCB
// 0xF541B690
GRAPHICS::CREATE_CHECKPOINT(int type, float posX1, float posY1, float posZ1, float posX2, float posY2, flo
----------------------------------------------------------------------------------------------------
osZ2, float radius, int red, int green, int blue, int alpha, int reserved);

```

```

Creates a checkpoint. Returns the handle of the checkpoint.  

20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it li
ke markers.  

Parameters:  

* type - The type of checkpoint to create. See below for a list of checkpoint types.  

* pos1 - The position of the checkpoint.  

* pos2 - The position of the next checkpoint to point to.  

* radius - The radius of the checkpoint.  

* color - The color of the checkpoint.  

* reserved - Special parameter, see below for details. Usually set to 0 in the scripts.  

Checkpoint types:  

0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  

5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  

10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  

15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker        

20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker   

25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker      

30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker   

35-38-------Ring: Airplane Up, Left, Right, UpsideDown  

39----------?  

40----------Ring: just a ring  

41----------?  

42-44-------Cylinder w/ number (uses &apos;reserved&apos; parameter)  

45-47-------Cylinder no arrow or number  

If using type 42-44, reserved sets number / number and shape to display  

0-99------------Just numbers (0-99)  

100-109-----------------Arrow (0-9)  

110-119------------Two arrows (0-9)  

120-129----------Three arrows (0-9)  

130-139----------------Circle (0-9)  

140-149------------CycleArrow (0-9)  

150-159----------------Circle (0-9)  

160-169----Circle  w/ pointer (0-9)  

170-179-------Perforated ring (0-9)  

180-189----------------Sphere (0-9)  

```'>
				<Param name='int type' />
				<Param name='float posX1' />
				<Param name='float posY1' />
				<Param name='float posZ1' />
				<Param name='float posX2' />
				<Param name='float posY2' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateTrackedPoint' func='yes'>
			<Overload retVal='int' descr='// 0xE2C9439ED45DEA60
// 0x3129C31A
GRAPHICS::CREATE_TRACKED_POINT();
----------------------------------------------------------------------------------------------------
```

Creates a tracked point, useful for checking the visibility of a 3D point on screen.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteCheckpoint' func='yes'>
			<Overload retVal='void' descr='// 0xF5ED37F54CD4D52E
// 0xB66CF3CA
GRAPHICS::DELETE_CHECKPOINT(int checkpoint);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int checkpoint' />
			</Overload>
		</KeyWord>
		<KeyWord name='DestroyTrackedPoint' func='yes'>
			<Overload retVal='void' descr='// 0xB25DC90BAD56CA42
// 0x14AC675F
GRAPHICS::DESTROY_TRACKED_POINT(int point);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int point' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableVehicleDistantlights' func='yes'>
			<Overload retVal='void' descr='// 0xC9F98AC1884E73A2
// 0x7CFAE36F
GRAPHICS::DISABLE_VEHICLE_DISTANTLIGHTS(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesParticleFxLoopedExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0x74AFEF0D2E1E409B
// 0xCBF91D2A
GRAPHICS::DOES_PARTICLE_FX_LOOPED_EXIST(int ptfxHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int ptfxHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesVehicleHaveDecal' func='yes'>
			<Overload retVal='BOOL' descr='// 0x060D935D3981A275
// 0x6D58F73B
GRAPHICS::_DOES_VEHICLE_HAVE_DECAL(Vehicle vehicle, Any p1);
----------------------------------------------------------------------------------------------------
```

This function is called before ADD_CLAN_DECAL_TO_VEHICLE to see if it needs to run. IDK if it&apos;s for 
clan decal or not, but the 2nd parameter might be decal index? It&apos;s always passed 0. Not sure what t
his function really does. But it does return 0 if the clan tag is not on, and 1 if it is.  

```

----------------------------------------------------------------------------------------------------

Old name: _HAS_VEHICLE_GOT_DECAL'>
				<Param name='Vehicle vehicle' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='_HAS_VEHICLE_GOT_DECAL' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: DoesVehicleHaveDecal' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='DrawBox' func='yes'>
			<Overload retVal='void' descr='// 0xD3A9971CADAC7252
// 0xCD4D9DD5
GRAPHICS::DRAW_BOX(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int bl
----------------------------------------------------------------------------------------------------
int alpha);

```

```

x,y,z = start pos  

x2,y2,z2 = end pos  

Draw&apos;s a 3D Box between the two x,y,z coords.  

--------------  

Keep in mind that the edges of the box do only align to the worlds base-vectors. Therefore something
 like rotation cannot be applied. That means this function is pretty much useless, unless you want a
 static unicolor box somewhere.  

I recommend using a predefined function to call this.  

[VB.NET]  

Public Sub DrawBox(a As Vector3, b As Vector3, col As Color)  

    [Function].Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A)  

End Sub  

[C#]  

public void DrawBox(Vector3 a, Vector3 b, Color col)  

{  

    Function.Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A);  

}  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int bl' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawDebugBox' func='yes'>
			<Overload retVal='void' descr='// 0x083A2CA4F2E573BD
// 0x8524A848
GRAPHICS::DRAW_DEBUG_BOX(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, 
----------------------------------------------------------------------------------------------------
blue, int alpha);

```

```

NOTE: Debugging functions are not present in the retail version of the game.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='int red' />
				<Param name='int green' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawDebugCross' func='yes'>
			<Overload retVal='void' descr='// 0x73B1189623049839
// 0xB6DF3709
GRAPHICS::DRAW_DEBUG_CROSS(float x, float y, float z, float size, int red, int green, int blue, int alpha
----------------------------------------------------------------------------------------------------
```

```

NOTE: Debugging functions are not present in the retail version of the game.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float size' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int blue' />
				<Param name='int alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawDebugLine' func='yes'>
			<Overload retVal='void' descr='// 0x7FDFADE676AA3CB0
// 0xABF783AB
GRAPHICS::DRAW_DEBUG_LINE(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green,
----------------------------------------------------------------------------------------------------
blue, int alpha);

```

```

NOTE: Debugging functions are not present in the retail version of the game.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='int red' />
				<Param name='int green' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawDebugLineWithTwoColours' func='yes'>
			<Overload retVal='void' descr='// 0xD8B9A8AC5608FF94
// 0xE8BFF632
GRAPHICS::DRAW_DEBUG_LINE_WITH_TWO_COLOURS(float x1, float y1, float z1, float x2, float y2, float z2, in
----------------------------------------------------------------------------------------------------
, int g1, int b1, int r2, int g2, int b2, int alpha1, int alpha2);

```

```

NOTE: Debugging functions are not present in the retail version of the game.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawDebugSphere' func='yes'>
			<Overload retVal='void' descr='// 0xAAD68E1AB39DA632
// 0x304D0EEF
GRAPHICS::DRAW_DEBUG_SPHERE(float x, float y, float z, float radius, int red, int green, int blue, int al
----------------------------------------------------------------------------------------------------
;

```

```

NOTE: Debugging functions are not present in the retail version of the game.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int blue' />
				<Param name='int al' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawDebugText' func='yes'>
			<Overload retVal='void' descr='// 0x3903E216620488E8
// 0x269B006F
GRAPHICS::DRAW_DEBUG_TEXT(char* text, float x, float y, float z, int red, int green, int blue, int alpha)
----------------------------------------------------------------------------------------------------
``

```

NOTE: Debugging functions are not present in the retail version of the game.  

```'>
				<Param name='char* text' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int blue' />
				<Param name='int alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawDebugText_2d' func='yes'>
			<Overload retVal='void' descr='// 0xA3BB2E9555C05A8F
// 0x528B973B
GRAPHICS::DRAW_DEBUG_TEXT_2D(char* text, float x, float y, float z, int red, int green, int blue, int alp
----------------------------------------------------------------------------------------------------
```

```

NOTE: Debugging functions are not present in the retail version of the game.  

```'>
				<Param name='char* text' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int blue' />
				<Param name='int alp' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawLightWithRange' func='yes'>
			<Overload retVal='void' descr='// 0xF2A1B2771A01DBD4
// 0x6A396E9A
GRAPHICS::DRAW_LIGHT_WITH_RANGE(float posX, float posY, float posZ, int colorR, int colorG, int colorB, f
----------------------------------------------------------------------------------------------------
range, float intensity);

```'>
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='int colorR' />
				<Param name='int colorG' />
				<Param name='int colorB' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawLightWithRangeAndShadow' func='yes'>
			<Overload retVal='void' descr='// 0xF49E9A9716A04595
GRAPHICS::_DRAW_LIGHT_WITH_RANGE_AND_SHADOW(float x, float y, float z, int r, int g, int b, float range, 
----------------------------------------------------------------------------------------------------
t intensity, float shadow);

```

----------------------------------------------------------------------------------------------------

Old name: _DRAW_LIGHT_WITH_RANGE_WITH_SHADOW'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
				<Param name='float range' />
			</Overload>
		</KeyWord>
		<KeyWord name='_DRAW_LIGHT_WITH_RANGE_WITH_SHADOW' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: DrawLightWithRangeAndShadow' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='DrawLine' func='yes'>
			<Overload retVal='void' descr='// 0x6B7256074AE34680
// 0xB3426BCC
GRAPHICS::DRAW_LINE(float x1, float y1, float z1, float x2, float y2, float z2, int red, int green, int b
----------------------------------------------------------------------------------------------------
int alpha);

```

```

Draws a depth-tested line from one point to another.  

----------------  

x1, y1, z1 : Coordinates for the first point  

x2, y2, z2 : Coordinates for the second point  

r, g, b, alpha : Color with RGBA-Values  

I recommend using a predefined function to call this.  

[VB.NET]  

Public Sub DrawLine(from As Vector3, [to] As Vector3, col As Color)  

    [Function].Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, [to].X, [to].Y, [to].Z, col.R, col.G, co
l.B, col.A)  

End Sub  

[C#]  

public void DrawLine(Vector3 from, Vector3 to, Color col)  

{  

    Function.Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, to.X, to.Y, to.Z, col.R, col.G, col.B, col
.A);  

}  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int b' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawMarker' func='yes'>
			<Overload retVal='void' descr='// 0x28477EC23D892089
// 0x48D84A02
GRAPHICS::DRAW_MARKER(int type, float posX, float posY, float posZ, float dirX, float dirY, float dirZ, f
----------------------------------------------------------------------------------------------------
rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int red, int green, int
 blue, int alpha, BOOL bobUpAndDown, BOOL faceCamera, int p19, BOOL rotate, char* textureDict, char*
 textureName, BOOL drawOnEnts);

```

```

enum MarkerTypes  

{  

	MarkerTypeUpsideDownCone = 0,  

	MarkerTypeVerticalCylinder = 1,  

	MarkerTypeThickChevronUp = 2,  

	MarkerTypeThinChevronUp = 3,  

	MarkerTypeCheckeredFlagRect = 4,  

	MarkerTypeCheckeredFlagCircle = 5,  

	MarkerTypeVerticleCircle = 6,  

	MarkerTypePlaneModel = 7,  

	MarkerTypeLostMCDark = 8,  

	MarkerTypeLostMCLight = 9,  

	MarkerTypeNumber0 = 10,  

	MarkerTypeNumber1 = 11,  

	MarkerTypeNumber2 = 12,  

	MarkerTypeNumber3 = 13,  

	MarkerTypeNumber4 = 14,  

	MarkerTypeNumber5 = 15,  

	MarkerTypeNumber6 = 16,  

	MarkerTypeNumber7 = 17,  

	MarkerTypeNumber8 = 18,  

	MarkerTypeNumber9 = 19,  

	MarkerTypeChevronUpx1 = 20,  

	MarkerTypeChevronUpx2 = 21,  

	MarkerTypeChevronUpx3 = 22,  

	MarkerTypeHorizontalCircleFat = 23,  

	MarkerTypeReplayIcon = 24,  

	MarkerTypeHorizontalCircleSkinny = 25,  

	MarkerTypeHorizontalCircleSkinny_Arrow = 26,  

	MarkerTypeHorizontalSplitArrowCircle = 27,  

	MarkerTypeDebugSphere = 28,  

	MarkerTypeDallorSign = 29,  

	MarkerTypeHorizontalBars = 30,  

	MarkerTypeWolfHead = 31  

};  

dirX/Y/Z represent a heading on each axis in which the marker should face, alternatively you can rot
ate each axis independently with rotX/Y/Z (and set dirX/Y/Z all to 0).  

faceCamera - Rotates only the y-axis (the heading) towards the camera  

p19 - no effect, default value in script is 2  

rotate - Rotates only on the y-axis (the heading)  

textureDict - Name of texture dictionary to load texture from (e.g. &quot;GolfPutting&quot;)  

textureName - Name of texture inside dictionary to load (e.g. &quot;PuttingMarker&quot;)  

drawOnEnts - Draws the marker onto any entities that intersect it  

basically what he said, except textureDict and textureName are totally not char*, or if so, then the
y are always set to 0/NULL/nullptr in every script I checked, eg:  

bj.c: graphics::draw_marker(6, vParam0, 0f, 0f, 1f, 0f, 0f, 0f, 4f, 4f, 4f, 240, 200, 80, iVar1, 0, 
0, 2, 0, 0, 0, false);  

his is what I used to draw an amber downward pointing chevron &quot;V&quot;, has to be redrawn every frame.  T
he 180 is for 180 degrees rotation around the Y axis, the 50 is alpha, assuming max is 100, but it w
ill accept 255.  

GRAPHICS::DRAW_MARKER(2, v.x, v.y, v.z + 2, 0, 0, 0, 0, 180, 0, 2, 2, 2, 255, 128, 0, 50, 0, 1, 1, 0
, 0, 0, 0);  

```'>
				<Param name='int type' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float dirX' />
				<Param name='float dirY' />
				<Param name='float dirZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawPoly' func='yes'>
			<Overload retVal='void' descr='// 0xAC26716048436851
// 0xABD19253
GRAPHICS::DRAW_POLY(float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float
----------------------------------------------------------------------------------------------------
int red, int green, int blue, int alpha);

```

```

x/y/z - Location of a vertex (in world coords), presumably.  

----------------  

x1, y1, z1     : Coordinates for the first point  

x2, y2, z2     : Coordinates for the second point  

x3, y3, z3     : Coordinates for the third point  

r, g, b, alpha : Color with RGBA-Values  

Keep in mind that only one side of the drawn triangle is visible: It&apos;s the side, in which the vector
-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).  

But be aware: The function seems to work somehow differently. I have trouble having them drawn in ro
tated orientation. Try it yourself and if you somehow succeed, please edit this and post your soluti
on.  

I recommend using a predefined function to call this.  

[VB.NET]  

Public Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)  

    [Function].Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B
, col.A)  

End Sub  

[C#]  

public void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)  

{  

    Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, 
col.A);  

}  

BTW: Intersecting triangles are not supported: They overlap in the order they were called.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='float x3' />
				<Param name='float y3' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawRect' func='yes'>
			<Overload retVal='void' descr='// 0x3A618A217E5154F0
// 0xDD2BFC77
GRAPHICS::DRAW_RECT(float x, float y, float width, float height, int r, int g, int b, int a);
----------------------------------------------------------------------------------------------------
```

Draws a rectangle on the screen.  

-x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the scree
n, 1.0 is the right edge of the screen)  

-y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen
, 1.0 is the bottom edge of the screen)  

-width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)  

-height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)  

-R: Red part of the color. (0-255)  

-G: Green part of the color. (0-255)  

-B: Blue part of the color. (0-255)  

-A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)  

The total number of rectangles to be drawn in one frame is apparently limited to 399.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float width' />
				<Param name='float height' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
				<Param name='int a' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawScaleformMovie' func='yes'>
			<Overload retVal='void' descr='// 0x54972ADAF0294A93
// 0x48DA6A58
GRAPHICS::DRAW_SCALEFORM_MOVIE(int scaleformHandle, float x, float y, float width, float height, int red,
----------------------------------------------------------------------------------------------------
green, int blue, int alpha, int unk);

```

```

GTA V Scaleforms Decompiled  

pastebin.com/mmNdjX2k  

```'>
				<Param name='int scaleformHandle' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float width' />
				<Param name='float height' />
				<Param name='int red' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawScaleformMovieFullscreen' func='yes'>
			<Overload retVal='void' descr='// 0x0DF606929C105BE1
// 0x7B48E696
GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN(int scaleform, int red, int green, int blue, int alpha, int unk
----------------------------------------------------------------------------------------------------
```

```

unk is not used so no need  

```'>
				<Param name='int scaleform' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int blue' />
				<Param name='int alpha' />
				<Param name='int unk' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawScaleformMovieFullscreenMasked' func='yes'>
			<Overload retVal='void' descr='// 0xCF537FDE4FBD4CE5
// 0x9C59FC06
GRAPHICS::DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED(int scaleform1, int scaleform2, int red, int green, int 
----------------------------------------------------------------------------------------------------
, int alpha);

```'>
				<Param name='int scaleform1' />
				<Param name='int scaleform2' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int ' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawScaleformMovie_3d' func='yes'>
			<Overload retVal='void' descr='// 0x87D51D72255D4E78
// 0xC4F63A89
GRAPHICS::DRAW_SCALEFORM_MOVIE_3D(int scaleform, float posX, float posY, float posZ, float rotX, float ro
----------------------------------------------------------------------------------------------------
float rotZ, float p7, float sharpness, float p9, float scaleX, float scaleY, float scaleZ, Any p
13);

```

```

sharpness goes from 0.0 to 1.0  

```'>
				<Param name='int scaleform' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float rotX' />
				<Param name='float ro' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawScaleformMovie_3dNonAdditive' func='yes'>
			<Overload retVal='void' descr='// 0x1CE592FDC749D6F5
// 0x899933C8
GRAPHICS::_DRAW_SCALEFORM_MOVIE_3D_NON_ADDITIVE(int scaleform, float posX, float posY, float posZ, float 
----------------------------------------------------------------------------------------------------
, float rotY, float rotZ, float p7, float p8, float p9, float scaleX, float scaleY, float scaleZ
, Any p13);

```

```

what the heck does this one do differently from the one above?  

```'>
				<Param name='int scaleform' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float ' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawShowroom' func='yes'>
			<Overload retVal='BOOL' descr='// 0x98C4FE6EC34154CA
// 0x9A0E3BFE
GRAPHICS::_DRAW_SHOWROOM(char* p0, Ped ped, int p2, float posX, float posY, float posZ);
----------------------------------------------------------------------------------------------------
```

It&apos;s called after 0xD3A10FC7FD8D98CD and 0xF1CEA8A4198D8E9A  

p0 was always &quot;CELEBRATION_WINNER&quot;  

```'>
				<Param name='char* p0' />
				<Param name='Ped ped' />
				<Param name='int p2' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawSpotLight' func='yes'>
			<Overload retVal='void' descr='// 0xD0F64B265C8C8B33
// 0xBDBC410C
GRAPHICS::DRAW_SPOT_LIGHT(float posX, float posY, float posZ, float dirX, float dirY, float dirZ, int col
----------------------------------------------------------------------------------------------------
int colorG, int colorB, float distance, float brightness, float hardness, float radius, float f
alloff);

```

```

Parameters:  

* pos - coordinate where the spotlight is located  

* dir - the direction vector the spotlight should aim at from its current position  

* r,g,b - color of the spotlight  

* distance - the maximum distance the light can reach  

* brightness - the brightness of the light  

* roundness - &quot;smoothness&quot; of the circle edge  

* radius - the radius size of the spotlight  

* falloff - the falloff size of the light&apos;s edge (example: www.i.imgur.com/DemAWeO.jpg)  

Example in C# (spotlight aims at the closest vehicle):  

Vector3 myPos = Game.Player.Character.Position;  

Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);  

Vector3 destinationCoords = nearest.Position;  

Vector3 dirVector = destinationCoords - myPos;  

dirVector.Normalize();  

Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255,
 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);  

```'>
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float dirX' />
				<Param name='float dirY' />
				<Param name='float dirZ' />
				<Param name='int col' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawSpotLightWithShadow' func='yes'>
			<Overload retVal='void' descr='// 0x5BCA583A583194DB
// 0x32BF9598
GRAPHICS::_DRAW_SPOT_LIGHT_WITH_SHADOW(float posX, float posY, float posZ, float dirX, float dirY, float 
----------------------------------------------------------------------------------------------------
, int colorR, int colorG, int colorB, float distance, float brightness, float roundness, float r
adius, float falloff, int shadowId);

```

```

shadowId: each call to this native in the same tick should have a different value passed to this par
ameter, if two or more calls have the same values, only the first one will render its shadow properl
y  

```'>
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float dirX' />
				<Param name='float dirY' />
				<Param name='float ' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawSprite' func='yes'>
			<Overload retVal='void' descr='// 0xE7FFAE5EBF23D890
// 0x1FEC16B0
GRAPHICS::DRAW_SPRITE(char* textureDict, char* textureName, float screenX, float screenY, float width, fl
----------------------------------------------------------------------------------------------------
height, float heading, int red, int green, int blue, int alpha);

```

```

Draws a 2D sprite on the screen.  

Parameters:  

textureDict - Name of texture dictionary to load texture from (e.g. &quot;CommonMenu&quot;, &quot;MPWeaponsCommon&quot;,
 etc.)  

textureName - Name of texture to load from texture dictionary (e.g. &quot;last_team_standing_icon&quot;, &quot;tenn
is_icon&quot;, etc.)  

screenX/Y - Screen offset (0.5 = center)  

scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = hal
f)  

heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees  

red,green,blue - Sprite color (default = 255/255/255)  

alpha - opacity level  

```'>
				<Param name='char* textureDict' />
				<Param name='char* textureName' />
				<Param name='float screenX' />
				<Param name='float screenY' />
				<Param name='float width' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawTvChannel' func='yes'>
			<Overload retVal='void' descr='// 0xFDDC2B4ED3C69DF0
// 0x8129EF89
GRAPHICS::DRAW_TV_CHANNEL(float xPos, float yPos, float xScale, float yScale, float rotation, int red, in
----------------------------------------------------------------------------------------------------
een, int blue, int alpha);

```

```

All calls to this native are preceded by calls to GRAPHICS::_0x61BB1D9B3A95D802 and GRAPHICS::_0xC63
72ECD45D73BCD, respectively.  

&quot;act_cinema.ysc&quot;, line 1483:  

UI::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);  

UI::SET_TEXT_RENDER_ID(l_AE);  

GRAPHICS::_0x61BB1D9B3A95D802(4);  

GRAPHICS::_0xC6372ECD45D73BCD(1);  

if (GRAPHICS::_0x0AD973CA1E077B60(${movie_arthouse})) {  

    GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);  

} else {   

    GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);  

}  

&quot;am_mp_property_int.ysc&quot;, line 102545:  

if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {  

    if (UI::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {  

        UI::SET_TEXT_RENDER_ID(a_2._f1);  

        GRAPHICS::_0x61BB1D9B3A95D802(4);  

        GRAPHICS::_0xC6372ECD45D73BCD(1);  

        GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);  

        if (GRAPHICS::GET_TV_CHANNEL() == -1) {  

            sub_a8fa5(a_2, 1);  

        } else {   

            sub_a8fa5(a_2, 1);  

            GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);  

        }  

        UI::SET_TEXT_RENDER_ID(UI::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());  

    }  

}  

```'>
				<Param name='float xPos' />
				<Param name='float yPos' />
				<Param name='float xScale' />
				<Param name='float yScale' />
				<Param name='float rotation' />
				<Param name='int red' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableAlienBloodVfx' func='yes'>
			<Overload retVal='void' descr='// 0x9DCE1F0F78260875
// 0xCE8B8748
GRAPHICS::ENABLE_ALIEN_BLOOD_VFX(BOOL Toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL Toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableClownBloodVfx' func='yes'>
			<Overload retVal='void' descr='// 0xD821490579791273
// 0xC61C75E9
GRAPHICS::ENABLE_CLOWN_BLOOD_VFX(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Creates cartoon effect when Michel smokes the weed  

```

----------------------------------------------------------------------------------------------------

Old name: SET_CAMERA_ENDTIME'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SET_CAMERA_ENDTIME' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: EnableClownBloodVfx' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='EnableMovieSubtitles' func='yes'>
			<Overload retVal='void' descr='// 0x873FA65C778AD970
// 0xC2DEBA3D
GRAPHICS::ENABLE_MOVIE_SUBTITLES(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndScaleformMovieMethod' func='yes'>
			<Overload retVal='void' descr='// 0xC6796A8FFA375E53
// 0x02DBF2D7
GRAPHICS::END_SCALEFORM_MOVIE_METHOD();
----------------------------------------------------------------------------------------------------
```

Pops and calls the Scaleform function on the stack  

```

----------------------------------------------------------------------------------------------------

Old name: _POP_SCALEFORM_MOVIE_FUNCTION_VOID'>
			</Overload>
		</KeyWord>
		<KeyWord name='_POP_SCALEFORM_MOVIE_FUNCTION_VOID' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: EndScaleformMovieMethod' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='EndScaleformMovieMethodReturn' func='yes'>
			<Overload retVal='int' descr='// 0xC50AA39A577AF886
// 0x2F38B526
GRAPHICS::_END_SCALEFORM_MOVIE_METHOD_RETURN();
----------------------------------------------------------------------------------------------------
```

Pops and calls the Scaleform movie on the stack. Returns data from the function (not sure if this is
 a string).  

```

## Return value

----------------------------------------------------------------------------------------------------

Old name: _POP_SCALEFORM_MOVIE_FUNCTION'>
			</Overload>
		</KeyWord>
		<KeyWord name='_POP_SCALEFORM_MOVIE_FUNCTION' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: EndScaleformMovieMethodReturn' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandScaleformString' func='yes'>
			<Overload retVal='void' descr='// 0x362E2D3FE93A9959
// 0x386CE0B8
GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
----------------------------------------------------------------------------------------------------
```

Previously called _END_TEXT_COMPONENT  

```

----------------------------------------------------------------------------------------------------

Old name: _END_TEXT_COMPONENT'>
			</Overload>
		</KeyWord>
		<KeyWord name='_END_TEXT_COMPONENT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: EndTextCommandScaleformString' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandScaleformString_2' func='yes'>
			<Overload retVal='void' descr='// 0xAE4E8157D9ECF087
// 0x2E80DB52
GRAPHICS::_END_TEXT_COMMAND_SCALEFORM_STRING_2();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='EntityDescriptionText' func='yes'>
			<Overload retVal='void' descr='// 0xDEADC0DEDEADC0DE
GRAPHICS::_ENTITY_DESCRIPTION_TEXT(Entity entity);
----------------------------------------------------------------------------------------------------
```

Only found twice in decompiled scripts. Something to do with an entity/object?  

On a side note, it&apos;s very interesting how the hash for this native is &quot;DEADC0DE&quot; - this is usually u
sed as padding for initializing a buffer of some sort. I wonder if this native is actually &quot;dead&quot;?  


&quot;carmod_shop.ysc&quot;, line 9520:  

if (ENTITY::DOES_ENTITY_EXIST(l_324._f6)) {  

    GRAPHICS::_0xDEADC0DEDEADC0DE(l_324._f6);  

}  

&quot;fm_mission_controller.ysc&quot;, line 189641:  

if (GAMEPLAY::IS_BIT_SET(g_1870E1._f7B64[a_0/*104*/]._f25, 28)) {  

    GRAPHICS::_0xDEADC0DEDEADC0DE(NETWORK::NET_TO_OBJ(l_4064._f26A._f87[a_0/*1*/]));  

    if (!GAMEPLAY::IS_BIT_SET(g_1870E1._f7B64[a_0/*104*/]._f25, 31)) {  

        if (!ENTITY::IS_ENTITY_DEAD(v_7)) {  

            AUDIO::PLAY_SOUND_FROM_ENTITY(-1, &quot;EMP_Vehicle_Hum&quot;, v_7, &quot;DLC_HEIST_BIOLAB_DELIVER_EMP_
SOUNDS&quot;, 0, 0);  

            GAMEPLAY::SET_BIT(&g_1870E1._f7B64[a_0/*104*/]._f25, 31);  

        }  

    }  

}  

Console Hash: 0xC12AC47A  

----------  

It&apos;s most likely named UPDATE_* (like UPDATE_ENTITY_SHIT_OR_SOMETHING).  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='FadeDecalsInRange' func='yes'>
			<Overload retVal='void' descr='// 0xD77EDADB0420E6E0
// 0xF81E884A
GRAPHICS::FADE_DECALS_IN_RANGE(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
```

Fades nearby decals within the range specified  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetActiveScreenResolution' func='yes'>
			<Overload retVal='void' descr='// 0x873C9F3104101DD3
GRAPHICS::_GET_ACTIVE_SCREEN_RESOLUTION(int* x, int* y);
----------------------------------------------------------------------------------------------------
```

Returns current screen resolution.  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_SCREEN_ACTIVE_RESOLUTION'>
				<Param name='int* x' />
				<Param name='int* y' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_SCREEN_ACTIVE_RESOLUTION' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetActiveScreenResolution' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetAspectRatio' func='yes'>
			<Overload retVal='float' descr='// 0xF1307EF624A80D87
GRAPHICS::_GET_ASPECT_RATIO(BOOL b);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _GET_SCREEN_ASPECT_RATIO'>
				<Param name='BOOL b' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_SCREEN_ASPECT_RATIO' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetAspectRatio' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetDecalWashLevel' func='yes'>
			<Overload retVal='float' descr='// 0x323F647679A09103
// 0x054448EF
GRAPHICS::GET_DECAL_WASH_LEVEL(int decal);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int decal' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetIsHidef' func='yes'>
			<Overload retVal='BOOL' descr='// 0x84ED31191CC5D2C9
// 0x1C340359
GRAPHICS::GET_IS_HIDEF();
----------------------------------------------------------------------------------------------------
```

false = Any resolution &lt; 1280x720  

true = Any resolution &gt;= 1280x720  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetIsWidescreen' func='yes'>
			<Overload retVal='BOOL' descr='// 0x30CF4BDA4FCB1905
// 0xEC717AEF
GRAPHICS::GET_IS_WIDESCREEN();
----------------------------------------------------------------------------------------------------
```

Setting Aspect Ratio Manually in game will return:  

false - for Narrow format Aspect Ratios (3:2, 4:3, 5:4, etc. )  

true - for Wide format Aspect Ratios (5:3, 16:9, 16:10, etc. )  

Setting Aspect Ratio to &quot;Auto&quot; in game will return &quot;false&quot; or &quot;true&quot; based on the actual set Resolut
ion Ratio.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetMaximumNumberOfPhotos' func='yes'>
			<Overload retVal='int' descr='// 0x34D23450F028B0BF
// 0x727AA63F
GRAPHICS::GET_MAXIMUM_NUMBER_OF_PHOTOS();
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 0.  

Limit is 96, see _GET_MAXIMUM_NUMBER_OF_PHOTOS_2 (0xDC54A7AF8B3A14EF).  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetMaximumNumberOfPhotos_2' func='yes'>
			<Overload retVal='int' descr='// 0xDC54A7AF8B3A14EF
// 0x239272BD
GRAPHICS::_GET_MAXIMUM_NUMBER_OF_PHOTOS_2();
----------------------------------------------------------------------------------------------------
```

This is the &quot;actual&quot; GET_MAXIMUM_NUMBER_OF_PHOTOS native. Always returns 96.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfPhotos' func='yes'>
			<Overload retVal='int' descr='// 0x473151EBC762C6DA
// 0x21DBF0C9
GRAPHICS::_GET_NUMBER_OF_PHOTOS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetSafeZoneSize' func='yes'>
			<Overload retVal='float' descr='// 0xBAF107B6BB2C97F0
// 0x3F0D1A6F
GRAPHICS::GET_SAFE_ZONE_SIZE();
----------------------------------------------------------------------------------------------------
```

Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetScaleformMovieFunctionReturnBool' func='yes'>
			<Overload retVal='BOOL' descr='// 0x768FF8961BA904D6
// 0x5CD7C3C0
GRAPHICS::_GET_SCALEFORM_MOVIE_FUNCTION_RETURN_BOOL(int method_return);
----------------------------------------------------------------------------------------------------
```

Seems to take data that is returned from &quot;_POP_SCALEFORM_MOVIE_FUNCTION&quot; and checks to see if it&apos;s n
ot null/empty.  

&quot;agency_heist3b.ysc&quot;, line 71836:  

if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 201) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 237)) {  

    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(l_46, &quot;SET_INPUT_EVENT_SELECT&quot;);  

    l_45 = GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION();  

}  

if (GRAPHICS::_0x768FF8961BA904D6(l_45)) {  

    v_13 = GRAPHICS::_0x2DE7EFA66B906036(l_45);  

    if (v_13 == 6) {  

        sub_73269(a_0);  

    }  

}  

```'>
				<Param name='int method_return' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetScaleformMovieFunctionReturnInt' func='yes'>
			<Overload retVal='int' descr='// 0x2DE7EFA66B906036
// 0x2CFB0E6D
GRAPHICS::_GET_SCALEFORM_MOVIE_FUNCTION_RETURN_INT(int method_return);
----------------------------------------------------------------------------------------------------
```

Needs a bit more research, but it seems to return an int.  

Testing with the scaleform &quot;HACKING_PC&quot; it seems to return an int depending on the clicked App/Progr
am ID  

&quot;agency_heist3b.ysc&quot;, line 71836:  

if (CONTROLS::IS_CONTROL_JUST_PRESSED(2, 201) || CONTROLS::IS_CONTROL_JUST_PRESSED(2, 237)) {  

    GRAPHICS::_PUSH_SCALEFORM_MOVIE_FUNCTION(l_46, &quot;SET_INPUT_EVENT_SELECT&quot;);  

    l_45 = GRAPHICS::_POP_SCALEFORM_MOVIE_FUNCTION();  

}  

if (GRAPHICS::_0x768FF8961BA904D6(l_45)) {  

    v_13 = GRAPHICS::_0x2DE7EFA66B906036(l_45);  

    if (v_13 == 6) {  

        sub_73269(a_0);  

    }  

}  

```'>
				<Param name='int method_return' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetScaleformMovieFunctionReturnString' func='yes'>
			<Overload retVal='char*' descr='// 0xE1E258829A885245
// 0x516862EB
GRAPHICS::_GET_SCALEFORM_MOVIE_FUNCTION_RETURN_STRING(int method_return);
----------------------------------------------------------------------------------------------------
```

This returns the name of the scaleform movie.  

```

----------------------------------------------------------------------------------------------------

Old name: SITTING_TV'>
				<Param name='int method_return' />
			</Overload>
		</KeyWord>
		<KeyWord name='SITTING_TV' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetScaleformMovieFunctionReturnString' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetScreenCoordFromWorldCoord' func='yes'>
			<Overload retVal='BOOL' descr='// 0x34E82F05DF2974F5
// 0x1F950E4B
GRAPHICS::GET_SCREEN_COORD_FROM_WORLD_COORD(float worldX, float worldY, float worldZ, float* screenX, flo
----------------------------------------------------------------------------------------------------
screenY);

```

```

Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)  

Returns a boolean; whether or not the operation was successful. It will return false if the coordina
tes given are not visible to the rendering camera.  

For .NET users...  

VB:  

Public Shared Function World3DToScreen2d(pos as vector3) As Vector2  

        Dim x2dp, y2dp As New Native.OutputArgument  

        Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.
y, pos.z, x2dp, y2dp)  

        Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))  

    End Function  

C#:  

Vector2 World3DToScreen2d(Vector3 pos)  

    {  

        var x2dp = new OutputArgument();  

        var y2dp = new OutputArgument();  

        Function.Call&lt;bool&gt;(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp
);  

        return new Vector2(x2dp.GetResult&lt;float&gt;(), y2dp.GetResult&lt;float&gt;());  

    }  

//USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than
 in 3D, e.g &apos;0.05&apos; small.  

Used to be called _WORLD3D_TO_SCREEN2D  

I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then
 your natives, then ending it. Seems to work better for certain things such as keeping boxes around 
people for a predator missile e.g.  

```

----------------------------------------------------------------------------------------------------

Old name: _WORLD3D_TO_SCREEN2D'>
				<Param name='float worldX' />
				<Param name='float worldY' />
				<Param name='float worldZ' />
				<Param name='float* screenX' />
			</Overload>
		</KeyWord>
		<KeyWord name='_WORLD3D_TO_SCREEN2D' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetScreenCoordFromWorldCoord' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetScreenEffectIsActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x36AD3E690DA5ACEB
// 0x089D5921
GRAPHICS::_GET_SCREEN_EFFECT_IS_ACTIVE(BOOL effectName);
----------------------------------------------------------------------------------------------------
```

Returns whether the specified screen effect is active.  

See the effects list in _START_SCREEN_EFFECT  

Example and list of screen FX: www.pastebin.com/dafBAjs0  

```'>
				<Param name='BOOL effectName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetScreenResolution' func='yes'>
			<Overload retVal='void' descr='// 0x888D57E407E63624
// 0x29F3572F
GRAPHICS::GET_SCREEN_RESOLUTION(int* x, int* y);
----------------------------------------------------------------------------------------------------
```

int screenresx,screenresy;  

GET_SCREEN_RESOLUTION(&screenresx,&screenresy);  

Hardcoded to always return 1280 x 720  

```'>
				<Param name='int* x' />
				<Param name='int* y' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetScriptGfxPosition' func='yes'>
			<Overload retVal='void' descr='// 0x6DD8F5AA635EB4B2
GRAPHICS::_GET_SCRIPT_GFX_POSITION(float x, float y, float* calculatedX, float* calculatedY);
----------------------------------------------------------------------------------------------------
Calculates the effective X/Y fractions when applying the values set by `SET_SCRIPT_GFX_ALIGN` and

`SET_SCRIPT_GFX_ALIGN_PARAMS`.'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float* calculatedX' />
				<Param name='float* calculatedY' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTextureResolution' func='yes'>
			<Overload retVal='Vector3' descr='// 0x35736EE65BD00C11
// 0x096DAA4D
GRAPHICS::GET_TEXTURE_RESOLUTION(char* textureDict, char* textureName);
----------------------------------------------------------------------------------------------------
```

Returns the texture resolution of the passed texture dict+name.  

Note: Most texture resolutions are doubled compared to the console version of the game.  

```'>
				<Param name='char* textureDict' />
				<Param name='char* textureName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTimecycleModifierIndex' func='yes'>
			<Overload retVal='int' descr='// 0xFDF3D97C674AFB66
// 0x594FEEC4
GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX();
----------------------------------------------------------------------------------------------------
```

Only use for this in the PC scripts is:  

if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)  

For a full list, see here: pastebin.com/cnk7FTF2  

can someone update this pastebin???  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetTvChannel' func='yes'>
			<Overload retVal='int' descr='// 0xFC1E275A90D39995
// 0x6B96145A
GRAPHICS::GET_TV_CHANNEL();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetTvVolume' func='yes'>
			<Overload retVal='float' descr='// 0x2170813D3DD8661B
// 0x39555CF0
GRAPHICS::GET_TV_VOLUME();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='HasHudScaleformLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDF6E5987D2B4D140
// 0x79B43255
GRAPHICS::_HAS_HUD_SCALEFORM_LOADED(int hudComponent);
----------------------------------------------------------------------------------------------------
```

Check to see if hud component Scaleform has loaded?  

```'>
				<Param name='int hudComponent' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasNamedScaleformMovieLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0C1C5D756FB5F337
GRAPHICS::_HAS_NAMED_SCALEFORM_MOVIE_LOADED(char* scaleformName);
----------------------------------------------------------------------------------------------------
```

Pretty sure it&apos;s the real name (not 100% sure so I added the _ prefix); can someone else confirm it?
  

Only values used in the scripts are:  

&quot;heist_mp&quot;  

&quot;heistmap_mp&quot;  

&quot;instructional_buttons&quot;  

&quot;heist_pre&quot;  

```'>
				<Param name='char* scaleformName' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasScaleformContainerMovieLoadedIntoParent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8217150E1217EBFD
// 0x1DFE8D8A
GRAPHICS::HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT(int scaleformHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int scaleformHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasScaleformMovieLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x85F01B8D5B90570E
// 0xDDFB6448
GRAPHICS::HAS_SCALEFORM_MOVIE_LOADED(int scaleformHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int scaleformHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasStreamedTextureDictLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0145F696AAAAD2E4
// 0x3F436EEF
GRAPHICS::HAS_STREAMED_TEXTURE_DICT_LOADED(char* textureDict);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* textureDict' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsDecalAlive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC694D74949CAFD0C
// 0xCDD4A61A
GRAPHICS::IS_DECAL_ALIVE(Object decal);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object decal' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsNightvisionActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2202A3F42C8E5F79
// 0x62619061
GRAPHICS::_IS_NIGHTVISION_ACTIVE();
----------------------------------------------------------------------------------------------------
```

Gets whether or not NIGHTVISION is Active.  

Note:  When nightvision is actually active, this native will return TRUE!  

```

## Return value

----------------------------------------------------------------------------------------------------

Old name: _IS_NIGHTVISION_INACTIVE'>
			</Overload>
		</KeyWord>
		<KeyWord name='_IS_NIGHTVISION_INACTIVE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: IsNightvisionActive' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='IsParticleFxDelayedBlink' func='yes'>
			<Overload retVal='float' descr='// 0x5CCABFFCA31DDE33
// 0xEA432A94
GRAPHICS::IS_PARTICLE_FX_DELAYED_BLINK();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsSeethroughActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x44B80ABAB9D80BD3
// 0x1FE547F2
GRAPHICS::_IS_SEETHROUGH_ACTIVE();
----------------------------------------------------------------------------------------------------
```

Returns whether or not SEETHROUGH is active.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsTrackedPointVisible' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC45CCDAAC9221CA8
// 0x0BFC4F64
GRAPHICS::IS_TRACKED_POINT_VISIBLE(int point);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int point' />
			</Overload>
		</KeyWord>
		<KeyWord name='LoadMovieMeshSet' func='yes'>
			<Overload retVal='int' descr='// 0xB66064452270E8F1
// 0x9627905C
GRAPHICS::LOAD_MOVIE_MESH_SET(char* movieMeshSetName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* movieMeshSetName' />
			</Overload>
		</KeyWord>
		<KeyWord name='LoadTvChannel' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0AD973CA1E077B60
// 0x4D1EB0FB
GRAPHICS::_LOAD_TV_CHANNEL(Hash tvChannel);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash tvChannel' />
			</Overload>
		</KeyWord>
		<KeyWord name='LoadTvChannelSequence' func='yes'>
			<Overload retVal='void' descr='// 0xF7B38B8305F1FE8B
// 0xB262DE67
GRAPHICS::_LOAD_TV_CHANNEL_SEQUENCE(int TV_Channel, char* VideoSequence, BOOL Restart);
----------------------------------------------------------------------------------------------------
```

Loads specified video sequence into the TV Channel  

TV_Channel ranges from 0-2  

VideoSequence can be any of the following:  

&quot;PL_STD_CNT&quot; CNT Standard Channel  

&quot;PL_STD_WZL&quot; Weazel Standard Channel  

&quot;PL_LO_CNT&quot;   

&quot;PL_LO_WZL&quot;   

&quot;PL_SP_WORKOUT&quot;  

&quot;PL_SP_INV&quot; - Jay Norris Assassination Mission Fail   

&quot;PL_SP_INV_EXP&quot; - Jay Norris Assassination Mission Success  

&quot;PL_LO_RS&quot; - Righteous Slaughter Ad  

&quot;PL_LO_RS_CUTSCENE&quot; - Righteous Slaughter Cut-scene  

&quot;PL_SP_PLSH1_INTRO&quot;   

&quot;PL_LES1_FAME_OR_SHAME&quot;  

&quot;PL_STD_WZL_FOS_EP2&quot;  

&quot;PL_MP_WEAZEL&quot; - Weazel Logo on loop  

&quot;PL_MP_CCTV&quot; - Generic CCTV loop  

Restart   

0=video sequence continues as normal  

1=sequence restarts from beginning every time that channel is selected  

```'>
				<Param name='int TV_Channel' />
				<Param name='char* VideoSequence' />
				<Param name='BOOL Restart' />
			</Overload>
		</KeyWord>
		<KeyWord name='MoveVehicleDecals' func='yes'>
			<Overload retVal='void' descr='// 0x84C8D7C2D30D3280
// 0xCE9E6CF2
GRAPHICS::MOVE_VEHICLE_DECALS(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0218ba067d249dea' func='yes'>
			<Overload retVal='void' descr='// 0x0218BA067D249DEA
GRAPHICS::_0x0218BA067D249DEA();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x02369d5c8a51fdcf' func='yes'>
			<Overload retVal='void' descr='// 0x02369D5C8A51FDCF
// 0xFDF6D8DA
GRAPHICS::_0x02369D5C8A51FDCF(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x02ac28f3a01fa04a' func='yes'>
			<Overload retVal='Any' descr='// 0x02AC28F3A01FA04A
// 0xB19B2764
GRAPHICS::_0x02AC28F3A01FA04A(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x03300b57fcac6ddb' func='yes'>
			<Overload retVal='void' descr='// 0x03300B57FCAC6DDB
// 0x60F72371
GRAPHICS::_0x03300B57FCAC6DDB(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x03fc694ae06c5a20' func='yes'>
			<Overload retVal='void' descr='// 0x03FC694AE06C5A20
// 0x48F16186
GRAPHICS::_0x03FC694AE06C5A20();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x06f761ea47c1d3ed' func='yes'>
			<Overload retVal='void' descr='// 0x06F761EA47C1D3ED
// 0x0D830DC7
GRAPHICS::_0x06F761EA47C1D3ED(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0a123435a26c36cd' func='yes'>
			<Overload retVal='void' descr='// 0x0A123435A26C36CD
// 0xCCCA6855
GRAPHICS::_0x0A123435A26C36CD();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0a46af8a78dc5e0a' func='yes'>
			<Overload retVal='void' descr='// 0x0A46AF8A78DC5E0A
// 0x9E553002
GRAPHICS::_0x0A46AF8A78DC5E0A();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0ae73d8df3a762b2' func='yes'>
			<Overload retVal='void' descr='// 0x0AE73D8DF3A762B2
// 0x342FA2B4
GRAPHICS::_0x0AE73D8DF3A762B2(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0c0c4e81e1ac60a0' func='yes'>
			<Overload retVal='int' descr='// 0x0C0C4E81E1AC60A0
// 0xEC5D0317
GRAPHICS::_0x0C0C4E81E1AC60A0();
----------------------------------------------------------------------------------------------------
```

Dr. Underscore (1/6/18):  

Seems to return a value 0-2.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0c8fac83902a62df' func='yes'>
			<Overload retVal='void' descr='// 0x0C8FAC83902A62DF
GRAPHICS::_0x0C8FAC83902A62DF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0d6ca79eeebd8ca3' func='yes'>
			<Overload retVal='int' descr='// 0x0D6CA79EEEBD8CA3
// 0x65376C9B
GRAPHICS::_0x0D6CA79EEEBD8CA3();
----------------------------------------------------------------------------------------------------
```

Dr. Underscore (1/6/18):  

Seems to return a value 0-2.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0e4299c549f0d1f1' func='yes'>
			<Overload retVal='void' descr='// 0x0E4299C549F0D1F1
// 0x9BABCBA4
GRAPHICS::_0x0E4299C549F0D1F1(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1072f115dab0717e' func='yes'>
			<Overload retVal='void' descr='// 0x1072F115DAB0717E
// 0xE9F2B68F
GRAPHICS::_0x1072F115DAB0717E(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1086127b3a63505e' func='yes'>
			<Overload retVal='void' descr='// 0x1086127B3A63505E
GRAPHICS::_0x1086127B3A63505E(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x108be26959a9d9bb' func='yes'>
			<Overload retVal='void' descr='// 0x108BE26959A9D9BB
// 0x24A7A7F6
GRAPHICS::_0x108BE26959A9D9BB(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x12995f2e53ffa601' func='yes'>
			<Overload retVal='void' descr='// 0x12995F2E53FFA601
// 0x804F444C
GRAPHICS::_0x12995F2E53FFA601(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int
----------------------------------------------------------------------------------------------------
int p10, int p11);

```

```

Only used in the golf and golf_mp script  

```'>
				<Param name='int p0' />
				<Param name='int p1' />
				<Param name='int p2' />
				<Param name='int p3' />
				<Param name='int p4' />
				<Param name='int p5' />
				<Param name='int p6' />
				<Param name='int p7' />
				<Param name='int p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x14fc5833464340a8' func='yes'>
			<Overload retVal='void' descr='// 0x14FC5833464340A8
GRAPHICS::_0x14FC5833464340A8();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x15e33297c3e8dc60' func='yes'>
			<Overload retVal='void' descr='// 0x15E33297C3E8DC60
// 0x805BAB08
GRAPHICS::_0x15E33297C3E8DC60(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1600fd8cf72ebc12' func='yes'>
			<Overload retVal='void' descr='// 0x1600FD8CF72EBC12
// 0xD87CC710
GRAPHICS::_0x1600FD8CF72EBC12(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1612c45f9e3e0d44' func='yes'>
			<Overload retVal='void' descr='// 0x1612C45F9E3E0D44
GRAPHICS::_0x1612C45F9E3E0D44();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1636d7fc127b10d2' func='yes'>
			<Overload retVal='void' descr='// 0x1636D7FC127B10D2
GRAPHICS::_0x1636D7FC127B10D2(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1670f8d05056f257' func='yes'>
			<Overload retVal='int' descr='// 0x1670F8D05056F257
// 0x226B08EA
GRAPHICS::_0x1670F8D05056F257(Any p0);
----------------------------------------------------------------------------------------------------
```

Dr. Underscore (1/6/18):  

Seems to return a value 0-2.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x19e50eb6e33e1d28' func='yes'>
			<Overload retVal='void' descr='// 0x19E50EB6E33E1D28
GRAPHICS::_0x19E50EB6E33E1D28(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1a8e2c8b9cf4549c' func='yes'>
			<Overload retVal='void' descr='// 0x1A8E2C8B9CF4549C
// 0xE8F538B5
GRAPHICS::_0x1A8E2C8B9CF4549C(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1bbc135a4d25edde' func='yes'>
			<Overload retVal='void' descr='// 0x1BBC135A4D25EDDE
GRAPHICS::_0x1BBC135A4D25EDDE(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Dr. Underscore (1/6/18):  

Only one instance across all scripts. (maintransition)  

May not be a bool, it could be one of these 0-2 values that are returned just about 500 god damn tim
es.  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1c4fc5752bcd8e48' func='yes'>
			<Overload retVal='void' descr='// 0x1C4FC5752BCD8E48
// 0x3B637AA7
GRAPHICS::_0x1C4FC5752BCD8E48(float x, float y, float z, float p3, float rotation, float p5, float width,
----------------------------------------------------------------------------------------------------
at height, float p8, float scale, float glowIntensity, float normalHeight, float heightDiff);

```

This native is used along with these two natives: [`0xa356990e161c9e65`](https://runtime.fivem.net/d
oc/reference.html#_0xA356990E161C9E65) and [`0x5ce62918f8d703c7`](https://runtime.fivem.net/doc/refe
rence.html#_0x5CE62918F8D703C7). 

This native configures the location, size, rotation, normal height, and the difference ratio between
 min, normal and max.

All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float p3' />
				<Param name='float rotation' />
				<Param name='float p5' />
				<Param name='float width' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1cba05ae7bd7ee05' func='yes'>
			<Overload retVal='void' descr='// 0x1CBA05AE7BD7EE05
// 0x56345F6B
GRAPHICS::_0x1CBA05AE7BD7EE05(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1dd2139a9a20dce8' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1DD2139A9A20DCE8
// 0xBA9AD458
GRAPHICS::_0x1DD2139A9A20DCE8();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2201c576facaebe8' func='yes'>
			<Overload retVal='void' descr='// 0x2201C576FACAEBE8
// 0x78C4DCBE
GRAPHICS::_0x2201C576FACAEBE8(Any p0, char* p1, Any p2);
----------------------------------------------------------------------------------------------------
```

SET_TV_???  

```'>
				<Param name='Any p0' />
				<Param name='char* p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x22a249a53034450a' func='yes'>
			<Overload retVal='void' descr='// 0x22A249A53034450A
// 0x932FDB81
GRAPHICS::_0x22A249A53034450A(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x23ba6b0c2ad7b0d3' func='yes'>
			<Overload retVal='void' descr='// 0x23BA6B0C2AD7B0D3
// 0xC44C2F44
GRAPHICS::_0x23BA6B0C2AD7B0D3(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Dr. Underscore (1/6/18):  

Found only in all creator scripts. (fm_capture_creator, fm_deathmatch_creator, fm_lts_creator, fm_mi
ssion_controller, fm_race_creator)  

Used in-between DRAW_* calls (DRAW_POLY specifically).  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2485d34e50a22e84' func='yes'>
			<Overload retVal='void' descr='// 0x2485D34E50A22E84
// 0x72BA8A14
GRAPHICS::_0x2485D34E50A22E84(float p0, float p1, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x259ba6d4e6f808f1' func='yes'>
			<Overload retVal='void' descr='// 0x259BA6D4E6F808F1
GRAPHICS::_0x259BA6D4E6F808F1(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x25fc3e33a31ad0c9' func='yes'>
			<Overload retVal='void' descr='// 0x25FC3E33A31AD0C9
GRAPHICS::_0x25FC3E33A31AD0C9(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x27cb772218215325' func='yes'>
			<Overload retVal='void' descr='// 0x27CB772218215325
GRAPHICS::_0x27CB772218215325();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x27cfb1b1e078cb2d' func='yes'>
			<Overload retVal='void' descr='// 0x27CFB1B1E078CB2D
// 0xC2703B88
GRAPHICS::_0x27CFB1B1E078CB2D();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x27e32866e9a5c416' func='yes'>
			<Overload retVal='void' descr='// 0x27E32866E9A5C416
GRAPHICS::_0x27E32866E9A5C416(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x27feb5254759cde3' func='yes'>
			<Overload retVal='BOOL' descr='// 0x27FEB5254759CDE3
// 0xD63FCB3E
GRAPHICS::_0x27FEB5254759CDE3(char* textureDict, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* textureDict' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x29280002282f1928' func='yes'>
			<Overload retVal='void' descr='// 0x29280002282F1928
GRAPHICS::_0x29280002282F1928(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any
----------------------------------------------------------------------------------------------------
Any p10, Any p11, Any p12, Any p13, Any p14, Any p15, Any p16, Any p17, Any p18, Any p19, Any p
20, Any p21, Any p22, Any p23);

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2a2a52824db96700' func='yes'>
			<Overload retVal='void' descr='// 0x2A2A52824DB96700
// 0x0F486429
GRAPHICS::_0x2A2A52824DB96700(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2a893980e96b659a' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2A893980E96B659A
// 0x199FABF0
GRAPHICS::_0x2A893980E96B659A(BOOL p0);
----------------------------------------------------------------------------------------------------
```

2 matches across 2 scripts. Only showed in appcamera & appmedia. Both were 0.  

Dr. Underscore (1/6/18):  

I&apos;ve found a reference in maintransition with 1, plus in appcamera and appmedia.  

Takes and returns a bool.  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2b40a97646381508' func='yes'>
			<Overload retVal='void' descr='// 0x2B40A97646381508
GRAPHICS::_0x2B40A97646381508(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2bc54a8188768488' func='yes'>
			<Overload retVal='void' descr='// 0x2BC54A8188768488
GRAPHICS::_0x2BC54A8188768488(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any
----------------------------------------------------------------------------------------------------
Any p10);

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2bf72ad5b41aa739' func='yes'>
			<Overload retVal='void' descr='// 0x2BF72AD5B41AA739
GRAPHICS::_0x2BF72AD5B41AA739();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2c328af17210f009' func='yes'>
			<Overload retVal='void' descr='// 0x2C328AF17210F009
GRAPHICS::_0x2C328AF17210F009(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2c42340f916c5930' func='yes'>
			<Overload retVal='Any' descr='// 0x2C42340F916C5930
GRAPHICS::_0x2C42340F916C5930(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2f09f7976c512404' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2F09F7976C512404
// 0x242C6A04
GRAPHICS::_0x2F09F7976C512404(float xCoord, float yCoord, float zCoord, float p3);
----------------------------------------------------------------------------------------------------
```

only documented. to be continued...  

```'>
				<Param name='float xCoord' />
				<Param name='float yCoord' />
				<Param name='float zCoord' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x302c91ab2d477f7e' func='yes'>
			<Overload retVal='void' descr='// 0x302C91AB2D477F7E
GRAPHICS::_0x302C91AB2D477F7E();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x312342e1a4874f3f' func='yes'>
			<Overload retVal='void' descr='// 0x312342E1A4874F3F
// 0xD9653728
GRAPHICS::_0x312342E1A4874F3F(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float
----------------------------------------------------------------------------------------------------
BOOL p8);

```

```

p8 seems to always be false.  

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x32f34ff7f617643b' func='yes'>
			<Overload retVal='void' descr='// 0x32F34FF7F617643B
GRAPHICS::_0x32F34FF7F617643B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x346ef3ecaaab149e' func='yes'>
			<Overload retVal='void' descr='// 0x346EF3ECAAAB149E
// 0x88EAF398
GRAPHICS::_0x346EF3ECAAAB149E();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x35fb78dc42b7bd21' func='yes'>
			<Overload retVal='Any' descr='// 0x35FB78DC42B7BD21
GRAPHICS::_0x35FB78DC42B7BD21();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3669f1b198dcaa4f' func='yes'>
			<Overload retVal='void' descr='// 0x3669F1B198DCAA4F
// 0x0DCC0B8B
GRAPHICS::_0x3669F1B198DCAA4F();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x36f6626459d91457' func='yes'>
			<Overload retVal='void' descr='// 0x36F6626459D91457
// 0xC07C64C9
GRAPHICS::_0x36F6626459D91457(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x393bd2275ceb7793' func='yes'>
			<Overload retVal='Any' descr='// 0x393BD2275CEB7793
GRAPHICS::_0x393BD2275CEB7793();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3dec726c25a11bac' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3DEC726C25A11BAC
// 0x3B15D33C
GRAPHICS::_0x3DEC726C25A11BAC(int p0);
----------------------------------------------------------------------------------------------------
```

1 match in 1 script. cellphone_controller.  

p0 is -1 in scripts.  

Dr. Underscore (1/6/18):  

I have two uses in two scripts; and it&apos;s called with -1 in maintransition, not cellphone_controller.
 Are you using x360 scripts, or an older version of PC scripts?  

Also returns bool.  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x44621483ff966526' func='yes'>
			<Overload retVal='void' descr='// 0x44621483FF966526
GRAPHICS::_0x44621483FF966526(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x459fd2c8d0ab78bc' func='yes'>
			<Overload retVal='Any' descr='// 0x459FD2C8D0AB78BC
// 0x03C44E4B
GRAPHICS::_0x459FD2C8D0AB78BC();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x46d1a61a21f566fc' func='yes'>
			<Overload retVal='void' descr='// 0x46D1A61A21F566FC
// 0x2056A015
GRAPHICS::_0x46D1A61A21F566FC(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4862437a486f91b0' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4862437A486F91B0
// 0x56C1E488
GRAPHICS::_0x4862437A486F91B0(char* p0, Any* p1, Any* p2, BOOL p3);
----------------------------------------------------------------------------------------------------
```

Dr. Underscore (1/6/18):  

Possibly some unknown structures.  

```'>
				<Param name='char* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4af92acd3141d96c' func='yes'>
			<Overload retVal='void' descr='// 0x4AF92ACD3141D96C
// 0xC9EF81ED
GRAPHICS::_0x4AF92ACD3141D96C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4b5cfc83122df602' func='yes'>
			<Overload retVal='void' descr='// 0x4B5CFC83122DF602
// 0xA706E84D
GRAPHICS::_0x4B5CFC83122DF602();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5096fd9ccb49056d' func='yes'>
			<Overload retVal='void' descr='// 0x5096FD9CCB49056D
// 0x908A335E
GRAPHICS::_0x5096FD9CCB49056D(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x54e22ea2c1956a8d' func='yes'>
			<Overload retVal='void' descr='// 0x54E22EA2C1956A8D
GRAPHICS::_0x54E22EA2C1956A8D(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5b0316762afd4a64' func='yes'>
			<Overload retVal='int' descr='// 0x5B0316762AFD4A64
// 0xA9DC8558
GRAPHICS::_0x5B0316762AFD4A64();
----------------------------------------------------------------------------------------------------
```

Dr. Underscore (1/6/18):  

Seems to return a value 0-2.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5ce62918f8d703c7' func='yes'>
			<Overload retVal='void' descr='// 0x5CE62918F8D703C7
// 0xDF552973
GRAPHICS::_0x5CE62918F8D703C7(int lowR, int lowG, int lowB, int lowAlpha, int R, int G, int B, int Alpha,
----------------------------------------------------------------------------------------------------
highR, int highG, int highB, int highAlpha);

```

This native is used along with these two natives: [`0xa356990e161c9e65`](https://runtime.fivem.net/d
oc/reference.html#_0xA356990E161C9E65) and [`0x1c4fc5752bcd8e48`](https://runtime.fivem.net/doc/refe
rence.html#_0x1C4FC5752BCD8E48). 

This native sets the colors for the golf putting grid. the &apos;min...&apos; values are for the lower areas t
hat the grid covers, the &apos;max...&apos; values are for the higher areas that the grid covers, all remainin
g values are for the &apos;normal&apos; ground height.

All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png

Old description:

Only called in golf and golf_mp  

parameters used are   

GRAPHICS::_0x5CE62918F8D703C7(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);'>
				<Param name='int lowR' />
				<Param name='int lowG' />
				<Param name='int lowB' />
				<Param name='int lowAlpha' />
				<Param name='int R' />
				<Param name='int G' />
				<Param name='int B' />
				<Param name='int Alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5dbf05db5926d089' func='yes'>
			<Overload retVal='void' descr='// 0x5DBF05DB5926D089
GRAPHICS::_0x5DBF05DB5926D089(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5debd9c4dc995692' func='yes'>
			<Overload retVal='void' descr='// 0x5DEBD9C4DC995692
GRAPHICS::_0x5DEBD9C4DC995692();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5e657ef1099edd65' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5E657EF1099EDD65
// 0x91A081A1
GRAPHICS::_0x5E657EF1099EDD65(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5e9daf5a20f15908' func='yes'>
			<Overload retVal='void' descr='// 0x5E9DAF5A20F15908
// 0xD2157428
GRAPHICS::_0x5E9DAF5A20F15908(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5f0f3f56635809ef' func='yes'>
			<Overload retVal='void' descr='// 0x5F0F3F56635809EF
// 0x13D4ABC0
GRAPHICS::_0x5F0F3F56635809EF(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x615d3925e87a3b26' func='yes'>
			<Overload retVal='void' descr='// 0x615D3925E87A3B26
// 0x1E3A3126
GRAPHICS::_0x615D3925E87A3B26(int checkpoint);
----------------------------------------------------------------------------------------------------
```

Unknown. Called after creating a checkpoint (type: 51) in the creators.  

```'>
				<Param name='int checkpoint' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x61f95e5bb3e0a8c6' func='yes'>
			<Overload retVal='void' descr='// 0x61F95E5BB3E0A8C6
GRAPHICS::_0x61F95E5BB3E0A8C6(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x649c97d52332341a' func='yes'>
			<Overload retVal='void' descr='// 0x649C97D52332341A
GRAPHICS::_0x649C97D52332341A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x65e7e78842e74cdb' func='yes'>
			<Overload retVal='Any' descr='// 0x65E7E78842E74CDB
GRAPHICS::_0x65E7E78842E74CDB(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6a12d88881435dca' func='yes'>
			<Overload retVal='void' descr='// 0x6A12D88881435DCA
// 0x108F36CC
GRAPHICS::_0x6A12D88881435DCA();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6a51f78772175a51' func='yes'>
			<Overload retVal='void' descr='// 0x6A51F78772175A51
GRAPHICS::_0x6A51F78772175A51(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6d955f6a9e0295b1' func='yes'>
			<Overload retVal='void' descr='// 0x6D955F6A9E0295B1
GRAPHICS::_0x6D955F6A9E0295B1(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6ddbf9dffc4ac080' func='yes'>
			<Overload retVal='void' descr='// 0x6DDBF9DFFC4AC080
// 0x9F470BE3
GRAPHICS::_0x6DDBF9DFFC4AC080(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x736d7aa1b750856b' func='yes'>
			<Overload retVal='void' descr='// 0x736D7AA1B750856B
GRAPHICS::_0x736D7AA1B750856B(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any
----------------------------------------------------------------------------------------------------
Any p10, Any p11, Any p12, Any p13, Any p14, Any p15, Any p16, Any p17, Any p18, Any p19, Any p
20, Any p21, Any p22, Any p23, Any p24, Any p25, Any p26, Any p27, Any p28, Any p29, Any p30, Any p3
1);

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x74c180030fde4b69' func='yes'>
			<Overload retVal='void' descr='// 0x74C180030FDE4B69
// 0x796DE696
GRAPHICS::_0x74C180030FDE4B69(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x759650634f07b6b4' func='yes'>
			<Overload retVal='BOOL' descr='// 0x759650634F07B6B4
// 0x25D569EB
GRAPHICS::_0x759650634F07B6B4(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x77fe3402004cd1b0' func='yes'>
			<Overload retVal='void' descr='// 0x77FE3402004CD1B0
GRAPHICS::_0x77FE3402004CD1B0(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x799017f9e3b10112' func='yes'>
			<Overload retVal='void' descr='// 0x799017F9E3B10112
GRAPHICS::_0x799017F9E3B10112(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7a42b2e236e71415' func='yes'>
			<Overload retVal='void' descr='// 0x7A42B2E236E71415
// 0x431AA036
GRAPHICS::_0x7A42B2E236E71415();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7ac24eab6d74118d' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7AC24EAB6D74118D
// 0xB2410EAB
GRAPHICS::_0x7AC24EAB6D74118D(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7b226c785a52a0a9' func='yes'>
			<Overload retVal='Any' descr='// 0x7B226C785A52A0A9
// 0x926B8734
GRAPHICS::_0x7B226C785A52A0A9();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7fa5d82b8f58ec06' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7FA5D82B8F58EC06
// 0x1F3CADB0
GRAPHICS::_0x7FA5D82B8F58EC06();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x814af7dcaacc597b' func='yes'>
			<Overload retVal='void' descr='// 0x814AF7DCAACC597B
GRAPHICS::_0x814AF7DCAACC597B(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x82acc484ffa3b05f' func='yes'>
			<Overload retVal='Any' descr='// 0x82ACC484FFA3B05F
GRAPHICS::_0x82ACC484FFA3B05F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x851cd923176eba7c' func='yes'>
			<Overload retVal='void' descr='// 0x851CD923176EBA7C
// 0xDCBA251B
GRAPHICS::_0x851CD923176EBA7C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8cde909a0370bb3a' func='yes'>
			<Overload retVal='void' descr='// 0x8CDE909A0370BB3A
GRAPHICS::_0x8CDE909A0370BB3A(BOOL p0);
----------------------------------------------------------------------------------------------------
```

console hash: 0x19EC0001  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x90a78ecaa4e78453' func='yes'>
			<Overload retVal='int' descr='// 0x90A78ECAA4E78453
// 0xADBBA287
GRAPHICS::_0x90A78ECAA4E78453();
----------------------------------------------------------------------------------------------------
```

Dr. Underscore (1/6/18):  

Seems to return a value 0-2.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x92ccc17a7a2285da' func='yes'>
			<Overload retVal='void' descr='// 0x92CCC17A7A2285DA
// 0x6776720A
GRAPHICS::_0x92CCC17A7A2285DA();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x949f397a288b28b3' func='yes'>
			<Overload retVal='void' descr='// 0x949F397A288B28B3
GRAPHICS::_0x949F397A288B28B3(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x95eb5e34f821babe' func='yes'>
			<Overload retVal='Any' descr='// 0x95EB5E34F821BABE
GRAPHICS::_0x95EB5E34F821BABE(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9641588dab93b4b5' func='yes'>
			<Overload retVal='void' descr='// 0x9641588DAB93B4B5
GRAPHICS::_0x9641588DAB93B4B5(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x967278682cb6967a' func='yes'>
			<Overload retVal='void' descr='// 0x967278682CB6967A
// 0xBAEC6ADD
GRAPHICS::_0x967278682CB6967A(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x98edf76a7271e4f2' func='yes'>
			<Overload retVal='void' descr='// 0x98EDF76A7271E4F2
GRAPHICS::_0x98EDF76A7271E4F2();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x99ac7f0d8b9c893d' func='yes'>
			<Overload retVal='void' descr='// 0x99AC7F0D8B9C893D
// 0xE3938B0B
GRAPHICS::_0x99AC7F0D8B9C893D(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9b079e5221d984d3' func='yes'>
			<Overload retVal='void' descr='// 0x9B079E5221D984D3
GRAPHICS::_0x9B079E5221D984D3(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9b6e70c5ceef4eeb' func='yes'>
			<Overload retVal='Any' descr='// 0x9B6E70C5CEEF4EEB
// 0x9D5D9B38
GRAPHICS::_0x9B6E70C5CEEF4EEB(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9cfdd90b2b844bf7' func='yes'>
			<Overload retVal='void' descr='// 0x9CFDD90B2B844BF7
// 0x4EA70FB4
GRAPHICS::_0x9CFDD90B2B844BF7(float p0, float p1, float p2, float p3, float p4);
----------------------------------------------------------------------------------------------------
```

Only appeared in Golf & Golf_mp. Parameters were all ptrs  

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9d75795b9dc6ebbf' func='yes'>
			<Overload retVal='void' descr='// 0x9D75795B9DC6EBBF
GRAPHICS::_0x9D75795B9DC6EBBF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa356990e161c9e65' func='yes'>
			<Overload retVal='void' descr='// 0xA356990E161C9E65
// 0xA1CB6C94
GRAPHICS::_0xA356990E161C9E65(BOOL toggle);
----------------------------------------------------------------------------------------------------
This native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png).

This requires these two natives to be called as well to configure the grid: [`0x1c4fc5752bcd8e48`](h
ttps://runtime.fivem.net/doc/reference.html#_0x1C4FC5752BCD8E48) and [`0x5ce62918f8d703c7`](https://
runtime.fivem.net/doc/reference.html#_0x5CE62918F8D703C7).'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa44ff770dfbc5dae' func='yes'>
			<Overload retVal='void' descr='// 0xA44FF770DFBC5DAE
GRAPHICS::_0xA44FF770DFBC5DAE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa4664972a9b8f8ba' func='yes'>
			<Overload retVal='int' descr='// 0xA4664972A9B8F8BA
// 0xECD470F0
GRAPHICS::_0xA4664972A9B8F8BA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa46b73faa3460ae1' func='yes'>
			<Overload retVal='void' descr='// 0xA46B73FAA3460AE1
GRAPHICS::_0xA46B73FAA3460AE1(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa4819f5e23e2ffad' func='yes'>
			<Overload retVal='Any' descr='// 0xA4819F5E23E2FFAD
// 0xA08B46AD
GRAPHICS::_0xA4819F5E23E2FFAD();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa51c4b86b71652ae' func='yes'>
			<Overload retVal='void' descr='// 0xA51C4B86B71652AE
// 0x5D3BFFC9
GRAPHICS::_0xA51C4B86B71652AE(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa67c35c56eb1bd9d' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA67C35C56EB1BD9D
// 0x47B0C137
GRAPHICS::_0xA67C35C56EB1BD9D();
----------------------------------------------------------------------------------------------------
```

Dr. Underscore (1/6/18):  

Only one instances in two scripts. (cellphone_controller, maintransition)  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa78de25577300ba1' func='yes'>
			<Overload retVal='void' descr='// 0xA78DE25577300BA1
GRAPHICS::_0xA78DE25577300BA1(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xae51bc858f32ba66' func='yes'>
			<Overload retVal='void' descr='// 0xAE51BC858F32BA66
GRAPHICS::_0xAE51BC858F32BA66(Any p0, float p1, float p2, float p3, float p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb11d94bc55f41932' func='yes'>
			<Overload retVal='void' descr='// 0xB11D94BC55F41932
// 0xDE10BA1F
GRAPHICS::_0xB11D94BC55F41932(char* p0);
----------------------------------------------------------------------------------------------------
```

Has something to do with player switch.  

Only possible values:  

- &quot;CSM_ST_BOX3x3&quot;  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb1bb03742917a5d6' func='yes'>
			<Overload retVal='void' descr='// 0xB1BB03742917A5D6
// 0x3BB12B75
GRAPHICS::_0xB1BB03742917A5D6(int type, float xPos, float yPos, float zPos, float p4, int red, int green,
----------------------------------------------------------------------------------------------------
blue, int alpha);

```

```

12 matches across 4 scripts. All 4 scripts were job creators.  

type ranged from 0 - 2.  

p4 was always 0.2f. Likely scale.  

assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).  

Tested but noticed nothing.  

```'>
				<Param name='int type' />
				<Param name='float xPos' />
				<Param name='float yPos' />
				<Param name='float zPos' />
				<Param name='float p4' />
				<Param name='int red' />
				<Param name='int green' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb2ebe8cbc58b90e9' func='yes'>
			<Overload retVal='Any' descr='// 0xB2EBE8CBC58B90E9
GRAPHICS::_0xB2EBE8CBC58B90E9();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb3c641f3630bf6da' func='yes'>
			<Overload retVal='void' descr='// 0xB3C641F3630BF6DA
// 0xF6B837F0
GRAPHICS::_0xB3C641F3630BF6DA(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb569f41f3e7e83a4' func='yes'>
			<Overload retVal='void' descr='// 0xB569F41F3E7E83A4
GRAPHICS::_0xB569F41F3E7E83A4(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb7ed70c49521a61d' func='yes'>
			<Overload retVal='void' descr='// 0xB7ED70C49521A61D
// 0x7B786555
GRAPHICS::_0xB7ED70C49521A61D(int decalType);
----------------------------------------------------------------------------------------------------
```

GRAPHICS::_0xB7ED70C49521A61D(9123);  

GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(&quot;MPMissMarkers256&quot;);  

```'>
				<Param name='int decalType' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba0127da25fd54c9' func='yes'>
			<Overload retVal='void' descr='// 0xBA0127DA25FD54C9
GRAPHICS::_0xBA0127DA25FD54C9(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba3d194057c79a7b' func='yes'>
			<Overload retVal='void' descr='// 0xBA3D194057C79A7B
GRAPHICS::_0xBA3D194057C79A7B(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba3d65906822bed5' func='yes'>
			<Overload retVal='void' descr='// 0xBA3D65906822BED5
// 0x513D444B
GRAPHICS::_0xBA3D65906822BED5(BOOL p0, BOOL p1, float p2, float p3, float p4, float p5);
----------------------------------------------------------------------------------------------------
```

Every p2 - p5 occurrence was 0f.  

```'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbb0527ec6341496d' func='yes'>
			<Overload retVal='Any' descr='// 0xBB0527EC6341496D
GRAPHICS::_0xBB0527EC6341496D();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbb90e12cac1dab25' func='yes'>
			<Overload retVal='void' descr='// 0xBB90E12CAC1DAB25
GRAPHICS::_0xBB90E12CAC1DAB25(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbbf327ded94e4deb' func='yes'>
			<Overload retVal='void' descr='// 0xBBF327DED94E4DEB
// 0x85BA15A4
GRAPHICS::_0xBBF327DED94E4DEB(char* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbcedb009461da156' func='yes'>
			<Overload retVal='Any' descr='// 0xBCEDB009461DA156
// 0x5AB94128
GRAPHICS::_0xBCEDB009461DA156();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbdeb86f4d5809204' func='yes'>
			<Overload retVal='void' descr='// 0xBDEB86F4D5809204
// 0x9559BB38
GRAPHICS::_0xBDEB86F4D5809204(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbe197eaa669238f4' func='yes'>
			<Overload retVal='Any' descr='// 0xBE197EAA669238F4
GRAPHICS::_0xBE197EAA669238F4(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 0.  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbeb3d46bb7f043c0' func='yes'>
			<Overload retVal='void' descr='// 0xBEB3D46BB7F043C0
// 0xCBE7068F
GRAPHICS::_0xBEB3D46BB7F043C0(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbf59707b3e5ed531' func='yes'>
			<Overload retVal='void' descr='// 0xBF59707B3E5ED531
// 0x554BA16E
GRAPHICS::_0xBF59707B3E5ED531(char* p0);
----------------------------------------------------------------------------------------------------
```

Something to do with timecycles.  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc0416b061f2b7e5e' func='yes'>
			<Overload retVal='void' descr='// 0xC0416B061F2B7E5E
// 0x1A1A72EF
GRAPHICS::_0xC0416B061F2B7E5E(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc35a6d07c93802b2' func='yes'>
			<Overload retVal='void' descr='// 0xC35A6D07C93802B2
GRAPHICS::_0xC35A6D07C93802B2();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc5c8f970d4edff71' func='yes'>
			<Overload retVal='void' descr='// 0xC5C8F970D4EDFF71
GRAPHICS::_0xC5C8F970D4EDFF71(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc9b18b4619f48f7b' func='yes'>
			<Overload retVal='void' descr='// 0xC9B18B4619F48F7B
// 0x93628786
GRAPHICS::_0xC9B18B4619F48F7B(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xca465d9cc0d231ba' func='yes'>
			<Overload retVal='void' descr='// 0xCA465D9CC0D231BA
GRAPHICS::_0xCA465D9CC0D231BA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xca4ae345a153d573' func='yes'>
			<Overload retVal='void' descr='// 0xCA4AE345A153D573
GRAPHICS::_0xCA4AE345A153D573(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcb82a0bf0e3e3265' func='yes'>
			<Overload retVal='int' descr='// 0xCB82A0BF0E3E3265
// 0xCFCDC518
GRAPHICS::_0xCB82A0BF0E3E3265(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd1c55b110e4df534' func='yes'>
			<Overload retVal='void' descr='// 0xD1C55B110E4DF534
// 0xD99EC000
GRAPHICS::_0xD1C55B110E4DF534(Any p0);
----------------------------------------------------------------------------------------------------
```

SET_TV_???  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd1c7cb175e012964' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD1C7CB175E012964
// 0xE9183D3A
GRAPHICS::_0xD1C7CB175E012964(int scaleformHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int scaleformHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd2209be128b5418c' func='yes'>
			<Overload retVal='void' descr='// 0xD2209BE128B5418C
GRAPHICS::_0xD2209BE128B5418C(char* graphicsName);
----------------------------------------------------------------------------------------------------
```

&quot;SwitchHUDFranklinOut&quot;,  

&quot;SwitchHUDMichaelOut&quot;,  

&quot;SwitchHUDOut&quot;,  

&quot;SwitchHUDTrevorOut&quot;,  

&quot;SwitchOpenFranklinOut&quot;,  

&quot;SwitchOpenMichaelIn&quot;,  

&quot;SwitchOpenNeutral&quot;  

```'>
				<Param name='char* graphicsName' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd2300034310557e4' func='yes'>
			<Overload retVal='void' descr='// 0xD2300034310557E4
// 0x667046A8
GRAPHICS::_0xD2300034310557E4(Vehicle vehicle, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd2936cab8b58fcbd' func='yes'>
			<Overload retVal='void' descr='// 0xD2936CAB8B58FCBD
GRAPHICS::_0xD2936CAB8B58FCBD(Any p0, BOOL p1, float p2, float p3, float p4, float p5, BOOL p6, float p7)
----------------------------------------------------------------------------------------------------
``'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='BOOL p6' />
				<Param name='float p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd39d13c9febf0511' func='yes'>
			<Overload retVal='void' descr='// 0xD39D13C9FEBF0511
// 0x4A124267
GRAPHICS::_0xD39D13C9FEBF0511(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd3a10fc7fd8d98cd' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD3A10FC7FD8D98CD
// 0xE40A0F1A
GRAPHICS::_0xD3A10FC7FD8D98CD();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd7021272eb0a451e' func='yes'>
			<Overload retVal='void' descr='// 0xD7021272EB0A451E
GRAPHICS::_0xD7021272EB0A451E(char* p0);
----------------------------------------------------------------------------------------------------
```

Only one match in the scripts:  

GRAPHICS::_D7021272EB0A451E(&quot;int_carrier_hanger&quot;);  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd7d0b00177485411' func='yes'>
			<Overload retVal='void' descr='// 0xD7D0B00177485411
// 0x654F0287
GRAPHICS::_0xD7D0B00177485411(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd801cc02177fa3f1' func='yes'>
			<Overload retVal='void' descr='// 0xD801CC02177FA3F1
// 0x9CBA682A
GRAPHICS::_0xD801CC02177FA3F1();
----------------------------------------------------------------------------------------------------
```

4 matches across 2 scripts.  

appcamera:  

called after UI::HIDE_HUD_AND_RADAR_THIS_FRAME() and before GRAPHICS::0x108F36CC();  

cellphone_controller:  

called after GRAPHICS::0xE9F2B68F(0, 0) and before GRAPHICS::0x108F36CC();  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd80a80346a45d761' func='yes'>
			<Overload retVal='Any' descr='// 0xD80A80346A45D761
GRAPHICS::_0xD80A80346A45D761(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd9454b5752c857dc' func='yes'>
			<Overload retVal='void' descr='// 0xD9454B5752C857DC
// 0xEAB6417C
GRAPHICS::_0xD9454B5752C857DC();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdbaa5ec848ba2d46' func='yes'>
			<Overload retVal='void' descr='// 0xDBAA5EC848BA2D46
// 0xBB1A1294
GRAPHICS::_0xDBAA5EC848BA2D46(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdc459cfa0cce245b' func='yes'>
			<Overload retVal='void' descr='// 0xDC459CFA0CCE245B
// 0x7E946E87
GRAPHICS::_0xDC459CFA0CCE245B(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xde81239437e8c5a8' func='yes'>
			<Overload retVal='void' descr='// 0xDE81239437E8C5A8
// 0xDB7AECDA
GRAPHICS::_0xDE81239437E8C5A8();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe1c8709406f2c41c' func='yes'>
			<Overload retVal='void' descr='// 0xE1C8709406F2C41C
// 0x0113EAE4
GRAPHICS::_0xE1C8709406F2C41C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe2892e7e55d7073a' func='yes'>
			<Overload retVal='void' descr='// 0xE2892E7E55D7073A
// 0x455F1084
GRAPHICS::_0xE2892E7E55D7073A(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe35b38a27e8e7179' func='yes'>
			<Overload retVal='Any' descr='// 0xE35B38A27E8E7179
GRAPHICS::_0xE35B38A27E8E7179(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe3e2c1b4c59dbc77' func='yes'>
			<Overload retVal='void' descr='// 0xE3E2C1B4C59DBC77
// 0xD8CC7221
GRAPHICS::_0xE3E2C1B4C59DBC77(int unk);
----------------------------------------------------------------------------------------------------
```

Sets an unknown value related to timecycles.  

```'>
				<Param name='int unk' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe59343e9e96529e7' func='yes'>
			<Overload retVal='Any' descr='// 0xE59343E9E96529E7
// 0xD906A3A9
GRAPHICS::_0xE59343E9E96529E7();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe63d7c6eececb66b' func='yes'>
			<Overload retVal='void' descr='// 0xE63D7C6EECECB66B
// 0xD34A6CBA
GRAPHICS::_0xE63D7C6EECECB66B(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe6a9f00d4240b519' func='yes'>
			<Overload retVal='void' descr='// 0xE6A9F00D4240B519
GRAPHICS::_0xE6A9F00D4240B519(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe791df1f73ed2c8b' func='yes'>
			<Overload retVal='Any' descr='// 0xE791DF1F73ED2C8B
// 0x9D84554C
GRAPHICS::_0xE791DF1F73ED2C8B(Any p0);
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 0.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe82728f0de75d13a' func='yes'>
			<Overload retVal='void' descr='// 0xE82728F0DE75D13A
GRAPHICS::_0xE82728F0DE75D13A(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any
----------------------------------------------------------------------------------------------------
Any p10, Any p11, Any p12, Any p13, Any p14, Any p15, Any p16, Any p17, Any p18, Any p19, Any p
20, Any p21, Any p22, Any p23, Any p24);

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xeb3dac2c86001e5e' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEB3DAC2C86001E5E
GRAPHICS::_0xEB3DAC2C86001E5E();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xec52c631a1831c03' func='yes'>
			<Overload retVal='void' descr='// 0xEC52C631A1831C03
// 0x83A9811D
GRAPHICS::_0xEC52C631A1831C03(int p0);
----------------------------------------------------------------------------------------------------
```

_push_scaleform_movie_function(iLocal_117, &quot;SET_TEXT&quot;);  

if (bParam0)  

{  

	_0xEC52C631A1831C03(2);  

}  

else  

{  

	_0xEC52C631A1831C03(1);  

}  

_pop_scaleform_movie_function_void();  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xec72c258667be5ea' func='yes'>
			<Overload retVal='Any' descr='// 0xEC72C258667BE5EA
// 0x9C106AD9
GRAPHICS::_0xEC72C258667BE5EA(Any p0);
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 0.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xef398beee4ef45f9' func='yes'>
			<Overload retVal='void' descr='// 0xEF398BEEE4EF45F9
GRAPHICS::_0xEF398BEEE4EF45F9(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xefabc7722293da7c' func='yes'>
			<Overload retVal='void' descr='// 0xEFABC7722293DA7C
GRAPHICS::_0xEFABC7722293DA7C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xefb55e7c25d3b3be' func='yes'>
			<Overload retVal='void' descr='// 0xEFB55E7C25D3B3BE
// 0xE29EE145
GRAPHICS::_0xEFB55E7C25D3B3BE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xefd97ff47b745b8d' func='yes'>
			<Overload retVal='void' descr='// 0xEFD97FF47B745B8D
GRAPHICS::_0xEFD97FF47B745B8D(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf1cea8a4198d8e9a' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF1CEA8A4198D8E9A
// 0x2E7D9B98
GRAPHICS::_0xF1CEA8A4198D8E9A(char* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf44a5456ac3f4f97' func='yes'>
			<Overload retVal='void' descr='// 0xF44A5456AC3F4F97
// 0x03D87600
GRAPHICS::_0xF44A5456AC3F4F97(Any p0);
----------------------------------------------------------------------------------------------------
```

Another function related to &quot;HUD scaleforms&quot;  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf51d36185993515d' func='yes'>
			<Overload retVal='void' descr='// 0xF51D36185993515D
// 0x20EABD0F
GRAPHICS::_0xF51D36185993515D(int checkpoint, float posX, float posY, float posZ, float unkX, float unkY,
----------------------------------------------------------------------------------------------------
at unkZ);

```

```

This does not move an existing checkpoint... so wtf.  

```'>
				<Param name='int checkpoint' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float unkX' />
				<Param name='float unkY' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf5bed327cea362b1' func='yes'>
			<Overload retVal='int' descr='// 0xF5BED327CEA362B1
// 0x596B900D
GRAPHICS::_0xF5BED327CEA362B1(BOOL p0);
----------------------------------------------------------------------------------------------------
```

3 matches across 3 scripts. First 2 were 0, 3rd was 1. Possibly a bool.  

appcamera, appmedia, and cellphone_controller.  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf78b803082d4386f' func='yes'>
			<Overload retVal='void' descr='// 0xF78B803082D4386F
GRAPHICS::_0xF78B803082D4386F(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfe26117a5841b2ff' func='yes'>
			<Overload retVal='int' descr='// 0xFE26117A5841B2FF
// 0x4F4D76E8
GRAPHICS::_0xFE26117A5841B2FF(Vehicle vehicle, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfebfbfdfb66039de' func='yes'>
			<Overload retVal='void' descr='// 0xFEBFBFDFB66039DE
GRAPHICS::_0xFEBFBFDFB66039DE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xff5992e1c9e65d05' func='yes'>
			<Overload retVal='void' descr='// 0xFF5992E1C9E65D05
GRAPHICS::_0xFF5992E1C9E65D05(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='PopTimecycleModifier' func='yes'>
			<Overload retVal='void' descr='// 0x3C8938D7D872211E
// 0x79D7D235
GRAPHICS::POP_TIMECYCLE_MODIFIER();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='PushScaleformMovieMethodParameterBool' func='yes'>
			<Overload retVal='void' descr='// 0xC58424BA936EB458
// 0x0D4AE8CB
GRAPHICS::_PUSH_SCALEFORM_MOVIE_METHOD_PARAMETER_BOOL(BOOL value);
----------------------------------------------------------------------------------------------------
```

Pushes a boolean for the Scaleform function onto the stack.  

```

----------------------------------------------------------------------------------------------------

Old name: _PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL'>
				<Param name='BOOL value' />
			</Overload>
		</KeyWord>
		<KeyWord name='_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: PushScaleformMovieMethodParameterBool' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='PushScaleformMovieMethodParameterButtonName' func='yes'>
			<Overload retVal='void' descr='// 0xE83A3E3557A56640
// 0xCCBF0334
GRAPHICS::_PUSH_SCALEFORM_MOVIE_METHOD_PARAMETER_BUTTON_NAME(char* button);
----------------------------------------------------------------------------------------------------
```

This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add
 a new button (like &quot;INSTRUCTIONAL_BUTTONS&quot;).  

When switching with a controller, the icons update and become the controller&apos;s icons.  

```'>
				<Param name='char* button' />
			</Overload>
		</KeyWord>
		<KeyWord name='PushScaleformMovieMethodParameterFloat' func='yes'>
			<Overload retVal='void' descr='// 0xD69736AAE04DB51A
// 0x9A01FFDA
GRAPHICS::_PUSH_SCALEFORM_MOVIE_METHOD_PARAMETER_FLOAT(float value);
----------------------------------------------------------------------------------------------------
```

Pushes a float for the Scaleform function onto the stack.  

```

----------------------------------------------------------------------------------------------------

Old name: _PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_FLOAT'>
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_FLOAT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: PushScaleformMovieMethodParameterFloat' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='PushScaleformMovieMethodParameterInt' func='yes'>
			<Overload retVal='void' descr='// 0xC3D0841A0CC546A6
// 0x716777CB
GRAPHICS::_PUSH_SCALEFORM_MOVIE_METHOD_PARAMETER_INT(int value);
----------------------------------------------------------------------------------------------------
```

Pushes an integer for the Scaleform function onto the stack.  

```

----------------------------------------------------------------------------------------------------

Old name: _PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: PushScaleformMovieMethodParameterInt' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='PushScaleformMovieMethodParameterString' func='yes'>
			<Overload retVal='void' descr='// 0xBA7148484BD90365
// 0x4DAAD55B
GRAPHICS::_PUSH_SCALEFORM_MOVIE_METHOD_PARAMETER_STRING(char* value);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING'>
				<Param name='char* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='_PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: PushScaleformMovieMethodParameterString' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='PushTimecycleModifier' func='yes'>
			<Overload retVal='void' descr='// 0x58F735290861E6B4
// 0x7E082045
GRAPHICS::PUSH_TIMECYCLE_MODIFIER();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ReleaseMovieMeshSet' func='yes'>
			<Overload retVal='void' descr='// 0xEB119AA014E89183
// 0x4FA5501D
GRAPHICS::RELEASE_MOVIE_MESH_SET(int movieMeshSet);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int movieMeshSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveDecal' func='yes'>
			<Overload retVal='void' descr='// 0xED3F346429CCD659
// 0xA4363188
GRAPHICS::REMOVE_DECAL(Object decal);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object decal' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveDecalsFromObject' func='yes'>
			<Overload retVal='void' descr='// 0xCCF71CBDDF5B6CB9
// 0x8B67DCA7
GRAPHICS::REMOVE_DECALS_FROM_OBJECT(Object obj);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object obj' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveDecalsFromObjectFacing' func='yes'>
			<Overload retVal='void' descr='// 0xA6F6F70FDC6D144C
// 0xF4999A55
GRAPHICS::REMOVE_DECALS_FROM_OBJECT_FACING(Object obj, float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object obj' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveDecalsFromVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xE91F1B65F2B48D57
// 0x831D06CA
GRAPHICS::REMOVE_DECALS_FROM_VEHICLE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveDecalsInRange' func='yes'>
			<Overload retVal='void' descr='// 0x5D6B2D4830A67C62
// 0x06A619A0
GRAPHICS::REMOVE_DECALS_IN_RANGE(float x, float y, float z, float range);
----------------------------------------------------------------------------------------------------
```

Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...  


```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float range' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveParticleFx' func='yes'>
			<Overload retVal='void' descr='// 0xC401503DFE8D53CF
// 0x6BA48C7E
GRAPHICS::REMOVE_PARTICLE_FX(int ptfxHandle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int ptfxHandle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveParticleFxFromEntity' func='yes'>
			<Overload retVal='void' descr='// 0xB8FEAEEBCC127425
// 0xCEDE52E9
GRAPHICS::REMOVE_PARTICLE_FX_FROM_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveParticleFxInRange' func='yes'>
			<Overload retVal='void' descr='// 0xDD19FA1C6D657305
// 0x7EB8F275
GRAPHICS::REMOVE_PARTICLE_FX_IN_RANGE(float X, float Y, float Z, float radius);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float X' />
				<Param name='float Y' />
				<Param name='float Z' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestHudScaleform' func='yes'>
			<Overload retVal='void' descr='// 0x9304881D6F6537EA
// 0x7AF85862
GRAPHICS::_REQUEST_HUD_SCALEFORM(int hudComponent);
----------------------------------------------------------------------------------------------------
```

http://gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/?p=1068285912  

```'>
				<Param name='int hudComponent' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestScaleformMovie' func='yes'>
			<Overload retVal='int' descr='// 0x11FE353CF9733E6F
// 0xC67E3DCB
GRAPHICS::REQUEST_SCALEFORM_MOVIE(char* scaleformName);
----------------------------------------------------------------------------------------------------
```

GTA V Scaleforms Decompiled  

pastebin.com/mmNdjX2k  

Gets a new native after almost every update.  

Update 1.0.393.2  

0x67D02A194A2FC2BD  

Update 1.0.463.1  

0xC97D787CE7726A2F  

Update 1.0.505.2  

0x36ECDA4DD9A3F08D  

Update 1.0.573.1  

0xE3C796DC28BC3254  

Update 1.0.678.1  

0x2F14983962462691  

```'>
				<Param name='char* scaleformName' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestScaleformMovieInstance' func='yes'>
			<Overload retVal='int' descr='// 0xC514489CFB8AF806
// 0x7CC8057D
GRAPHICS::REQUEST_SCALEFORM_MOVIE_INSTANCE(char* scaleformName);
----------------------------------------------------------------------------------------------------
```

Also used by 0x67D02A194A2FC2BD  

```'>
				<Param name='char* scaleformName' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestScaleformMovieInteractive' func='yes'>
			<Overload retVal='int' descr='// 0xBD06C611BB9048C2
GRAPHICS::_REQUEST_SCALEFORM_MOVIE_INTERACTIVE(char* scaleformName);
----------------------------------------------------------------------------------------------------
```

Similar to REQUEST_SCALEFORM_MOVIE, but seems to be some kind of &quot;interactive&quot; scaleform movie?  

These seem to be the only scaleforms ever requested by this native:  

&quot;breaking_news&quot;  

&quot;desktop_pc&quot;  

&quot;ECG_MONITOR&quot;  

&quot;Hacking_PC&quot;  

&quot;TEETH_PULLING&quot;  

Note: Unless this hash is out-of-order, this native is next-gen only.  

```

----------------------------------------------------------------------------------------------------

Old name: _REQUEST_SCALEFORM_MOVIE3'>
				<Param name='char* scaleformName' />
			</Overload>
		</KeyWord>
		<KeyWord name='_REQUEST_SCALEFORM_MOVIE3' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: RequestScaleformMovieInteractive' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='RequestStreamedTextureDict' func='yes'>
			<Overload retVal='void' descr='// 0xDFA2EF8E04127DD5
// 0x4C9B035F
GRAPHICS::REQUEST_STREAMED_TEXTURE_DICT(char* textureDict, BOOL p1);
----------------------------------------------------------------------------------------------------
```

last param seems to be unused in disassembly  

```'>
				<Param name='char* textureDict' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetParticleFxAssetOldToNew' func='yes'>
			<Overload retVal='void' descr='// 0x89C8553DD3274AAE
GRAPHICS::_RESET_PARTICLE_FX_ASSET_OLD_TO_NEW(char* name);
----------------------------------------------------------------------------------------------------
```

console hash: 0x9E8D8B72  

Resets the effect of _SET_PARTICLE_FX_ASSET_OLD_TO_NEW  

```'>
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetScriptGfxAlign' func='yes'>
			<Overload retVal='void' descr='// 0xE3A3DB414A373DAB
// 0x3FE33BD6
GRAPHICS::RESET_SCRIPT_GFX_ALIGN();
----------------------------------------------------------------------------------------------------
This function resets the alignment set using `SET_SCRIPT_GFX_ALIGN` and `SET_SCRIPT_GFX_ALIGN_PARAMS
` to the default

values (&apos;I&apos;, &apos;I&apos;; 0, 0, 0, 0). This should be used after having used the aforementioned functions in
 order to not affect

any other scripts attempting to draw.

----------------------------------------------------------------------------------------------------

Old name: _SCREEN_DRAW_POSITION_END'>
			</Overload>
		</KeyWord>
		<KeyWord name='_SCREEN_DRAW_POSITION_END' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: ResetScriptGfxAlign' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='ReturnTwo' func='yes'>
			<Overload retVal='int' descr='// 0x40AFB081F8ADD4EE
// 0x762E5C5F
GRAPHICS::_RETURN_TWO(Any p0);
----------------------------------------------------------------------------------------------------
```

It returns two lol  

li r3, 2  

blr  

thats all it does.  

mov dword ptr [rax], 2  

Заебись функционал  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlackout' func='yes'>
			<Overload retVal='void' descr='// 0x1268615ACE24D504
// 0xAA2A0EAF
GRAPHICS::_SET_BLACKOUT(BOOL enable);
----------------------------------------------------------------------------------------------------
```

Disables all emissive textures and lights like city lights, car lights, cop car lights. Particles st
ill emit light  

Used in Humane Labs Heist for EMP.  

```'>
				<Param name='BOOL enable' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCheckpointCylinderHeight' func='yes'>
			<Overload retVal='void' descr='// 0x2707AAE9D9297D89
// 0xFF0F9B22
GRAPHICS::SET_CHECKPOINT_CYLINDER_HEIGHT(int checkpoint, float nearHeight, float farHeight, float radius)
----------------------------------------------------------------------------------------------------
``

```

Sets the cylinder height of the checkpoint.  

Parameters:  

* nearHeight - The height of the checkpoint when inside of the radius.  

* farHeight - The height of the checkpoint when outside of the radius.  

* radius - The radius of the checkpoint.  

```'>
				<Param name='int checkpoint' />
				<Param name='float nearHeight' />
				<Param name='float farHeight' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCheckpointIconRgba' func='yes'>
			<Overload retVal='void' descr='// 0xB9EA40907C680580
// 0xA5456DBB
GRAPHICS::_SET_CHECKPOINT_ICON_RGBA(int checkpoint, int red, int green, int blue, int alpha);
----------------------------------------------------------------------------------------------------
```

Sets the checkpoint icon color.  

```'>
				<Param name='int checkpoint' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int blue' />
				<Param name='int alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCheckpointRgba' func='yes'>
			<Overload retVal='void' descr='// 0x7167371E8AD747F7
// 0xEF9C8CB3
GRAPHICS::SET_CHECKPOINT_RGBA(int checkpoint, int red, int green, int blue, int alpha);
----------------------------------------------------------------------------------------------------
```

Sets the checkpoint color.  

```'>
				<Param name='int checkpoint' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int blue' />
				<Param name='int alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCheckpointScale' func='yes'>
			<Overload retVal='void' descr='// 0x4B5B4DA5D79F1943
// 0x80151CCF
GRAPHICS::_SET_CHECKPOINT_SCALE(int checkpoint, float p0);
----------------------------------------------------------------------------------------------------
```

p0 - Scale? Looks to be a normalized value (0.0 - 1.0)  

offroad_races.c4, line ~67407:  

a_3._f7 = GRAPHICS::CREATE_CHECKPOINT(v_D, v_A, a_4, a_7, v_E, v_F, v_10, sub_62b2(v_A, 220, 255), 0
);  

UI::GET_HUD_COLOUR(134, &v_E, &v_F, &v_10, &v_11);  

GRAPHICS::_SET_CHECKPOINT_ICON_RGBA(a_3._f7, v_E, v_F, v_10, sub_62b2(v_A, 70, 210));  

GRAPHICS::_4B5B4DA5D79F1943(a_3._f7, 0.95);  

GRAPHICS::SET_CHECKPOINT_CYLINDER_HEIGHT(a_3._f7, 4.0, 4.0, 100.0);  

```'>
				<Param name='int checkpoint' />
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDebugLinesAndSpheresDrawingActive' func='yes'>
			<Overload retVal='void' descr='// 0x175B6BFC15CDD0C5
// 0x1418CA37
GRAPHICS::SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE(BOOL enabled);
----------------------------------------------------------------------------------------------------
```

NOTE: Debugging functions are not present in the retail version of the game.  

```'>
				<Param name='BOOL enabled' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDrawOrigin' func='yes'>
			<Overload retVal='void' descr='// 0xAA0008F3BBB8F416
// 0xE10198D5
GRAPHICS::SET_DRAW_ORIGIN(float x, float y, float z, Any p3);
----------------------------------------------------------------------------------------------------
```

Sets the on-screen drawing origin for draw-functions (which is normally x=0,y=0 in the upper left co
rner of the screen) to a world coordinate.  

From now on, the screen coordinate which displays the given world coordinate on the screen is seen a
s x=0,y=0.  

Example in C#:  

Vector3 boneCoord = somePed.GetBoneCoord(Bone.SKEL_Head);  

Function.Call(Hash.SET_DRAW_ORIGIN, boneCoord.X, boneCoord.Y, boneCoord.Z, 0);  

Function.Call(Hash.DRAW_SPRITE, &quot;helicopterhud&quot;, &quot;hud_corner&quot;, -0.01, -0.015, 0.013, 0.013, 0.0, 255
, 0, 0, 200);  

Function.Call(Hash.DRAW_SPRITE, &quot;helicopterhud&quot;, &quot;hud_corner&quot;, 0.01, -0.015, 0.013, 0.013, 90.0, 255
, 0, 0, 200);  

Function.Call(Hash.DRAW_SPRITE, &quot;helicopterhud&quot;, &quot;hud_corner&quot;, -0.01, 0.015, 0.013, 0.013, 270.0, 25
5, 0, 0, 200);  

Function.Call(Hash.DRAW_SPRITE, &quot;helicopterhud&quot;, &quot;hud_corner&quot;, 0.01, 0.015, 0.013, 0.013, 180.0, 255
, 0, 0, 200);  

Function.Call(Hash.CLEAR_DRAW_ORIGIN);  

Result: www11.pic-upload.de/19.06.15/bkqohvil2uao.jpg  

If the pedestrian starts walking around now, the sprites are always around her head, no matter where
 the head is displayed on the screen.  

This function also effects the drawing of texts and other UI-elements.  

The effect can be reset by calling GRAPHICS::CLEAR_DRAW_ORIGIN().  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityIconColor' func='yes'>
			<Overload retVal='void' descr='// 0x1D5F595CCAE2E238
// 0x6EE1E946
GRAPHICS::SET_ENTITY_ICON_COLOR(Entity entity, int red, int green, int blue, int alpha);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int blue' />
				<Param name='int alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityIconVisibility' func='yes'>
			<Overload retVal='void' descr='// 0xE0E8BEECCA96BA31
// 0xD1D2FD52
GRAPHICS::SET_ENTITY_ICON_VISIBILITY(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFarShadowsSuppressed' func='yes'>
			<Overload retVal='void' descr='// 0x80ECBC0C856D3B0B
// 0xFE903D0F
GRAPHICS::_SET_FAR_SHADOWS_SUPPRESSED(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

When this is set to ON, shadows only draw as you get nearer.  

When OFF, they draw from a further distance. (((BUT))) f*ck up nearer shadows quality.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFlash' func='yes'>
			<Overload retVal='void' descr='// 0x0AB84296FED9CFC6
// 0x7E55A1EE
GRAPHICS::SET_FLASH(float p0, float p1, float fadeIn, float duration, float fadeOut);
----------------------------------------------------------------------------------------------------
```

Purpose of p0 and p1 unknown.  

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float fadeIn' />
				<Param name='float duration' />
				<Param name='float fadeOut' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetForcePedFootstepsTracks' func='yes'>
			<Overload retVal='void' descr='// 0xAEEDAD1420C65CC0
GRAPHICS::_SET_FORCE_PED_FOOTSTEPS_TRACKS(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Forces footstep tracks on all surfaces.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetForceVehicleTrails' func='yes'>
			<Overload retVal='void' descr='// 0x4CC7F0FEA5283FE0
GRAPHICS::_SET_FORCE_VEHICLE_TRAILS(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Forces vehicle trails on all surfaces.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFrozenRenderingDisabled' func='yes'>
			<Overload retVal='void' descr='// 0xDFC252D8A3E15AB7
// 0x30ADE541
GRAPHICS::_SET_FROZEN_RENDERING_DISABLED(BOOL enabled);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _ENABLE_GAMEPLAY_CAM'>
				<Param name='BOOL enabled' />
			</Overload>
		</KeyWord>
		<KeyWord name='_ENABLE_GAMEPLAY_CAM' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetFrozenRenderingDisabled' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetNightvision' func='yes'>
			<Overload retVal='void' descr='// 0x18F621F7A5B1F85D
// 0xD1E5565F
GRAPHICS::SET_NIGHTVISION(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Enables Night Vision.  

Example:  

C#: Function.Call(Hash.SET_NIGHTVISION, true);  

C++: GRAPHICS::SET_NIGHTVISION(true);  

BOOL toggle:  

true = turns night vision on for your player.  

false = turns night vision off for your player.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNoiseoveride' func='yes'>
			<Overload retVal='void' descr='// 0xE787BF1C5CF823C9
// 0xD576F5DD
GRAPHICS::SET_NOISEOVERIDE(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNoisinessoveride' func='yes'>
			<Overload retVal='void' descr='// 0xCB6A7C3BB17A0C67
// 0x046B62D9
GRAPHICS::SET_NOISINESSOVERIDE(float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxAssetOldToNew' func='yes'>
			<Overload retVal='void' descr='// 0xEA1E2D93F6F75ED9
GRAPHICS::_SET_PARTICLE_FX_ASSET_OLD_TO_NEW(char* oldAsset, char* newAsset);
----------------------------------------------------------------------------------------------------
```

console hash: 0xC92719A7  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_PTFX_ASSET_OLD_2_NEW'>
				<Param name='char* oldAsset' />
				<Param name='char* newAsset' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_PTFX_ASSET_OLD_2_NEW' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetParticleFxAssetOldToNew' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxBloodScale' func='yes'>
			<Overload retVal='void' descr='// 0x5F6DF3D92271E8A1
// 0x18136DE0
GRAPHICS::SET_PARTICLE_FX_BLOOD_SCALE(BOOL p0);
----------------------------------------------------------------------------------------------------
```

hash collision  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxCamInsideNonplayerVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xACEE6F360FC1F6B6
// 0x6B125A02
GRAPHICS::SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxCamInsideVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xEEC4047028426510
// 0x19EC0001
GRAPHICS::SET_PARTICLE_FX_CAM_INSIDE_VEHICLE(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxLoopedAlpha' func='yes'>
			<Overload retVal='void' descr='// 0x726845132380142E
// 0x5ED49BE1
GRAPHICS::SET_PARTICLE_FX_LOOPED_ALPHA(int ptfxHandle, float alpha);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int ptfxHandle' />
				<Param name='float alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxLoopedColour' func='yes'>
			<Overload retVal='void' descr='// 0x7F8F65877F88783B
// 0x5219D530
GRAPHICS::SET_PARTICLE_FX_LOOPED_COLOUR(int ptfxHandle, float r, float g, float b, BOOL p4);
----------------------------------------------------------------------------------------------------
```

only works on some fx&apos;s  

p4 = 0  

```'>
				<Param name='int ptfxHandle' />
				<Param name='float r' />
				<Param name='float g' />
				<Param name='float b' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxLoopedEvolution' func='yes'>
			<Overload retVal='void' descr='// 0x5F0C4B5B1C393BE2
// 0x1CBC1373
GRAPHICS::SET_PARTICLE_FX_LOOPED_EVOLUTION(int ptfxHandle, char* propertyName, float amount, BOOL Id);
----------------------------------------------------------------------------------------------------
```

Should be named SET_PARTICLE_FX_LOOPED_PROPERTY. &quot;Evolution&quot; doesn&apos;t make much sense...  

--------  

p4 seems to be always 0.  

Usage:  

if (!GRAPHICS::DOES_PARTICLE_FX_LOOPED_EXIST(l_25C7)) {  

      l_25C7 = GRAPHICS::_DDE23F30CC5A0F03(&quot;scr_veh_plane_gen_damage&quot;, l_8B9, l_25C4, 0.0, 0.0, 0.0,
 ENTITY::_GET_ENTITY_BONE_INDEX(l_8B9, &quot;exhaust&quot;), 1.0, 0, 0, 0);  

      GRAPHICS::SET_PARTICLE_FX_LOOPED_EVOLUTION(l_25C7, &quot;damage_smoke&quot;, 0.5, 0);  

      GRAPHICS::SET_PARTICLE_FX_LOOPED_EVOLUTION(l_25C7, &quot;damage_fire&quot;, 0.2, 0);  

      }  

```'>
				<Param name='int ptfxHandle' />
				<Param name='char* propertyName' />
				<Param name='float amount' />
				<Param name='BOOL Id' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxLoopedOffsets' func='yes'>
			<Overload retVal='void' descr='// 0xF7DDEBEC43483C43
// 0x641F7790
GRAPHICS::SET_PARTICLE_FX_LOOPED_OFFSETS(int ptfxHandle, float x, float y, float z, float rotX, float rot
----------------------------------------------------------------------------------------------------
loat rotZ);

```'>
				<Param name='int ptfxHandle' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float rotX' />
				<Param name='float rot' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxLoopedRange' func='yes'>
			<Overload retVal='void' descr='// 0xDCB194B85EF7B541
// 0x233DE879
GRAPHICS::_SET_PARTICLE_FX_LOOPED_RANGE(int ptfxHandle, float range);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int ptfxHandle' />
				<Param name='float range' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxLoopedScale' func='yes'>
			<Overload retVal='void' descr='// 0xB44250AAA456492D
// 0x099B8B49
GRAPHICS::SET_PARTICLE_FX_LOOPED_SCALE(int ptfxHandle, float scale);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int ptfxHandle' />
				<Param name='float scale' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxNonLoopedAlpha' func='yes'>
			<Overload retVal='void' descr='// 0x77168D722C58B2FC
// 0x497EAFF2
GRAPHICS::SET_PARTICLE_FX_NON_LOOPED_ALPHA(float alpha);
----------------------------------------------------------------------------------------------------
```

Usage example for C#:  

Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });  

		Note: the argument alpha ranges from 0.0f-1.0f !  

```'>
				<Param name='float alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxNonLoopedColour' func='yes'>
			<Overload retVal='void' descr='// 0x26143A59EF48B262
// 0x7B689E20
GRAPHICS::SET_PARTICLE_FX_NON_LOOPED_COLOUR(float r, float g, float b);
----------------------------------------------------------------------------------------------------
```

only works on some fx&apos;s  

```'>
				<Param name='float r' />
				<Param name='float g' />
				<Param name='float b' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParticleFxShootoutBoat' func='yes'>
			<Overload retVal='void' descr='// 0x96EF97DAEB89BEF5
// 0xD938DEE0
GRAPHICS::SET_PARTICLE_FX_SHOOTOUT_BOAT(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScaleformMovieAsNoLongerNeeded' func='yes'>
			<Overload retVal='void' descr='// 0x1D132D614DD86811
// 0x5FED3BA1
GRAPHICS::SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(int* scaleformHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* scaleformHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScaleformMovieToUseSystemTime' func='yes'>
			<Overload retVal='void' descr='// 0x6D8EB211944DCE08
// 0x18C9DE8D
GRAPHICS::SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME(int scaleform, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int scaleform' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScriptGfxAlign' func='yes'>
			<Overload retVal='void' descr='// 0xB8A850F20A067EB6
// 0x228A2598
GRAPHICS::SET_SCRIPT_GFX_ALIGN(int horizontalAlign, int verticalAlign);
----------------------------------------------------------------------------------------------------
This function anchors script draws to a side of the safe zone. This needs to be called to make the i
nterface

independent of the player&apos;s safe zone configuration.

These values are equivalent to `alignX` and `alignY` in `common:/data/ui/frontend.xml`, which can be
 used as a baseline

for default alignment.

  

Valid values for `horizontalAlign`, from original documentation:

* **C (67)** - Center: DRAW_TEXT starts in the middle of the screen, while DRAW_RECT starts on the r
ight; both move with

  the right side of the screen.

* **L (76)** - Left: Anchors to the left side, DRAW_RECT starts on the left side of the screen, same
 as DRAW_TEXT when

  centered.

* **R (82)** - Right: DRAW_TEXT starts on the left side (normal 0,0), while DRAW_RECT starts some sh
ort distance away

  from the right side of the screen, both move with the right side of the screen.

  

Valid values for `verticalAlign`, from original documentation:

* **B (66)** - Bottom: DRAW_RECT starts about as far as the middle of the map from the bottom, while
 DRAW_TEXT is about

  rather centered.

* **C (67)** - Center: It starts at a certain distance from the bottom, but the distance is fixed, t
he distance is

  different from 66.

* **T (84)** - Top: Anchors to the top, DRAW_RECT starts on the top of the screen, DRAW_TEXT just be
low it.

Using any other value (including 0) will result in the safe zone not being taken into account for th
is draw. The

canonical value for this is &apos;I&apos; (73).

For example, you can use `SET_SCRIPT_GFX_ALIGN(0, 84)` to only scale on the Y axis (to the top), but
 not change the X

axis.

To reset the value, use `RESET_SCRIPT_GFX_ALIGN`.

----------------------------------------------------------------------------------------------------

Old name: _SET_SCREEN_DRAW_POSITION
Old name: _SCREEN_DRAW_POSITION_BEGIN'>
				<Param name='int horizontalAlign' />
				<Param name='int verticalAlign' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_SCREEN_DRAW_POSITION' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetScriptGfxAlign' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='_SCREEN_DRAW_POSITION_BEGIN' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetScriptGfxAlign' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetScriptGfxAlignParams' func='yes'>
			<Overload retVal='void' descr='// 0xF5A2C681787E579D
// 0x76C641E4
GRAPHICS::SET_SCRIPT_GFX_ALIGN_PARAMS(float x, float y, float w, float h);
----------------------------------------------------------------------------------------------------
Sets the draw offset/calculated size for `SET_SCRIPT_GFX_ALIGN`. If using any alignment other than l
eft/top, the game

expects the width/height to be configured using this native in order to get a proper starting positi
on for the draw

command.

----------------------------------------------------------------------------------------------------

Old name: _SCREEN_DRAW_POSITION_RATIO'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float w' />
				<Param name='float h' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SCREEN_DRAW_POSITION_RATIO' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetScriptGfxAlignParams' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetScriptGfxDrawBehindPausemenu' func='yes'>
			<Overload retVal='void' descr='// 0xC6372ECD45D73BCD
// 0xF8FBCC25
GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(BOOL flag);
----------------------------------------------------------------------------------------------------
Sets a flag defining whether or not script draw commands should continue being drawn behind the paus
e

menu. This is usually used for TV channels and other draw commands that are used with a world render
 target.'>
				<Param name='BOOL flag' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScriptGfxDrawOrder' func='yes'>
			<Overload retVal='void' descr='// 0x61BB1D9B3A95D802
// 0xADF81D24
GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(int order);
----------------------------------------------------------------------------------------------------
Sets the draw order for script draw commands.

Examples from decompiled scripts:  

```c

GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);  

GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v_4, v_5, v_6, a_0._f172, 0);  

GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);  

GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_2D_LAYER
Old name: _SET_UI_LAYER'>
				<Param name='int order' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_2D_LAYER' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetScriptGfxDrawOrder' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='_SET_UI_LAYER' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetScriptGfxDrawOrder' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetSeethrough' func='yes'>
			<Overload retVal='void' descr='// 0x7E08924259E08CE0
// 0x74D4995C
GRAPHICS::SET_SEETHROUGH(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Toggles Heatvision on/off.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetStreamedTextureDictAsNoLongerNeeded' func='yes'>
			<Overload retVal='void' descr='// 0xBE2CACCF5A8AA805
// 0xF07DDA38
GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(char* textureDict);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* textureDict' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTimecycleModifier' func='yes'>
			<Overload retVal='void' descr='// 0x2C933ABF17A1DF41
// 0xA81F3638
GRAPHICS::SET_TIMECYCLE_MODIFIER(char* modifierName);
----------------------------------------------------------------------------------------------------
```

Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. &quot;time
cycle_mods_1.xml&quot;)  

Parameters:  

modifierName - The modifier to load (e.g. &quot;V_FIB_IT3&quot;, &quot;scanline_cam&quot;, etc.)  

For a full list, see here: pastebin.com/kVPwMemE  

```'>
				<Param name='char* modifierName' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTimecycleModifierStrength' func='yes'>
			<Overload retVal='void' descr='// 0x82E7FFCD5B2326B3
// 0x458F4F45
GRAPHICS::SET_TIMECYCLE_MODIFIER_STRENGTH(float strength);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float strength' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTrackedPointInfo' func='yes'>
			<Overload retVal='void' descr='// 0x164ECBB3CF750CB0
// 0x28689AA4
GRAPHICS::SET_TRACKED_POINT_INFO(int point, float x, float y, float z, float radius);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int point' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTransitionTimecycleModifier' func='yes'>
			<Overload retVal='void' descr='// 0x3BCF567485E1971C
// 0xBB2BA72A
GRAPHICS::SET_TRANSITION_TIMECYCLE_MODIFIER(char* modifierName, float transition);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/kVPwMemE  

```'>
				<Param name='char* modifierName' />
				<Param name='float transition' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTvAudioFrontend' func='yes'>
			<Overload retVal='void' descr='// 0x113D2C5DC57E1774
// 0x2E0DFA35
GRAPHICS::SET_TV_AUDIO_FRONTEND(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Might be more appropriate in AUDIO?  

Rockstar made it like this.  

Probably changes tvs from being a 3d audio to being &quot;global&quot; audio  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTvChannel' func='yes'>
			<Overload retVal='void' descr='// 0xBAABBB23EB6E484E
// 0x41A8A627
GRAPHICS::SET_TV_CHANNEL(int channel);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int channel' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTvVolume' func='yes'>
			<Overload retVal='void' descr='// 0x2982BF73F66E9DDC
// 0xF3504F4D
GRAPHICS::SET_TV_VOLUME(float volume);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float volume' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxLoopedAtCoord' func='yes'>
			<Overload retVal='int' descr='// 0xE184F4F0DC5910E7
// 0xD348E3E6
GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD(char* effectName, float x, float y, float z, float xRot, float
----------------------------------------------------------------------------------------------------
t, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis, BOOL p11);

```

```

GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD(&quot;scr_fbi_falling_debris&quot;, 93.7743f, -749.4572f, 70.86904
f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)  

p11 seems to be always 0  

```'>
				<Param name='char* effectName' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float xRot' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxLoopedOnEntity' func='yes'>
			<Overload retVal='int' descr='// 0x1AE42C1660FD6517
// 0x0D06FF62
GRAPHICS::START_PARTICLE_FX_LOOPED_ON_ENTITY(char* effectName, Entity entity, float xOffset, float yOffset
----------------------------------------------------------------------------------------------------
oat zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis
);

```

```

list: pastebin.com/N9unUFWY  

```'>
				<Param name='char* effectName' />
				<Param name='Entity entity' />
				<Param name='float xOffset' />
				<Param name='float yOffset' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxLoopedOnEntityBone' func='yes'>
			<Overload retVal='int' descr='// 0xC6EB449E33977F0B
GRAPHICS::_START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(char* effectName, Entity entity, float xOffset, float y
----------------------------------------------------------------------------------------------------
et, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, B
OOL yAxis, BOOL zAxis);

```

```

Console Hash: 0x23BF0F9B  

```'>
				<Param name='char* effectName' />
				<Param name='Entity entity' />
				<Param name='float xOffset' />
				<Param name='float y' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxLoopedOnEntityBone_2' func='yes'>
			<Overload retVal='int' descr='// 0xDDE23F30CC5A0F03
GRAPHICS::_START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE_2(char* effectName, Entity entity, float xOffset, float
----------------------------------------------------------------------------------------------------
fset, float zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis,
 BOOL yAxis, BOOL zAxis);

```

```

Console Hash: 0xF478EFCF  

network fx  

```'>
				<Param name='char* effectName' />
				<Param name='Entity entity' />
				<Param name='float xOffset' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxLoopedOnEntity_2' func='yes'>
			<Overload retVal='int' descr='// 0x6F60E89A7B64EE1D
// 0x110752B2
GRAPHICS::_START_PARTICLE_FX_LOOPED_ON_ENTITY_2(char* effectName, Entity entity, float xOffset, float yOff
----------------------------------------------------------------------------------------------------
float zOffset, float xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zA
xis);

```

```

network fx  

```'>
				<Param name='char* effectName' />
				<Param name='Entity entity' />
				<Param name='float xOffset' />
				<Param name='float yOff' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxLoopedOnPedBone' func='yes'>
			<Overload retVal='int' descr='// 0xF28DA9F38CD1787C
// 0xF8FC196F
GRAPHICS::START_PARTICLE_FX_LOOPED_ON_PED_BONE(char* effectName, Ped ped, float xOffset, float yOffset, fl
----------------------------------------------------------------------------------------------------
zOffset, float xRot, float yRot, float zRot, int boneIndex, float scale, BOOL xAxis, BOOL yAxis,
 BOOL zAxis);

```'>
				<Param name='char* effectName' />
				<Param name='Ped ped' />
				<Param name='float xOffset' />
				<Param name='float yOffset' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxNonLoopedAtCoord' func='yes'>
			<Overload retVal='int' descr='// 0x25129531F77B9ED3
// 0xDD79D679
GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD(char* effectName, float xPos, float yPos, float zPos, floa
----------------------------------------------------------------------------------------------------
ot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis);

```

```

GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD(&quot;scr_paleto_roof_impact&quot;, -140.8576f, 6420.789f, 41.
1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);  

Axis - Invert Axis Flags  

list: pastebin.com/N9unUFWY  

-------------------------------------------------------------------  

C#  

Function.Call&lt;int&gt;(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.  

char *effectname = This is an in-game effect name, for e.g. &quot;scr_fbi4_trucks_crash&quot; is used to give 
the effects when truck crashes etc  

float x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to t
ake place at, so declare the ordinates  

float xrot, yrot, zrot = Again simple? just mention the value in case if you want the effect to rota
te.  

float scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f  

bool xaxis, yaxis, zaxis = To bool the axis values.  

example:  

Function.Call&lt;int&gt;(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, &quot;scr_fbi4_trucks_crash&quot;, GTA.Game.Pla
yer.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z
 + 4f, 0, 0, 0, 5.5f, 0, 0, 0);  

```'>
				<Param name='char* effectName' />
				<Param name='float xPos' />
				<Param name='float yPos' />
				<Param name='float zPos' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxNonLoopedAtCoord_2' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF56B8137DF10135D
// 0x633F8C48
GRAPHICS::_START_PARTICLE_FX_NON_LOOPED_AT_COORD_2(char* effectName, float xPos, float yPos, float zPos, 
----------------------------------------------------------------------------------------------------
t xRot, float yRot, float zRot, float scale, BOOL xAxis, BOOL yAxis, BOOL zAxis);

```

```

network fx  

```'>
				<Param name='char* effectName' />
				<Param name='float xPos' />
				<Param name='float yPos' />
				<Param name='float zPos' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxNonLoopedOnEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0D53A3B8DA0809D2
// 0x9604DAD4
GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_ENTITY(char* effectName, Entity entity, float offsetX, float of
----------------------------------------------------------------------------------------------------
Y, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BOOL 
axisZ);

```

```

Starts a particle effect on an entity for example your player.  

List: pastebin.com/N9unUFWY  

Example:  

C#:  

Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, &quot;scr_rcbarry2&quot;);                     Function.Call(Hash
._SET_PTFX_ASSET_NEXT_CALL, &quot;scr_rcbarry2&quot;);                             Function.Call(Hash.START_PA
RTICLE_FX_NON_LOOPED_ON_ENTITY, &quot;scr_clown_appears&quot;, Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0
, 0.0, 1.0, false, false, false);  

Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE  

however it uses -1 for the specified bone index, so it should be possible to start a non looped fx o
n an entity bone using that native  

```'>
				<Param name='char* effectName' />
				<Param name='Entity entity' />
				<Param name='float offsetX' />
				<Param name='float of' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxNonLoopedOnEntity_2' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC95EB1DB6E92113D
GRAPHICS::_START_PARTICLE_FX_NON_LOOPED_ON_ENTITY_2(char* effectName, Entity entity, float offsetX, float
----------------------------------------------------------------------------------------------------
setY, float offsetZ, float rotX, float rotY, float rotZ, float scale, BOOL axisX, BOOL axisY, BO
OL axisZ);

```

```

Console hash: 0x469A2B4A  

network fx  

```'>
				<Param name='char* effectName' />
				<Param name='Entity entity' />
				<Param name='float offsetX' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxNonLoopedOnPedBone' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0E7E72961BA18619
// 0x53DAEF4E
GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(char* effectName, Ped ped, float offsetX, float offset
----------------------------------------------------------------------------------------------------
loat offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOOL a
xisY, BOOL axisZ);

```

```

GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(&quot;scr_sh_bong_smoke&quot;, PLAYER::PLAYER_PED_ID(), -0.
025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);  

Axis - Invert Axis Flags  

list: pastebin.com/N9unUFWY  

```'>
				<Param name='char* effectName' />
				<Param name='Ped ped' />
				<Param name='float offsetX' />
				<Param name='float offset' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartParticleFxNonLoopedOnPedBone_2' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA41B6A43642AC2CF
// 0x161780C1
GRAPHICS::_START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE_2(char* effectName, Ped ped, float offsetX, float off
----------------------------------------------------------------------------------------------------
, float offsetZ, float rotX, float rotY, float rotZ, int boneIndex, float scale, BOOL axisX, BOO
L axisY, BOOL axisZ);

```

```

network fx  

```'>
				<Param name='char* effectName' />
				<Param name='Ped ped' />
				<Param name='float offsetX' />
				<Param name='float off' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartScreenEffect' func='yes'>
			<Overload retVal='void' descr='// 0x2206BF9A37B7F724
// 0x1D980479
GRAPHICS::_START_SCREEN_EFFECT(char* effectName, int duration, BOOL looped);
----------------------------------------------------------------------------------------------------
```

playLength - is how long to play the effect for in milliseconds. If 0, it plays the default length  


if loop is true, the effect wont stop until you call _STOP_SCREEN_EFFECT on it. (only loopable effec
ts)  

Example and list of screen FX: www.pastebin.com/dafBAjs0  

```'>
				<Param name='char* effectName' />
				<Param name='int duration' />
				<Param name='BOOL looped' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopAllScreenEffects' func='yes'>
			<Overload retVal='void' descr='// 0xB4EDDC19532BFB85
// 0x4E6D875B
GRAPHICS::_STOP_ALL_SCREEN_EFFECTS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='StopParticleFxLooped' func='yes'>
			<Overload retVal='void' descr='// 0x8F75998877616996
// 0xD245455B
GRAPHICS::STOP_PARTICLE_FX_LOOPED(int ptfxHandle, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p1 is always 0 in the native scripts  

```'>
				<Param name='int ptfxHandle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopScreenEffect' func='yes'>
			<Overload retVal='void' descr='// 0x068E835A1D0DC0E3
// 0x06BB5CDA
GRAPHICS::_STOP_SCREEN_EFFECT(char* effectName);
----------------------------------------------------------------------------------------------------
```

Example and list of screen FX: www.pastebin.com/dafBAjs0  

```'>
				<Param name='char* effectName' />
			</Overload>
		</KeyWord>
		<KeyWord name='TransitionFromBlurred' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEFACC8AEF94430D5
// 0x46617502
GRAPHICS::_TRANSITION_FROM_BLURRED(float transitionTime);
----------------------------------------------------------------------------------------------------
```

time in ms to transition from fully blurred to normal  

```'>
				<Param name='float transitionTime' />
			</Overload>
		</KeyWord>
		<KeyWord name='TransitionToBlurred' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA328A24AAA6B7FDC
// 0x5604B890
GRAPHICS::_TRANSITION_TO_BLURRED(float transitionTime);
----------------------------------------------------------------------------------------------------
```

time in ms to transition to fully blurred screen  

```'>
				<Param name='float transitionTime' />
			</Overload>
		</KeyWord>
		<KeyWord name='UseParticleFxAssetNextCall' func='yes'>
			<Overload retVal='void' descr='// 0x6C38AF3693A69A91
// 0x9C720B61
GRAPHICS::_USE_PARTICLE_FX_ASSET_NEXT_CALL(char* name);
----------------------------------------------------------------------------------------------------
```

From the b678d decompiled scripts:  

GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(&quot;FM_Mission_Controler&quot;);  

GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(&quot;scr_apartment_mp&quot;);  

GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(&quot;scr_indep_fireworks&quot;);  

GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(&quot;scr_mp_cig_plane&quot;);  

GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(&quot;scr_mp_creator&quot;);  

GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(&quot;scr_ornate_heist&quot;);  

GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL(&quot;scr_prison_break_heist_station&quot;);  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_PTFX_ASSET_NEXT_CALL'>
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_PTFX_ASSET_NEXT_CALL' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: UseParticleFxAssetNextCall' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='WashDecalsFromVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x5B712761429DBC14
// 0x2929F11A
GRAPHICS::WASH_DECALS_FROM_VEHICLE(Vehicle vehicle, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='WashDecalsInRange' func='yes'>
			<Overload retVal='void' descr='// 0x9C30613D50A6ADEF
// 0xDEECBC57
GRAPHICS::WASH_DECALS_IN_RANGE(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='AbortTextChat' func='yes'>
			<Overload retVal='void' descr='// 0x1AC8F4AD40E22127
HUD::_ABORT_TEXT_CHAT();
----------------------------------------------------------------------------------------------------
```

Aborts the current message in the text chat.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='ActivateFrontendMenu' func='yes'>
			<Overload retVal='void' descr='// 0xEF01D36B9C9D0C7B
// 0x01D83872
HUD::ACTIVATE_FRONTEND_MENU(Hash menuhash, BOOL Toggle_Pause, int component);
----------------------------------------------------------------------------------------------------
```

Does stuff like this:  

gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617  

Example:  

int GetHash = GET_HASH_KEY(&quot;fe_menu_version_corona_lobby&quot;);  

ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);  

BOOL p1 is a toggle to define the game in pause.  

int p2 is unknown but -1 always works, not sure why though.  

[30/03/2017] ins1de :  

the int p2 is actually a component variable. When the pause menu is visible, it opens the tab relate
d to it.  

Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);  

Result : Opens the &quot;Online&quot; tab without pausing the menu, with -1 it opens the map.  

```'>
				<Param name='Hash menuhash' />
				<Param name='BOOL Toggle_Pause' />
				<Param name='int component' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddBlipForCoord' func='yes'>
			<Overload retVal='Blip' descr='// 0x5A039BB0BCA604B6
// 0xC6F43D0E
HUD::ADD_BLIP_FOR_COORD(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Creates an orange ( default ) Blip-object. Returns a Blip-object which can then be modified.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddBlipForEntity' func='yes'>
			<Overload retVal='Blip' descr='// 0x5CDE92C702A8FCE7
// 0x30822554
HUD::ADD_BLIP_FOR_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
```

Returns red ( default ) blip attached to entity.  

Example:  

Blip blip; //Put this outside your case or option  

blip = UI::ADD_BLIP_FOR_ENTITY(YourPedOrBodyguardName);  

UI::SET_BLIP_AS_FRIENDLY(blip, true);  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddBlipForPickup' func='yes'>
			<Overload retVal='Blip' descr='// 0xBE339365C863BD36
// 0x16693C3A
HUD::ADD_BLIP_FOR_PICKUP(Pickup pickup);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Pickup pickup' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddBlipForRadius' func='yes'>
			<Overload retVal='Blip' descr='// 0x46818D79B1F7499A
// 0x4626756C
HUD::ADD_BLIP_FOR_RADIUS(float posX, float posY, float posZ, float radius);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddFrontendMenuContext' func='yes'>
			<Overload retVal='void' descr='// 0xDD564BDD0472C936
// 0x9FE8FD5E
HUD::_ADD_FRONTEND_MENU_CONTEXT(Hash hash);
----------------------------------------------------------------------------------------------------
```

Seems to add/set the current menu context (to show/hide buttons?)  

Pausemenu.xml:  

&lt;Contexts&gt;*ALL*, DISPLAY_CORONA_BUTTONS, *NONE*, BET_LOCKED, BET_AVAILABLE, SCROLL_OPTION&lt;/Contexts&gt;
  

Code:  

if (...) {  

    sub_bbd34(a_0, 0, &quot;FM_BET_HELP&quot;);  

    UI::_DD564BDD0472C936(${bet_available}); // This native  

    UI::OBJECT_DECAL_TOGGLE(${bet_locked});  

} else {   

    sub_bbd34(a_0, 0, &quot;&quot;);  

    UI::OBJECT_DECAL_TOGGLE(${bet_available});  

    UI::_DD564BDD0472C936(${bet_locked}); // This native  

}  

OBJECT_DECAL_TOGGLE seems to remove a context, It also has a hash collision  

// Old  

Scripts do not make this native&apos;s purpose clear. However, this native most likely has something to d
o with decals since in nearly every instance, &quot;OBJECT_DECAL_TOGGLE&quot; is called prior.  

```'>
				<Param name='Hash hash' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddNextMessageToPreviousBriefs' func='yes'>
			<Overload retVal='void' descr='// 0x60296AF4BA14ABC5
// 0xB58B25BD
HUD::ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(BOOL p0);
----------------------------------------------------------------------------------------------------
```

hash collision?  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddTextComponentAppTitle' func='yes'>
			<Overload retVal='void' descr='// 0x761B77454205A61D
// 0x65E1D404
HUD::_ADD_TEXT_COMPONENT_APP_TITLE(char* p0, int p1);
----------------------------------------------------------------------------------------------------
```

p1 was always -1.  

used for phone applications; scaleform  

```'>
				<Param name='char* p0' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddTextComponentFloat' func='yes'>
			<Overload retVal='void' descr='// 0xE7DCB5B874BCD96E
// 0x24D78013
HUD::ADD_TEXT_COMPONENT_FLOAT(float value, int decimalPlaces);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float value' />
				<Param name='int decimalPlaces' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddTextComponentFormattedInteger' func='yes'>
			<Overload retVal='void' descr='// 0x0E4C749FF9DE9CC4
// 0x12929BDF
HUD::ADD_TEXT_COMPONENT_FORMATTED_INTEGER(int value, BOOL commaSeparated);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int value' />
				<Param name='BOOL commaSeparated' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddTextComponentInteger' func='yes'>
			<Overload retVal='void' descr='// 0x03B504CF259931BC
// 0xFE272A57
HUD::ADD_TEXT_COMPONENT_INTEGER(int value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddTextComponentScaleform' func='yes'>
			<Overload retVal='void' descr='// 0x5F68520888E69014
// 0x0829A799
HUD::_ADD_TEXT_COMPONENT_SCALEFORM(char* p0);
----------------------------------------------------------------------------------------------------
```

This native (along with 0x6C188BE134E074AA and 0x94CF4AC034C9C986) do not actually filter anything. 
They simply add the provided text (as of 944)  

did you even check the disassembly?  

&gt; Do you even lift bro? The PLAYER_NAME and WEBSITE natives are the correct names, it doesn&apos;t matter
 if they&apos;re filtered or not. Blame R* for that matter. Hashes don&apos;t lie, and it&apos;s extremely unlikely
 the validated names are collisions (what are the odds??)  

```

----------------------------------------------------------------------------------------------------

Old name: _ADD_TEXT_COMPONENT_STRING3'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='_ADD_TEXT_COMPONENT_STRING3' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: AddTextComponentScaleform' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='AddTextComponentSubstringBlipName' func='yes'>
			<Overload retVal='void' descr='// 0x80EAD8E2E1D5D52E
// 0x5DE98F0A
HUD::ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddTextComponentSubstringPlayerName' func='yes'>
			<Overload retVal='void' descr='// 0x6C188BE134E074AA
// 0x27A244D8
HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(char* text);
----------------------------------------------------------------------------------------------------
```

• Description :  

Processes a string and removes the player name(max len 99)  

You can use this function to create notifications/subtitles  

		--------------------------------------------------------------------  

		• Usage(Colors) :  

~r~ = red  

~y~ = yellow  

~g~ = green  

~b~ = light blue  

~w~ = white  

~p~ = purple  

~n~ = new line  

		--------------------------------------------------------------------  

		• Usage(Input) :  

		~INPUT_CONTEXT~ will show button symbol (regarding last input device -&gt; keyboard/gamepad)  

		example:  

		string info = &quot;Context action is assigned to ~INPUT_CONTEXT~!&quot;;  

		--------------------------------------------------------------------  

		• Example (C++):  

		void ShowNotification(char *text)    

		{   

       UI::_SET_NOTIFICATION_TEXT_ENTRY(&quot;STRING&quot;);   

       UI::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);   

       UI::_DRAW_NOTIFICATION(FALSE, FALSE); // if first param = 1, the message flashes 1 or 2 times
  

		}  

		• Colors example :   

		string red = &quot;~r~Red test&quot;;  

		string white_and_yellow = &quot;~w~White and ~y~yellow&quot;;  

		string text_with_double_line = &quot;First line.~n~Second line&quot;;  

		This native (along with 0x5F68520888E69014 and 0x94CF4AC034C9C986) do not actually filter anything
. They simply add the provided text (as of 944)  

		Used to be known as _ADD_TEXT_COMPONENT_STRING  

```

----------------------------------------------------------------------------------------------------

Old name: _ADD_TEXT_COMPONENT_STRING'>
				<Param name='char* text' />
			</Overload>
		</KeyWord>
		<KeyWord name='_ADD_TEXT_COMPONENT_STRING' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: AddTextComponentSubstringPlayerName' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='AddTextComponentSubstringTextLabel' func='yes'>
			<Overload retVal='void' descr='// 0xC63CD5D2920ACBE7
// 0xDCE05406
HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(char* labelName);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _ADD_TEXT_COMPONENT_ITEM_STRING'>
				<Param name='char* labelName' />
			</Overload>
		</KeyWord>
		<KeyWord name='_ADD_TEXT_COMPONENT_ITEM_STRING' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: AddTextComponentSubstringTextLabel' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='AddTextComponentSubstringTextLabelHashKey' func='yes'>
			<Overload retVal='void' descr='// 0x17299B63C7683A2B
// 0x150E03B6
HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(Hash gxtEntryHash);
----------------------------------------------------------------------------------------------------
```

It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY(&quot;ES_
HELP&quot;), adds &quot;Continue&quot;. Just uses a text labels hash key  

```'>
				<Param name='Hash gxtEntryHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddTextComponentSubstringTime' func='yes'>
			<Overload retVal='void' descr='// 0x1115F16B8AB9E8BF
// 0x135B3CD0
HUD::ADD_TEXT_COMPONENT_SUBSTRING_TIME(int timestamp, int flags);
----------------------------------------------------------------------------------------------------
```

Adds a timer (e.g. &quot;00:00:00:000&quot;). The appearance of the timer depends on the flags, which needs mo
re research.  

```'>
				<Param name='int timestamp' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddTextComponentSubstringWebsite' func='yes'>
			<Overload retVal='void' descr='// 0x94CF4AC034C9C986
// 0xC736999E
HUD::ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE(char* website);
----------------------------------------------------------------------------------------------------
```

This native (along with 0x5F68520888E69014 and 0x6C188BE134E074AA) do not actually filter anything. 
They simply add the provided text (as of 944)  

```

----------------------------------------------------------------------------------------------------

Old name: _ADD_TEXT_COMPONENT_STRING2'>
				<Param name='char* website' />
			</Overload>
		</KeyWord>
		<KeyWord name='_ADD_TEXT_COMPONENT_STRING2' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: AddTextComponentSubstringWebsite' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='AddTrevorRandomModifier' func='yes'>
			<Overload retVal='BOOL' descr='// 0x595B5178E412E199
// 0x63959059
HUD::ADD_TREVOR_RANDOM_MODIFIER(int gamerTagId);
----------------------------------------------------------------------------------------------------
```

Hash collision!  

_IS_MP_GAMER_TAG_ACTIVE_2  

```'>
				<Param name='int gamerTagId' />
			</Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandBusyString' func='yes'>
			<Overload retVal='void' descr='// 0xABA17D7CE615ADBF
// 0xCB7C8994
HUD::_BEGIN_TEXT_COMMAND_BUSY_STRING(char* string);
----------------------------------------------------------------------------------------------------
```

Initializes the text entry for the the text next to a loading prompt. All natives for for building U
I texts can be used here  

BEGIN_TEXT_COMMAND_PRINT  

e.g  

void StartLoadingMessage(char *text, int spinnerType = 3)  

	{  

_SET_LOADING_PROMPT_TEXT_ENTRY(&quot;STRING&quot;);  

ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  

_SHOW_LOADING_PROMPT(spinnerType);  

	}  

/*OR*/  

	void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)  

	{  

_SET_LOADING_PROMPT_TEXT_ENTRY(&quot;STRING&quot;);  

ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  

_SHOW_LOADING_PROMPT(spinnerType);  

WAIT(timeMs);  

_REMOVE_LOADING_PROMPT();  

	}  

These are some localized strings used in the loading spinner.  

&quot;PM_WAIT&quot;                   = Please Wait  

&quot;CELEB_WPLYRS&quot;              = Waiting For Players.  

&quot;CELL_SPINNER2&quot;             = Scanning storage.  

&quot;ERROR_CHECKYACHTNAME&quot; = Registering your yacht&apos;s name. Please wait.  

&quot;ERROR_CHECKPROFANITY&quot;   = Checking your text for profanity. Please wait.  

&quot;FM_COR_AUTOD&quot;                        = Just spinner no text  

&quot;FM_IHELP_WAT2&quot;                        = Waiting for other players  

&quot;FM_JIP_WAITO&quot;                            = Game options are being set  

&quot;FMMC_DOWNLOAD&quot;                    = Downloading  

&quot;FMMC_PLYLOAD&quot;                         = Loading  

&quot;FMMC_STARTTRAN&quot;                    = Launching session  

&quot;HUD_QUITTING&quot;                           =  Quiting session  

&quot;KILL_STRIP_IDM&quot;                         = Waiting for to accept  

&quot;MP_SPINLOADING&quot;                      = Loading  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_LOADING_PROMPT_TEXT_ENTRY'>
				<Param name='char* string' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_LOADING_PROMPT_TEXT_ENTRY' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: BeginTextCommandBusyString' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandClearPrint' func='yes'>
			<Overload retVal='void' descr='// 0xE124FA80A759019C
// 0x550665AE
HUD::BEGIN_TEXT_COMMAND_CLEAR_PRINT(char* text);
----------------------------------------------------------------------------------------------------
```

clears a print text command with this text  

```'>
				<Param name='char* text' />
			</Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandDisplayHelp' func='yes'>
			<Overload retVal='void' descr='// 0x8509B634FBE7DA11
// 0xB245FC10
HUD::BEGIN_TEXT_COMMAND_DISPLAY_HELP(char* inputType);
----------------------------------------------------------------------------------------------------
```

Used to be known as _SET_TEXT_COMPONENT_FORMAT  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_TEXT_COMPONENT_FORMAT'>
				<Param name='char* inputType' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_TEXT_COMPONENT_FORMAT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: BeginTextCommandDisplayHelp' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandDisplayText' func='yes'>
			<Overload retVal='void' descr='// 0x25FBB336DF1804CB
// 0x3E35563E
HUD::BEGIN_TEXT_COMMAND_DISPLAY_TEXT(char* text);
----------------------------------------------------------------------------------------------------
```

The following were found in the decompiled script files:  

STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMO
D_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3  

ESDOLLA   

ESMINDOLLA - cash (negative)  

Used to be known as _SET_TEXT_ENTRY  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_TEXT_ENTRY'>
				<Param name='char* text' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_TEXT_ENTRY' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: BeginTextCommandDisplayText' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandIsMessageDisplayed' func='yes'>
			<Overload retVal='void' descr='// 0x853648FD1063A213
// 0xDD524A11
HUD::BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED(char* text);
----------------------------------------------------------------------------------------------------
```

nothin doin.   

BOOL Message(char* text)  

	{  

BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED(&quot;STRING&quot;);  

ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  

return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();  

	}  

```'>
				<Param name='char* text' />
			</Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandIsThisHelpMessageBeingDisplayed' func='yes'>
			<Overload retVal='void' descr='// 0x0A24DA3A41B718F5
// 0x00E20F2D
HUD::BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(char* labelName);
----------------------------------------------------------------------------------------------------
```

BOOL IsContextActive(char *ctx)  

{  

	BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(ctx);  

	return END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);  

}  

```'>
				<Param name='char* labelName' />
			</Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandLineCount' func='yes'>
			<Overload retVal='void' descr='// 0x521FB041D93DD0E4
// 0x94B82066
HUD::_BEGIN_TEXT_COMMAND_LINE_COUNT(char* entry);
----------------------------------------------------------------------------------------------------
```

get&apos;s line count  

int GetLineCount(char *text, float x, float y)  

	{  

_BEGIN_TEXT_COMMAND_LINE_COUNT(&quot;STRING&quot;);  

                ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  

return _END_TEXT_COMMAND_GET_LINE_COUNT(x, y);  

	}  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_TEXT_GXT_ENTRY'>
				<Param name='char* entry' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_TEXT_GXT_ENTRY' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: BeginTextCommandLineCount' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandObjective' func='yes'>
			<Overload retVal='void' descr='// 0x23D69E0465570028
// 0x0E103475
HUD::_BEGIN_TEXT_COMMAND_OBJECTIVE(char* p0);
----------------------------------------------------------------------------------------------------
```

nothin doin.   

void message()  

	{  

_BEGIN_TEXT_COMMAND_OBJECTIVE(&quot;AHT_RTIT&quot;);  

_END_TEXT_COMMAND_OBJECTIVE(0);  

	}  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandPrint' func='yes'>
			<Overload retVal='void' descr='// 0xB87A37EEB7FAA67D
// 0xF42C43C7
HUD::BEGIN_TEXT_COMMAND_PRINT(char* GxtEntry);
----------------------------------------------------------------------------------------------------
```

Used to be known as _SET_TEXT_ENTRY_2  

void ShowSubtitle(char *text)  

{  

	BEGIN_TEXT_COMMAND_PRINT(&quot;STRING&quot;);  

	ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  

	END_TEXT_COMMAND_PRINT(2000, 1);  

}  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_TEXT_ENTRY_2'>
				<Param name='char* GxtEntry' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_TEXT_ENTRY_2' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: BeginTextCommandPrint' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandSetBlipName' func='yes'>
			<Overload retVal='void' descr='// 0xF9113A30DE5C6670
// 0xF4C211F6
HUD::BEGIN_TEXT_COMMAND_SET_BLIP_NAME(char* gxtentry);
----------------------------------------------------------------------------------------------------
```

example:  

UI::BEGIN_TEXT_COMMAND_SET_BLIP_NAME(&quot;STRING&quot;);  

UI::_ADD_TEXT_COMPONENT_STRING(&quot;Name&quot;);  

UI::END_TEXT_COMMAND_SET_BLIP_NAME(blip);  

```'>
				<Param name='char* gxtentry' />
			</Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandTimer' func='yes'>
			<Overload retVal='void' descr='// 0x8F9EE5687F8EECCD
// 0xBF855650
HUD::_BEGIN_TEXT_COMMAND_TIMER(char* p0);
----------------------------------------------------------------------------------------------------
```

void message(char *text)  

{  

	_BEGIN_TEXT_COMMAND_TIMER(&quot;STRING&quot;);  

	ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  

	_END_TEXT_COMMAND_TIMER(0);  

}  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='BeginTextCommandWidth' func='yes'>
			<Overload retVal='void' descr='// 0x54CE8AC98E120CAB
// 0x51E7A037
HUD::_BEGIN_TEXT_COMMAND_WIDTH(char* text);
----------------------------------------------------------------------------------------------------
```

Example:  

_BEGIN_TEXT_COMMAND_WIDTH(&quot;NUMBER&quot;);  

ADD_TEXT_COMPONENT_FLOAT(69.420f, 2);  

float width = _END_TEXT_COMMAND_GET_WIDTH(true);  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_TEXT_ENTRY_FOR_WIDTH'>
				<Param name='char* text' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_TEXT_ENTRY_FOR_WIDTH' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: BeginTextCommandWidth' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='BlockWeaponWheelThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x0AFC4AF510774B47
// 0xB26FED2B
HUD::_BLOCK_WEAPON_WHEEL_THIS_FRAME();
----------------------------------------------------------------------------------------------------
```

calling this each frame, it stops the player from receiving a weapon via the weapon wheel.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='CenterPlayerOnRadarThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x6D14BFDC33B34F55
// 0x334EFD46
HUD::_CENTER_PLAYER_ON_RADAR_THIS_FRAME();
----------------------------------------------------------------------------------------------------
```

When calling this, the current frame will have the players &quot;arrow icon&quot; be focused on the dead cente
r of the radar.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAdditionalText' func='yes'>
			<Overload retVal='void' descr='// 0x2A179DF17CCF04CD
// 0x518141E0
HUD::CLEAR_ADDITIONAL_TEXT(int p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAllHelpMessages' func='yes'>
			<Overload retVal='void' descr='// 0x6178F68A87A4D3A0
// 0x9E5D9198
HUD::CLEAR_ALL_HELP_MESSAGES();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearBrief' func='yes'>
			<Overload retVal='void' descr='// 0x9D292F73ADBD9313
// 0x9F75A929
HUD::CLEAR_BRIEF();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearFloatingHelp' func='yes'>
			<Overload retVal='void' descr='// 0x50085246ABD3FEFA
// 0xB181F88F
HUD::CLEAR_FLOATING_HELP(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p0 looks like int in script  

```'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearGpsFlags' func='yes'>
			<Overload retVal='void' descr='// 0x21986729D6A3A830
// 0x056AFCE6
HUD::CLEAR_GPS_FLAGS();
----------------------------------------------------------------------------------------------------
```

Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.  

Doesn&apos;t seem like the flags are actually read by the game at all.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearGpsPlayerWaypoint' func='yes'>
			<Overload retVal='void' descr='// 0xFF4FB7C8CDFA3DA7
// 0x0B9C7FC2
HUD::CLEAR_GPS_PLAYER_WAYPOINT();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearGpsRaceTrack' func='yes'>
			<Overload retVal='void' descr='// 0x7AA5B4CE533C858B
// 0x40C59829
HUD::CLEAR_GPS_RACE_TRACK();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearHelp' func='yes'>
			<Overload retVal='void' descr='// 0x8DFCED7A656F8802
// 0xE6D85741
HUD::CLEAR_HELP(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearNotificationsPos' func='yes'>
			<Overload retVal='void' descr='// 0x55598D21339CB998
// 0x1DA7E41A
HUD::_CLEAR_NOTIFICATIONS_POS(float pos);
----------------------------------------------------------------------------------------------------
```

_CLEAR_NOTIFICATIONS_POS(0.5f);  

```'>
				<Param name='float pos' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedInPauseMenu' func='yes'>
			<Overload retVal='void' descr='// 0x5E62BE5DC58E9E06
// 0x28058ACF
HUD::CLEAR_PED_IN_PAUSE_MENU();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPrints' func='yes'>
			<Overload retVal='void' descr='// 0xCC33FA791322B9D9
// 0x216CB1C5
HUD::CLEAR_PRINTS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearReminderMessage' func='yes'>
			<Overload retVal='void' descr='// 0xB57D8DD645CFA2CF
// 0x5BBCC934
HUD::CLEAR_REMINDER_MESSAGE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearSmallPrints' func='yes'>
			<Overload retVal='void' descr='// 0x2CEA2839313C09AC
// 0xA869A238
HUD::CLEAR_SMALL_PRINTS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearThisPrint' func='yes'>
			<Overload retVal='void' descr='// 0xCF708001E1E536DD
// 0x06878327
HUD::CLEAR_THIS_PRINT(char* p0);
----------------------------------------------------------------------------------------------------
```

p0: found arguments in the b617d scripts: pastebin.com/X5akCN7z  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateMpGamerTag' func='yes'>
			<Overload retVal='int' descr='// 0xBFEFE3321A3F5015
// 0xF5CD2AA4
HUD::_CREATE_MP_GAMER_TAG(Ped ped, char* username, BOOL pointedClanTag, BOOL isRockstarClan, char* cl
----------------------------------------------------------------------------------------------------
g, Any p5);

```

```

p0 was the return of NET_TO_PED in fm_mission_controler.  

p4 was always &quot;&quot;.  

returns headDisplayId  

```'>
				<Param name='Ped ped' />
				<Param name='char* username' />
				<Param name='BOOL pointedClanTag' />
				<Param name='BOOL isRockstarClan' />
				<Param name='char* cl' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableBlipNameForVar' func='yes'>
			<Overload retVal='Blip' descr='// 0x5C90988E7C8E1AF4
// 0xFFD7476C
HUD::DISABLE_BLIP_NAME_FOR_VAR();
----------------------------------------------------------------------------------------------------
```

Hash collision!!!   

Returns a blip handle.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='DisableFrontendThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x6D3465A73092F0E6
// 0xD86A029E
HUD::DISABLE_FRONTEND_THIS_FRAME();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='DisableRadarThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x5FBAE526203990C9
// 0x1A4318F7
HUD::_DISABLE_RADAR_THIS_FRAME();
----------------------------------------------------------------------------------------------------
```

confirmed working  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='DisplayAmmoThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xA5E78BA2B1331C55
// 0x60693CEE
HUD::DISPLAY_AMMO_THIS_FRAME(BOOL display);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL display' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisplayAreaName' func='yes'>
			<Overload retVal='void' descr='// 0x276B6CE369C33678
// 0x489FDD41
HUD::DISPLAY_AREA_NAME(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisplayCash' func='yes'>
			<Overload retVal='void' descr='// 0x96DEC8D5430208B7
// 0x0049DF83
HUD::DISPLAY_CASH(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

&quot;DISPLAY_CASH(false);&quot; makes the cash amount render on the screen when appropriate  

&quot;DISPLAY_CASH(true);&quot; disables cash amount rendering  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisplayHelpTextThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x960C9FF8F616E41C
// 0x18E3360A
HUD::DISPLAY_HELP_TEXT_THIS_FRAME(char* message, BOOL p1);
----------------------------------------------------------------------------------------------------
```

The messages are localized strings.  

Examples:  

&quot;No_bus_money&quot;  

&quot;Enter_bus&quot;  

&quot;Tour_help&quot;  

&quot;LETTERS_HELP2&quot;  

&quot;Dummy&quot;  

**The bool appears to always be false (if it even is a bool, as it&apos;s represented by a zero)**  

--------  

p1 doesn&apos;t seem to make a difference, regardless of the state it&apos;s in.   

picture of where on the screen this is displayed?  

```'>
				<Param name='char* message' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisplayHud' func='yes'>
			<Overload retVal='void' descr='// 0xA6294919E56FF02A
// 0xD10E4E31
HUD::DISPLAY_HUD(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

If Hud should be displayed  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisplayJobReport' func='yes'>
			<Overload retVal='void' descr='// 0x523A590C1A3CC0D3
// 0x10DE5150
HUD::_DISPLAY_JOB_REPORT();
----------------------------------------------------------------------------------------------------
```

Shows a hud element for reporting jobs  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='DisplayRadar' func='yes'>
			<Overload retVal='Any' descr='// 0xA0EBB943C300E693
// 0x52816BD4
HUD::DISPLAY_RADAR(BOOL Toggle);
----------------------------------------------------------------------------------------------------
```

If Minimap / Radar should be displayed.  

```'>
				<Param name='BOOL Toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisplaySniperScopeThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x73115226F4814E62
// 0xBC6C73CB
HUD::DISPLAY_SNIPER_SCOPE_THIS_FRAME();
----------------------------------------------------------------------------------------------------
```

Displays the crosshair for this frame.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='DoesBlipExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA6DB27D19ECBB7DA
// 0xAE92DD96
HUD::DOES_BLIP_EXIST(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesPedHaveAiBlip' func='yes'>
			<Overload retVal='BOOL' descr='// 0x15B8ECF844EE67ED
// 0x3BE1257F
HUD::DOES_PED_HAVE_AI_BLIP(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns whether the ped&apos;s blip is controlled by the game.   

It&apos;s the default blip you can see on enemies during freeroam in singleplayer (the one that fades out
 quickly).  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesTextBlockExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1C7302E725259789
// 0x96F74838
HUD::DOES_TEXT_BLOCK_EXIST(char* gxt);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* gxt' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesTextLabelExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAC09CA973C564252
// 0x6ECAE560
HUD::DOES_TEXT_LABEL_EXIST(char* gxt);
----------------------------------------------------------------------------------------------------
```

Checks if the passed gxt name exists in the game files.  

```'>
				<Param name='char* gxt' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawNotification' func='yes'>
			<Overload retVal='int' descr='// 0x2ED7843F8F801023
// 0x08F7AF78
HUD::_DRAW_NOTIFICATION(BOOL blink, BOOL showInBrief);
----------------------------------------------------------------------------------------------------
```

Draws a notification above the map and returns the notifications handle  

Color syntax:  

~r~ = Red  

~b~ = Blue  

~g~ = Green  

~y~ = Yellow  

~p~ = Purple  

~o~ = Orange  

~c~ = Grey  

~m~ = Darker Grey  

~u~ = Black  

~n~ = New Line  

~s~ = Default White  

~w~ = White  

~h~ = Bold Text  

~nrt~ = ???  

Special characters:  

¦ = Rockstar Verified Icon (U+00A6:Broken Bar - Alt+0166)  

÷ = Rockstar Icon (U+00F7:Division Sign - Alt+0247)  

∑ = Rockstar Icon 2 (U+2211:N-Ary Summation)  

Example C#:  

            Function.Call(Hash._ADD_TEXT_COMPONENT_STRING3, &quot;Now I need you to bring the ~b~vehicle~
w~ back to me!&quot;);  

----  

showInBrief==true: the notification will appear in the &quot;Brief/Info&quot; -&gt; &quot;Notifications&quot; tab in the pa
use menu.  

showInBrief==false: the notification will NOT appear in the pause menu.  

```'>
				<Param name='BOOL blink' />
				<Param name='BOOL showInBrief' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawNotificationApartmentInvite' func='yes'>
			<Overload retVal='int' descr='// 0x97C9E4E7024A8F2C
// 0xA9CCEF66
HUD::_DRAW_NOTIFICATION_APARTMENT_INVITE(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0,
----------------------------------------------------------------------------------------------------
clanDesc, int R, int G, int B);

```

```

This function and the one below it are for after you receive an invite, not sending it.  

p0 = 1 or 0  

nothin doin.   

int invite(Player player)  

	{  

int iVar2, iVar3;  

networkHandleMgr handle;  

NETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);  

networkClanMgr clan;  

char *playerName = GET_PLAYER_NAME(player);  

_SET_NOTIFICATION_TEXT_ENTRY(&quot;STRING&quot;);  

_SET_NOTIFACTION_COLOR_NEXT(0);  

ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);  

if (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))  

{  

	iVar2 = 0;  

	if (ARE_STRINGS_EQUAL(clan.unk22, &quot;Leader&quot;) && clan.unk30 == 0)  

	{  

iVar2 = 1;  

	}  

	if (clan.unk21 &gt; 0)  

	{  

iVar3 = 0;  

	}  

	else  

	{  

iVar3 = 1;  

	}  

	BOOL unused = _0x54E79E9C(&clan.clanHandle, 35);  

	return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0 /*unused*/, &clan.unk17, clan.unk30, iVar2, 0, 
clan.clanHandle, 0, 0, 0);  

}  

	}  

```

----------------------------------------------------------------------------------------------------

Old name: _NOTIFICATION_SEND_APARTMENT_INVITE'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
				<Param name='int* p2' />
				<Param name='int p3' />
				<Param name='BOOL isLeader' />
				<Param name='BOOL unk0' />
			</Overload>
		</KeyWord>
		<KeyWord name='_NOTIFICATION_SEND_APARTMENT_INVITE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: DrawNotificationApartmentInvite' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='DrawNotificationAward' func='yes'>
			<Overload retVal='int' descr='// 0xAA295B6F28BD587D
// 0x02DED2B8
HUD::_DRAW_NOTIFICATION_AWARD(char* p0, char* p1, int p2, int p3, char* p4);
----------------------------------------------------------------------------------------------------
```

Example:  

UI::_SET_NOTIFICATION_TEXT_ENTRY(&quot;HUNT&quot;);  

UI::_0xAA295B6F28BD587D(&quot;Hunting&quot;, &quot;Hunting_Gold_128&quot;, 0, 109, &quot;HUD_MED_UNLKED&quot;);  

```

----------------------------------------------------------------------------------------------------

Old name: _DRAW_NOTIFICATION_ICON'>
				<Param name='char* p0' />
				<Param name='char* p1' />
				<Param name='int p2' />
				<Param name='int p3' />
				<Param name='char* p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='_DRAW_NOTIFICATION_ICON' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: DrawNotificationAward' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='DrawNotificationClanInvite' func='yes'>
			<Overload retVal='int' descr='// 0x137BC35589E34E1E
// 0x88B9B909
HUD::_DRAW_NOTIFICATION_CLAN_INVITE(BOOL p0, BOOL p1, int* p2, int p3, BOOL isLeader, BOOL unk0, int 
----------------------------------------------------------------------------------------------------
Desc, char* playerName, int R, int G, int B);

```

```

p0 = 1 or 0  

crashes my game...  

this is for sending invites to network players - jobs/apartment/ect...   

return notification handle  

int invite(Player player)  

	{  

networkHandleMgr netHandle;  

networkClanMgr clan;  

char *playerName = GET_PLAYER_NAME(player);  

_SET_NOTIFICATION_TEXT_ENTRY(&quot;STRING&quot;);  

_SET_NOTIFACTION_COLOR_NEXT(1);  

ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);  

NETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);  

if (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))  

{  

	NETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);  

	_DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0,
 0, clan.clanHandle, playerName, 0, 0, 0);  

}  

	}  

```

----------------------------------------------------------------------------------------------------

Old name: _NOTIFICATION_SEND_CLAN_INVITE'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
				<Param name='int* p2' />
				<Param name='int p3' />
				<Param name='BOOL isLeader' />
				<Param name='BOOL unk0' />
				<Param name='int ' />
			</Overload>
		</KeyWord>
		<KeyWord name='_NOTIFICATION_SEND_CLAN_INVITE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: DrawNotificationClanInvite' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='DrawNotificationWithButton' func='yes'>
			<Overload retVal='int' descr='// 0xDD6CB2CCE7C2735C
HUD::_DRAW_NOTIFICATION_WITH_BUTTON(int type, char* button, char* text);
----------------------------------------------------------------------------------------------------
```

returns a notification handle, prints out a notification like below:  

type range: 0   

if you set type to 1, button accepts &quot;~INPUT_SOMETHING~&quot;  

example:  

UI::_0xDD6CB2CCE7C2735C(1, &quot;~INPUT_TALK~&quot;, &quot;Who you trynna get crazy with, ese? Don&apos;t you know I&apos;m L
OCO?!&quot;);  

- imgur.com/UPy0Ial  

Examples from the scripts:  

l_D1[1/*1*/]=UI::_DD6CB2CCE7C2735C(1,&quot;~INPUT_REPLAY_START_STOP_RECORDING~&quot;,&quot;&quot;);  

l_D1[2/*1*/]=UI::_DD6CB2CCE7C2735C(1,&quot;~INPUT_SAVE_REPLAY_CLIP~&quot;,&quot;&quot;);  

l_D1[1/*1*/]=UI::_DD6CB2CCE7C2735C(1,&quot;~INPUT_REPLAY_START_STOP_RECORDING~&quot;,&quot;&quot;);  

l_D1[2/*1*/]=UI::_DD6CB2CCE7C2735C(1,&quot;~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~&quot;,&quot;&quot;);  

```'>
				<Param name='int type' />
				<Param name='char* button' />
				<Param name='char* text' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawNotificationWithIcon' func='yes'>
			<Overload retVal='int' descr='// 0xD202B92CBF1D816F
HUD::_DRAW_NOTIFICATION_WITH_ICON(int type, int image, char* text);
----------------------------------------------------------------------------------------------------
```

returns a notification handle, prints out a notification like below:  

type range: 0   

if you set type to 1, image goes from 0 - 39 - Xbox you can add text to  

example:   

UI::_0xD202B92CBF1D816F(1, 20, &quot;Who you trynna get crazy with, ese? Don&apos;t you know I&apos;m LOCO?!&quot;);  

```'>
				<Param name='int type' />
				<Param name='int image' />
				<Param name='char* text' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawNotification_2' func='yes'>
			<Overload retVal='int' descr='// 0x44FA03975424A0EE
// 0x57B8D0D4
HUD::_DRAW_NOTIFICATION_2(BOOL blink, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL blink' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawNotification_3' func='yes'>
			<Overload retVal='int' descr='// 0x378E809BF61EC840
// 0x02BCAF9B
HUD::_DRAW_NOTIFICATION_3(BOOL blink, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL blink' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='DrawNotification_4' func='yes'>
			<Overload retVal='int' descr='// 0xF020C96915705B3A
// 0x8E319AB8
HUD::_DRAW_NOTIFICATION_4(BOOL blink, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL blink' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableDeathbloodSeethrough' func='yes'>
			<Overload retVal='void' descr='// 0x4895BDEA16E7C080
// 0x15B24768
HUD::ENABLE_DEATHBLOOD_SEETHROUGH(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Please change back to _0x4895BDEA16E7C080 (hash collision)  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandBusyString' func='yes'>
			<Overload retVal='void' descr='// 0xBD12F8228410D9B4
// 0x903F5EE4
HUD::_END_TEXT_COMMAND_BUSY_STRING(int busySpinnerType);
----------------------------------------------------------------------------------------------------
```

This does NOT get called per frame. Call it once to show, then use UI::_REMOVE_LOADING_PROMPT to rem
ove it  

Changes the the above native&apos;s (UI::_SET_LOADING_PROMPT_TEXT_ENTRY) spinning circle type.  

Types:  

enum LoadingPromptTypes  

{  

	LOADING_PROMPT_LEFT,  

	LOADING_PROMPT_LEFT_2,  

	LOADING_PROMPT_LEFT_3,  

	SAVE_PROMPT_LEFT,  

	LOADING_PROMPT_RIGHT,  

};  

```

----------------------------------------------------------------------------------------------------

Old name: _SHOW_LOADING_PROMPT'>
				<Param name='int busySpinnerType' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SHOW_LOADING_PROMPT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: EndTextCommandBusyString' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandClearPrint' func='yes'>
			<Overload retVal='void' descr='// 0xFCC75460ABA29378
// 0x67785AF2
HUD::END_TEXT_COMMAND_CLEAR_PRINT();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandDisplayHelp' func='yes'>
			<Overload retVal='void' descr='// 0x238FFE5C7B0498A6
// 0xB59B530D
HUD::END_TEXT_COMMAND_DISPLAY_HELP(Any p0, BOOL loop, BOOL beep, int duration);
----------------------------------------------------------------------------------------------------
```

-----------  

p3 (duration in MS) was previously mentioned as &quot;shape&quot;, but with some more testing it seems that it
&apos;s more likely to be a duration in MS. (Tested this when not calling it every tick, but instead only
 once and let it display for the specified duration).   

-1 seems to be default delay (around 3 seconds), 5000 (ms) seems to be the max. Anything &gt; 5000 will
 still result in 5 seconds of display time.  

Old p3 (shape) description: &quot;shape goes from -1 to 50 (may be more).&quot;  

--------------  

p0 is always 0.  

Example:  

void FloatingHelpText(char* text)  

{  

	BEGIN_TEXT_COMMAND_DISPLAY_HELP(&quot;STRING&quot;);  

	ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  

	END_TEXT_COMMAND_DISPLAY_HELP (0, 0, 1, -1);  

}  

Image:  

- imgbin.org/images/26209.jpg  

more inputs/icons:  

- pastebin.com/nqNYWMSB  

Used to be known as _DISPLAY_HELP_TEXT_FROM_STRING_LABEL  

```

----------------------------------------------------------------------------------------------------

Old name: _DISPLAY_HELP_TEXT_FROM_STRING_LABEL'>
				<Param name='Any p0' />
				<Param name='BOOL loop' />
				<Param name='BOOL beep' />
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='_DISPLAY_HELP_TEXT_FROM_STRING_LABEL' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: EndTextCommandDisplayHelp' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandDisplayText' func='yes'>
			<Overload retVal='void' descr='// 0xCD015E5BB0D96A57
// 0x6F8350CE
HUD::END_TEXT_COMMAND_DISPLAY_TEXT(float x, float y);
----------------------------------------------------------------------------------------------------
```

After applying the properties to the text (See UI::SET_TEXT_), this will draw the text in the applie
d position. Also 0.0f &lt; x, y &lt; 1.0f, percentage of the axis.  

Used to be known as _DRAW_TEXT  

```

----------------------------------------------------------------------------------------------------

Old name: _DRAW_TEXT'>
				<Param name='float x' />
				<Param name='float y' />
			</Overload>
		</KeyWord>
		<KeyWord name='_DRAW_TEXT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: EndTextCommandDisplayText' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandGetWidth' func='yes'>
			<Overload retVal='float' descr='// 0x85F061DA64ED2F67
// 0xD12A643A
HUD::_END_TEXT_COMMAND_GET_WIDTH(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Used with _BEGIN_TEXT_COMMAND_WIDTH.  

In scripts, p0 is false when used in combination with &quot;ESMINDOLLA&quot; or &quot;ESDOLLA&quot;, otherwise it&apos;s true
.  

Returns from range 0 to 1.  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_TEXT_SCREEN_WIDTH'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_TEXT_SCREEN_WIDTH' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: EndTextCommandGetWidth' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandIsMessageDisplayed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8A9BA1AB3E237613
// 0x672EFB45
HUD::END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandIsThisHelpMessageBeingDisplayed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x10BDDBFC529428DD
// 0xF63A13EC
HUD::END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandObjective' func='yes'>
			<Overload retVal='void' descr='// 0xCFDBDF5AE59BA0F4
// 0x2944A6C5
HUD::_END_TEXT_COMMAND_OBJECTIVE(BOOL p0);
----------------------------------------------------------------------------------------------------
```

p0 is always false in scripts.  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandPrint' func='yes'>
			<Overload retVal='void' descr='// 0x9D77056A530643F6
// 0x38F82261
HUD::END_TEXT_COMMAND_PRINT(int duration, BOOL drawImmediately);
----------------------------------------------------------------------------------------------------
```

Draws the subtitle at middle center of the screen.  

int duration = time in milliseconds to show text on screen before disappearing  

drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn afte
r the previous subtitle has finished  

Used to be known as _DRAW_SUBTITLE_TIMED  

```

----------------------------------------------------------------------------------------------------

Old name: _DRAW_SUBTITLE_TIMED'>
				<Param name='int duration' />
				<Param name='BOOL drawImmediately' />
			</Overload>
		</KeyWord>
		<KeyWord name='_DRAW_SUBTITLE_TIMED' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: EndTextCommandPrint' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandSetBlipName' func='yes'>
			<Overload retVal='void' descr='// 0xBC38B49BCB83BC9B
// 0xE8E59820
HUD::END_TEXT_COMMAND_SET_BLIP_NAME(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndTextCommandTimer' func='yes'>
			<Overload retVal='void' descr='// 0xA86911979638106F
// 0x6E7FDA1C
HUD::_END_TEXT_COMMAND_TIMER(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='FlashAbilityBar' func='yes'>
			<Overload retVal='void' descr='// 0x02CFBA0C9E9275CE
// 0x3648960D
HUD::FLASH_ABILITY_BAR(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

If set to true ability bar will flash  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='FlashMinimapDisplay' func='yes'>
			<Overload retVal='void' descr='// 0xF2DD778C22B15BDA
// 0xB8359952
HUD::FLASH_MINIMAP_DISPLAY();
----------------------------------------------------------------------------------------------------
```

adds a short flash to the Radar/Minimap  

Usage: UI.FLASH_MINIMAP_DISPLAY  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='FlashWantedDisplay' func='yes'>
			<Overload retVal='Any' descr='// 0xA18AFB39081B6A1F
// 0x629F866B
HUD::FLASH_WANTED_DISPLAY(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetActiveWebsiteId' func='yes'>
			<Overload retVal='int' descr='// 0x01A358D9128B7A86
// 0xAB5B7C18
HUD::_GET_ACTIVE_WEBSITE_ID();
----------------------------------------------------------------------------------------------------
```

native only found once in appinternet.c4  

same thing as this but does not need websiteID  

Any _0xE3B05614DCE1D014(Any p0) // 0xE3B05614DCE1D014 0xD217EE7E  

returns current websitePageID  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetAiBlip' func='yes'>
			<Overload retVal='Blip' descr='// 0x56176892826A4FE8
// 0xCA52CF43
HUD::_GET_AI_BLIP(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns the current AI BLIP for the specified ped  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipAlpha' func='yes'>
			<Overload retVal='int' descr='// 0x970F608F0EE6C885
// 0x297AF6C8
HUD::GET_BLIP_ALPHA(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipColour' func='yes'>
			<Overload retVal='int' descr='// 0xDF729E8D20CF7327
// 0xDD6A1E54
HUD::GET_BLIP_COLOUR(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0x586AFE3FF72D996E
// 0xEF6FF47B
HUD::GET_BLIP_COORDS(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipFromEntity' func='yes'>
			<Overload retVal='Blip' descr='// 0xBC8DBDCA2436F7E8
// 0x005A2A47
HUD::GET_BLIP_FROM_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
```

Returns the Blip handle of given Entity.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipHudColour' func='yes'>
			<Overload retVal='int' descr='// 0x729B5F1EFBC0AAEE
// 0xE88B4BC2
HUD::GET_BLIP_HUD_COLOUR(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipInfoIdCoord' func='yes'>
			<Overload retVal='Vector3' descr='// 0xFA7C7F0AADF25D09
// 0xB7374A66
HUD::GET_BLIP_INFO_ID_COORD(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipInfoIdDisplay' func='yes'>
			<Overload retVal='int' descr='// 0x1E314167F701DC3B
// 0xD0FC19F4
HUD::GET_BLIP_INFO_ID_DISPLAY(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipInfoIdEntityIndex' func='yes'>
			<Overload retVal='Entity' descr='// 0x4BA4E2553AFEDC2C
// 0xA068C40B
HUD::GET_BLIP_INFO_ID_ENTITY_INDEX(Blip blip);
----------------------------------------------------------------------------------------------------
```

```'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipInfoIdIterator' func='yes'>
			<Overload retVal='int' descr='// 0x186E5D252FA50E7D
// 0xB9827942
HUD::_GET_BLIP_INFO_ID_ITERATOR();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipInfoIdPickupIndex' func='yes'>
			<Overload retVal='Pickup' descr='// 0x9B6786E4C03DD382
// 0x86913D37
HUD::GET_BLIP_INFO_ID_PICKUP_INDEX(Blip blip);
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 0.  

```'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipInfoIdType' func='yes'>
			<Overload retVal='int' descr='// 0xBE9B0959FFD0779B
// 0x501D7B4E
HUD::GET_BLIP_INFO_ID_TYPE(Blip blip);
----------------------------------------------------------------------------------------------------
```

Returns a value based on what the blip is attached to  

1   

2   

3   

4   

5   

6   

7  

```'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBlipSprite' func='yes'>
			<Overload retVal='int' descr='// 0x1FC877464A04FC4F
// 0x72FF2E73
HUD::GET_BLIP_SPRITE(Blip blip);
----------------------------------------------------------------------------------------------------
```

Blips Images + IDs:  

gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html  

```'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCurrentFrontendMenu' func='yes'>
			<Overload retVal='Hash' descr='// 0x2309595AD6145265
// 0x33D6868F
HUD::_GET_CURRENT_FRONTEND_MENU();
----------------------------------------------------------------------------------------------------
```

if (UI::_2309595AD6145265() == ${fe_menu_version_empty_no_background})  

Seems to get the current frontend menu  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetCurrentNotification' func='yes'>
			<Overload retVal='int' descr='// 0x82352748437638CA
// 0x294405D4
HUD::_GET_CURRENT_NOTIFICATION();
----------------------------------------------------------------------------------------------------
```

Returns the handle for the notification currently displayed on the screen.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetCurrentWebsiteId' func='yes'>
			<Overload retVal='int' descr='// 0x97D47996FC48CBAD
// 0x42A55B14
HUD::GET_CURRENT_WEBSITE_ID();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetDefaultScriptRendertargetRenderId' func='yes'>
			<Overload retVal='int' descr='// 0x52F0982D7FD156B6
// 0x8188935F
HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID();
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetFirstBlipInfoId' func='yes'>
			<Overload retVal='Blip' descr='// 0x1BEDE233E6CD2A1F
// 0x64C0273D
HUD::GET_FIRST_BLIP_INFO_ID(int blipSprite);
----------------------------------------------------------------------------------------------------
```

8 = waypoint  

```'>
				<Param name='int blipSprite' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHudColour' func='yes'>
			<Overload retVal='void' descr='// 0x7C9C91AB74A0360F
// 0x63F66A0B
HUD::GET_HUD_COLOUR(int hudColorIndex, int* r, int* g, int* b, int* a);
----------------------------------------------------------------------------------------------------
```

HUD colors and their values: pastebin.com/d9aHPbXN  

```'>
				<Param name='int hudColorIndex' />
				<Param name='int* r' />
				<Param name='int* g' />
				<Param name='int* b' />
				<Param name='int* a' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHudComponentPosition' func='yes'>
			<Overload retVal='Vector3' descr='// 0x223CA69A8C4417FD
// 0x080DCED6
HUD::GET_HUD_COMPONENT_POSITION(int id);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int id' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetLabelText' func='yes'>
			<Overload retVal='char*' descr='// 0x7B5280EBA9840C72
// 0x95C4B5AD
HUD::_GET_LABEL_TEXT(char* labelName);
----------------------------------------------------------------------------------------------------
```

Gets a string literal from a label name.  

```'>
				<Param name='char* labelName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetLengthOfLiteralString' func='yes'>
			<Overload retVal='int' descr='// 0xF030907CCBB8A9FD
// 0x99379D55
HUD::GET_LENGTH_OF_LITERAL_STRING(char* string);
----------------------------------------------------------------------------------------------------
```

Returns the length of the string passed (much like strlen).  

```'>
				<Param name='char* string' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetLengthOfString' func='yes'>
			<Overload retVal='int' descr='// 0x43E4111189E54F0E
// 0x7DBC0764
HUD::_GET_LENGTH_OF_STRING(char* STRING);
----------------------------------------------------------------------------------------------------
```

gets the length of a null terminated string, without checking unicode encodings  

```'>
				<Param name='char* STRING' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetLengthOfStringWithThisTextLabel' func='yes'>
			<Overload retVal='int' descr='// 0x801BD273D3A23F74
// 0xA4CA7BE5
HUD::GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL(char* gxt);
----------------------------------------------------------------------------------------------------
```

Returns the string length of the string from the gxt string .  

```'>
				<Param name='char* gxt' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMainPlayerBlipId' func='yes'>
			<Overload retVal='Blip' descr='// 0xDCD4EC3F419D02FA
// 0xAB93F020
HUD::GET_MAIN_PLAYER_BLIP_ID();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNamedRendertargetRenderId' func='yes'>
			<Overload retVal='Any' descr='// 0x1A6478B61C6BDC3B
// 0xF9D7A401
HUD::GET_NAMED_RENDERTARGET_RENDER_ID(char* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNextBlipInfoId' func='yes'>
			<Overload retVal='Blip' descr='// 0x14F96AA50D6FBEA7
// 0x9356E92F
HUD::GET_NEXT_BLIP_INFO_ID(int blipSprite);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int blipSprite' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfActiveBlips' func='yes'>
			<Overload retVal='int' descr='// 0x9A3FF3DE163034E8
// 0x144020FA
HUD::GET_NUMBER_OF_ACTIVE_BLIPS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPauseMenuState' func='yes'>
			<Overload retVal='int' descr='// 0x272ACD84970869C5
// 0x92F50134
HUD::GET_PAUSE_MENU_STATE();
----------------------------------------------------------------------------------------------------
```

Returns:  

5  

10  

15  

20  

25  

30  

35  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetScreenCoordFromWorldCoord' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF9904D11F1ACBEC3
// 0xFE9A39F8
HUD::_GET_SCREEN_COORD_FROM_WORLD_COORD(float worldX, float worldY, float worldZ, float* screenX, fl
----------------------------------------------------------------------------------------------------
screenY);

```

```

World to relative screen coords  

this world to screen will keep the text on screen. it will keep it in the screen pos. good for a dee
r hunting mod  

```'>
				<Param name='float worldX' />
				<Param name='float worldY' />
				<Param name='float worldZ' />
				<Param name='float* screenX' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetStreetNameFromHashKey' func='yes'>
			<Overload retVal='char*' descr='// 0xD0EF8A959B8A4CB9
// 0x1E8E310C
HUD::GET_STREET_NAME_FROM_HASH_KEY(Hash hash);
----------------------------------------------------------------------------------------------------
```

This functions converts the hash of a street name into a readable string.  

For how to get the hashes, see PATHFIND::GET_STREET_NAME_AT_COORD.  

```'>
				<Param name='Hash hash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTextScaleHeight' func='yes'>
			<Overload retVal='float' descr='// 0xDB88A37483346780
// 0x3330175B
HUD::_GET_TEXT_SCALE_HEIGHT(float size, int font);
----------------------------------------------------------------------------------------------------
```

This get&apos;s the height of the FONT and not the total text. You need to get the number of lines your t
ext uses, and get the height of a newline (I&apos;m using a smaller value) to get the total text height. 
 

```'>
				<Param name='float size' />
				<Param name='int font' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTextScreenLineCount' func='yes'>
			<Overload retVal='int' descr='// 0x9040DFB09BE75706
// 0xAA318785
HUD::_GET_TEXT_SCREEN_LINE_COUNT(float x, float y);
----------------------------------------------------------------------------------------------------
```

Determines how many lines the text string will use when drawn on screen.   

Must use _BEGIN_TEXT_COMMAND_LINE_COUNT for setting up  

```

----------------------------------------------------------------------------------------------------

Old name: _END_TEXT_COMMAND_GET_LINE_COUNT'>
				<Param name='float x' />
				<Param name='float y' />
			</Overload>
		</KeyWord>
		<KeyWord name='_END_TEXT_COMMAND_GET_LINE_COUNT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetTextScreenLineCount' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetTextSubstring' func='yes'>
			<Overload retVal='char*' descr='// 0x169BD9382084C8C0
// 0x34A396EE
HUD::_GET_TEXT_SUBSTRING(char* text, int position, int length);
----------------------------------------------------------------------------------------------------
```

Returns a substring of a specified length starting at a specified position.  

Example:  

// Get &quot;STRING&quot; text from &quot;MY_STRING&quot;  

subStr = UI::_GET_TEXT_SUBSTRING(&quot;MY_STRING&quot;, 3, 6);  

```'>
				<Param name='char* text' />
				<Param name='int position' />
				<Param name='int length' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTextSubstringSafe' func='yes'>
			<Overload retVal='char*' descr='// 0xB2798643312205C5
// 0x0183A66C
HUD::_GET_TEXT_SUBSTRING_SAFE(char* text, int position, int length, int maxLength);
----------------------------------------------------------------------------------------------------
```

Returns a substring of a specified length starting at a specified position. The result is guaranteed
 not to exceed the specified max length.  

NOTE: The &apos;maxLength&apos; parameter might actually be the size of the buffer that is returned. More rese
arch is needed. -CL69  

Example:  

// Condensed example of how Rockstar uses this function  

strLen = UI::GET_LENGTH_OF_LITERAL_STRING(GAMEPLAY::GET_ONSCREEN_KEYBOARD_RESULT());  

subStr = UI::_GET_TEXT_SUBSTRING_SAFE(GAMEPLAY::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);  

--  

&quot;fm_race_creator.ysc&quot;, line 85115:  

// parameters modified for clarity  

BOOL sub_8e5aa(char *text, int length) {  

    for (i = 0; i &lt;= (length - 2); i += 1) {  

        if (!GAMEPLAY::ARE_STRINGS_EQUAL(UI::_GET_TEXT_SUBSTRING_SAFE(text, i, i + 1, 1), &quot; &quot;)) {  


            return FALSE;  

        }  

    }  

    return TRUE;  

}  

```'>
				<Param name='char* text' />
				<Param name='int position' />
				<Param name='int length' />
				<Param name='int maxLength' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTextSubstringSlice' func='yes'>
			<Overload retVal='char*' descr='// 0xCE94AEBA5D82908A
// 0xFA6373BB
HUD::_GET_TEXT_SUBSTRING_SLICE(char* text, int startPosition, int endPosition);
----------------------------------------------------------------------------------------------------
```

Returns a substring that is between two specified positions. The length of the string will be calcul
ated using (endPosition - startPosition).  

Example:  

// Get &quot;STRING&quot; text from &quot;MY_STRING&quot;  

subStr = UI::_GET_TEXT_SUBSTRING_SLICE(&quot;MY_STRING&quot;, 3, 9);  

// Overflows are possibly replaced with underscores (needs verification)  

subStr = UI::_GET_TEXT_SUBSTRING_SLICE(&quot;MY_STRING&quot;, 3, 10); // &quot;STRING_&quot;?  

```'>
				<Param name='char* text' />
				<Param name='int startPosition' />
				<Param name='int endPosition' />
			</Overload>
		</KeyWord>
		<KeyWord name='GivePedToPauseMenu' func='yes'>
			<Overload retVal='void' descr='// 0xAC0BFBDC3BE00E14
// 0x2AD2C9CE
HUD::GIVE_PED_TO_PAUSE_MENU(Ped ped, int p1);
----------------------------------------------------------------------------------------------------
```

p1 is either 1 or 2 in the PC scripts.  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasAdditionalTextLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x02245FE4BED318B8
// 0xB0E56045
HUD::HAS_ADDITIONAL_TEXT_LOADED(int slot);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int slot' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasMpGamerTag' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6E0EB3EB47C8D7AA
// 0xEFD2564A
HUD::_HAS_MP_GAMER_TAG();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='HasMpGamerTag_2' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEB709A36958ABE0D
// 0xF11414C4
HUD::_HAS_MP_GAMER_TAG_2(int gamerTagId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int gamerTagId' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasThisAdditionalTextLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xADBF060E2B30C5BC
// 0x80A52040
HUD::HAS_THIS_ADDITIONAL_TEXT_LOADED(char* gxt, int slot);
----------------------------------------------------------------------------------------------------
```

Checks if the specified gxt has loaded into the passed slot.  

```'>
				<Param name='char* gxt' />
				<Param name='int slot' />
			</Overload>
		</KeyWord>
		<KeyWord name='HideHelpTextThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xD46923FC481CA285
// 0xF3807BED
HUD::HIDE_HELP_TEXT_THIS_FRAME();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='HideHudAndRadarThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x719FF505F097FD20
// 0xB75D4AD2
HUD::HIDE_HUD_AND_RADAR_THIS_FRAME();
----------------------------------------------------------------------------------------------------
```

I think this works, but seems to prohibit switching to other weapons (or accessing the weapon wheel)
  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='HideHudComponentThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x6806C51AD12B83B8
// 0xDB2D0762
HUD::HIDE_HUD_COMPONENT_THIS_FRAME(int id);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int id' />
			</Overload>
		</KeyWord>
		<KeyWord name='HideLoadingOnFadeThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x4B0311D3CDC4648F
// 0x35087963
HUD::HIDE_LOADING_ON_FADE_THIS_FRAME();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='HideNumberOnBlip' func='yes'>
			<Overload retVal='void' descr='// 0x532CFF637EF80148
// 0x0B6D610D
HUD::HIDE_NUMBER_ON_BLIP(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='HideScriptedHudComponentThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xE374C498D8BADC14
// 0x31ABA127
HUD::HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME(int id);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int id' />
			</Overload>
		</KeyWord>
		<KeyWord name='HideSpecialAbilityLockonOperation' func='yes'>
			<Overload retVal='void' descr='// 0x3EED80DFF7325CAA
// 0x872C2CFB
HUD::HIDE_SPECIAL_ABILITY_LOCKON_OPERATION(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Hash collision  

If used with a Ped that has an AI blip as the first argument:  

- if p1 is true, a view cone is displayed with the AI blip  

```'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAiBlipAlwaysShown' func='yes'>
			<Overload retVal='void' descr='// 0x0C4BBF625CA98C4E
// 0xFFDF46F0
HUD::_IS_AI_BLIP_ALWAYS_SHOWN(Ped ped, BOOL flag);
----------------------------------------------------------------------------------------------------
```

if &quot;flag&quot; is true, the AI blip will always be displayed for the specified ped, if it has an AI blip 
 

If &quot;flag&quot; is false, the AI blip will only be displayed when the player is in combat with the specifi
ed ped, if it has an AI blip  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL flag' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsBlipFlashing' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA5E41FD83AD6CEF0
// 0x52E111D7
HUD::IS_BLIP_FLASHING(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsBlipOnMinimap' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE41CA53051197A27
// 0x258CBA3A
HUD::IS_BLIP_ON_MINIMAP(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsBlipShortRange' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDA5F8727EB75B926
// 0x1226765A
HUD::IS_BLIP_SHORT_RANGE(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsHelpMessageBeingDisplayed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4D79439A6B55AC67
// 0xA65F262A
HUD::IS_HELP_MESSAGE_BEING_DISPLAYED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsHelpMessageFadingOut' func='yes'>
			<Overload retVal='BOOL' descr='// 0x327EDEEEAC55C369
// 0x3E50AE92
HUD::IS_HELP_MESSAGE_FADING_OUT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsHelpMessageOnScreen' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDAD37F45428801AE
// 0x4B3C9CA9
HUD::IS_HELP_MESSAGE_ON_SCREEN();
----------------------------------------------------------------------------------------------------
```

Doesn&apos;t appear to work, use IS_HELP_MESSAGE_BEING_DISPLAYED instead  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsHudComponentActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBC4C9EA5391ECC0D
// 0x6214631F
HUD::IS_HUD_COMPONENT_ACTIVE(int id);
----------------------------------------------------------------------------------------------------
```

Full list of components below  

HUD = 0;  

HUD_WANTED_STARS = 1;  

HUD_WEAPON_ICON = 2;  

HUD_CASH = 3;  

HUD_MP_CASH = 4;  

HUD_MP_MESSAGE = 5;  

HUD_VEHICLE_NAME = 6;  

HUD_AREA_NAME = 7;  

HUD_VEHICLE_CLASS = 8;  

HUD_STREET_NAME = 9;  

HUD_HELP_TEXT = 10;  

HUD_FLOATING_HELP_TEXT_1 = 11;  

HUD_FLOATING_HELP_TEXT_2 = 12;  

HUD_CASH_CHANGE = 13;  

HUD_RETICLE = 14;  

HUD_SUBTITLE_TEXT = 15;  

HUD_RADIO_STATIONS = 16;  

HUD_SAVING_GAME = 17;  

HUD_GAME_STREAM = 18;  

HUD_WEAPON_WHEEL = 19;  

HUD_WEAPON_WHEEL_STATS = 20;  

MAX_HUD_COMPONENTS = 21;  

MAX_HUD_WEAPONS = 22;  

MAX_SCRIPTED_HUD_COMPONENTS = 141;  

```'>
				<Param name='int id' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsHudHidden' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA86478C6958735C5
// 0x40BADA1D
HUD::IS_HUD_HIDDEN();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsHudPreferenceSwitchedOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1930DFA731813EC4
// 0xC3BC1B4F
HUD::IS_HUD_PREFERENCE_SWITCHED_ON();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsLoadingPromptBeingDisplayed' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD422FCC5F239A915
// 0xB8B3A5D0
HUD::_IS_LOADING_PROMPT_BEING_DISPLAYED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsMessageBeingDisplayed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7984C03AA5CC2F41
// 0x6A77FE8D
HUD::IS_MESSAGE_BEING_DISPLAYED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsMinimapAreaRevealed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6E31B91145873922
// 0x65B705F6
HUD::_IS_MINIMAP_AREA_REVEALED(float x, float y, float radius);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsMissionCreatorBlip' func='yes'>
			<Overload retVal='BOOL' descr='// 0x26F49BF3381D933D
// 0x24ACC4E9
HUD::IS_MISSION_CREATOR_BLIP(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsMpGamerTagActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4E929E7A5796FD26
// 0x60118951
HUD::IS_MP_GAMER_TAG_ACTIVE(int gamerTagId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int gamerTagId' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsNamedRendertargetLinked' func='yes'>
			<Overload retVal='BOOL' descr='// 0x113750538FA31298
// 0x8B52601F
HUD::IS_NAMED_RENDERTARGET_LINKED(Hash hash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash hash' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsNamedRendertargetRegistered' func='yes'>
			<Overload retVal='BOOL' descr='// 0x78DCDC15C9F116B4
// 0x284057F5
HUD::IS_NAMED_RENDERTARGET_REGISTERED(char* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPauseMenuActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB0034A223497FFCB
// 0xD3600591
HUD::IS_PAUSE_MENU_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsPauseMenuRestarting' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1C491717107431C7
// 0x3C4CF4D9
HUD::IS_PAUSE_MENU_RESTARTING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsRadarEnabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAF754F20EB5CD51A
HUD::_IS_RADAR_ENABLED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsRadarHidden' func='yes'>
			<Overload retVal='BOOL' descr='// 0x157F93B036700462
// 0x1AB3B954
HUD::IS_RADAR_HIDDEN();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsRadarPreferenceSwitchedOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9EB6522EA68F22FE
// 0x14AEAA28
HUD::IS_RADAR_PREFERENCE_SWITCHED_ON();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsScriptedHudComponentActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDD100EB17A94FF65
// 0x2B86F382
HUD::IS_SCRIPTED_HUD_COMPONENT_ACTIVE(int id);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int id' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsSocialClubActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC406BE343FC4B9AF
// 0xD4DA14EF
HUD::IS_SOCIAL_CLUB_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsStreamingAdditionalText' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8B6817B71B85EBF0
// 0xF079E4EB
HUD::IS_STREAMING_ADDITIONAL_TEXT(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsSubtitlePreferenceSwitchedOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAD6DACA4BA53E0A4
// 0x63BA19F5
HUD::IS_SUBTITLE_PREFERENCE_SWITCHED_ON();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsTextChatActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB118AF58B5F332A1
HUD::_IS_TEXT_CHAT_ACTIVE();
----------------------------------------------------------------------------------------------------
```

Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsWarningMessageActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE18B138FABC53103
// 0x94C834AD
HUD::IS_WARNING_MESSAGE_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value

----------------------------------------------------------------------------------------------------

Old name: IS_MEDICAL_DISABLED'>
			</Overload>
		</KeyWord>
		<KeyWord name='IS_MEDICAL_DISABLED' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: IsWarningMessageActive' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='IsWaypointActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1DD1F58F493F1DA5
// 0x5E4DF47B
HUD::IS_WAYPOINT_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='KeyHudColour' func='yes'>
			<Overload retVal='void' descr='// 0x1A5CD7752DD28CD3
// 0xD5BFCADB
HUD::KEY_HUD_COLOUR(BOOL p0, Any p1);
----------------------------------------------------------------------------------------------------
```

hash collision  

```'>
				<Param name='BOOL p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='LinkNamedRendertarget' func='yes'>
			<Overload retVal='void' descr='// 0xF6C09E276AEB3F2D
// 0x6844C4B9
HUD::LINK_NAMED_RENDERTARGET(Hash hash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash hash' />
			</Overload>
		</KeyWord>
		<KeyWord name='LockMinimapAngle' func='yes'>
			<Overload retVal='void' descr='// 0x299FAEBB108AE05B
// 0xDEC733E4
HUD::LOCK_MINIMAP_ANGLE(int angle);
----------------------------------------------------------------------------------------------------
```

Locks the minimap to the specified angle in integer degrees.  

angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.  

```'>
				<Param name='int angle' />
			</Overload>
		</KeyWord>
		<KeyWord name='LockMinimapPosition' func='yes'>
			<Overload retVal='void' descr='// 0x1279E861A329E73F
// 0xB9632A91
HUD::LOCK_MINIMAP_POSITION(float x, float y);
----------------------------------------------------------------------------------------------------
```

Locks the minimap to the specified world position.  

```'>
				<Param name='float x' />
				<Param name='float y' />
			</Overload>
		</KeyWord>
		<KeyWord name='LogDebugInfo' func='yes'>
			<Overload retVal='void' descr='// 0x2162C446DFDF38FD
// 0x2DFD35C7
HUD::_LOG_DEBUG_INFO(char* p0);
----------------------------------------------------------------------------------------------------
```

Not present in retail version of the game, actual definiton seems to be  

_LOG_DEBUG_INFO(char* category, char* debugText);  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x04655f9d075d0ae5' func='yes'>
			<Overload retVal='void' descr='// 0x04655F9D075D0AE5
HUD::_0x04655F9D075D0AE5(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x052991e59076e4e4' func='yes'>
			<Overload retVal='BOOL' descr='// 0x052991E59076E4E4
// 0xD43BB56D
HUD::_0x052991E59076E4E4(Hash p0, Any* p1);
----------------------------------------------------------------------------------------------------
```

p0 was always 0xAE2602A3.  

```'>
				<Param name='Hash p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x06a320535f5f0248' func='yes'>
			<Overload retVal='void' descr='// 0x06A320535F5F0248
// 0x827F14DE
HUD::_0x06A320535F5F0248(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0923dbf87dff735e' func='yes'>
			<Overload retVal='void' descr='// 0x0923DBF87DFF735E
// 0xE010F081
HUD::_0x0923DBF87DFF735E(float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x09c0403ed9a751c2' func='yes'>
			<Overload retVal='BOOL' descr='// 0x09C0403ED9A751C2
// 0xE8C8E535
HUD::_0x09C0403ED9A751C2(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0c5a80a9e096d529' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0C5A80A9E096D529
HUD::_0x0C5A80A9E096D529(Any p0, Any* p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0cf54f20de43879c' func='yes'>
			<Overload retVal='void' descr='// 0x0CF54F20DE43879C
HUD::_0x0CF54F20DE43879C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1121bfa1a1a522a8' func='yes'>
			<Overload retVal='Any' descr='// 0x1121BFA1A1A522A8
// 0x3F4AFB13
HUD::_0x1121BFA1A1A522A8();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1185a8087587322c' func='yes'>
			<Overload retVal='void' descr='// 0x1185A8087587322C
HUD::_0x1185A8087587322C(BOOL p0);
----------------------------------------------------------------------------------------------------
```

SET_TEXT_??? - Used in golf and golf_mp  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x13c4b962653a5280' func='yes'>
			<Overload retVal='Any' descr='// 0x13C4B962653A5280
HUD::_0x13C4B962653A5280();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x14621bb1df14e2b2' func='yes'>
			<Overload retVal='void' descr='// 0x14621BB1DF14E2B2
// 0xB9392CE7
HUD::_0x14621BB1DF14E2B2();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x14c9fdcc41f81f63' func='yes'>
			<Overload retVal='void' descr='// 0x14C9FDCC41F81F63
// 0xE70D1F43
HUD::_0x14C9FDCC41F81F63(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x15803fec3b9a872b' func='yes'>
			<Overload retVal='void' descr='// 0x15803FEC3B9A872B
HUD::_0x15803FEC3B9A872B(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any
----------------------------------------------------------------------------------------------------
Any p10);

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x15cfa549788d35ef' func='yes'>
			<Overload retVal='void' descr='// 0x15CFA549788D35EF
HUD::_0x15CFA549788D35EF();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x16a304e6cb2bfab9' func='yes'>
			<Overload retVal='void' descr='// 0x16A304E6CB2BFAB9
// 0x6BE3ACA8
HUD::_0x16A304E6CB2BFAB9(int r, int g, int b, int a);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
				<Param name='int a' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x170f541e1cadd1de' func='yes'>
			<Overload retVal='void' descr='// 0x170F541E1CADD1DE
HUD::_0x170F541E1CADD1DE(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Related to displaying cash on the HUD  

Always called before UI::_SET_SINGLEPLAYER_HUD_CASH in decompiled scripts  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x17ad8c9706bdd88a' func='yes'>
			<Overload retVal='void' descr='// 0x17AD8C9706BDD88A
// 0x24A97AF8
HUD::_0x17AD8C9706BDD88A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1eac5f91bcbc5073' func='yes'>
			<Overload retVal='void' descr='// 0x1EAC5F91BCBC5073
// 0xFB9BABF5
HUD::_0x1EAC5F91BCBC5073(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1eae6dd17b7a5efa' func='yes'>
			<Overload retVal='void' descr='// 0x1EAE6DD17B7A5EFA
// 0x13E7A5A9
HUD::_0x1EAE6DD17B7A5EFA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x20fe7fdfeead38c0' func='yes'>
			<Overload retVal='void' descr='// 0x20FE7FDFEEAD38C0
// 0xCE36E3FE
HUD::_0x20FE7FDFEEAD38C0();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x211c4ef450086857' func='yes'>
			<Overload retVal='void' descr='// 0x211C4EF450086857
// 0x801D0D86
HUD::_0x211C4EF450086857();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x214cd562a939246a' func='yes'>
			<Overload retVal='BOOL' descr='// 0x214CD562A939246A
// 0x812CBE0E
HUD::_0x214CD562A939246A();
----------------------------------------------------------------------------------------------------
```

example  

if (UI::IS_HELP_MESSAGE_BEING_DISPLAYED()&&(!UI::_214CD562A939246A())) {  

        return 0;  

}  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2432784aca090da4' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2432784ACA090DA4
// 0x45472FD5
HUD::_0x2432784ACA090DA4(Any p0);
----------------------------------------------------------------------------------------------------
```

p0 is int or bool  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x24a49beaf468dc90' func='yes'>
			<Overload retVal='BOOL' descr='// 0x24A49BEAF468DC90
HUD::_0x24A49BEAF468DC90(Any p0, Any* p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x25615540d894b814' func='yes'>
			<Overload retVal='void' descr='// 0x25615540D894B814
// 0x40E25DB8
HUD::_0x25615540D894B814(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x25f87b30c382fca7' func='yes'>
			<Overload retVal='void' descr='// 0x25F87B30C382FCA7
// 0x1E63088A
HUD::_0x25F87B30C382FCA7();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2632482fd6b9ab87' func='yes'>
			<Overload retVal='void' descr='// 0x2632482FD6B9AB87
HUD::_0x2632482FD6B9AB87();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2708fc083123f9ff' func='yes'>
			<Overload retVal='void' descr='// 0x2708FC083123F9FF
// 0xCBEC9369
HUD::_0x2708FC083123F9FF();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2790f4b17d098e26' func='yes'>
			<Overload retVal='void' descr='// 0x2790F4B17D098E26
HUD::_0x2790F4B17D098E26(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2916a928514c9827' func='yes'>
			<Overload retVal='void' descr='// 0x2916A928514C9827
HUD::_0x2916A928514C9827();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2a25adc48f87841f' func='yes'>
			<Overload retVal='Any' descr='// 0x2A25ADC48F87841F
// 0x016D7AF9
HUD::_0x2A25ADC48F87841F();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2c173ae2bdb9385e' func='yes'>
			<Overload retVal='Any' descr='// 0x2C173AE2BDB9385E
HUD::_0x2C173AE2BDB9385E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2c9f302398e13141' func='yes'>
			<Overload retVal='void' descr='// 0x2C9F302398E13141
HUD::_0x2C9F302398E13141(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2de6c5e2e996f178' func='yes'>
			<Overload retVal='void' descr='// 0x2DE6C5E2E996F178
HUD::_0x2DE6C5E2E996F178(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2e22fefa0100275e' func='yes'>
			<Overload retVal='Any' descr='// 0x2E22FEFA0100275E
// 0x96863460
HUD::_0x2E22FEFA0100275E();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2f057596f2bd0061' func='yes'>
			<Overload retVal='Any' descr='// 0x2F057596F2BD0061
// 0xC85C4487
HUD::_0x2F057596F2BD0061();
----------------------------------------------------------------------------------------------------
```

Appears to return whether the player is using the pause menu store. Can&apos;t be sure though.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x311438a071dd9b1a' func='yes'>
			<Overload retVal='void' descr='// 0x311438A071DD9B1A
// 0xEEBDFE55
HUD::_0x311438A071DD9B1A(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x317eba71d7543f52' func='yes'>
			<Overload retVal='void' descr='// 0x317EBA71D7543F52
HUD::_0x317EBA71D7543F52(Any* p0, Any* p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
```

From the decompiled scripts, called 61 times:  

UI::_317EBA71D7543F52(&v_13, &v_13, &v_3, &v_3);  

```'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x32888337579a5970' func='yes'>
			<Overload retVal='void' descr='// 0x32888337579A5970
HUD::_0x32888337579A5970();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x33ee12743ccd6343' func='yes'>
			<Overload retVal='Any' descr='// 0x33EE12743CCD6343
// 0xE05E7052
HUD::_0x33EE12743CCD6343(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x359af31a4b52f5ed' func='yes'>
			<Overload retVal='Any' descr='// 0x359AF31A4B52F5ED
HUD::_0x359AF31A4B52F5ED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x35edd5b2e3ff01c0' func='yes'>
			<Overload retVal='void' descr='// 0x35EDD5B2E3FF01C0
// 0x20FD3E87
HUD::_0x35EDD5B2E3FF01C0();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x36c1451a88a09630' func='yes'>
			<Overload retVal='void' descr='// 0x36C1451A88A09630
// 0x8543AAC8
HUD::_0x36C1451A88A09630(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3bab9a4e4f2ff5c7' func='yes'>
			<Overload retVal='Any' descr='// 0x3BAB9A4E4F2FF5C7
// 0xD3BF3ABD
HUD::_0x3BAB9A4E4F2FF5C7();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3ca6050692bc61b0' func='yes'>
			<Overload retVal='void' descr='// 0x3CA6050692BC61B0
// 0x127310EB
HUD::_0x3CA6050692BC61B0(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3d3d15af7bcaaf83' func='yes'>
			<Overload retVal='void' descr='// 0x3D3D15AF7BCAAF83
// 0xC3DCBEDB
HUD::_0x3D3D15AF7BCAAF83(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3d9acb1eb139e702' func='yes'>
			<Overload retVal='Any' descr='// 0x3D9ACB1EB139E702
HUD::_0x3D9ACB1EB139E702();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3dda37128dd1aca8' func='yes'>
			<Overload retVal='void' descr='// 0x3DDA37128DD1ACA8
// 0xE87CBE4C
HUD::_0x3DDA37128DD1ACA8(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3f0cf9cb7e589b88' func='yes'>
			<Overload retVal='Any' descr='// 0x3F0CF9CB7E589B88
HUD::_0x3F0CF9CB7E589B88();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3f5cc444dcaaa8f2' func='yes'>
			<Overload retVal='void' descr='// 0x3F5CC444DCAAA8F2
// 0x7FB6FB2A
HUD::_0x3F5CC444DCAAA8F2(Any p0, Any p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x402f9ed62087e898' func='yes'>
			<Overload retVal='void' descr='// 0x402F9ED62087E898
// 0xC47AB1B0
HUD::_0x402F9ED62087E898();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x41350b4fc28e3941' func='yes'>
			<Overload retVal='void' descr='// 0x41350B4FC28E3941
HUD::_0x41350B4FC28E3941(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4167efe0527d706e' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4167EFE0527D706E
// 0xC5EB849A
HUD::_0x4167EFE0527D706E();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x488043841bbe156f' func='yes'>
			<Overload retVal='void' descr='// 0x488043841BBE156F
HUD::_0x488043841BBE156F();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4a0c7c9bb10abb36' func='yes'>
			<Overload retVal='void' descr='// 0x4A0C7C9BB10ABB36
// 0x44018EDB
HUD::_0x4A0C7C9BB10ABB36(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4a9923385bdb9dad' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4A9923385BDB9DAD
// 0x87871CE0
HUD::_0x4A9923385BDB9DAD();
----------------------------------------------------------------------------------------------------
```

example:  

if (!((v_7)==UI::_4A9923385BDB9DAD())) {  

        UI::SET_BLIP_SPRITE((v_6), (v_7));  

    }  

This function is hard-coded to always return 1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4b5b620c9b59ed34' func='yes'>
			<Overload retVal='void' descr='// 0x4B5B620C9B59ED34
HUD::_0x4B5B620C9B59ED34(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4e3cd0ef8a489541' func='yes'>
			<Overload retVal='Any' descr='// 0x4E3CD0EF8A489541
// 0xDA7951A2
HUD::_0x4E3CD0EF8A489541();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x54318c915d27e4ce' func='yes'>
			<Overload retVal='void' descr='// 0x54318C915D27E4CE
// 0x43996428
HUD::_0x54318C915D27E4CE(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x551df99658db6ee8' func='yes'>
			<Overload retVal='Any' descr='// 0x551DF99658DB6EE8
// 0x786CA0A2
HUD::_0x551DF99658DB6EE8(float p0, float p1, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x56c8b608cfd49854' func='yes'>
			<Overload retVal='void' descr='// 0x56C8B608CFD49854
// 0xF881AB87
HUD::_0x56C8B608CFD49854();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x577599cced639ca2' func='yes'>
			<Overload retVal='void' descr='// 0x577599CCED639CA2
HUD::_0x577599CCED639CA2(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x57d760d55f54e071' func='yes'>
			<Overload retVal='void' descr='// 0x57D760D55F54E071
// 0x9854485F
HUD::_0x57D760D55F54E071(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x583049884a2eee3c' func='yes'>
			<Overload retVal='void' descr='// 0x583049884A2EEE3C
// 0xC8BAB2F2
HUD::_0x583049884A2EEE3C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x593feae1f73392d4' func='yes'>
			<Overload retVal='Any' descr='// 0x593FEAE1F73392D4
// 0x22CA9F2A
HUD::_0x593FEAE1F73392D4();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5bff36d6ed83e0ae' func='yes'>
			<Overload retVal='Vector3' descr='// 0x5BFF36D6ED83E0AE
HUD::_0x5BFF36D6ED83E0AE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5fbd7095fe7ae57f' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5FBD7095FE7AE57F
// 0x51972B04
HUD::_0x5FBD7095FE7AE57F(Any p0, float* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x60734cc207c9833c' func='yes'>
			<Overload retVal='void' descr='// 0x60734CC207C9833C
// 0xE7E1E32B
HUD::_0x60734CC207C9833C(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x60e892ba4f5bdca4' func='yes'>
			<Overload retVal='void' descr='// 0x60E892BA4F5BDCA4
HUD::_0x60E892BA4F5BDCA4();
----------------------------------------------------------------------------------------------------
```

Something with Social Club or online.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x62e849b7eb28e770' func='yes'>
			<Overload retVal='void' descr='// 0x62E849B7EB28E770
HUD::_0x62E849B7EB28E770(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x632b2940c67f4ea9' func='yes'>
			<Overload retVal='BOOL' descr='// 0x632B2940C67F4EA9
HUD::_0x632B2940C67F4EA9(int scaleformHandle, Any* p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int scaleformHandle' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x66e7cb63c97b7d20' func='yes'>
			<Overload retVal='Any' descr='// 0x66E7CB63C97B7D20
// 0x92DAFA78
HUD::_0x66E7CB63C97B7D20();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x67eedea1b9bafd94' func='yes'>
			<Overload retVal='void' descr='// 0x67EEDEA1B9BAFD94
// 0x0D9969E4
HUD::_0x67EEDEA1B9BAFD94();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6a1738b4323fe2d9' func='yes'>
			<Overload retVal='void' descr='// 0x6A1738B4323FE2D9
HUD::_0x6A1738B4323FE2D9(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6b1de27ee78e6a19' func='yes'>
			<Overload retVal='void' descr='// 0x6B1DE27EE78E6A19
// 0x79A6CAF6
HUD::_0x6B1DE27EE78E6A19(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6cdd58146a436083' func='yes'>
			<Overload retVal='void' descr='// 0x6CDD58146A436083
HUD::_0x6CDD58146A436083(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6ef54ab721dc6242' func='yes'>
			<Overload retVal='void' descr='// 0x6EF54AB721DC6242
HUD::_0x6EF54AB721DC6242();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6f1554b0cc2089fa' func='yes'>
			<Overload retVal='void' descr='// 0x6F1554B0CC2089FA
// 0xA7C8594B
HUD::_0x6F1554B0CC2089FA(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6f72cd94f7b5b68c' func='yes'>
			<Overload retVal='int' descr='// 0x6F72CD94F7B5B68C
// 0x9D4934F4
HUD::_0x6F72CD94F7B5B68C();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x72c1056d678bb7d8' func='yes'>
			<Overload retVal='void' descr='// 0x72C1056D678BB7D8
// 0x83B608A0
HUD::_0x72C1056D678BB7D8(Hash weaponHash);
----------------------------------------------------------------------------------------------------
```

Appears to be a HIDE_* native.  

```'>
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x72dd432f3cdfc0ee' func='yes'>
			<Overload retVal='void' descr='// 0x72DD432F3CDFC0EE
// 0xBF25E7B2
HUD::_0x72DD432F3CDFC0EE(float posX, float posY, float posZ, float radius, int p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float radius' />
				<Param name='int p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x75a16c3da34f1245' func='yes'>
			<Overload retVal='void' descr='// 0x75A16C3DA34F1245
// 0x1D99F676
HUD::_0x75A16C3DA34F1245(Blip blip, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x75d3691713c3b05a' func='yes'>
			<Overload retVal='void' descr='// 0x75D3691713C3B05A
// 0x57218529
HUD::_0x75D3691713C3B05A();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7669f9e39dc17063' func='yes'>
			<Overload retVal='void' descr='// 0x7669F9E39DC17063
// 0xC380AC85
HUD::_0x7669F9E39DC17063();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7679cc1bcebe3d4c' func='yes'>
			<Overload retVal='void' descr='// 0x7679CC1BCEBE3D4C
// 0x198F32D7
HUD::_0x7679CC1BCEBE3D4C(Any p0, float p1, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7792424aa0eac32e' func='yes'>
			<Overload retVal='void' descr='// 0x7792424AA0EAC32E
// 0x2F9A309C
HUD::_0x7792424AA0EAC32E();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x77f16b447824da6c' func='yes'>
			<Overload retVal='void' descr='// 0x77F16B447824DA6C
// 0x0A89336C
HUD::_0x77F16B447824DA6C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x784ba7e0eceb4178' func='yes'>
			<Overload retVal='void' descr='// 0x784BA7E0ECEB4178
// 0x93045157
HUD::_0x784BA7E0ECEB4178(Any p0, float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x788e7fd431bd67f1' func='yes'>
			<Overload retVal='void' descr='// 0x788E7FD431BD67F1
// 0x97852A82
HUD::_0x788E7FD431BD67F1(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7ae0589093a2e088' func='yes'>
			<Overload retVal='Any' descr='// 0x7AE0589093A2E088
// 0x8C90D22F
HUD::_0x7AE0589093A2E088(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7b21e0bb01e8224a' func='yes'>
			<Overload retVal='void' descr='// 0x7B21E0BB01E8224A
HUD::_0x7B21E0BB01E8224A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7c226d5346d4d10a' func='yes'>
			<Overload retVal='void' descr='// 0x7C226D5346D4D10A
HUD::_0x7C226D5346D4D10A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7cd934010e115c2c' func='yes'>
			<Overload retVal='void' descr='// 0x7CD934010E115C2C
// 0x06349065
HUD::_0x7CD934010E115C2C(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7e17be53e1aaabaf' func='yes'>
			<Overload retVal='void' descr='// 0x7E17BE53E1AAABAF
// 0x6025AA2F
HUD::_0x7E17BE53E1AAABAF(int* p0, int* p1, int* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* p0' />
				<Param name='int* p1' />
				<Param name='int* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x801879a9b4f4b2fb' func='yes'>
			<Overload retVal='Any' descr='// 0x801879A9B4F4B2FB
HUD::_0x801879A9B4F4B2FB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x80fe4f3ab4e1b62a' func='yes'>
			<Overload retVal='void' descr='// 0x80FE4F3AB4E1B62A
// 0x3CD4307C
HUD::_0x80FE4F3AB4E1B62A();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x817b86108eb94e51' func='yes'>
			<Overload retVal='void' descr='// 0x817B86108EB94E51
// 0xD2161E77
HUD::_0x817B86108EB94E51(BOOL p0, Any* p1, Any* p2, Any* p3, Any* p4, Any* p5, Any* p6, Any* p7, Any
----------------------------------------------------------------------------------------------------
);

```

```

UI::_817B86108EB94E51(1, &g_189F36._f10CD1[0/*16*/], &g_189F36._f10CD1[1/*16*/], &g_189F36._f10CD1[2
/*16*/], &g_189F36._f10CD1[3/*16*/], &g_189F36._f10CD1[4/*16*/], &g_189F36._f10CD1[5/*16*/], &g_189F
36._f10CD1[6/*16*/], &g_189F36._f10CD1[7/*16*/]);  

```'>
				<Param name='BOOL p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
				<Param name='Any* p4' />
				<Param name='Any* p5' />
				<Param name='Any* p6' />
				<Param name='Any* p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x82cedc33687e1f50' func='yes'>
			<Overload retVal='void' descr='// 0x82CEDC33687E1F50
// 0x2F28F0A6
HUD::_0x82CEDC33687E1F50(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x84698ab38d0c6636' func='yes'>
			<Overload retVal='BOOL' descr='// 0x84698AB38D0C6636
// 0xC51BC42F
HUD::_0x84698AB38D0C6636(Hash hash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash hash' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8817605c2ba76200' func='yes'>
			<Overload retVal='void' descr='// 0x8817605C2BA76200
HUD::_0x8817605C2BA76200();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8efccf6ec66d85e4' func='yes'>
			<Overload retVal='Any' descr='// 0x8EFCCF6EC66D85E4
HUD::_0x8EFCCF6EC66D85E4(Any* p0, Any* p1, Any* p2, BOOL p3, BOOL p4);
----------------------------------------------------------------------------------------------------
```

Example, only occurrence in the scripts:  

UI::_8EFCCF6EC66D85E4(&v_23, &v_13, &v_13, 1, v_34);  

```'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8f08017f9d7c47bd' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8F08017F9D7C47BD
HUD::_0x8F08017F9D7C47BD(Any p0, Any* p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x900086f371220b6f' func='yes'>
			<Overload retVal='void' descr='// 0x900086F371220B6F
// 0xDA0AF00E
HUD::_0x900086F371220B6F(BOOL p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
```

SET_GPS_???  

```'>
				<Param name='BOOL p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9049fe339d5f6f6f' func='yes'>
			<Overload retVal='Any' descr='// 0x9049FE339D5F6F6F
// 0x199DED14
HUD::_0x9049FE339D5F6F6F();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x90a6526cf0381030' func='yes'>
			<Overload retVal='BOOL' descr='// 0x90A6526CF0381030
// 0xD6CC4766
HUD::_0x90A6526CF0381030(Any p0, Any* p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9135584d09a3437e' func='yes'>
			<Overload retVal='Any' descr='// 0x9135584D09A3437E
// 0x9D2C94FA
HUD::_0x9135584D09A3437E();
----------------------------------------------------------------------------------------------------
```

return bool according to scripts  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9245e81072704b8a' func='yes'>
			<Overload retVal='void' descr='// 0x9245E81072704B8A
HUD::_0x9245E81072704B8A(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x95cf81bd06ee1887' func='yes'>
			<Overload retVal='void' descr='// 0x95CF81BD06EE1887
// 0x7BFFE82F
HUD::_0x95CF81BD06EE1887();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x975d66a0bc17064c' func='yes'>
			<Overload retVal='void' descr='// 0x975D66A0BC17064C
// 0xF07D8CEF
HUD::_0x975D66A0BC17064C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x98215325a695e78a' func='yes'>
			<Overload retVal='void' descr='// 0x98215325A695E78A
HUD::_0x98215325A695E78A(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x98c3cf913d895111' func='yes'>
			<Overload retVal='Any' descr='// 0x98C3CF913D895111
HUD::_0x98C3CF913D895111(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9c16459b2324b2cf' func='yes'>
			<Overload retVal='void' descr='// 0x9C16459B2324B2CF
HUD::_0x9C16459B2324B2CF(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9e778248d6685fe0' func='yes'>
			<Overload retVal='void' descr='// 0x9E778248D6685FE0
// 0x7AD67C95
HUD::_0x9E778248D6685FE0(char* p0);
----------------------------------------------------------------------------------------------------
```

UI::0x7AD67C95(&quot;Gallery&quot;);  

UI::0x7AD67C95(&quot;Missions&quot;);  

UI::0x7AD67C95(&quot;General&quot;);  

UI::0x7AD67C95(&quot;Playlists&quot;);  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa13c11e1b5c06bfc' func='yes'>
			<Overload retVal='void' descr='// 0xA13C11E1B5C06BFC
// 0x520FCB6D
HUD::_0xA13C11E1B5C06BFC();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa13e93403f26c812' func='yes'>
			<Overload retVal='Any' descr='// 0xA13E93403F26C812
HUD::_0xA13E93403F26C812(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa17784fca9548d15' func='yes'>
			<Overload retVal='void' descr='// 0xA17784FCA9548D15
HUD::_0xA17784FCA9548D15(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa238192f33110615' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA238192F33110615
// 0x46794EB2
HUD::_0xA238192F33110615(int* p0, int* p1, int* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* p0' />
				<Param name='int* p1' />
				<Param name='int* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa277800a9eae340e' func='yes'>
			<Overload retVal='Any' descr='// 0xA277800A9EAE340E
HUD::_0xA277800A9EAE340E();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa48931185f0536fe' func='yes'>
			<Overload retVal='Hash' descr='// 0xA48931185F0536FE
// 0x22E9F555
HUD::_0xA48931185F0536FE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa4dede28b1814289' func='yes'>
			<Overload retVal='void' descr='// 0xA4DEDE28B1814289
// 0x52746FE1
HUD::_0xA4DEDE28B1814289();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa8b6afdac320ac87' func='yes'>
			<Overload retVal='void' descr='// 0xA8B6AFDAC320AC87
HUD::_0xA8B6AFDAC320AC87(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa8fdb297a8d25fba' func='yes'>
			<Overload retVal='void' descr='// 0xA8FDB297A8D25FBA
// 0x5205C6F5
HUD::_0xA8FDB297A8D25FBA();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa905192a6781c41b' func='yes'>
			<Overload retVal='void' descr='// 0xA905192A6781C41B
// 0xFE485135
HUD::_0xA905192A6781C41B(float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa9cbfd40b3fa3010' func='yes'>
			<Overload retVal='Any' descr='// 0xA9CBFD40B3FA3010
// 0xC5223796
HUD::_0xA9CBFD40B3FA3010();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaded7f5748acafe6' func='yes'>
			<Overload retVal='void' descr='// 0xADED7F5748ACAFE6
// 0x1D6859CA
HUD::_0xADED7F5748ACAFE6();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaf42195a42c63bba' func='yes'>
			<Overload retVal='Any' descr='// 0xAF42195A42C63BBA
HUD::_0xAF42195A42C63BBA();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb094bc1db4018240' func='yes'>
			<Overload retVal='void' descr='// 0xB094BC1DB4018240
// 0x18B012B7
HUD::_0xB094BC1DB4018240(Any p0, Any p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb13dcb4c6faad238' func='yes'>
			<Overload retVal='void' descr='// 0xB13DCB4C6FAAD238
HUD::_0xB13DCB4C6FAAD238(Ped ped, BOOL toggle, Any p3);
----------------------------------------------------------------------------------------------------
```

Called in decompiled scripts as alternative to _SET_PED_ENEMY_AI_BLIP in an else, when the additiona
l parameter p3 is not -1  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb2a592b04648a9cb' func='yes'>
			<Overload retVal='Pickup' descr='// 0xB2A592B04648A9CB
HUD::_0xB2A592B04648A9CB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb552929b85fc27ec' func='yes'>
			<Overload retVal='void' descr='// 0xB552929B85FC27EC
HUD::_0xB552929B85FC27EC(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb6871b0555b02996' func='yes'>
			<Overload retVal='Any' descr='// 0xB6871B0555B02996
// 0x5E93FBFA
HUD::_0xB6871B0555B02996(Any* p0, Any* p1, Any p2, Any* p3, Any* p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any* p3' />
				<Param name='Any* p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb695e2cd0a2da9ee' func='yes'>
			<Overload retVal='void' descr='// 0xB695E2CD0A2DA9EE
// 0x4A4A40A4
HUD::_0xB695E2CD0A2DA9EE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb99c4e4d9499df29' func='yes'>
			<Overload retVal='void' descr='// 0xB99C4E4D9499DF29
HUD::_0xB99C4E4D9499DF29(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb9c362babecddc7a' func='yes'>
			<Overload retVal='void' descr='// 0xB9C362BABECDDC7A
HUD::_0xB9C362BABECDDC7A(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba751764f0821256' func='yes'>
			<Overload retVal='void' descr='// 0xBA751764F0821256
// 0x7F349900
HUD::_0xBA751764F0821256();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba8d65c1c65702e5' func='yes'>
			<Overload retVal='void' descr='// 0xBA8D65C1C65702E5
HUD::_0xBA8D65C1C65702E5(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbae4f9b97cd43b30' func='yes'>
			<Overload retVal='void' descr='// 0xBAE4F9B97CD43B30
HUD::_0xBAE4F9B97CD43B30(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbf4f34a85ca2970c' func='yes'>
			<Overload retVal='void' descr='// 0xBF4F34A85CA2970C
// 0x317775DF
HUD::_0xBF4F34A85CA2970C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc2d15bef167e27bc' func='yes'>
			<Overload retVal='void' descr='// 0xC2D15BEF167E27BC
// 0xF4F3C796
HUD::_0xC2D15BEF167E27BC();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc2d2ad9eaae265b8' func='yes'>
			<Overload retVal='Any' descr='// 0xC2D2AD9EAAE265B8
HUD::_0xC2D2AD9EAAE265B8();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc4278f70131baa6d' func='yes'>
			<Overload retVal='void' descr='// 0xC4278F70131BAA6D
// 0x6AA6A1CC
HUD::_0xC4278F70131BAA6D(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc594b315edf2d4af' func='yes'>
			<Overload retVal='void' descr='// 0xC594B315EDF2D4AF
// 0x41B0D022
HUD::_0xC594B315EDF2D4AF(Ped ped);
----------------------------------------------------------------------------------------------------
```

Interesting fact: A hash collision for this is RESET_JETPACK_MODEL_SETTINGS  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc65ab383cd91df98' func='yes'>
			<Overload retVal='void' descr='// 0xC65AB383CD91DF98
// 0x71077FBD
HUD::_0xC65AB383CD91DF98();
----------------------------------------------------------------------------------------------------
```

Often called after _REMOVE_LOADING_PROMPT. Unsure what exactly it does, but It references busy_spinn
er, I can only guess its freeing the busy_spinner scaleform from memory  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc78e239ac5b2ddb9' func='yes'>
			<Overload retVal='void' descr='// 0xC78E239AC5B2DDB9
// 0x6C67131A
HUD::_0xC78E239AC5B2DDB9(BOOL p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc8e1071177a23be5' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC8E1071177A23BE5
HUD::_0xC8E1071177A23BE5(Any* p0, Any* p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc8f3aaf93d0600bf' func='yes'>
			<Overload retVal='Any' descr='// 0xC8F3AAF93D0600BF
// 0x4FA43BA4
HUD::_0xC8F3AAF93D0600BF(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xca6b2f7ce32ab653' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCA6B2F7CE32AB653
HUD::_0xCA6B2F7CE32AB653(Any p0, Any* p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcc3fdded67bcfc63' func='yes'>
			<Overload retVal='void' descr='// 0xCC3FDDED67BCFC63
// 0x630CD8EE
HUD::_0xCC3FDDED67BCFC63();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcd74233600c4ea6b' func='yes'>
			<Overload retVal='void' descr='// 0xCD74233600C4EA6B
HUD::_0xCD74233600C4EA6B(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcdca26e80faecb8f' func='yes'>
			<Overload retVal='void' descr='// 0xCDCA26E80FAECB8F
// 0xC84BE309
HUD::_0xCDCA26E80FAECB8F();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xce5d0e5e315db238' func='yes'>
			<Overload retVal='Any' descr='// 0xCE5D0E5E315DB238
HUD::_0xCE5D0E5E315DB238(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcef214315d276fd1' func='yes'>
			<Overload retVal='void' descr='// 0xCEF214315D276FD1
// 0xFF06772A
HUD::_0xCEF214315D276FD1(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd12882d3ff82bf11' func='yes'>
			<Overload retVal='void' descr='// 0xD12882D3FF82BF11
HUD::_0xD12882D3FF82BF11();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd1942374085c8469' func='yes'>
			<Overload retVal='void' descr='// 0xD1942374085C8469
HUD::_0xD1942374085C8469(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd2049635deb9c375' func='yes'>
			<Overload retVal='void' descr='// 0xD2049635DEB9C375
// 0xE8D3A910
HUD::_0xD2049635DEB9C375();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd2b32be3fc1626c6' func='yes'>
			<Overload retVal='void' descr='// 0xD2B32BE3FC1626C6
// 0x5F86AA39
HUD::_0xD2B32BE3FC1626C6();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd4438c0564490e63' func='yes'>
			<Overload retVal='void' descr='// 0xD4438C0564490E63
// 0x709B4BCB
HUD::_0xD4438C0564490E63();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd68a5ff8a3a89874' func='yes'>
			<Overload retVal='void' descr='// 0xD68A5FF8A3A89874
// 0x0E41E45C
HUD::_0xD68A5FF8A3A89874(int r, int g, int b, int a);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
				<Param name='int a' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd8e694757bcea8e9' func='yes'>
			<Overload retVal='void' descr='// 0xD8E694757BCEA8E9
// 0x62BABF2C
HUD::_0xD8E694757BCEA8E9();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdaf87174be7454ff' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDAF87174BE7454FF
HUD::_0xDAF87174BE7454FF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdb34e8d56fc13b08' func='yes'>
			<Overload retVal='void' descr='// 0xDB34E8D56FC13B08
// 0x7F93799B
HUD::_0xDB34E8D56FC13B08(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdcfb5d4db8bf367e' func='yes'>
			<Overload retVal='void' descr='// 0xDCFB5D4DB8BF367E
// 0xABBE1E45
HUD::_0xDCFB5D4DB8BF367E(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdd2238f57b977751' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDD2238F57B977751
// 0x3E47F357
HUD::_0xDD2238F57B977751(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xde03620f8703a9df' func='yes'>
			<Overload retVal='Any' descr='// 0xDE03620F8703A9DF
HUD::_0xDE03620F8703A9DF();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe0130b41d3cf4574' func='yes'>
			<Overload retVal='float' descr='// 0xE0130B41D3CF4574
// 0xA4098ACC
HUD::_0xE0130B41D3CF4574();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe1cd1e48e025e661' func='yes'>
			<Overload retVal='void' descr='// 0xE1CD1E48E025E661
// 0xD3F40140
HUD::_0xE1CD1E48E025E661();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe3b05614dce1d014' func='yes'>
			<Overload retVal='Any' descr='// 0xE3B05614DCE1D014
// 0xD217EE7E
HUD::_0xE3B05614DCE1D014(Any p0);
----------------------------------------------------------------------------------------------------
```

UI::GET_CURRENT_WEBSITE_PAGE_ID(int websiteID)  

returns the current website page sometimes returns false  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe67c6dfd386ea5e7' func='yes'>
			<Overload retVal='void' descr='// 0xE67C6DFD386EA5E7
// 0x5476B9FD
HUD::_0xE67C6DFD386EA5E7(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe6de0561d9232a64' func='yes'>
			<Overload retVal='void' descr='// 0xE6DE0561D9232A64
// 0xCF2E3E24
HUD::_0xE6DE0561D9232A64();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xec9264727eec0f28' func='yes'>
			<Overload retVal='void' descr='// 0xEC9264727EEC0F28
// 0xC06B763D
HUD::_0xEC9264727EEC0F28();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xecf128344e9ff9f1' func='yes'>
			<Overload retVal='void' descr='// 0xECF128344E9FF9F1
// 0x8F45D327
HUD::_0xECF128344E9FF9F1(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xee4c0e6dbc6f2c6f' func='yes'>
			<Overload retVal='void' descr='// 0xEE4C0E6DBC6F2C6F
// 0x67649EE0
HUD::_0xEE4C0E6DBC6F2C6F();
----------------------------------------------------------------------------------------------------
```

Hides the hud element displayed by _0x523A590C1A3CC0D3  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf06ebb91a81e09e3' func='yes'>
			<Overload retVal='void' descr='// 0xF06EBB91A81E09E3
// 0x11D09737
HUD::_0xF06EBB91A81E09E3(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf13fe2a80c05c561' func='yes'>
			<Overload retVal='Any' descr='// 0xF13FE2A80C05C561
// 0x850690FF
HUD::_0xF13FE2A80C05C561();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf1a6c18b35bcade6' func='yes'>
			<Overload retVal='void' descr='// 0xF1A6C18B35BCADE6
// 0xA2CAAB4F
HUD::_0xF1A6C18B35BCADE6(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf284ac67940c6812' func='yes'>
			<Overload retVal='Any' descr='// 0xF284AC67940C6812
// 0x7D95AFFF
HUD::_0xF284AC67940C6812();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf47e567b3630dd12' func='yes'>
			<Overload retVal='void' descr='// 0xF47E567B3630DD12
HUD::_0xF47E567B3630DD12(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf98e4b3e56afc7b1' func='yes'>
			<Overload retVal='void' descr='// 0xF98E4B3E56AFC7B1
// 0x25EC28C0
HUD::_0xF98E4B3E56AFC7B1(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfcfacd0db9d7a57d' func='yes'>
			<Overload retVal='void' descr='// 0xFCFACD0DB9D7A57D
HUD::_0xFCFACD0DB9D7A57D(Ped ped, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfdb423997fa30340' func='yes'>
			<Overload retVal='void' descr='// 0xFDB423997FA30340
// 0x4D0449C6
HUD::_0xFDB423997FA30340();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfdd85225b2dea55e' func='yes'>
			<Overload retVal='void' descr='// 0xFDD85225B2DEA55E
// 0xA4524B23
HUD::_0xFDD85225B2DEA55E();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfdec055ab549e328' func='yes'>
			<Overload retVal='void' descr='// 0xFDEC055AB549E328
// 0xAFA1148B
HUD::_0xFDEC055AB549E328();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ObjectDecalToggle' func='yes'>
			<Overload retVal='void' descr='// 0x444D8CF241EC25C5
// 0x0029046E
HUD::OBJECT_DECAL_TOGGLE(Hash hash);
----------------------------------------------------------------------------------------------------
```

Please change back to _0x444D8CF241EC25C5 (hash collision)  

```'>
				<Param name='Hash hash' />
			</Overload>
		</KeyWord>
		<KeyWord name='PulseBlip' func='yes'>
			<Overload retVal='void' descr='// 0x742D6FD43115AF73
// 0x44253855
HUD::PULSE_BLIP(Blip blip);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='RefreshWaypoint' func='yes'>
			<Overload retVal='void' descr='// 0x81FA173F170560D1
// 0xB395D753
HUD::REFRESH_WAYPOINT();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterNamedRendertarget' func='yes'>
			<Overload retVal='BOOL' descr='// 0x57D9C12635E25CE3
// 0xFAE5D6F0
HUD::REGISTER_NAMED_RENDERTARGET(char* p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ReleaseNamedRendertarget' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE9F6FFE837354DD4
// 0xD3F6C892
HUD::RELEASE_NAMED_RENDERTARGET(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveBlip' func='yes'>
			<Overload retVal='void' descr='// 0x86A652570E5F25DD
// 0xD8C3C1CD
HUD::REMOVE_BLIP(Blip* blip);
----------------------------------------------------------------------------------------------------
```

In the C++ SDK, this seems not to work-- the blip isn&apos;t removed immediately. I use it for saving car
s.  

E.g.:  

Ped pped = PLAYER::PLAYER_PED_ID();  

Vehicle v = PED::GET_VEHICLE_PED_IS_USING(pped);  

Blip b = UI::ADD_BLIP_FOR_ENTITY(v);  

works fine.  

But later attempting to delete it with:  

Blip b = UI::GET_BLIP_FROM_ENTITY(v);  

if (UI::DOES_BLIP_EXIST(b)) UI::REMOVE_BLIP(&b);  

doesn&apos;t work. And yes, doesn&apos;t work without the DOES_BLIP_EXIST check either. Also, if you attach mu
ltiple blips to the same thing (say, a vehicle), and that thing disappears, the blips randomly attac
h to other things (in my case, a vehicle).  

Thus for me, UI::REMOVE_BLIP(&b) only works if there&apos;s one blip, (in my case) the vehicle is marked 
as no longer needed, you drive away from it and it eventually despawns, AND there is only one blip a
ttached to it. I never intentionally attach multiple blips but if the user saves the car, this adds 
a blip. Then if they delete it, it is supposed to remove the blip, but it doesn&apos;t. Then they can imm
ediately save it again, causing another blip to re-appear.  

-------------  

Passing the address of the variable instead of the value works for me.  

e.g.  

int blip = UI::ADD_BLIP_FOR_ENTITY(ped);  

UI::REMOVE_BLIP(&blip);  

Remove blip will currently crash your game, just artificially remove the blip by setting the sprite 
to a id that is &apos;invisible&apos;.  

--  

It crashes my game.  

```'>
				<Param name='Blip* blip' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveLoadingPrompt' func='yes'>
			<Overload retVal='void' descr='// 0x10D373323E5B9C0D
// 0x94119534
HUD::_REMOVE_LOADING_PROMPT();
----------------------------------------------------------------------------------------------------
```

Removes the loading prompt at the bottom right of the screen, created by the UI::_SHOW_LOADING_PROMP
T native.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveMpGamerTag' func='yes'>
			<Overload retVal='void' descr='// 0x31698AA80E0223F8
// 0x3D081FE4
HUD::REMOVE_MP_GAMER_TAG(int gamerTagId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int gamerTagId' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveMultiplayerBankCash' func='yes'>
			<Overload retVal='void' descr='// 0xC7C6789AA1CFEDD0
// 0x728B4EF4
HUD::REMOVE_MULTIPLAYER_BANK_CASH();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveMultiplayerHudCash' func='yes'>
			<Overload retVal='void' descr='// 0x968F270E39141ECA
// 0x07BF4A7D
HUD::REMOVE_MULTIPLAYER_HUD_CASH();
----------------------------------------------------------------------------------------------------
```

Removes multiplayer cash hud each frame  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveNotification' func='yes'>
			<Overload retVal='void' descr='// 0xBE4390CB40B3E627
// 0xECA8ACB9
HUD::_REMOVE_NOTIFICATION(int notificationId);
----------------------------------------------------------------------------------------------------
```

Removes a notification instantly instead of waiting for it to disappear  

```'>
				<Param name='int notificationId' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestAdditionalText' func='yes'>
			<Overload retVal='void' descr='// 0x71A78003C8E71424
// 0x9FA9175B
HUD::REQUEST_ADDITIONAL_TEXT(char* gxt, int slot);
----------------------------------------------------------------------------------------------------
```

Request a gxt into the passed slot.  

```'>
				<Param name='char* gxt' />
				<Param name='int slot' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestAdditionalText_2' func='yes'>
			<Overload retVal='void' descr='// 0x6009F9F1AE90D8A6
// 0xF4D27EBE
HUD::_REQUEST_ADDITIONAL_TEXT_2(char* gxt, int slot);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* gxt' />
				<Param name='int slot' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetHudComponentValues' func='yes'>
			<Overload retVal='void' descr='// 0x450930E616475D0D
// 0xD15B46DA
HUD::RESET_HUD_COMPONENT_VALUES(int id);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int id' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetReticuleValues' func='yes'>
			<Overload retVal='void' descr='// 0x12782CE0A636E9F0
// 0xBE27AA3F
HUD::RESET_RETICULE_VALUES();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='RespondingAsTemp' func='yes'>
			<Overload retVal='void' descr='// 0xBD12C5EEE184C337
// 0xDCA3F423
HUD::RESPONDING_AS_TEMP(float p0);
----------------------------------------------------------------------------------------------------
```

Please change back to _0xBD12C5EEE184C33 (hash collision)  

actual native starts with SET_RADAR_ZOOM_...  

```'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='RestartFrontendMenu' func='yes'>
			<Overload retVal='void' descr='// 0x10706DC6AD2D49C0
// 0xB07DAF98
HUD::RESTART_FRONTEND_MENU(Hash menuHash, int p1);
----------------------------------------------------------------------------------------------------
```

Before using this native click the native above and look at the decription.  

Example:  

int GetHash = Function.Call&lt;int&gt;(Hash.GET_HASH_KEY, &quot;fe_menu_version_corona_lobby&quot;);  

Function.Call(Hash.ACTIVATE_FRONTEND_MENU, GetHash, 0, -1);  

Function.Call(Hash.RESTART_FRONTEND_MENU(GetHash, -1);  

This native refreshes the frontend menu.  

p1 = Hash of Menu  

p2 = Unknown but always works with -1.  

```'>
				<Param name='Hash menuHash' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAbilityBarValue' func='yes'>
			<Overload retVal='void' descr='// 0x9969599CCFF5D85E
// 0x24E53FD8
HUD::SET_ABILITY_BAR_VALUE(float value, float maxValue);
----------------------------------------------------------------------------------------------------
```

If &apos;value&apos; is 50 and &apos;maxValue&apos; is 100, the bar is halfway filled.  

Same with 5/10, 2/4, etc.  

```'>
				<Param name='float value' />
				<Param name='float maxValue' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAiBlipMaxDistance' func='yes'>
			<Overload retVal='void' descr='// 0x97C65887D4B37FA9
// 0xF9DC2AF7
HUD::_SET_AI_BLIP_MAX_DISTANCE(Ped ped, float distance);
----------------------------------------------------------------------------------------------------
```

Previously named _0x97C65887D4B37FA9.  

Sets the maximum view distance for the AI BIP  

```'>
				<Param name='Ped ped' />
				<Param name='float distance' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAiBlipType' func='yes'>
			<Overload retVal='void' descr='// 0xE52B8E7F85D39A08
// 0xD8E31B1A
HUD::_SET_AI_BLIP_TYPE(Ped ped, int type);
----------------------------------------------------------------------------------------------------
```

Set a ped&apos;s AI blip type:  

1 - Yellow blip with no name  

2  

```'>
				<Param name='Ped ped' />
				<Param name='int type' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipAlpha' func='yes'>
			<Overload retVal='void' descr='// 0x45FF974EEE1C8734
// 0xA791FCCD
HUD::SET_BLIP_ALPHA(Blip blip, int alpha);
----------------------------------------------------------------------------------------------------
```

Sets alpha-channel for blip color.  

Example:  

Blip blip = UI::ADD_BLIP_FOR_ENTITY(entity);  

UI::SET_BLIP_COLOUR(blip , 3);  

UI::SET_BLIP_ALPHA(blip , 64);  

```'>
				<Param name='Blip blip' />
				<Param name='int alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipAsFriendly' func='yes'>
			<Overload retVal='void' descr='// 0x6F6F290102C02AB4
// 0xF290CFD8
HUD::SET_BLIP_AS_FRIENDLY(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

false for enemy  

true for friendly  

```'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipAsMissionCreatorBlip' func='yes'>
			<Overload retVal='void' descr='// 0x24AC0137444F9FD5
// 0x802FB686
HUD::SET_BLIP_AS_MISSION_CREATOR_BLIP(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipAsShortRange' func='yes'>
			<Overload retVal='void' descr='// 0xBE8BE4FE60E27B72
// 0x5C67725E
HUD::SET_BLIP_AS_SHORT_RANGE(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipBright' func='yes'>
			<Overload retVal='void' descr='// 0xB203913733F27884
// 0x72BEE6DF
HUD::SET_BLIP_BRIGHT(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipCategory' func='yes'>
			<Overload retVal='void' descr='// 0x234CDD44D996FD9A
// 0xEF72F533
HUD::SET_BLIP_CATEGORY(Blip blip, int index);
----------------------------------------------------------------------------------------------------
```

int index:  

1 = No Text on blip or Distance  

2 = Text on blip  

3 = No text, just distance  

4+ No Text on blip or distance  

```'>
				<Param name='Blip blip' />
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipColour' func='yes'>
			<Overload retVal='void' descr='// 0x03D7FB09E75D6B7E
// 0xBB3C5A41
HUD::SET_BLIP_COLOUR(Blip blip, int color);
----------------------------------------------------------------------------------------------------
```

(Hex code are approximate)  

0: White (#fefefe)  

1: Red (#e03232)  

2: Green (#71cb71)  

3: Blue (#5db6e5)  

4: White (#fefefe)  

5: Taxi Yellow (#eec64e)  

6: Light Red (#c25050)  

7: Violet (#9c6eaf)  

8: Pink (#fe7ac3)  

9: Light Orange (#f59d79)  

10: Light Brown (#b18f83)  

11: Light Green (#8dcea7)  

12: Light Blue (Teal) (#70a8ae)  

13: Very Light Purple (#d3d1e7)  

14: Dark Purple (#8f7e98)  

15: Cyan (#6ac4bf)  

16: Light Yellow (#d5c398)  

17: Orange (#ea8e50)  

18: Light Blue (#97cae9)  

19: Dark Pink (#b26287)  

20: Dark Yellow (#8f8d79)  

21: Dark Orange (#a6755e)  

22: Light Gray (#afa8a8)  

23: Light Pink (#e78d9a)  

24: Lemon Green (#bbd65b)  

25: Forest Green (#0c7b56)  

26: Electric Blue (#7ac3fe)  

27: Bright Purple (#ab3ce6)  

28: Dark Taxi Yellow (#cda80c)  

29: Dark Blue (#4561ab)  

30: Dark Cyan (#29a5b8)  

31: Light Brown (#b89b7b)  

32: Very Light Blue (#c8e0fe)  

33: Light Yellow (#f0f096)  

34: Light Pink (#ed8ca1)  

35: Light Red (#f98a8a)  

36: Light Yellow (#fbeea5)  

37: White (#fefefe)  

38: Blue (#2c6db8)  

39: Light Gray (#9a9a9a)  

40: Dark Gray (#4c4c4c)  

Certainly a lot more remaining.  

```'>
				<Param name='Blip blip' />
				<Param name='int color' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipCoords' func='yes'>
			<Overload retVal='void' descr='// 0xAE2AF67E9D9AF65D
// 0x680A34D4
HUD::SET_BLIP_COORDS(Blip blip, float posX, float posY, float posZ);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipDisplay' func='yes'>
			<Overload retVal='void' descr='// 0x9029B2F3DA924928
// 0x2B521F91
HUD::SET_BLIP_DISPLAY(Blip blip, int displayId);
----------------------------------------------------------------------------------------------------
```

displayId = 8 : shows on radar  

displayId:  

3 = Shows on Main map but not Radar (not selectable on map)  

displayId = 2 (Shows on Main map + Radar + selectable)  

```'>
				<Param name='Blip blip' />
				<Param name='int displayId' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipFade' func='yes'>
			<Overload retVal='void' descr='// 0x2AEE8F8390D2298C
// 0xA5999031
HUD::SET_BLIP_FADE(Blip blip, int opacity, int duration);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='int opacity' />
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipFlashes' func='yes'>
			<Overload retVal='void' descr='// 0xB14552383D39CE3E
// 0xC0047F15
HUD::SET_BLIP_FLASHES(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipFlashesAlternate' func='yes'>
			<Overload retVal='void' descr='// 0x2E8D9498C56DD0D1
// 0x1A81202B
HUD::SET_BLIP_FLASHES_ALTERNATE(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipFlashInterval' func='yes'>
			<Overload retVal='void' descr='// 0xAA51DB313C010A7E
// 0xEAF67377
HUD::SET_BLIP_FLASH_INTERVAL(Blip blip, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipFlashTimer' func='yes'>
			<Overload retVal='void' descr='// 0xD3CD6FD297AE87CC
// 0x8D5DF611
HUD::SET_BLIP_FLASH_TIMER(Blip blip, int duration);
----------------------------------------------------------------------------------------------------
```

Adds up after viewing multiple R* scripts. I believe that the duration is in miliseconds.  

```'>
				<Param name='Blip blip' />
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipFriend' func='yes'>
			<Overload retVal='void' descr='// 0x23C3EB807312F01A
// 0x4C8F02B4
HUD::_SET_BLIP_FRIEND(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Highlights a blip by a half cyan circle.  

```'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipFriendly' func='yes'>
			<Overload retVal='void' descr='// 0xB81656BC81FE24D1
// 0x8DE82C15
HUD::_SET_BLIP_FRIENDLY(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Highlights a blip by a cyan color circle.  

Color can be changed with SET_BLIP_SECONDARY_COLOUR  

```'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipHighDetail' func='yes'>
			<Overload retVal='void' descr='// 0xE2590BC29220CEBB
// 0xD5842BFF
HUD::SET_BLIP_HIGH_DETAIL(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipNameFromTextFile' func='yes'>
			<Overload retVal='void' descr='// 0xEAA0FFE120D92784
// 0xAC8A5461
HUD::SET_BLIP_NAME_FROM_TEXT_FILE(Blip blip, char* gxtEntry);
----------------------------------------------------------------------------------------------------
```

Doesn&apos;t work if the label text of gxtEntry is &gt;= 80.  

```'>
				<Param name='Blip blip' />
				<Param name='char* gxtEntry' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipNameToPlayerName' func='yes'>
			<Overload retVal='void' descr='// 0x127DE7B20C60A6A3
// 0x03A0B8F9
HUD::SET_BLIP_NAME_TO_PLAYER_NAME(Blip blip, Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipPriority' func='yes'>
			<Overload retVal='void' descr='// 0xAE9FC9EF6A9FAC79
// 0xCE87DA6F
HUD::SET_BLIP_PRIORITY(Blip blip, int priority);
----------------------------------------------------------------------------------------------------
```

See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-resear
ch/page-35?p=1069477935  

```'>
				<Param name='Blip blip' />
				<Param name='int priority' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipRotation' func='yes'>
			<Overload retVal='void' descr='// 0xF87683CDF73C3F6E
// 0x6B8F44FE
HUD::SET_BLIP_ROTATION(Blip blip, int rotation);
----------------------------------------------------------------------------------------------------
```

After some testing, looks like you need to use UI:CEIL() on the rotation (vehicle/ped heading) befor
e using it there.  

```'>
				<Param name='Blip blip' />
				<Param name='int rotation' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipRoute' func='yes'>
			<Overload retVal='void' descr='// 0x4F7D8A9BFB0B43E9
// 0x3E160C90
HUD::SET_BLIP_ROUTE(Blip blip, BOOL enabled);
----------------------------------------------------------------------------------------------------
```

Enable / disable showing route for the Blip-object.  

```'>
				<Param name='Blip blip' />
				<Param name='BOOL enabled' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipRouteColour' func='yes'>
			<Overload retVal='void' descr='// 0x837155CD2F63DA09
// 0xDDE7C65C
HUD::SET_BLIP_ROUTE_COLOUR(Blip blip, int colour);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='int colour' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipScale' func='yes'>
			<Overload retVal='void' descr='// 0xD38744167B2FA257
// 0x1E6EC434
HUD::SET_BLIP_SCALE(Blip blip, float scale);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='float scale' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipSecondaryColour' func='yes'>
			<Overload retVal='void' descr='// 0x14892474891E09EB
// 0xC6384D32
HUD::SET_BLIP_SECONDARY_COLOUR(Blip blip, float r, float g, float b);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='float r' />
				<Param name='float g' />
				<Param name='float b' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipShowCone' func='yes'>
			<Overload retVal='void' descr='// 0x13127EC3665E8EE1
// 0xFF545AD8
HUD::SET_BLIP_SHOW_CONE(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipShrink' func='yes'>
			<Overload retVal='void' descr='// 0x2B6D467DAB714E8D
// 0xC575F0BC
HUD::_SET_BLIP_SHRINK(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Makes a blip go small when off the minimap.  

```'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlipSprite' func='yes'>
			<Overload retVal='void' descr='// 0xDF735600A4696DAF
// 0x8DBBB0B9
HUD::SET_BLIP_SPRITE(Blip blip, int spriteId);
----------------------------------------------------------------------------------------------------
```

Takes a blip object and adds a sprite to it on the map.  

You may have your own list, but since dev-c didn&apos;t show it I was bored and started looking through s
cripts and functions to get a presumable almost positive list of a majority of blip IDs  

h t t p://pastebin.com/Bpj9Sfft  

Blips Images + IDs:  

gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html  

```'>
				<Param name='Blip blip' />
				<Param name='int spriteId' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCursorSprite' func='yes'>
			<Overload retVal='void' descr='// 0x8DB8CFFD58B62552
HUD::_SET_CURSOR_SPRITE(int spriteId);
----------------------------------------------------------------------------------------------------
```

Changes the mouse cursor&apos;s sprite.   

public enum CursorType  

{  

    None = 0,  

    Normal = 1,  

    TransparentNormal = 2,  

    PreGrab = 3,  

    Grab = 4,  

    MiddleFinger = 5,  

    LeftArrow = 6,  

    RightArrow = 7,  

    UpArrow = 8,  

    DownArrow = 9,  

    HorizontalExpand = 10,  

    Add = 11,  

    Remove = 12,  

}  

```'>
				<Param name='int spriteId' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDirectorMode' func='yes'>
			<Overload retVal='void' descr='// 0x808519373FD336A3
HUD::_SET_DIRECTOR_MODE(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

If toggle is true, hides special ability bar / character name in the pause menu  

If toggle is false, shows special ability bar / character name in the pause menu  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFrontendActive' func='yes'>
			<Overload retVal='void' descr='// 0x745711A75AB09277
// 0x81E1AD32
HUD::SET_FRONTEND_ACTIVE(BOOL active);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL active' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGpsFlags' func='yes'>
			<Overload retVal='void' descr='// 0x5B440763A4C8D15B
// 0x60539BAB
HUD::SET_GPS_FLAGS(int p0, float p1);
----------------------------------------------------------------------------------------------------
```

Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set t
he flags, until the first script that called it has called CLEAR_GPS_FLAGS.  

Doesn&apos;t seem like the flags are actually read by the game at all.  

---------------  

Might be left-over from GTA IV. I kind of miss the *ding-dong* turn left in 2 meters lady lol.  

```'>
				<Param name='int p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGpsFlashes' func='yes'>
			<Overload retVal='void' descr='// 0x320D0E0D936A0E9B
// 0xE991F733
HUD::SET_GPS_FLASHES(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHudColour' func='yes'>
			<Overload retVal='void' descr='// 0xF314CF4F0211894E
// 0xF6E7E92B
HUD::_SET_HUD_COLOUR(int hudColorIndex, int r, int g, int b, int a);
----------------------------------------------------------------------------------------------------
```

HUD colors and their values: pastebin.com/d9aHPbXN  

```'>
				<Param name='int hudColorIndex' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
				<Param name='int a' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHudColoursSwitch' func='yes'>
			<Overload retVal='void' descr='// 0x1CCC708F0F850613
// 0x3B216749
HUD::_SET_HUD_COLOURS_SWITCH(int hudColorIndex, int hudColorIndex2);
----------------------------------------------------------------------------------------------------
```

HUD colors and their values: pastebin.com/d9aHPbXN  

--------------------------------------------------  

makes hudColorIndex2 color into hudColorIndex color  

```'>
				<Param name='int hudColorIndex' />
				<Param name='int hudColorIndex2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHudComponentPosition' func='yes'>
			<Overload retVal='void' descr='// 0xAABB1F56E2A17CED
// 0x2F3A0D15
HUD::SET_HUD_COMPONENT_POSITION(int id, float x, float y);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int id' />
				<Param name='float x' />
				<Param name='float y' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMapFullScreen' func='yes'>
			<Overload retVal='void' descr='// 0x5354C5BA2EA868A4
// 0xE4FD20D8
HUD::_SET_MAP_FULL_SCREEN(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

If toggle is true, the map is shown in full screen  

If toggle is false, the map is shown in normal mode  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMinimapAttitudeIndicatorLevel' func='yes'>
			<Overload retVal='void' descr='// 0xD201F3FF917A506D
// 0x0308EDF6
HUD::_SET_MINIMAP_ATTITUDE_INDICATOR_LEVEL(float altitude, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Argument must be 0.0f or above 38.0f, or it will be ignored.  

```'>
				<Param name='float altitude' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMinimapBlockWaypoint' func='yes'>
			<Overload retVal='void' descr='// 0x58FADDED207897DC
// 0xA41C3B62
HUD::SET_MINIMAP_BLOCK_WAYPOINT(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMinimapComponent' func='yes'>
			<Overload retVal='Any' descr='// 0x75A9A10948D1DEA6
// 0x419DCDC4
HUD::SET_MINIMAP_COMPONENT(int p0, BOOL p1, int p2);
----------------------------------------------------------------------------------------------------
```

Please change to void.  

p2 appears to be always -1.  

```'>
				<Param name='int p0' />
				<Param name='BOOL p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMinimapGolfCourse' func='yes'>
			<Overload retVal='void' descr='// 0x71BDB63DBAF8DA59
// 0x5133A750
HUD::SET_MINIMAP_GOLF_COURSE(int hole);
----------------------------------------------------------------------------------------------------
Not much is known so far on what it does _exactly_.

All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the m
ini-map/radar. This native also seems to change some other things related to the pause menu map&apos;s be
haviour, for example: you can no longer set waypoints, the pause menu map starts up in a &apos;zoomed in&apos;
 state. This native does not need to be executed every tick.

You need to center the minimap manually as well as change/lock it&apos;s zoom and angle in order for it t
o appear correctly on the minimap.

You&apos;ll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.

Use [`N_0x35edd5b2e3ff01c0()`](https://runtime.fivem.net/doc/reference.html#_0x35EDD5B2E3FF01C0) to 
reset the map when you no longer want to display any golf holes (you still need to unlock zoom, posi
tion and angle of the radar manually after calling this).'>
				<Param name='int hole' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMinimapRevealed' func='yes'>
			<Overload retVal='void' descr='// 0xF8DEE0A5600CBB93
// 0xD8D77733
HUD::_SET_MINIMAP_REVEALED(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

If true, the entire map will be revealed.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMissionName' func='yes'>
			<Overload retVal='void' descr='// 0x5F28ECF5FC84772F
// 0x68DCAE10
HUD::SET_MISSION_NAME(BOOL p0, char* name);
----------------------------------------------------------------------------------------------------
```

Takes a text label, gets the string (must not be longer than 600 chars, should not exceed 64 chars) 
and sets the name to that string.  

p0 must be true.  

```'>
				<Param name='BOOL p0' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMissionName_2' func='yes'>
			<Overload retVal='void' descr='// 0xE45087D85F468BC2
// 0x8D9A1734
HUD::_SET_MISSION_NAME_2(BOOL p0, char* name);
----------------------------------------------------------------------------------------------------
```

Similar to SET_MISSION_NAME but this one can take any string (must not be greater than 600 chars, sh
ould not exceed 64 chars), not just text labels.  

p0 must be true.  

```'>
				<Param name='BOOL p0' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMpGamerTagAlpha' func='yes'>
			<Overload retVal='void' descr='// 0xD48FE545CD46F857
// 0xF4418611
HUD::SET_MP_GAMER_TAG_ALPHA(int gamerTagId, int component, int alpha);
----------------------------------------------------------------------------------------------------
```

Sets flag&apos;s sprite transparency. 0-255.  

```'>
				<Param name='int gamerTagId' />
				<Param name='int component' />
				<Param name='int alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMpGamerTagChatting' func='yes'>
			<Overload retVal='void' descr='// 0x7B7723747CCB55B6
// 0x939218AB
HUD::_SET_MP_GAMER_TAG_CHATTING(int gamerTagId, char* string);
----------------------------------------------------------------------------------------------------
```

Set&apos;s the string displayed when flag 3 (AudioSpeaker) active.  

```'>
				<Param name='int gamerTagId' />
				<Param name='char* string' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMpGamerTagColor' func='yes'>
			<Overload retVal='void' descr='// 0x6DD05E9D83EFA4C9
// 0xC969F2D0
HUD::_SET_MP_GAMER_TAG_COLOR(int headDisplayId, char* username, BOOL pointedClanTag, BOOL isRockstar
----------------------------------------------------------------------------------------------------
, char* clanTag, Any p5, int r, int g, int b);

```

----------------------------------------------------------------------------------------------------

Old name: _CREATE_MP_GAMER_TAG_COLOR'>
				<Param name='int headDisplayId' />
				<Param name='char* username' />
				<Param name='BOOL pointedClanTag' />
				<Param name='BOOL isRockstar' />
			</Overload>
		</KeyWord>
		<KeyWord name='_CREATE_MP_GAMER_TAG_COLOR' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetMpGamerTagColor' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetMpGamerTagColour' func='yes'>
			<Overload retVal='void' descr='// 0x613ED644950626AE
// 0x7E3AA40A
HUD::SET_MP_GAMER_TAG_COLOUR(int gamerTagId, int flag, int color);
----------------------------------------------------------------------------------------------------
```

Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.  

```'>
				<Param name='int gamerTagId' />
				<Param name='int flag' />
				<Param name='int color' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMpGamerTagHealthBarColour' func='yes'>
			<Overload retVal='void' descr='// 0x3158C77A7E888AB4
// 0x5777EC77
HUD::SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR(int headDisplayId, int color);
----------------------------------------------------------------------------------------------------
```

Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.  

Should be enabled as flag (2). Has 0 opacity by default.  

- This was _SET_MP_GAMER_TAG_HEALTH_BAR_COLOR,  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_MP_GAMER_TAG_HEALTH_BAR_COLOR'>
				<Param name='int headDisplayId' />
				<Param name='int color' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_MP_GAMER_TAG_HEALTH_BAR_COLOR' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetMpGamerTagHealthBarColour' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetMpGamerTagIcons' func='yes'>
			<Overload retVal='void' descr='// 0xA67F9C46D612B6F1
// 0xB01A5434
HUD::_SET_MP_GAMER_TAG_ICONS(int headDisplayId, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Displays a bunch of icons above the players name, and level, and their name twice  

```'>
				<Param name='int headDisplayId' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMpGamerTagName' func='yes'>
			<Overload retVal='void' descr='// 0xDEA2B8283BAA3944
// 0x627A559B
HUD::SET_MP_GAMER_TAG_NAME(int gamerTagId, char* string);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int gamerTagId' />
				<Param name='char* string' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMpGamerTagVisibility' func='yes'>
			<Overload retVal='void' descr='// 0x63BB75ABEDC1F6A0
// 0xD41DF479
HUD::SET_MP_GAMER_TAG_VISIBILITY(int gamerTagId, int component, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

enum MpGamerTagComponent  

{  

  GAMER_NAME = 0,  

  CREW_TAG,  

  healthArmour,  

  BIG_TEXT,  

  AUDIO_ICON,  

  MP_USING_MENU,  

  MP_PASSIVE_MODE,  

  WANTED_STARS,  

  MP_DRIVER,  

  MP_CO_DRIVER,  

  MP_TAGGED,  

  GAMER_NAME_NEARBY,  

  ARROW,  

  MP_PACKAGES,  

  INV_IF_PED_FOLLOWING,  

  RANK_TEXT,  

  MP_TYPING  

};  

```'>
				<Param name='int gamerTagId' />
				<Param name='int component' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMpGamerTagWantedLevel' func='yes'>
			<Overload retVal='void' descr='// 0xCF228E2AA03099C3
// 0x0EBB003F
HUD::SET_MP_GAMER_TAG_WANTED_LEVEL(int gamerTagId, int wantedlvl);
----------------------------------------------------------------------------------------------------
```

displays wanted star above head  

```'>
				<Param name='int gamerTagId' />
				<Param name='int wantedlvl' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMpGamerTag_' func='yes'>
			<Overload retVal='void' descr='// 0xEE76FF7E6A0166B0
// 0x767DED29
HUD::_SET_MP_GAMER_TAG_(int headDisplayId, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int headDisplayId' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMultiplayerBankCash' func='yes'>
			<Overload retVal='void' descr='// 0xDD21B55DF695CD0A
// 0x2C842D03
HUD::SET_MULTIPLAYER_BANK_CASH();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetMultiplayerHudCash' func='yes'>
			<Overload retVal='void' descr='// 0xFD1D220394BCB824
// 0xA8DB435E
HUD::SET_MULTIPLAYER_HUD_CASH(int p0, int p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNewWaypoint' func='yes'>
			<Overload retVal='void' descr='// 0xFE43368D2AA4F2FC
// 0x8444E1F0
HUD::SET_NEW_WAYPOINT(float x, float y);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNorthYanktonMap' func='yes'>
			<Overload retVal='void' descr='// 0x9133955F1A2DA957
// 0x02F5F1D1
HUD::_SET_NORTH_YANKTON_MAP(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Toggles the North Yankton map  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_DRAW_MAP_VISIBLE'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_DRAW_MAP_VISIBLE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetNorthYanktonMap' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetNotificationBackgroundColor' func='yes'>
			<Overload retVal='void' descr='// 0x92F0DA1E27DB96DC
HUD::_SET_NOTIFICATION_BACKGROUND_COLOR(int hudIndex);
----------------------------------------------------------------------------------------------------
```

From the decompiled scripts:  

UI::_92F0DA1E27DB96DC(6);  

UI::_92F0DA1E27DB96DC(184);  

UI::_92F0DA1E27DB96DC(190);  

sets background color for the next notification  

6 = red  

184 = green  

190 = yellow  

Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15  

this seems to set the alpha to 255 automatically, if you have a work around let me know  

```'>
				<Param name='int hudIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNotificationColorNext' func='yes'>
			<Overload retVal='void' descr='// 0x39BBF623FC803EAC
// 0x6F1A1901
HUD::_SET_NOTIFICATION_COLOR_NEXT(int hudIndex);
----------------------------------------------------------------------------------------------------
```

sets font color for the next notification  

```'>
				<Param name='int hudIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNotificationFlashColor' func='yes'>
			<Overload retVal='void' descr='// 0x17430B918701C342
// 0xCF14D7F2
HUD::_SET_NOTIFICATION_FLASH_COLOR(int red, int green, int blue, int alpha);
----------------------------------------------------------------------------------------------------
```

sets color for notification flash  

```'>
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int blue' />
				<Param name='int alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNotificationMessage' func='yes'>
			<Overload retVal='int' descr='// 0x1CCD9A37359072CF
// 0xE7E3C98B
HUD::_SET_NOTIFICATION_MESSAGE(char* picName1, char* picName2, BOOL flash, int iconType, char* sender
----------------------------------------------------------------------------------------------------
ar* subject);

```

```

List of picNames: pastebin.com/XdpJVbHz  

flash is a bool for fading in.  

iconTypes:  

1 : Chat Box  

2 : Email  

3 : Add Friend Request  

4 : Nothing  

5 : Nothing  

6 : Nothing  

7 : Right Jumping Arrow  

8 : RP Icon  

9 : $ Icon  

&quot;sender&quot; is the very top header. This can be any old string.  

&quot;subject&quot; is the header under the sender.  

```'>
				<Param name='char* picName1' />
				<Param name='char* picName2' />
				<Param name='BOOL flash' />
				<Param name='int iconType' />
				<Param name='char* sender' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNotificationMessageClanTag' func='yes'>
			<Overload retVal='int' descr='// 0x5CBF7BADE20DB93E
// 0x3E807FE3
HUD::_SET_NOTIFICATION_MESSAGE_CLAN_TAG(char* picName1, char* picName2, BOOL flash, int iconType, cha
----------------------------------------------------------------------------------------------------
ender, char* subject, float duration, char* clanTag);

```

```

List of picNames pastebin.com/XdpJVbHz  

flash is a bool for fading in.  

iconTypes:  

1 : Chat Box  

2 : Email  

3 : Add Friend Request  

4 : Nothing  

5 : Nothing  

6 : Nothing  

7 : Right Jumping Arrow  

8 : RP Icon  

9 : $ Icon  

&quot;sender&quot; is the very top header. This can be any old string.  

&quot;subject&quot; is the header under the sender.  

&quot;duration&quot; is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as l
ong.  

&quot;clanTag&quot; shows a crew tag in the &quot;sender&quot; header, after the text. You need to use 3 underscores as 
padding. Maximum length of this field seems to be 7. (e.g. &quot;MK&quot; becomes &quot;___MK&quot;, &quot;ACE&quot; becomes &quot;___A
CE&quot;, etc.)  

```'>
				<Param name='char* picName1' />
				<Param name='char* picName2' />
				<Param name='BOOL flash' />
				<Param name='int iconType' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNotificationMessageClanTag_2' func='yes'>
			<Overload retVal='int' descr='// 0x531B84E7DA981FB6
// 0xDEB491C8
HUD::_SET_NOTIFICATION_MESSAGE_CLAN_TAG_2(char* picName1, char* picName2, BOOL flash, int iconType1, 
----------------------------------------------------------------------------------------------------
* sender, char* subject, float duration, char* clanTag, int iconType2, int p9);

```

```

List of picNames: pastebin.com/XdpJVbHz  

flash is a bool for fading in.  

iconTypes:  

1 : Chat Box  

2 : Email  

3 : Add Friend Request  

4 : Nothing  

5 : Nothing  

6 : Nothing  

7 : Right Jumping Arrow  

8 : RP Icon  

9 : $ Icon  

&quot;sender&quot; is the very top header. This can be any old string.  

&quot;subject&quot; is the header under the sender.  

&quot;duration&quot; is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as l
ong.  

&quot;clanTag&quot; shows a crew tag in the &quot;sender&quot; header, after the text. You need to use 3 underscores as 
padding. Maximum length of this field seems to be 7. (e.g. &quot;MK&quot; becomes &quot;___MK&quot;, &quot;ACE&quot; becomes &quot;___A
CE&quot;, etc.)  

iconType2 is a mirror of iconType. It shows in the &quot;subject&quot; line, right under the original iconType
.  

int IconNotification(char *text, char *text2, char *Subject)  

{  

	_SET_NOTIFICATION_TEXT_ENTRY(&quot;STRING&quot;);  

	ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  

	_SET_NOTIFICATION_MESSAGE_CLAN_TAG_2(&quot;CHAR_SOCIAL_CLUB&quot;, &quot;CHAR_SOCIAL_CLUB&quot;, 1, 7, text2, Subject, 
1.0f, &quot;__EXAMPLE&quot;, 7);  

	return _DRAW_NOTIFICATION(1, 1);  

}  

```'>
				<Param name='char* picName1' />
				<Param name='char* picName2' />
				<Param name='BOOL flash' />
				<Param name='int iconType1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNotificationMessage_2' func='yes'>
			<Overload retVal='int' descr='// 0x2B7E9A4EAAA93C89
// 0xED130FA1
HUD::_SET_NOTIFICATION_MESSAGE_2(char* picName1, int picName2, BOOL flash, int iconType, BOOL p4, cha
----------------------------------------------------------------------------------------------------
ender, char* subject);

```

```

List of picNames: pastebin.com/XdpJVbHz  

```'>
				<Param name='char* picName1' />
				<Param name='int picName2' />
				<Param name='BOOL flash' />
				<Param name='int iconType' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNotificationMessage_3' func='yes'>
			<Overload retVal='int' descr='// 0xC6F580E4C94926AC
HUD::_SET_NOTIFICATION_MESSAGE_3(char* picName1, char* picName2, BOOL p2, Any p3, char* p4, char* p5)
----------------------------------------------------------------------------------------------------
``

```

Needs more research.  

Only one type of usage in the scripts:  

UI::_C6F580E4C94926AC(&quot;CHAR_ACTING_UP&quot;, &quot;CHAR_ACTING_UP&quot;, 0, 0, &quot;DI_FEED_CHAR&quot;, a_0);  

```'>
				<Param name='char* picName1' />
				<Param name='char* picName2' />
				<Param name='BOOL p2' />
				<Param name='Any p3' />
				<Param name='char* p4' />
				<Param name='char* p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNotificationMessage_4' func='yes'>
			<Overload retVal='int' descr='// 0x1E6611149DB3DB6B
// 0x0EB382B7
HUD::_SET_NOTIFICATION_MESSAGE_4(char* picName1, char* picName2, BOOL flash, int iconType, char* send
----------------------------------------------------------------------------------------------------
char* subject, float duration);

```

```

NOTE: &apos;duration&apos; is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is hal
f as long.  

Example, only occurrence in the scripts:  

v_8 = UI::_1E6611149DB3DB6B(&quot;CHAR_SOCIAL_CLUB&quot;, &quot;CHAR_SOCIAL_CLUB&quot;, 0, 0, &v_9, &quot;&quot;, a_5);  

```'>
				<Param name='char* picName1' />
				<Param name='char* picName2' />
				<Param name='BOOL flash' />
				<Param name='int iconType' />
				<Param name='char* send' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNotificationTextEntry' func='yes'>
			<Overload retVal='void' descr='// 0x202709F4C58A0424
// 0x574EE85C
HUD::_SET_NOTIFICATION_TEXT_ENTRY(char* text);
----------------------------------------------------------------------------------------------------
```

Declares the entry type of a notification, for example &quot;STRING&quot;.  

int ShowNotification(char *text)  

{  

	_SET_NOTIFICATION_TEXT_ENTRY(&quot;STRING&quot;);  

	ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  

	return _DRAW_NOTIFICATION(1, 1);  

}  

```'>
				<Param name='char* text' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPauseMenuActive' func='yes'>
			<Overload retVal='void' descr='// 0xDF47FC56C71569CF
// 0x1DCD878E
HUD::SET_PAUSE_MENU_ACTIVE(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAiBlip' func='yes'>
			<Overload retVal='void' descr='// 0xD30C50DF888D58B5
// 0x96C4C4DD
HUD::_SET_PED_AI_BLIP(int pedHandle, BOOL showViewCones);
----------------------------------------------------------------------------------------------------
```

Previously named _0xD30C50DF888D58B5, this native turns on the AI blip on the specified ped. It also
 disappears automatically when the ped is too far or if the ped is dead. You don&apos;t need to control i
t with other natives.   

See gtaforums.com/topic/884370-native-research-ai-blips for further information.  

Note: Everything said at the bottom is only valid for persistant peds, as AI blips seem to behave di
fferently for non-persistant peds.  

• To create an AI blip, you must use UI::0xD30C50DF888D58B5() (_SET_PED_ENEMY_AI_BLIP). It has two a
rguments: &quot;ped&quot; which is the ped you want to AI blip to be linked to, and &quot;showViewCones&quot; which need
s to be true for AI blips to appear.  

• To check if a ped has an AI blip, you can use UI::DOES_PED_HAVE_AI_BLIP(Ped ped), which returns a 
simple bool.  

• By default, AI blips never disappear. If you want them to disappear when you&apos;re at a certain dista
nce from a ped, you can use UI::0x97C65887D4B37FA9(Ped ped, float distance) (_SET_AI_BLIP_MAX_DISTAN
CE)  

• By default, the blip only appears when you&apos;re in combat with the specified ped. If you want it to 
be always displayed, you can use UI::x0C4BBF625CA98C4E() (_IS_AI_BLIP_ALWAYS_SHOWN). It also has two
 arguments: &quot;ped&quot;, and a flag. If the flag is set to true, the blip will always be displayed. If it&apos;
s set to false, the AI blip will have its default behaviour.  

• By default, a view cone is displayed with the blip (basically a blue surface that represents the f
ield of view of the ped, like in vanilla stealth missions). If you don&apos;t want it, you can disable it
 with UI::HIDE_SPECIAL_ABILITY_LOCKON_OPERATION(Ped ped, bool flag). If the flag is set to true, the
 view cone is displayed. If the flag is set to false, it is not.  

• Finally, there&apos;s actually 3 types of AI blips:  

0 - the default, red, &quot;enemy&quot; blip  

1 - a weird, semi-transparent, nameless, yellow blip  

2 - the blue &quot;friend&quot; blip  

You can change an AI blip&apos;s type with UI::0xE52B8E7F85D39A08(Ped ped, int type) (_SET_AI_BLIP_TYPE).
  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_PED_ENEMY_AI_BLIP'>
				<Param name='int pedHandle' />
				<Param name='BOOL showViewCones' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_PED_ENEMY_AI_BLIP' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetPedAiBlip' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetPlayerBlipPositionThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x77E2DD177910E1CF
// 0x54E75C7D
HUD::_SET_PLAYER_BLIP_POSITION_THIS_FRAME(float x, float y);
----------------------------------------------------------------------------------------------------
```

Sets the position of the arrow icon representing the player on both the minimap and world map.  

Too bad this wouldn&apos;t work over the network (obviously not). Could spoof where we would be.  

```'>
				<Param name='float x' />
				<Param name='float y' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerCashChange' func='yes'>
			<Overload retVal='void' descr='// 0x0772DF77852C2E30
HUD::_SET_PLAYER_CASH_CHANGE(int cash, int bank);
----------------------------------------------------------------------------------------------------
```

Displays cash change notifications on HUD.  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_SINGLEPLAYER_HUD_CASH'>
				<Param name='int cash' />
				<Param name='int bank' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_SINGLEPLAYER_HUD_CASH' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetPlayerCashChange' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetRadarAsExteriorThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xE81B7D2A3DAB2D81
// 0x39ABB10E
HUD::SET_RADAR_AS_EXTERIOR_THIS_FRAME();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetRadarAsInteriorThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x59E727A1C9D3E31A
// 0x6F2626E1
HUD::SET_RADAR_AS_INTERIOR_THIS_FRAME(Hash interior, float x, float y, int heading, int zoom);
----------------------------------------------------------------------------------------------------
```

List of interior hashes: pastebin.com/1FUyXNqY  

Not for every interior zoom &gt; 0 available.  

```'>
				<Param name='Hash interior' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='int heading' />
				<Param name='int zoom' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRadarBigmapEnabled' func='yes'>
			<Overload retVal='void' descr='// 0x231C8F89D0539D8F
// 0x08EB83D2
HUD::_SET_RADAR_BIGMAP_ENABLED(BOOL toggleBigMap, BOOL showFullMap);
----------------------------------------------------------------------------------------------------
```

Toggles the big minimap state like in GTA:Online.  

```'>
				<Param name='BOOL toggleBigMap' />
				<Param name='BOOL showFullMap' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRadarZoom' func='yes'>
			<Overload retVal='void' descr='// 0x096EF57A0C999BBA
// 0x2A50D1A6
HUD::SET_RADAR_ZOOM(int zoomLevel);
----------------------------------------------------------------------------------------------------
```

zoomLevel ranges from 0 to 200  

```'>
				<Param name='int zoomLevel' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRadarZoomLevelThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xCB7CC0D58405AD41
// 0x09CF1CE5
HUD::_SET_RADAR_ZOOM_LEVEL_THIS_FRAME(float zoomLevel);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float zoomLevel' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextCentre' func='yes'>
			<Overload retVal='void' descr='// 0xC02F4DBFB51D988B
// 0xE26D39A1
HUD::SET_TEXT_CENTRE(BOOL align);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL align' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextChatUnk' func='yes'>
			<Overload retVal='void' descr='// 0x1DB21A44B09E8BA3
HUD::_SET_TEXT_CHAT_UNK(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Sets an unknown boolean value in the text chat.  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextColour' func='yes'>
			<Overload retVal='void' descr='// 0xBE6B23FFA53FB442
// 0xE54DD2C8
HUD::SET_TEXT_COLOUR(int red, int green, int blue, int alpha);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int blue' />
				<Param name='int alpha' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextDropshadow' func='yes'>
			<Overload retVal='void' descr='// 0x1CA3E9EAC9D93E5E
// 0xE2A11511
HUD::SET_TEXT_DROP_SHADOW();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextDropshadow_2' func='yes'>
			<Overload retVal='void' descr='// 0x465C84BC39F1C351
// 0xE6587517
HUD::SET_TEXT_DROPSHADOW(int distance, int r, int g, int b, int a);
----------------------------------------------------------------------------------------------------
Sets the drop shadow for the current text style.'>
				<Param name='int distance' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
				<Param name='int a' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextEdge' func='yes'>
			<Overload retVal='void' descr='// 0x441603240D202FA6
// 0x3F1A5DAB
HUD::SET_TEXT_EDGE(int p0, int r, int g, int b, int a);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
				<Param name='int a' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextFont' func='yes'>
			<Overload retVal='void' descr='// 0x66E0276CC5F6B9DA
// 0x80BC530D
HUD::SET_TEXT_FONT(int fontType);
----------------------------------------------------------------------------------------------------
```

fonts that mess up your text where made for number values/misc stuff  

```'>
				<Param name='int fontType' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextJustification' func='yes'>
			<Overload retVal='void' descr='// 0x4E096588B13FFECA
// 0x68CDFA60
HUD::SET_TEXT_JUSTIFICATION(int justifyType);
----------------------------------------------------------------------------------------------------
```

Types -  

0: Center-Justify  

1: Left-Justify  

2: Right-Justify  

Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen  

```'>
				<Param name='int justifyType' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextLeading' func='yes'>
			<Overload retVal='void' descr='// 0xA50ABC31E3CDFAFF
// 0x98CE21D4
HUD::SET_TEXT_LEADING(BOOL p0);
----------------------------------------------------------------------------------------------------
```

from script am_mp_yacht.c int?  

ui::set_text_leading(2);  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextOutline' func='yes'>
			<Overload retVal='void' descr='// 0x2513DFB0FB8400FE
// 0xC753412F
HUD::SET_TEXT_OUTLINE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextProportional' func='yes'>
			<Overload retVal='void' descr='// 0x038C1F517D7FDCF8
// 0xF49D8A08
HUD::SET_TEXT_PROPORTIONAL(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextRenderId' func='yes'>
			<Overload retVal='void' descr='// 0x5F15302936E07111
// 0xC5C3B7F3
HUD::SET_TEXT_RENDER_ID(int renderId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int renderId' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextRightJustify' func='yes'>
			<Overload retVal='void' descr='// 0x6B3C4650BC8BEE47
// 0x45B60520
HUD::SET_TEXT_RIGHT_JUSTIFY(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextScale' func='yes'>
			<Overload retVal='void' descr='// 0x07C837F9A01C34C9
// 0xB6E15B23
HUD::SET_TEXT_SCALE(float scale, float size);
----------------------------------------------------------------------------------------------------
```

Size range : 0f to 1.0f  

```'>
				<Param name='float scale' />
				<Param name='float size' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTextWrap' func='yes'>
			<Overload retVal='void' descr='// 0x63145D9C883A1A70
// 0x6F60AB54
HUD::SET_TEXT_WRAP(float start, float end);
----------------------------------------------------------------------------------------------------
```

It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are 
for X axis. Useful when positioning text set to center or aligned to the right.  

start - left boundry on screen position (0.0 - 1.0)  

end - right boundry on screen position (0.0 - 1.0)  

```'>
				<Param name='float start' />
				<Param name='float end' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetUseridsUihidden' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEF4CED81CEBEDC6D
// 0x4370999E
HUD::SET_USERIDS_UIHIDDEN(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
```

Hash collision! Please change back to _0xEF4CED81CEBEDC6D  

```'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWarningMessage' func='yes'>
			<Overload retVal='void' descr='// 0x7B1776B3B53F8D74
// 0xBE699BDE
HUD::SET_WARNING_MESSAGE(char* entryLine1, int instructionalKey, char* entryLine2, BOOL p3, Any p4, 
----------------------------------------------------------------------------------------------------
p5, Any* p6, BOOL background);

```

```

You can only use text entries. No custom text.  

Example: SET_WARNING_MESSAGE(&quot;t20&quot;, 3, &quot;adder&quot;, false, -1, 0, 0, true);  

```'>
				<Param name='char* entryLine1' />
				<Param name='int instructionalKey' />
				<Param name='char* entryLine2' />
				<Param name='BOOL p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWarningMessageWithHeader' func='yes'>
			<Overload retVal='void' descr='// 0xDC38CC1E35B6A5D7
// 0x2DB9EAB5
HUD::SET_WARNING_MESSAGE_WITH_HEADER(char* entryHeader, char* entryLine1, int instructionalKey, char
----------------------------------------------------------------------------------------------------
tryLine2, BOOL p4, Any p5, Any* p6, Any* p7, BOOL background);

```

```

You can only use text entries. No custom text.  

C# Example :  

Function.Call(Hash._SET_WARNING_MESSAGE_2, &quot;HUD_QUIT&quot;, &quot;HUD_CGIGNORE&quot;, 2, &quot;HUD_CGINVITE&quot;, 0, -1, 0, 
0, 1);  

you can recreate this easily with scaleforms  

---------------  

Fixed native name, from before nativedb restoration.  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_WARNING_MESSAGE_2'>
				<Param name='char* entryHeader' />
				<Param name='char* entryLine1' />
				<Param name='int instructionalKey' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_WARNING_MESSAGE_2' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetWarningMessageWithHeader' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetWarningMessage_3' func='yes'>
			<Overload retVal='void' descr='// 0x701919482C74B5AB
// 0x749929D3
HUD::_SET_WARNING_MESSAGE_3(char* entryHeader, char* entryLine1, Any instructionalKey, char* entryLi
----------------------------------------------------------------------------------------------------
BOOL p4, Any p5, Any p6, Any* p7, Any* p8, BOOL p9);

```

```

You can only use text entries. No custom text.  

```'>
				<Param name='char* entryHeader' />
				<Param name='char* entryLine1' />
				<Param name='Any instructionalKey' />
				<Param name='char* entryLi' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWaypointOff' func='yes'>
			<Overload retVal='void' descr='// 0xA7E4E2D361C2627F
// 0xB3496E1B
HUD::SET_WAYPOINT_OFF();
----------------------------------------------------------------------------------------------------
```

This native removes the current waypoint from the map.  

Example:  

C#:  

Function.Call(Hash.SET_WAYPOINT_OFF);  

C++:  

UI::SET_WAYPOINT_OFF();  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetWidescreenFormat' func='yes'>
			<Overload retVal='void' descr='// 0xC3B07BA00A83B0F1
// 0xF016E08F
HUD::SET_WIDESCREEN_FORMAT(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShowCursorThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xAAE7CE1D63167423
HUD::_SHOW_CURSOR_THIS_FRAME();
----------------------------------------------------------------------------------------------------
```

Shows the cursor on screen for the frame its called.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='ShowHeadingIndicatorOnBlip' func='yes'>
			<Overload retVal='void' descr='// 0x5FBCA48327B914DF
// 0xD1C3D71B
HUD::SHOW_HEADING_INDICATOR_ON_BLIP(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Adds the GTA: Online player heading indicator to a blip.  

```'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShowHudComponentThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x0B4DF1FA60C0E664
// 0x95E1546E
HUD::SHOW_HUD_COMPONENT_THIS_FRAME(int id);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int id' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShowNumberOnBlip' func='yes'>
			<Overload retVal='void' descr='// 0xA3C0B359DCB848B6
// 0x7BFC66C6
HUD::SHOW_NUMBER_ON_BLIP(Blip blip, int number);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Blip blip' />
				<Param name='int number' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShowSocialClubLegalScreen' func='yes'>
			<Overload retVal='void' descr='// 0x805D7CBB36FD6C4C
// 0x19FCBBB2
HUD::_SHOW_SOCIAL_CLUB_LEGAL_SCREEN();
----------------------------------------------------------------------------------------------------
```

probs one frame  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='ShowTickOnBlip' func='yes'>
			<Overload retVal='void' descr='// 0x74513EA3E505181E
// 0x3DCF0092
HUD::SHOW_TICK_ON_BLIP(Blip blip, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Adds a green checkmark on top of a blip.  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_BLIP_CHECKED'>
				<Param name='Blip blip' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_BLIP_CHECKED' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: ShowTickOnBlip' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='ShowWeaponWheel' func='yes'>
			<Overload retVal='void' descr='// 0xEB354E5376BC81A7
// 0x1EFFB02A
HUD::_SHOW_WEAPON_WHEEL(BOOL forcedShow);
----------------------------------------------------------------------------------------------------
```

Forces the weapon wheel to appear on screen.  

```'>
				<Param name='BOOL forcedShow' />
			</Overload>
		</KeyWord>
		<KeyWord name='ToggleStealthRadar' func='yes'>
			<Overload retVal='void' descr='// 0x6AFDFB93754950C7
// 0xC68D47C4
HUD::TOGGLE_STEALTH_RADAR(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='UnlockMinimapAngle' func='yes'>
			<Overload retVal='void' descr='// 0x8183455E16C42E3A
// 0x742043F9
HUD::UNLOCK_MINIMAP_ANGLE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='UnlockMinimapPosition' func='yes'>
			<Overload retVal='void' descr='// 0x3E93E06DB8EF1F30
// 0x5E8E6F54
HUD::UNLOCK_MINIMAP_POSITION();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='AddPickupToInteriorRoomByName' func='yes'>
			<Overload retVal='void' descr='// 0x3F6167F351168730
// 0xA2A73564
INTERIOR::ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME(Pickup pickup, char* roomName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Pickup pickup' />
				<Param name='char* roomName' />
			</Overload>
		</KeyWord>
		<KeyWord name='AreCoordsCollidingWithExterior' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEEA5AC2EDA7C33E8
// 0x7762249C
INTERIOR::_ARE_COORDS_COLLIDING_WITH_EXTERIOR(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Returns true if the coords are colliding with the outdoors, and false if they collide with an interi
or.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='CapInterior' func='yes'>
			<Overload retVal='void' descr='// 0xD9175F941610DB54
// 0x34E735A6
INTERIOR::CAP_INTERIOR(int interiorID, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Does something similar to INTERIOR::DISABLE_INTERIOR  

```'>
				<Param name='int interiorID' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearRoomForEntity' func='yes'>
			<Overload retVal='void' descr='// 0xB365FC0C4E27FFA7
// 0x7DDADB92
INTERIOR::CLEAR_ROOM_FOR_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableInterior' func='yes'>
			<Overload retVal='void' descr='// 0x6170941419D7D8EC
// 0x093ADEA5
INTERIOR::DISABLE_INTERIOR(int interiorID, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Example:   

This removes the interior from the strip club and when trying to walk inside the player just falls: 
 

INTERIOR::DISABLE_INTERIOR(118018, true);  

```'>
				<Param name='int interiorID' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableInteriorProp' func='yes'>
			<Overload retVal='void' descr='// 0x420BD37289EEE162
// 0xDBA768A1
INTERIOR::_DISABLE_INTERIOR_PROP(int interiorID, char* propName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int interiorID' />
				<Param name='char* propName' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableInteriorProp' func='yes'>
			<Overload retVal='void' descr='// 0x55E86AF2712B36A1
// 0xC80A5DDF
INTERIOR::_ENABLE_INTERIOR_PROP(int interiorID, char* propName);
----------------------------------------------------------------------------------------------------
```

More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/  

```'>
				<Param name='int interiorID' />
				<Param name='char* propName' />
			</Overload>
		</KeyWord>
		<KeyWord name='ForceRoomForEntity' func='yes'>
			<Overload retVal='void' descr='// 0x52923C4710DD9907
// 0x10BD4435
INTERIOR::FORCE_ROOM_FOR_ENTITY(Entity entity, int interiorID, Hash roomHashKey);
----------------------------------------------------------------------------------------------------
```

Forces the particular room in an interior to load incase not teleporting into the portal.

```'>
				<Param name='Entity entity' />
				<Param name='int interiorID' />
				<Param name='Hash roomHashKey' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetInteriorAtCoords' func='yes'>
			<Overload retVal='int' descr='// 0xB0F7F8663821D9C3
// 0xA17FBF37
INTERIOR::GET_INTERIOR_AT_COORDS(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.  

Example for VB.NET  

Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)  


```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetInteriorAtCoordsWithType' func='yes'>
			<Overload retVal='int' descr='// 0x05B7A89BD78797FC
// 0x96525B06
INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(float x, float y, float z, char* interiorType);
----------------------------------------------------------------------------------------------------
```

Returns the interior ID representing the requested interior at that location (if found?). The suppli
ed interior string is not the same as the one used to load the interior.  

Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))  

Interior types include: &quot;V_Michael&quot;, &quot;V_Franklins&quot;, &quot;V_Franklinshouse&quot;, etc.. you can find them in t
he scripts.  

Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same resul
t, without even having to specify the interior type.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='char* interiorType' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetInteriorFromCollision' func='yes'>
			<Overload retVal='int' descr='// 0xEC4CF9FCB29A4424
// 0x7ED33DC1
INTERIOR::GET_INTERIOR_FROM_COLLISION(float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetInteriorFromEntity' func='yes'>
			<Overload retVal='int' descr='// 0x2107BA504071A6BB
// 0x5C644614
INTERIOR::GET_INTERIOR_FROM_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
```

Returns the handle of the interior that the entity is in. Returns 0 if outside.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetInteriorGroupId' func='yes'>
			<Overload retVal='int' descr='// 0xE4A84ABF135EF91A
// 0x09D6376F
INTERIOR::GET_INTERIOR_GROUP_ID(int interiorID);
----------------------------------------------------------------------------------------------------
```

Returns the group ID of the specified interior. For example, regular interiors have group 0, subway 
interiors have group 1. There are a few other groups too.  

```'>
				<Param name='int interiorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetKeyForEntityInRoom' func='yes'>
			<Overload retVal='Hash' descr='// 0x399685DB942336BC
// 0x91EA80EF
INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(Entity entity);
----------------------------------------------------------------------------------------------------
```

Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetOffsetFromInteriorInWorldCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0x9E3B3E6D66F6E22F
// 0x7D8F26A1
INTERIOR::GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS(int interiorID, float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int interiorID' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRoomKeyFromEntity' func='yes'>
			<Overload retVal='Hash' descr='// 0x47C2A06D4F5F424B
// 0xE4ACF8C3
INTERIOR::GET_ROOM_KEY_FROM_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
```

Gets the room hash key from the room that the specified entity is in. Each room in every interior ha
s a unique key. Returns 0 if the entity is outside.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRoomKeyFromGameplayCam' func='yes'>
			<Overload retVal='Hash' descr='// 0xA6575914D2A0B450
// 0x4FF3D3F5
INTERIOR::_GET_ROOM_KEY_FROM_GAMEPLAY_CAM();
----------------------------------------------------------------------------------------------------
```

Returns the room hash key from the current gameplay cam.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='HideMapObjectThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xA97F257D0151A6AB
// 0x1F375B4C
INTERIOR::_HIDE_MAP_OBJECT_THIS_FRAME(Hash mapObjectHash);
----------------------------------------------------------------------------------------------------
```

This is the native that is used to hide the exterior of GTA Online apartment buildings when you are 
inside an apartment.  

More info: http://gtaforums.com/topic/836301-hiding-gta-online-apartment-exteriors/  

```'>
				<Param name='Hash mapObjectHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsInteriorCapped' func='yes'>
			<Overload retVal='BOOL' descr='// 0x92BAC8ACF88CEC26
// 0x18B17C80
INTERIOR::IS_INTERIOR_CAPPED(int interiorID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int interiorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsInteriorDisabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBC5115A5A939DD15
// 0x81F34C71
INTERIOR::IS_INTERIOR_DISABLED(int interiorID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int interiorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsInteriorPropEnabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x35F7DD45E8C0A16D
// 0x39A3CC6F
INTERIOR::_IS_INTERIOR_PROP_ENABLED(int interiorID, char* propName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int interiorID' />
				<Param name='char* propName' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsInteriorReady' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6726BDCCC1932F0E
// 0xE1EF6450
INTERIOR::IS_INTERIOR_READY(int interiorID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int interiorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsInteriorScene' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBC72B5D7A1CBD54D
// 0x55226C13
INTERIOR::IS_INTERIOR_SCENE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsValidInterior' func='yes'>
			<Overload retVal='BOOL' descr='// 0x26B0E73D7EAAF4D3
// 0x39C0B635
INTERIOR::IS_VALID_INTERIOR(int interiorID);
----------------------------------------------------------------------------------------------------
```

Return if interior is valid.  

```'>
				<Param name='int interiorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='LoadInterior' func='yes'>
			<Overload retVal='void' descr='// 0x2CA429C029CCF247
// 0x3ADA414E
INTERIOR::_LOAD_INTERIOR(int interiorID);
----------------------------------------------------------------------------------------------------
```

Load interior  

```'>
				<Param name='int interiorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x23b59d8912f94246' func='yes'>
			<Overload retVal='void' descr='// 0x23B59D8912F94246
// 0x617DC75D
INTERIOR::_0x23B59D8912F94246();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x405dc2aef6af95b9' func='yes'>
			<Overload retVal='void' descr='// 0x405DC2AEF6AF95B9
// 0x0E9529CC
INTERIOR::_0x405DC2AEF6AF95B9(Hash roomHashKey);
----------------------------------------------------------------------------------------------------
```

Usage: INTERIOR::_0x405DC2AEF6AF95B9(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));
  

```'>
				<Param name='Hash roomHashKey' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x483aca1176ca93f1' func='yes'>
			<Overload retVal='void' descr='// 0x483ACA1176CA93F1
INTERIOR::_0x483ACA1176CA93F1();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4c2330e61d3deb56' func='yes'>
			<Overload retVal='Any' descr='// 0x4C2330E61D3DEB56
INTERIOR::_0x4C2330E61D3DEB56(int interiorID);
----------------------------------------------------------------------------------------------------
```

Only used once in the entire game scripts, probably useless. Always returns 0.  

```'>
				<Param name='int interiorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x50c375537449f369' func='yes'>
			<Overload retVal='void' descr='// 0x50C375537449F369
INTERIOR::_0x50C375537449F369(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7241ccb7d020db69' func='yes'>
			<Overload retVal='void' descr='// 0x7241CCB7D020DB69
INTERIOR::_0x7241CCB7D020DB69(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x82ebb79e258fa2b7' func='yes'>
			<Overload retVal='void' descr='// 0x82EBB79E258FA2B7
// 0xE645E162
INTERIOR::_0x82EBB79E258FA2B7(Entity entity, int interiorID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='int interiorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x920d853f3e17f1da' func='yes'>
			<Overload retVal='void' descr='// 0x920D853F3E17F1DA
// 0xD79803B5
INTERIOR::_0x920D853F3E17F1DA(int interiorID, Hash roomHashKey);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int interiorID' />
				<Param name='Hash roomHashKey' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9e6542f0ce8e70a3' func='yes'>
			<Overload retVal='void' descr='// 0x9E6542F0CE8E70A3
// 0x5EF9C5C2
INTERIOR::_0x9E6542F0CE8E70A3(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Only found 4 times in Rockstar scripts.  

Clearly has something to do with Cutscenes.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaf348afcb575a441' func='yes'>
			<Overload retVal='void' descr='// 0xAF348AFCB575A441
// 0x1F6B4B13
INTERIOR::_0xAF348AFCB575A441(char* roomName);
----------------------------------------------------------------------------------------------------
```

Exemple of use(carmod_shop.c4)  

INTERIOR::_AF348AFCB575A441(&quot;V_CarModRoom&quot;);  

```'>
				<Param name='char* roomName' />
			</Overload>
		</KeyWord>
		<KeyWord name='RefreshInterior' func='yes'>
			<Overload retVal='void' descr='// 0x41F37C3427C75AE0
// 0x9A29ACE6
INTERIOR::REFRESH_INTERIOR(int interiorID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int interiorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetInteriorPropColor' func='yes'>
			<Overload retVal='void' descr='// 0xC1F1920BAF281317
INTERIOR::_SET_INTERIOR_PROP_COLOR(int interiorID, char* propName, int color);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int interiorID' />
				<Param name='char* propName' />
				<Param name='int color' />
			</Overload>
		</KeyWord>
		<KeyWord name='UnkGetInteriorAtCoords' func='yes'>
			<Overload retVal='int' descr='// 0xF0F77ADB9F67E79D
INTERIOR::_UNK_GET_INTERIOR_AT_COORDS(float x, float y, float z, int unk);
----------------------------------------------------------------------------------------------------
```

Returns the interior ID at the given coords, but only if the unknown variable is set to 0, otherwise
 it will return 0.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int unk' />
			</Overload>
		</KeyWord>
		<KeyWord name='UnpinInterior' func='yes'>
			<Overload retVal='void' descr='// 0x261CCE7EED010641
// 0xFCFF792A
INTERIOR::UNPIN_INTERIOR(int interiorID);
----------------------------------------------------------------------------------------------------
```

Does something similar to INTERIOR::DISABLE_INTERIOR.  

You don&apos;t fall through the floor but everything is invisible inside and looks the same as when INTER
IOR::DISABLE_INTERIOR is used. Peds behaves normally inside.  

```'>
				<Param name='int interiorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddToItemset' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE3945201F14637DD
// 0x6B0FE61B
ITEMSET::ADD_TO_ITEMSET(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='CleanItemset' func='yes'>
			<Overload retVal='void' descr='// 0x41BC0D722FC04221
// 0x919A4858
ITEMSET::CLEAN_ITEMSET(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateItemset' func='yes'>
			<Overload retVal='Vehicle' descr='// 0x35AD299F50D91B24
// 0x0A113B2C
ITEMSET::CREATE_ITEMSET(Vehicle distri);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle distri' />
			</Overload>
		</KeyWord>
		<KeyWord name='DestroyItemset' func='yes'>
			<Overload retVal='void' descr='// 0xDE18220B1C183EDA
// 0x83CE1A4C
ITEMSET::DESTROY_ITEMSET(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetIndexedItemInItemset' func='yes'>
			<Overload retVal='Any' descr='// 0x7A197E2521EE2BAB
// 0x3F712874
ITEMSET::GET_INDEXED_ITEM_IN_ITEMSET(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetItemsetSize' func='yes'>
			<Overload retVal='Any' descr='// 0xD9127E83ABF7C631
// 0x2B31F41A
ITEMSET::GET_ITEMSET_SIZE(ScrHandle x);
----------------------------------------------------------------------------------------------------
'>
				<Param name='ScrHandle x' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsInItemset' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2D0FC594D1E9C107
// 0x0D4B9730
ITEMSET::IS_IN_ITEMSET(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsItemsetValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB1B1EA596344DFAB
// 0xD201FC29
ITEMSET::IS_ITEMSET_VALID(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveFromItemset' func='yes'>
			<Overload retVal='void' descr='// 0x25E68244B0177686
// 0xA9565228
ITEMSET::REMOVE_FROM_ITEMSET(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x497420e022796b3f' func='yes'>
			<Overload retVal='Any' descr='// 0x497420E022796B3F
LOCALE::_0x497420E022796B3F();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='Absf' func='yes'>
			<Overload retVal='float' descr='// 0x73D57CFFDD12C355
// 0xAF6F6E0B
MISC::ABSF(float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='Absi' func='yes'>
			<Overload retVal='int' descr='// 0xF0D31AD191A74F87
// 0xB44677C5
MISC::ABSI(int value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='Acos' func='yes'>
			<Overload retVal='float' descr='// 0x1D08B970013C34B6
// 0xF4038776
MISC::ACOS(float p0);
----------------------------------------------------------------------------------------------------
```

Returns arccos value of p0.  

```'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddHospitalRestart' func='yes'>
			<Overload retVal='int' descr='// 0x1F464EF988465A81
// 0x4F3E3104
MISC::ADD_HOSPITAL_RESTART(float x, float y, float z, float p3, Any p4);
----------------------------------------------------------------------------------------------------
```

Returns the index of the newly created hospital spawn point.  

p3 might be radius?  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddPoliceRestart' func='yes'>
			<Overload retVal='Any' descr='// 0x452736765B31FC4B
// 0xE96C29FE
MISC::ADD_POLICE_RESTART(float p0, float p1, float p2, float p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddStuntJump' func='yes'>
			<Overload retVal='int' descr='// 0x1A992DA297A4630C
// 0xB630E5FF
MISC::ADD_STUNT_JUMP(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7, f
----------------------------------------------------------------------------------------------------
p8, float p9, float p10, float p11, float p12, float p13, float p14, Any p15, Any p16);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
				<Param name='float p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddStuntJumpAngled' func='yes'>
			<Overload retVal='int' descr='// 0xBBE5D803A5360CBF
// 0xB9B7E777
MISC::ADD_STUNT_JUMP_ANGLED(float p0, float p1, float p2, float p3, float p4, float p5, float p6, floa
----------------------------------------------------------------------------------------------------
, float p8, float p9, float p10, float p11, float p12, float p13, float p14, float p15, float p1
6, Any p17, Any p18);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='AreStringsEqual' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0C515FAB3FF9EA92
// 0x877C0BC5
MISC::ARE_STRINGS_EQUAL(char* string1, char* string2);
----------------------------------------------------------------------------------------------------
```

is this like strcmp??  

```'>
				<Param name='char* string1' />
				<Param name='char* string2' />
			</Overload>
		</KeyWord>
		<KeyWord name='Asin' func='yes'>
			<Overload retVal='float' descr='// 0xC843060B5765DCE7
// 0x998E5CAD
MISC::ASIN(float p0);
----------------------------------------------------------------------------------------------------
```

Returns arcsin value of p0.  

```'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='Atan' func='yes'>
			<Overload retVal='float' descr='// 0xA9D1795CD5043663
// 0x7A03CC8E
MISC::ATAN(float p0);
----------------------------------------------------------------------------------------------------
```

Returns arctan value of p0.  

```'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='Atan2' func='yes'>
			<Overload retVal='float' descr='// 0x8927CBF9D22261A4
// 0x2508AC81
MISC::ATAN2(float p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='BeginReplayStats' func='yes'>
			<Overload retVal='void' descr='// 0xE0E500246FF73D66
// 0x17F4F44D
MISC::BEGIN_REPLAY_STATS(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='CancelStuntJump' func='yes'>
			<Overload retVal='void' descr='// 0xE6B7B0ACD4E4B75E
// 0xF43D9821
MISC::CANCEL_STUNT_JUMP();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAngledAreaOfVehicles' func='yes'>
			<Overload retVal='void' descr='// 0x11DB3500F042A8AA
// 0xF11A3018
MISC::CLEAR_ANGLED_AREA_OF_VEHICLES(float p0, float p1, float p2, float p3, float p4, float p5, float
----------------------------------------------------------------------------------------------------
BOOL p7, BOOL p8, BOOL p9, BOOL p10, BOOL p11);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearArea' func='yes'>
			<Overload retVal='void' descr='// 0xA56F01F3765B93A0
// 0x854E9AB8
MISC::CLEAR_AREA(float X, float Y, float Z, float radius, BOOL p4, BOOL ignoreCopCars, BOOL ignoreObj
----------------------------------------------------------------------------------------------------
, BOOL p7);

```

```

Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);  

```'>
				<Param name='float X' />
				<Param name='float Y' />
				<Param name='float Z' />
				<Param name='float radius' />
				<Param name='BOOL p4' />
				<Param name='BOOL ignoreCopCars' />
				<Param name='BOOL ignoreObj' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAreaOfCops' func='yes'>
			<Overload retVal='void' descr='// 0x04F8FC8FCF58F88D
// 0x95C53824
MISC::CLEAR_AREA_OF_COPS(float x, float y, float z, float radius, int flags);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAreaOfEverything' func='yes'>
			<Overload retVal='void' descr='// 0x957838AAF91BD12D
// 0x20E4FFD9
MISC::_CLEAR_AREA_OF_EVERYTHING(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, B
----------------------------------------------------------------------------------------------------
p7);

```

```

GAMEPLAY::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects
 go away, peds, vehicles etc. All booleans set to true doesn&apos;t seem to change anything.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAreaOfObjects' func='yes'>
			<Overload retVal='void' descr='// 0xDD9B9B385AAC7F5B
// 0xBB720FE7
MISC::CLEAR_AREA_OF_OBJECTS(float x, float y, float z, float radius, int flags);
----------------------------------------------------------------------------------------------------
```

I looked through the PC scripts that this site provides you with a link to find. It shows the last p
aram mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAreaOfPeds' func='yes'>
			<Overload retVal='void' descr='// 0xBE31FD6CE464AC59
// 0x25BE7FA8
MISC::CLEAR_AREA_OF_PEDS(float x, float y, float z, float radius, int flags);
----------------------------------------------------------------------------------------------------
```

Example: 		CLEAR_AREA_OF_PEDS(0, 0, 0, 10000, 1);  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAreaOfProjectiles' func='yes'>
			<Overload retVal='void' descr='// 0x0A1CB9094635D1A6
// 0x18DB5434
MISC::CLEAR_AREA_OF_PROJECTILES(float x, float y, float z, float radius, BOOL isNetworkGame);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='BOOL isNetworkGame' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAreaOfVehicles' func='yes'>
			<Overload retVal='void' descr='// 0x01C7B9B38428AEB6
// 0x63320F3C
MISC::CLEAR_AREA_OF_VEHICLES(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, BOOL
----------------------------------------------------------------------------------------------------
BOOL p8);

```

```

Example: 		CLEAR_AREA_OF_VEHICLES(0, 0, 0, 10000, false, false, false, false, false);  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearBit' func='yes'>
			<Overload retVal='void' descr='// 0xE80492A9AC099A93
// 0x8BC9E618
MISC::CLEAR_BIT(int* address, int offset);
----------------------------------------------------------------------------------------------------
```

This sets bit [offset] of [address] to off.  

Example:  

GAMEPLAY::CLEAR_BIT(&bitAddress, 1);  

To check if this bit has been enabled:  

GAMEPLAY::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards  

```'>
				<Param name='int* address' />
				<Param name='int offset' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearCloudHat' func='yes'>
			<Overload retVal='void' descr='// 0x957E790EA1727B64
// 0x2D7787BC
MISC::_CLEAR_CLOUD_HAT();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearOverrideWeather' func='yes'>
			<Overload retVal='void' descr='// 0x338D2E3477711050
// 0x7740EA4E
MISC::CLEAR_OVERRIDE_WEATHER();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearReplayStats' func='yes'>
			<Overload retVal='void' descr='// 0x1B1AB132A16FDA55
// 0xC47DFF02
MISC::CLEAR_REPLAY_STATS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearWeatherTypePersist' func='yes'>
			<Overload retVal='void' descr='// 0xCCC39339BEF76CF5
// 0x6AB757D8
MISC::CLEAR_WEATHER_TYPE_PERSIST();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='CompareStrings' func='yes'>
			<Overload retVal='int' descr='// 0x1E34710ECD4AB0EB
// 0xFE25A58F
MISC::COMPARE_STRINGS(char* str1, char* str2, BOOL matchCase, int maxLength);
----------------------------------------------------------------------------------------------------
```

Compares two strings up to a specified number of characters.  

Parameters:  

str1 - String to be compared.  

str2 - String to be compared.  

matchCase - Comparison will be case-sensitive.  

maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.  

Returns:  

A value indicating the relationship between the strings:  

&lt;0 - The first non-matching character in &apos;str1&apos; is less than the one in &apos;str2&apos;. (e.g. &apos;A&apos; &lt; &apos;B&apos;, so 
result = -1)  

0 - The contents of both strings are equal.  

&gt;0 - The first non-matching character in &apos;str1&apos; is less than the one in &apos;str2&apos;. (e.g. &apos;B&apos; &gt; &apos;A&apos;, so 
result = 1)  

Examples:  

GAMEPLAY::COMPARE_STRINGS(&quot;STRING&quot;, &quot;string&quot;, false, -1); // 0; equal  

GAMEPLAY::COMPARE_STRINGS(&quot;TESTING&quot;, &quot;test&quot;, false, 4); // 0; equal  

GAMEPLAY::COMPARE_STRINGS(&quot;R2D2&quot;, &quot;R2xx&quot;, false, 2); // 0; equal  

GAMEPLAY::COMPARE_STRINGS(&quot;foo&quot;, &quot;bar&quot;, false, -1); // 4; &apos;f&apos; &gt; &apos;b&apos;  

GAMEPLAY::COMPARE_STRINGS(&quot;A&quot;, &quot;A&quot;, true, 1); // 0; equal  

When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
  

GAMEPLAY::COMPARE_STRINGS(&quot;A&quot;, &quot;a&quot;, true, 1); // -1; &apos;A&apos; &lt; &apos;a&apos;  

GAMEPLAY::COMPARE_STRINGS(&quot;a&quot;, &quot;A&quot;, true, 1); // 1; &apos;a&apos; &gt; &apos;A&apos;  

```'>
				<Param name='char* str1' />
				<Param name='char* str2' />
				<Param name='BOOL matchCase' />
				<Param name='int maxLength' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateIncident' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3F892CAF67444AE7
// 0xFC5FF7B3
MISC::CREATE_INCIDENT(int incidentType, float x, float y, float z, int p5, float radius, int* outInci
----------------------------------------------------------------------------------------------------
ID);

```

```

enum IncidentTypes  

{  

    FireDepartment = 3,  

    Paramedics = 5,  

    Police = 7,  

    PedsInCavalcades = 11,   

    Merryweather = 14  

};  

As for the &apos;police&apos; incident, it will call police cars to you, but unlike PedsInCavalcades & Merrywe
ather they won&apos;t start shooting at you unless you shoot first or shoot at them. The top 2 however se
em to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I f
ound out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4
 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 para
m I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3
 (Emergency Services) they use 3.0f.   

Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you
 from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course n
ot IV).  

Side Note 2: I say it breaks as if you call this proper,  

if(CREATE_INCIDENT) etc it will return false if you do as I said above.  

=====================================================  

```'>
				<Param name='int incidentType' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int p5' />
				<Param name='float radius' />
				<Param name='int* outInci' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateIncidentWithEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x05983472F0494E60
// 0xBBC35B03
MISC::CREATE_INCIDENT_WITH_ENTITY(int incidentType, Ped ped, int amountOfPeople, float radius, int* o
----------------------------------------------------------------------------------------------------
cidentID);

```

```

p0 could be type (valueused in scripts: 14, 7, 5, 3, 11)  

p1 is a return from get_player_ped() in am_gang_call.c, but player_ped_id() in other (non am) script
s.  

p3 is usually 0f or 3f  

=====================================================  

enum IncidentTypes  

{  

    FireDepartment = 3,  

    Paramedics = 5,  

    Police = 7,  

    PedsInCavalcades = 11,   

    Merryweather = 14  

};  

As for the &apos;police&apos; incident, it will call police cars to you, but unlike PedsInCavalcades & Merrywe
ather they won&apos;t start shooting at you unless you shoot first or shoot at them. The top 2 however se
em to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I f
ound out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4
 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 para
m I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3
 (Emergency Services) they use 3.0f.   

Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you
 from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course n
ot IV).  

Side Note 2: I say it breaks as if you call this proper,  

if(CREATE_INCIDENT) etc it will return false if you do as I said above.  

=====================================================  

```'>
				<Param name='int incidentType' />
				<Param name='Ped ped' />
				<Param name='int amountOfPeople' />
				<Param name='float radius' />
				<Param name='int* o' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateLightningThunder' func='yes'>
			<Overload retVal='void' descr='// 0xF6062E089251C898
// 0xDF38165E
MISC::_CREATE_LIGHTNING_THUNDER();
----------------------------------------------------------------------------------------------------
```

creates single lightning+thunder at random position  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteIncident' func='yes'>
			<Overload retVal='void' descr='// 0x556C1AA270D5A207
// 0x212BD0DC
MISC::DELETE_INCIDENT(int incidentId);
----------------------------------------------------------------------------------------------------
```

Delete an incident with a given id.  

=======================================================  

Correction, I have change this to int, instead of int*  

as it doesn&apos;t use a pointer to the createdIncident.  

If you try it you will crash (or) freeze.  

=======================================================  

```'>
				<Param name='int incidentId' />
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteStuntJump' func='yes'>
			<Overload retVal='void' descr='// 0xDC518000E39DAE1F
// 0x840CB5DA
MISC::DELETE_STUNT_JUMP(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableAutomaticRespawn' func='yes'>
			<Overload retVal='void' descr='// 0x2C2B3493FBF51C71
// 0x296574AE
MISC::_DISABLE_AUTOMATIC_RESPAWN(BOOL disableRespawn);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL disableRespawn' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableHospitalRestart' func='yes'>
			<Overload retVal='void' descr='// 0xC8535819C450EBA8
// 0x09F49C72
MISC::DISABLE_HOSPITAL_RESTART(int hospitalIndex, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

The game by default has 5 hospital respawn points. Disabling them all will cause the player to respa
wn at the last position they were.  

Doesn&apos;t work....  

```'>
				<Param name='int hospitalIndex' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisablePoliceRestart' func='yes'>
			<Overload retVal='void' descr='// 0x23285DED6EBD7EA3
// 0x0A280324
MISC::DISABLE_POLICE_RESTART(int policeIndex, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Disables the spawn point at the police house on the specified index.  

policeIndex: The police house index.  

toggle: true to enable the spawn point, false to disable.  

```'>
				<Param name='int policeIndex' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableStuntJumpSet' func='yes'>
			<Overload retVal='void' descr='// 0xA5272EBEDD4747F6
// 0x644C9FA4
MISC::DISABLE_STUNT_JUMP_SET(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisplayOnscreenKeyboard' func='yes'>
			<Overload retVal='void' descr='// 0x00DC833F2568DBF6
// 0xAD99F2CE
MISC::DISPLAY_ONSCREEN_KEYBOARD(int p0, char* windowTitle, char* p2, char* defaultText, char* default
----------------------------------------------------------------------------------------------------
at1, char* defaultConcat2, char* defaultConcat3, int maxInputLength);

```

```

note, p0 is set to 6 for PC platform in at least 1 script, or to `unk::_get_ui_language_id() == 0` o
therwise.  

NOTE: windowTitle uses text labels, and an invalid value will display nothing.  

Dr. Underscore: `UNK::_GET_UI_LANGUAGE_ID()` is now `UNK::_GET_CURRENT_LANGUAGE_ID()`  

www.gtaforums.com/topic/788343-vrel-script-hook-v/?p=1067380474  

windowTitle&apos;s  

-----------------  

CELL_EMAIL_BOD	=	&quot;Enter your Eyefind message&quot;  

CELL_EMAIL_BODE	=	&quot;Message too long. Try again&quot;  

CELL_EMAIL_BODF	=	&quot;Forbidden message. Try again&quot;  

CELL_EMAIL_SOD	=	&quot;Enter your Eyefind subject&quot;  

CELL_EMAIL_SODE	=	&quot;Subject too long. Try again&quot;  

CELL_EMAIL_SODF	=	&quot;Forbidden text. Try again&quot;  

CELL_EMASH_BOD	=	&quot;Enter your Eyefind message&quot;  

CELL_EMASH_BODE	=	&quot;Message too long. Try again&quot;  

CELL_EMASH_BODF	=	&quot;Forbidden message. Try again&quot;  

CELL_EMASH_SOD	=	&quot;Enter your Eyefind subject&quot;  

CELL_EMASH_SODE	=	&quot;Subject too long. Try again&quot;  

CELL_EMASH_SODF	=	&quot;Forbidden Text. Try again&quot;  

FMMC_KEY_TIP10	=	&quot;Enter Synopsis&quot;  

FMMC_KEY_TIP12	=	&quot;Enter Custom Team Name&quot;  

FMMC_KEY_TIP12F	=	&quot;Forbidden Text. Try again&quot;  

FMMC_KEY_TIP12N	=	&quot;Custom Team Name&quot;  

FMMC_KEY_TIP8	=	&quot;Enter Message&quot;  

FMMC_KEY_TIP8F	=	&quot;Forbidden Text. Try again&quot;  

FMMC_KEY_TIP8FS	=	&quot;Invalid Message. Try again&quot;  

FMMC_KEY_TIP8S	=	&quot;Enter Message&quot;  

FMMC_KEY_TIP9	=	&quot;Enter Outfit Name&quot;  

FMMC_KEY_TIP9F	=	&quot;Invalid Outfit Name. Try again&quot;  

FMMC_KEY_TIP9N	=	&quot;Outfit Name&quot;  

PM_NAME_CHALL	=	&quot;Enter Challenge Name&quot;  

```'>
				<Param name='int p0' />
				<Param name='char* windowTitle' />
				<Param name='char* p2' />
				<Param name='char* defaultText' />
				<Param name='char* default' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisplayOnscreenKeyboard_2' func='yes'>
			<Overload retVal='void' descr='// 0xCA78CFA0366592FE
// 0xD2688412
MISC::_DISPLAY_ONSCREEN_KEYBOARD_2(int p0, char* windowTitle, Any* p2, char* defaultText, char* defau
----------------------------------------------------------------------------------------------------
ncat1, char* defaultConcat2, char* defaultConcat3, char* defaultConcat4, char* defaultConcat5, c
har* defaultConcat6, char* defaultConcat7, int maxInputLength);

```

```

only documented to be continued...  

```'>
				<Param name='int p0' />
				<Param name='char* windowTitle' />
				<Param name='Any* p2' />
				<Param name='char* defaultText' />
				<Param name='char* defau' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoAutoSave' func='yes'>
			<Overload retVal='void' descr='// 0x50EEAAD86232EE55
// 0x54C44B1A
MISC::DO_AUTO_SAVE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='EnableDispatchService' func='yes'>
			<Overload retVal='void' descr='// 0xDC0F817884CDD856
// 0x0B710A51
MISC::ENABLE_DISPATCH_SERVICE(int dispatchService, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Directly from R*:  

enum eDispatchType : UINT16  

{  

    DT_PoliceAutomobile = 1,  

    DT_PoliceHelicopter = 2,  

    DT_FireDepartment = 3,  

    DT_SwatAutomobile = 4,  

    DT_AmbulanceDepartment = 5,  

    DT_PoliceRiders = 6,  

    DT_PoliceVehicleRequest = 7,  

    DT_PoliceRoadBlock = 8,  

    DT_PoliceAutomobileWaitPulledOver = 9,  

    DT_PoliceAutomobileWaitCruising = 10,  

    DT_Gangs = 11,  

    DT_SwatHelicopter = 12,  

    DT_PoliceBoat = 13,  

    DT_ArmyVehicle = 14,  

    DT_BikerBackup = 15  

};  

By making toggle false it disables the dispatch.  

curious if this is what they used when you toggled on and off cops in a GTA IV freemode you hosted. 
Sad they got rid of the option to make a private session without cops.  

Also on x360 seems with or without neverWanted on, setting these to all false in SP of course doesn&apos;
t seem to work. I would understand getting stars, but cops are still dispatched and combat you.  

```'>
				<Param name='int dispatchService' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableStuntJumpSet' func='yes'>
			<Overload retVal='void' descr='// 0xE369A5783B866016
// 0x9D1E7785
MISC::ENABLE_STUNT_JUMP_SET(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableTennisMode' func='yes'>
			<Overload retVal='void' descr='// 0x28A04B411933F8A6
// 0x0BD3F9EC
MISC::ENABLE_TENNIS_MODE(Ped ped, BOOL toggle, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Makes the ped jump around like they&apos;re in a tennis match  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndReplayStats' func='yes'>
			<Overload retVal='void' descr='// 0xA23E821FBDF8A5F2
// 0xCB570185
MISC::END_REPLAY_STATS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='FindSpawnPointInDirection' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6874E2190B0C1972
// 0x71AEFD77
MISC::FIND_SPAWN_POINT_IN_DIRECTION(float x1, float y1, float z1, float x2, float y2, float z2, float
----------------------------------------------------------------------------------------------------
tance, Vector3* spawnPoint);

```

```

Finds a position ahead of the player by predicting the players next actions.  

The positions match path finding node positions.  

When roads diverge, the position may rapidly change between two or more positions. This is due to th
e engine not being certain of which path the player will take.  

=======================================================  

I may sort this with alter research, but if someone  

already knows please tell what the difference in   

X2, Y2, Z2 is. I doubt it&apos;s rotation. Is it like   

checkpoints where X1, Y1, Z1 is your/a position and  

X2, Y2, Z2 is a given position ahead of that position?  

=======================================================  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='ForceSocialClubUpdate' func='yes'>
			<Overload retVal='void' descr='// 0xEB6891F03362FB12
MISC::_FORCE_SOCIAL_CLUB_UPDATE();
----------------------------------------------------------------------------------------------------
```

Exits the game and downloads a fresh social club update on next restart.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetAllocatedStackSize' func='yes'>
			<Overload retVal='int' descr='// 0x8B3CA62B1EF19B62
// 0x4E9CA30A
MISC::GET_ALLOCATED_STACK_SIZE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetAngleBetween_2dVectors' func='yes'>
			<Overload retVal='float' descr='// 0x186FC4BE848E1C92
// 0xDBF75E58
MISC::GET_ANGLE_BETWEEN_2D_VECTORS(float x1, float y1, float x2, float y2);
----------------------------------------------------------------------------------------------------
```

Returns the degree of angle between (x1, y1) and (x2, y2) lines in 2D coordinate system.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float x2' />
				<Param name='float y2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBenchmarkTime' func='yes'>
			<Overload retVal='float' descr='// 0xE599A503B3837E1B
MISC::_GET_BENCHMARK_TIME();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetBitsInRange' func='yes'>
			<Overload retVal='int' descr='// 0x53158863FCC0893A
// 0xCA03A1E5
MISC::GET_BITS_IN_RANGE(int var, int rangeStart, int rangeEnd);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int var' />
				<Param name='int rangeStart' />
				<Param name='int rangeEnd' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCloudHatOpacity' func='yes'>
			<Overload retVal='float' descr='// 0x20AC25E781AE4A84
MISC::_GET_CLOUD_HAT_OPACITY();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetDistanceBetweenCoords' func='yes'>
			<Overload retVal='float' descr='// 0xF1B760881820C952
// 0xF698765E
MISC::GET_DISTANCE_BETWEEN_COORDS(float x1, float y1, float z1, float x2, float y2, float z2, BOOL u
----------------------------------------------------------------------------------------------------
;

```

```

If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.  

Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3
D coordinates.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='BOOL u' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetFakeWantedLevel' func='yes'>
			<Overload retVal='int' descr='// 0x4C9296CBCD1B971E
// 0x0022A430
MISC::GET_FAKE_WANTED_LEVEL();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetFrameCount' func='yes'>
			<Overload retVal='int' descr='// 0xFC8202EFC642E6F2
// 0xB477A015
MISC::GET_FRAME_COUNT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetFrameTime' func='yes'>
			<Overload retVal='float' descr='// 0x15C40837039FFAF7
// 0x96374262
MISC::GET_FRAME_TIME();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetFreeStackSlotsCount' func='yes'>
			<Overload retVal='int' descr='// 0xFEAD16FC8F9DFC0F
// 0x11A178B8
MISC::_GET_FREE_STACK_SLOTS_COUNT(int threadId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int threadId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetGameTimer' func='yes'>
			<Overload retVal='int' descr='// 0x9CD27B0045628463
// 0xA4EA0691
MISC::GET_GAME_TIMER();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetGlobalCharBuffer' func='yes'>
			<Overload retVal='char*' descr='// 0x24DA7D7667FD7B09
MISC::_GET_GLOBAL_CHAR_BUFFER();
----------------------------------------------------------------------------------------------------
```

it returns a reference to an empty string, the same empty string that&apos;s used by 1687 internal gta fu
nctions.   if it was used in a script (and i cannot find an instance of it being used), it would be 
as the source for a StringCopy or somesuch.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetGroundZCoordWithOffsets' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8BDC7BFC57A81E76
// 0x64D91CED
MISC::_GET_GROUND_Z_COORD_WITH_OFFSETS(float x, float y, float z, float* groundZ, Vector3* offsets);
----------------------------------------------------------------------------------------------------
`

```

only documented to be continued...  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float* groundZ' />
				<Param name='Vector3* offsets' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetGroundZFor_3dCoord' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC906A7DAB05C8D2B
// 0xA1BFD5E0
MISC::GET_GROUND_Z_FOR_3D_COORD(float x, float y, float z, float* groundZ, BOOL unk);
----------------------------------------------------------------------------------------------------
```

Gets the ground elevation at the specified position. Note that if the specified position is below gr
ound level, the function will output zero!  

x: Position on the X-axis to get ground elevation at.  

y: Position on the Y-axis to get ground elevation at.  

z: Position on the Z-axis to get ground elevation at.  

groundZ: The ground elevation at the specified position.  

unk: Nearly always 0, very rarely 1 in the scripts.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float* groundZ' />
				<Param name='BOOL unk' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHashKey' func='yes'>
			<Overload retVal='Hash' descr='// 0xD24D37CC275948CC
// 0x98EFF6F1
MISC::GET_HASH_KEY(char* string);
----------------------------------------------------------------------------------------------------
```

This native converts its past string to hash. It is hashed using jenkins one at a time method.  

----------  

The string is first converted to lowercase before feeding it to joaat.  

As a result, it makes this native case-insensitive.  

For example: &quot;zentorno&quot;, &quot;ZENTORNO&quot; and &quot;Zentorno&quot; produce the same hash.  

```'>
				<Param name='char* string' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHeadingFromVector_2d' func='yes'>
			<Overload retVal='float' descr='// 0x2FFB6B224F4B2926
// 0xD209D52B
MISC::GET_HEADING_FROM_VECTOR_2D(float dx, float dy);
----------------------------------------------------------------------------------------------------
```

dx = x1   

dy = y1  

```'>
				<Param name='float dx' />
				<Param name='float dy' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetIndexOfCurrentLevel' func='yes'>
			<Overload retVal='int' descr='// 0xCBAD6729F7B1F4FC
// 0x6F203C6E
MISC::GET_INDEX_OF_CURRENT_LEVEL();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetIsProjectileTypeInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8D7A43EC6A5FEA45
// 0x1A40454B
MISC::_GET_IS_PROJECTILE_TYPE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, Has
----------------------------------------------------------------------------------------------------
ojHash, Vector3* projPos, BOOL ownedByPlayer);

```

```

Dr. Underscore (1/6/18):  

Works exactly like IS_PROJECTILE_TYPE_IN_AREA, but it puts the position of the projectile in the vec
tor.  

p8 is probably ownedByPlayer, but not known for sure. (see IS_PROJECTILE_IN_AREA for info)  

Unsure of the hash name, could someone confirm this?  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMissionFlag' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA33CDCCDA663159E
// 0x95115F97
MISC::GET_MISSION_FLAG();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetModelDimensions' func='yes'>
			<Overload retVal='void' descr='// 0x03E8D3D5F549087A
// 0x91ABB8E0
MISC::GET_MODEL_DIMENSIONS(Hash modelHash, Vector3* minimum, Vector3* maximum);
----------------------------------------------------------------------------------------------------
```

Gets the dimensions of a model.  

Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.  

Vector3 GetDimensions(Hash model)  

{  

	Vector3 right, left;  

	GET_MODEL_DIMENSIONS(model, &right, &left);  

	return Vector3::Subtract(left, right);  

}  

Example from the scripts: GAMEPLAY::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED
_ID()), &v_1A, &v_17);  

```'>
				<Param name='Hash modelHash' />
				<Param name='Vector3* minimum' />
				<Param name='Vector3* maximum' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNextWeatherTypeHashName' func='yes'>
			<Overload retVal='Hash' descr='// 0x711327CD09C8F162
// 0x353E8056
MISC::GET_NEXT_WEATHER_TYPE_HASH_NAME();
----------------------------------------------------------------------------------------------------
```

Returns weather name hash  

```

## Return value

----------------------------------------------------------------------------------------------------

Old name: _GET_NEXT_WEATHER_TYPE'>
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_NEXT_WEATHER_TYPE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetNextWeatherTypeHashName' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfDispatchedUnitsForPlayer' func='yes'>
			<Overload retVal='int' descr='// 0xEB4A0C2D56441717
// 0x3CE5BF6B
MISC::_GET_NUMBER_OF_DISPATCHED_UNITS_FOR_PLAYER(int dispatchService);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int dispatchService' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetOnscreenKeyboardResult' func='yes'>
			<Overload retVal='char*' descr='// 0x8362B09B91893647
// 0x44828FB3
MISC::GET_ONSCREEN_KEYBOARD_RESULT();
----------------------------------------------------------------------------------------------------
```

Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPrevWeatherTypeHashName' func='yes'>
			<Overload retVal='Hash' descr='// 0x564B884A05EC45A3
// 0xA8171E9E
MISC::GET_PREV_WEATHER_TYPE_HASH_NAME();
----------------------------------------------------------------------------------------------------
```

Returns current weather name hash  

```

## Return value

----------------------------------------------------------------------------------------------------

Old name: _GET_PREV_WEATHER_TYPE'>
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_PREV_WEATHER_TYPE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetPrevWeatherTypeHashName' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetProfileSetting' func='yes'>
			<Overload retVal='int' descr='// 0xC488FF2356EA7791
// 0xD374BEBC
MISC::GET_PROFILE_SETTING(int profileSetting);
----------------------------------------------------------------------------------------------------
```

gtaforums.com/topic/799843-stats-profile-settings/  

```'>
				<Param name='int profileSetting' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetProjectileNearPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x82FDE6A57EE4EE44
// 0x507BC6F7
MISC::_GET_PROJECTILE_NEAR_PED(Ped ped, Hash projHash, float radius, Vector3* projPos, Entity* projEn
----------------------------------------------------------------------------------------------------
OOL ownedByPlayer);

```

```

only documented to be continued...  

Dr. Underscore (1/6/18):  

Exactly like _GET_PROJECTILE_NEAR_PED_COORDS (_0xDFB4138EEFED7B81), but it gives us the Entity that 
was found aswell.  

p6 is (most likely) ownedByPlayer. (see IS_PROJECTILE_IN_AREA for info)  

```'>
				<Param name='Ped ped' />
				<Param name='Hash projHash' />
				<Param name='float radius' />
				<Param name='Vector3* projPos' />
				<Param name='Entity* projEn' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetProjectileNearPedCoords' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDFB4138EEFED7B81
// 0x6BDE5CE4
MISC::_GET_PROJECTILE_NEAR_PED_COORDS(Ped ped, Hash projHash, float radius, Vector3* projPos, BOOL ow
----------------------------------------------------------------------------------------------------
yPlayer);

```

```

From a quick disassembly I can say that this has something to do with weapons.  

Added params according to what I could see in IDA.  

Dr. Underscore (1/6/18):  

Returns if any projectiles of projHash type are in a radius around this ped. If true, projPos is fil
led with the position of that entity.  

This native was only ever used with projectiles, but may not be limited to.  

p4 isn&apos;t an Entity*, it&apos;s actually a Vector3*, which outputs the position of the found entity.  

p5 is (most likely) ownedByPlayer. (see IS_PROJECTILE_IN_AREA for info)  

```'>
				<Param name='Ped ped' />
				<Param name='Hash projHash' />
				<Param name='float radius' />
				<Param name='Vector3* projPos' />
				<Param name='BOOL ow' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRainLevel' func='yes'>
			<Overload retVal='Any*' descr='// 0x96695E368AD855F3
// 0xC9F67F28
MISC::GET_RAIN_LEVEL();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetRandomEventFlag' func='yes'>
			<Overload retVal='Any' descr='// 0xD2D57F1D764117B1
// 0x794CC92C
MISC::GET_RANDOM_EVENT_FLAG();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetRandomFloatInRange' func='yes'>
			<Overload retVal='float' descr='// 0x313CE5879CEB6FCD
// 0x0562C4D0
MISC::GET_RANDOM_FLOAT_IN_RANGE(float startRange, float endRange);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float startRange' />
				<Param name='float endRange' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRandomIntInRange' func='yes'>
			<Overload retVal='int' descr='// 0xD53343AA4FB7DD28
// 0x4051115B
MISC::GET_RANDOM_INT_IN_RANGE(int startRange, int endRange);
----------------------------------------------------------------------------------------------------
```

Another extremely useful native.  

You can use it simply like:  

if (GAMEPLAY::GET_RANDOM_INT_IN_RANGE(0, 2))  

```'>
				<Param name='int startRange' />
				<Param name='int endRange' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetSnowLevel' func='yes'>
			<Overload retVal='Any' descr='// 0xC5868A966E5BE3AE
// 0x1B09184F
MISC::GET_SNOW_LEVEL();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeatherTypeTransition' func='yes'>
			<Overload retVal='void' descr='// 0xF3BBE884A14BB413
// 0x9A5C1D56
MISC::_GET_WEATHER_TYPE_TRANSITION(Hash* weatherType1, Hash* weatherType2, float* percentWeather2);
----------------------------------------------------------------------------------------------------
```

changed any --&gt; hash  

progress_or_time --&gt; percentWeather2, is not time but percent of the 2nd weather (0-1).  

weatherType1 is same as GAMEPLAY::GET_PREV_WEATHER_TYPE_HASH_NAME()  

and weatherType 2 GAMEPLAY::GET_NEXT_WEATHER_TYPE_HASH_NAME()  

-QuantFC  

```'>
				<Param name='Hash* weatherType1' />
				<Param name='Hash* weatherType2' />
				<Param name='float* percentWeather2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWindDirection' func='yes'>
			<Overload retVal='Vector3' descr='// 0x1F400FEF721170DA
// 0x89499A0D
MISC::GET_WIND_DIRECTION();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetWindSpeed' func='yes'>
			<Overload retVal='float' descr='// 0xA8CF1CC0AFCD3F12
// 0x098F0F3C
MISC::GET_WIND_SPEED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='HasBulletImpactedInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9870ACFB89A90995
// 0x902BC7D9
MISC::HAS_BULLET_IMPACTED_IN_AREA(float x, float y, float z, float p3, BOOL p4, BOOL p5);
----------------------------------------------------------------------------------------------------
```

p3 - possibly radius?  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float p3' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasBulletImpactedInBox' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDC8C5D7CFEAB8394
// 0x2C2618CC
MISC::HAS_BULLET_IMPACTED_IN_BOX(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6,
----------------------------------------------------------------------------------------------------
L p7);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasButtonCombinationJustBeenEntered' func='yes'>
			<Overload retVal='BOOL' descr='// 0x071E2A839DE82D90
// 0xFF6191E1
MISC::_HAS_BUTTON_COMBINATION_JUST_BEEN_ENTERED(Hash hash, int amount);
----------------------------------------------------------------------------------------------------
```

This native appears on the cheat_controller script and tracks a combination of buttons, which may be
 used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combinatio
n, while the &quot;amount&quot; represents the amount of buttons used in a combination. The following page can
 be used to make a button combination: gta5offset.com/ts/hash/  

INT_SCORES_SCORTED was a hash collision  

```'>
				<Param name='Hash hash' />
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasCheatStringJustBeenEntered' func='yes'>
			<Overload retVal='BOOL' descr='// 0x557E43C447E700A8
MISC::_HAS_CHEAT_STRING_JUST_BEEN_ENTERED(Hash hash);
----------------------------------------------------------------------------------------------------
```

Get inputted &quot;Cheat code&quot;, for example:  

while (TRUE)  

{  

    if (GAMEPLAY::_557E43C447E700A8(${fugitive}))  

    {  

       // Do something.  

    }  

    SYSTEM::WAIT(0);  

}  

Calling this will also set the last saved string hash to zero.  

```'>
				<Param name='Hash hash' />
			</Overload>
		</KeyWord>
		<KeyWord name='IgnoreNextRestart' func='yes'>
			<Overload retVal='void' descr='// 0x21FFB63D8C615361
// 0xDA13A4B6
MISC::IGNORE_NEXT_RESTART(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAreaOccupied' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA61B4DF533DCB56E
// 0xC013972F
MISC::IS_AREA_OCCUPIED(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7, 
----------------------------------------------------------------------------------------------------
p8, BOOL p9, BOOL p10, Any p11, BOOL p12);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='BOOL p6' />
				<Param name='BOOL p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAussieVersion' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9F1935CA1F724008
// 0x944BA1DC
MISC::IS_AUSSIE_VERSION();
----------------------------------------------------------------------------------------------------
```

if (GAMEPLAY::IS_AUSSIE_VERSION()) {  

sub_127a9(&l_31, 1024); // l_31 |= 1024  

l_129 = 3;  

sub_129d2(&quot;AUSSIE VERSION IS TRUE!?!?!&quot;); // DEBUG  

		}  

		Used to block some of the prostitute stuff due to laws in Australia.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsAutoSaveInProgress' func='yes'>
			<Overload retVal='BOOL' descr='// 0x69240733738C19A0
// 0x36F75399
MISC::IS_AUTO_SAVE_IN_PROGRESS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsBitSet' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA921AA820C25702F
// 0x902E26AC
MISC::IS_BIT_SET(int address, int offset);
----------------------------------------------------------------------------------------------------
```

Returns bit&apos;s boolean state from [offset] of [address].  

Example:  

GAMEPLAY::IS_BIT_SET(bitAddress, 1);  

To enable and disable bits, see:  

GAMEPLAY::SET_BIT(&bitAddress, 1);   // enable  

GAMEPLAY::CLEAR_BIT(&bitAddress, 1); // disable  

```'>
				<Param name='int address' />
				<Param name='int offset' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsBulletInAngledArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1A8B5F3C01E2B477
// 0xE2DB58F7
MISC::IS_BULLET_IN_ANGLED_AREA(float p0, float p1, float p2, float p3, float p4, float p5, float p6, 
----------------------------------------------------------------------------------------------------
p7);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsBulletInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3F2023999AD51C1F
// 0xB54F46CA
MISC::IS_BULLET_IN_AREA(float p0, float p1, float p2, float p3, BOOL p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsBulletInBox' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDE0F6D7450D37351
// 0xAB73ED26
MISC::IS_BULLET_IN_BOX(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsDurangoVersion' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4D982ADB1978442D
// 0x46FB06A5
MISC::IS_DURANGO_VERSION();
----------------------------------------------------------------------------------------------------
```

XBOX ONE  

MulleDK19: This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsFrontendFading' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7EA2B6AF97ECA6ED
// 0x8FF6232C
MISC::IS_FRONTEND_FADING();
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsIncidentValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC8BC6461E629BEAA
// 0x31FD0BA4
MISC::IS_INCIDENT_VALID(int incidentId);
----------------------------------------------------------------------------------------------------
```

=======================================================  

Correction, I have change this to int, instead of int*  

as it doesn&apos;t use a pointer to the createdIncident.  

If you try it you will crash (or) freeze.  

=======================================================  

```'>
				<Param name='int incidentId' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsMemoryCardInUse' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8A75CE2956274ADD
// 0x40CE4DFD
MISC::IS_MEMORY_CARD_IN_USE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsMinigameInProgress' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2B4A15E44DE0F478
// 0x53A95E13
MISC::IS_MINIGAME_IN_PROGRESS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsNextWeatherType' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2FAA3A30BEC0F25D
// 0x99CB167F
MISC::IS_NEXT_WEATHER_TYPE(char* weatherType);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* weatherType' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsOrbisVersion' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA72BC0B675B1519E
// 0x40282018
MISC::IS_ORBIS_VERSION();
----------------------------------------------------------------------------------------------------
```

PS4  

MulleDK19: This function is hard-coded to always return 0.  

Force67: I patched return result and got this : i.imgur.com/hUn7zSj.jpg  

translate please?  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsPcVersion' func='yes'>
			<Overload retVal='BOOL' descr='// 0x48AF36444B965238
// 0x4D5D9EE3
MISC::IS_PC_VERSION();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsPointObscuredByAMissionEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE54E209C35FFA18D
// 0xC161558D
MISC::IS_POINT_OBSCURED_BY_A_MISSION_ENTITY(float p0, float p1, float p2, float p3, float p4, float p
----------------------------------------------------------------------------------------------------
ny p6);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPositionOccupied' func='yes'>
			<Overload retVal='BOOL' descr='// 0xADCDE75E1C60F32D
// 0x452E8D9E
MISC::IS_POSITION_OCCUPIED(float x, float y, float z, float range, BOOL p4, BOOL p5, BOOL p6, BOOL p7
----------------------------------------------------------------------------------------------------
OL p8, Any p9, BOOL p10);

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float range' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
				<Param name='BOOL p6' />
				<Param name='BOOL p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPrevWeatherType' func='yes'>
			<Overload retVal='BOOL' descr='// 0x44F28F86433B10A9
// 0x250ADA61
MISC::IS_PREV_WEATHER_TYPE(char* weatherType);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* weatherType' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsProjectileInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5270A8FBC098C3F8
// 0x78E1A557
MISC::IS_PROJECTILE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL ownedByP
----------------------------------------------------------------------------------------------------
r);

```

```

Determines whether there is a projectile within the specified coordinates. The coordinates form a re
ctangle.  

ownedByPlayer = only projectiles fired by the player will be detected.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='BOOL ownedByP' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsProjectileTypeInAngledArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF0BC12401061DEA0
// 0xD1AE2681
MISC::IS_PROJECTILE_TYPE_IN_ANGLED_AREA(float p0, float p1, float p2, float p3, float p4, float p5, f
----------------------------------------------------------------------------------------------------
p6, Any p7, BOOL p8);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsProjectileTypeInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2E0DC353342C4A6D
// 0x2B73BCF6
MISC::IS_PROJECTILE_TYPE_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, int type
----------------------------------------------------------------------------------------------------
OL p7);

```

```

Determines whether there is a projectile of a specific type within the specified coordinates. The co
ordinates form a rectangle.  

Note: This native hasn&apos;t been tested yet.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='int type' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsProjectileTypeInRadius' func='yes'>
			<Overload retVal='BOOL' descr='// 0x34318593248C8FB2
// 0xBE81F1E2
MISC::_IS_PROJECTILE_TYPE_IN_RADIUS(float x, float y, float z, Hash projHash, float radius, BOOL owne
----------------------------------------------------------------------------------------------------
layer);

```

```

Dr. Underscore (1/6/18):  

Checks if the projectile is in the radius around that point.  

p6 is (most likely) ownedByPlayer. (see IS_PROJECTILE_IN_AREA for info)  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Hash projHash' />
				<Param name='float radius' />
				<Param name='BOOL owne' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPs3Version' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCCA1072C29D096C2
// 0x4C0D5303
MISC::IS_PS3_VERSION();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsSniperBulletInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFEFCF11B01287125
// 0x0483715C
MISC::IS_SNIPER_BULLET_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2);
----------------------------------------------------------------------------------------------------
```

Determines whether there is a sniper bullet within the specified coordinates. The coordinates form a
 rectangle.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsSniperInverted' func='yes'>
			<Overload retVal='BOOL' descr='// 0x61A23B7EDA9BDA24
// 0x5C3BF51B
MISC::IS_SNIPER_INVERTED();
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsStringNull' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF22B6C47C6EAB066
// 0x8E71E00F
MISC::IS_STRING_NULL(char* string);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* string' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsStringNullOrEmpty' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCA042B6957743895
// 0x42E9F2CA
MISC::IS_STRING_NULL_OR_EMPTY(char* string);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* string' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsStuntJumpInProgress' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7A3F19700A4D0525
// 0xF477D0B1
MISC::IS_STUNT_JUMP_IN_PROGRESS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsStuntJumpMessageShowing' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2272B0A1343129F4
// 0x021636EE
MISC::IS_STUNT_JUMP_MESSAGE_SHOWING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsTennisMode' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5D5479D115290C3F
// 0x04A947BA
MISC::IS_TENNIS_MODE(Ped ped);
----------------------------------------------------------------------------------------------------
```

Return whether tennis mode is active or not.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsThisAMinigameScript' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7B30F65D7B710098
// 0x7605EF6F
MISC::IS_THIS_A_MINIGAME_SCRIPT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsXbox360Version' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF6201B4DAF662A9D
// 0x24005CC8
MISC::IS_XBOX360_VERSION();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetScriptIsSafeForNetworkGame' func='yes'>
			<Overload retVal='void' descr='// 0x9243BAC96D64C050
// 0x878486CE
MISC::NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x02deaac8f8ea7fe7' func='yes'>
			<Overload retVal='void' descr='// 0x02DEAAC8F8EA7FE7
MISC::_0x02DEAAC8F8EA7FE7(char* p0);
----------------------------------------------------------------------------------------------------
```

Found in the scripts:  

GAMEPLAY::_02DEAAC8F8EA7FE7(&quot;&quot;);  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x06462a961e94b67c' func='yes'>
			<Overload retVal='void' descr='// 0x06462A961E94B67C
// 0x5A45B11A
MISC::_0x06462A961E94B67C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x075f1d57402c93ba' func='yes'>
			<Overload retVal='Any' descr='// 0x075F1D57402C93BA
// 0x2569C9A7
MISC::_0x075F1D57402C93BA();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0a60017f841a54f2' func='yes'>
			<Overload retVal='void' descr='// 0x0A60017F841A54F2
// 0x2D33F15A
MISC::_0x0A60017F841A54F2(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0cf97f497fe7d048' func='yes'>
			<Overload retVal='void' descr='// 0x0CF97F497FE7D048
MISC::_0x0CF97F497FE7D048(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x11b56fbbf7224868' func='yes'>
			<Overload retVal='void' descr='// 0x11B56FBBF7224868
// 0x8727A4C5
MISC::_0x11B56FBBF7224868(char* p0);
----------------------------------------------------------------------------------------------------
```

Found in the scripts:  

GAMEPLAY::_11B56FBBF7224868(&quot;CONTRAILS&quot;);  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1327e2fe9746baee' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1327E2FE9746BAEE
MISC::_0x1327E2FE9746BAEE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x14832bf2aba53fc5' func='yes'>
			<Overload retVal='Any' descr='// 0x14832BF2ABA53FC5
MISC::_0x14832BF2ABA53FC5();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x171bafb3c60389f4' func='yes'>
			<Overload retVal='Any' descr='// 0x171BAFB3C60389F4
MISC::_0x171BAFB3C60389F4(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x17df68d720aa77f8' func='yes'>
			<Overload retVal='BOOL' descr='// 0x17DF68D720AA77F8
// 0x8501E727
MISC::_0x17DF68D720AA77F8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x19bfed045c647c49' func='yes'>
			<Overload retVal='BOOL' descr='// 0x19BFED045C647C49
// 0x1A332D2D
MISC::_0x19BFED045C647C49(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1b2366c3f2a5c8df' func='yes'>
			<Overload retVal='Any' descr='// 0x1B2366C3F2A5C8DF
MISC::_0x1B2366C3F2A5C8DF();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1bb299305c3e8c13' func='yes'>
			<Overload retVal='void' descr='// 0x1BB299305C3E8C13
// 0xA27F4472
MISC::_0x1BB299305C3E8C13(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1eae0a6e978894a2' func='yes'>
			<Overload retVal='void' descr='// 0x1EAE0A6E978894A2
// 0x8F60366E
MISC::_0x1EAE0A6E978894A2(int p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Unsure about the use of this native but here&apos;s an example:  

void sub_8709() {  

    GAMEPLAY::_1EAE0A6E978894A2(0, 1);  

    GAMEPLAY::_1EAE0A6E978894A2(1, 1);  

    GAMEPLAY::_1EAE0A6E978894A2(2, 1);  

    GAMEPLAY::_1EAE0A6E978894A2(3, 1);  

    GAMEPLAY::_1EAE0A6E978894A2(4, 1);  

    GAMEPLAY::_1EAE0A6E978894A2(5, 1);  

    GAMEPLAY::_1EAE0A6E978894A2(6, 1);  

    GAMEPLAY::_1EAE0A6E978894A2(7, 1);  

    GAMEPLAY::_1EAE0A6E978894A2(8, 1);  

}  

So it appears that p0 ranges from 0 to 8.  

ENABLE_DISPATCH_SERVICE, seems to have a similar layout.  

```'>
				<Param name='int p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1ff6bf9a63e5757f' func='yes'>
			<Overload retVal='void' descr='// 0x1FF6BF9A63E5757F
// 0xDF99925C
MISC::_0x1FF6BF9A63E5757F();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2107a3773771186d' func='yes'>
			<Overload retVal='Any' descr='// 0x2107A3773771186D
// 0x78350773
MISC::_0x2107A3773771186D();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x213aeb2b90cba7ac' func='yes'>
			<Overload retVal='void' descr='// 0x213AEB2B90CBA7AC
MISC::_0x213AEB2B90CBA7AC(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x21c235bc64831e5a' func='yes'>
			<Overload retVal='Vector3' descr='// 0x21C235BC64831E5A
// 0xCAECF37E
MISC::_0x21C235BC64831E5A(float p0, float p1, float p2, float p3, float p4, float p5, float p6, fl
----------------------------------------------------------------------------------------------------
p7, float p8, BOOL p9);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x23227df0b2115469' func='yes'>
			<Overload retVal='void' descr='// 0x23227DF0B2115469
MISC::_0x23227DF0B2115469();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2587a48bc88dfadf' func='yes'>
			<Overload retVal='void' descr='// 0x2587A48BC88DFADF
// 0xD9660339
MISC::_0x2587A48BC88DFADF(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2b5e102e4a42f2bf' func='yes'>
			<Overload retVal='Any' descr='// 0x2B5E102E4A42F2BF
// 0x144AAF22
MISC::_0x2B5E102E4A42F2BF();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2b626a0150e4d449' func='yes'>
			<Overload retVal='Any' descr='// 0x2B626A0150E4D449
// 0x710E5D1E
MISC::_0x2B626A0150E4D449();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2d4259f1feb81da9' func='yes'>
			<Overload retVal='Any' descr='// 0x2D4259F1FEB81DA9
MISC::_0x2D4259F1FEB81DA9(float p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x31125fd509d9043f' func='yes'>
			<Overload retVal='void' descr='// 0x31125FD509D9043F
MISC::_0x31125FD509D9043F(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x31727907b2c43c55' func='yes'>
			<Overload retVal='void' descr='// 0x31727907B2C43C55
// 0xD447439D
MISC::_0x31727907B2C43C55(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x32c7a7e8c43a1f80' func='yes'>
			<Overload retVal='Any' descr='// 0x32C7A7E8C43A1F80
MISC::_0x32C7A7E8C43A1F80(float p0, float p1, float p2, float p3, float p4, float p5, BOOL p6, BOOL p7
----------------------------------------------------------------------------------------------------
```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='BOOL p6' />
				<Param name='BOOL p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x37deb0aa183fb6d8' func='yes'>
			<Overload retVal='void' descr='// 0x37DEB0AA183FB6D8
MISC::_0x37DEB0AA183FB6D8();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x397baa01068baa96' func='yes'>
			<Overload retVal='int' descr='// 0x397BAA01068BAA96
// 0x39771F21
MISC::_0x397BAA01068BAA96();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3bbbd13e5041a79e' func='yes'>
			<Overload retVal='Any' descr='// 0x3BBBD13E5041A79E
MISC::_0x3BBBD13E5041A79E();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3ed1438c1f5c6612' func='yes'>
			<Overload retVal='void' descr='// 0x3ED1438C1F5C6612
// 0x3301EA47
MISC::_0x3ED1438C1F5C6612(int p0);
----------------------------------------------------------------------------------------------------
```

p0 was always 2 in R* scripts.  

Called before calling DISPLAY_ONSCREEN_KEYBOARD if the input needs to be saved.  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x405591ec8fd9096d' func='yes'>
			<Overload retVal='void' descr='// 0x405591EC8FD9096D
// 0x584E9C59
MISC::_0x405591EC8FD9096D(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x437138b6a830166a' func='yes'>
			<Overload retVal='void' descr='// 0x437138B6A830166A
MISC::_0x437138B6A830166A();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x438822c279b73b93' func='yes'>
			<Overload retVal='void' descr='// 0x438822C279B73B93
MISC::_0x438822C279B73B93(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x44a0bdc559b35f6e' func='yes'>
			<Overload retVal='Any' descr='// 0x44A0BDC559B35F6E
// 0x3589452B
MISC::_0x44A0BDC559B35F6E();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4750fc27570311ec' func='yes'>
			<Overload retVal='Any' descr='// 0x4750FC27570311EC
MISC::_0x4750FC27570311EC();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x48f069265a0e4bec' func='yes'>
			<Overload retVal='void' descr='// 0x48F069265A0E4BEC
// 0xF91B8C33
MISC::_0x48F069265A0E4BEC(Any* p0, char* name);
----------------------------------------------------------------------------------------------------
```

Only found 3 times in decompiled scripts. Not a whole lot to go off of.  

GAMEPLAY::_48F069265A0E4BEC(a_0, &quot;Movie_Name_For_This_Player&quot;);  

GAMEPLAY::_48F069265A0E4BEC(&a_0._fB, &quot;Ringtone_For_This_Player&quot;);  

GAMEPLAY::_48F069265A0E4BEC(&a_0._f1EC4._f12[v_A/*6*/], &v_13); // where v_13 is &quot;MPATMLOGSCRS0&quot; thr
u &quot;MPATMLOGSCRS15&quot;  

```'>
				<Param name='Any* p0' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4dcdf92bf64236cd' func='yes'>
			<Overload retVal='void' descr='// 0x4DCDF92BF64236CD
MISC::_0x4DCDF92BF64236CD(char* p0, char* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x54f157e0336a3822' func='yes'>
			<Overload retVal='void' descr='// 0x54F157E0336A3822
// 0x49F977A9
MISC::_0x54F157E0336A3822(Any p0, char* p1, float p2);
----------------------------------------------------------------------------------------------------
```

From the scripts:  

GAMEPLAY::_54F157E0336A3822(sub_aa49(a_0), &quot;ForcedStopDirection&quot;, v_E);  

```'>
				<Param name='Any p0' />
				<Param name='char* p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x58a39be597ce99cd' func='yes'>
			<Overload retVal='void' descr='// 0x58A39BE597CE99CD
MISC::_0x58A39BE597CE99CD();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5aa3befa29f03ad4' func='yes'>
			<Overload retVal='Any' descr='// 0x5AA3BEFA29F03AD4
// 0x46B5A15C
MISC::_0x5AA3BEFA29F03AD4();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5b1f2e327b6b6fe1' func='yes'>
			<Overload retVal='Any' descr='// 0x5B1F2E327B6B6FE1
// 0x50C39926
MISC::_0x5B1F2E327B6B6FE1();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6216b116083a7cb4' func='yes'>
			<Overload retVal='void' descr='// 0x6216B116083A7CB4
// 0xFB1A9CDE
MISC::_0x6216B116083A7CB4(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x65d2ebb47e1cec21' func='yes'>
			<Overload retVal='void' descr='// 0x65D2EBB47E1CEC21
MISC::_0x65D2EBB47E1CEC21(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x67f6413d3220e18d' func='yes'>
			<Overload retVal='Any' descr='// 0x67F6413D3220E18D
// 0x42BF09B3
MISC::_0x67F6413D3220E18D(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x684a41975f077262' func='yes'>
			<Overload retVal='BOOL' descr='// 0x684A41975F077262
MISC::_0x684A41975F077262();
----------------------------------------------------------------------------------------------------
```

example:  

if (GAMEPLAY::_684A41975F077262()) {  

       (a_0) = GAMEPLAY::_ABB2FA71C83A1B72();  

   } else {   

       (a_0) = -1;  

   }  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6856ec3d35c81ea4' func='yes'>
			<Overload retVal='int' descr='// 0x6856EC3D35C81EA4
MISC::_0x6856EC3D35C81EA4();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x693478acbd7f18e7' func='yes'>
			<Overload retVal='void' descr='// 0x693478ACBD7F18E7
MISC::_0x693478ACBD7F18E7();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x69fe6dc87bd2a5e9' func='yes'>
			<Overload retVal='void' descr='// 0x69FE6DC87BD2A5E9
// 0x81216EE0
MISC::_0x69FE6DC87BD2A5E9(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6e04f06094c87047' func='yes'>
			<Overload retVal='Any' descr='// 0x6E04F06094C87047
// 0xA8546914
MISC::_0x6E04F06094C87047();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6f2135b6129620c1' func='yes'>
			<Overload retVal='void' descr='// 0x6F2135B6129620C1
// 0x8B2DE971
MISC::_0x6F2135B6129620C1(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6f7794f28c6b2535' func='yes'>
			<Overload retVal='void' descr='// 0x6F7794F28C6B2535
// 0xE2089749
MISC::_0x6F7794F28C6B2535(Any* p0, char* name);
----------------------------------------------------------------------------------------------------
```

Seems to have the same functionality as REGISTER_TEXT_LABEL_TO_SAVE?  

GAMEPLAY::_6F7794F28C6B2535(&a_0._f1, &quot;tlPlateText&quot;);  

GAMEPLAY::_6F7794F28C6B2535(&a_0._f1C, &quot;tlPlateText_pending&quot;);  

GAMEPLAY::_6F7794F28C6B2535(&a_0._f10B, &quot;tlCarAppPlateText&quot;);  

&quot;tl&quot; prefix sounds like &quot;Text Label&quot;  

```'>
				<Param name='Any* p0' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6fddf453c0c756ec' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6FDDF453C0C756EC
// 0xC3C10FCC
MISC::_0x6FDDF453C0C756EC();
----------------------------------------------------------------------------------------------------
```

- if (GAMEPLAY::_6FDDF453C0C756EC() || GAMEPLAY::IS_PC_VERSION()) {  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x703cc7f60cbb2b57' func='yes'>
			<Overload retVal='void' descr='// 0x703CC7F60CBB2B57
MISC::_0x703CC7F60CBB2B57(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x72de52178c291cb5' func='yes'>
			<Overload retVal='Any' descr='// 0x72DE52178C291CB5
// 0xF62B3C48
MISC::_0x72DE52178C291CB5();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7c9c0b1eeb1f9072' func='yes'>
			<Overload retVal='void' descr='// 0x7C9C0B1EEB1F9072
// 0x98C9138B
MISC::_0x7C9C0B1EEB1F9072(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7ec6f9a478a6a512' func='yes'>
			<Overload retVal='void' descr='// 0x7EC6F9A478A6A512
MISC::_0x7EC6F9A478A6A512();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7f8f6405f4777af6' func='yes'>
			<Overload retVal='float' descr='// 0x7F8F6405F4777AF6
// 0x89459F0A
MISC::_0x7F8F6405F4777AF6(float p0, float p1, float p2, float p3, float p4, float p5, float p6, floa
----------------------------------------------------------------------------------------------------
, float p8, BOOL p9);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8098c8d6597aae18' func='yes'>
			<Overload retVal='Any' descr='// 0x8098C8D6597AAE18
// 0x22BE2423
MISC::_0x8098C8D6597AAE18(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8269816f6cfd40f8' func='yes'>
			<Overload retVal='void' descr='// 0x8269816F6CFD40F8
// 0x74E8FAD9
MISC::_0x8269816F6CFD40F8(Any* p0, char* name);
----------------------------------------------------------------------------------------------------
```

Only found 2 times in decompiled scripts. Not a whole lot to go off of.  

GAMEPLAY::_8269816F6CFD40F8(&a_0._f1F5A._f6[0/*8*/], &quot;TEMPSTAT_LABEL&quot;); // gets saved in a struct ca
lled &quot;g_SaveData_STRING_ScriptSaves&quot;  

GAMEPLAY::_8269816F6CFD40F8(&a_0._f4B4[v_1A/*8*/], &v_5); // where v_5 is &quot;Name0&quot; thru &quot;Name9&quot;, gets
 saved in a struct called &quot;OUTFIT_Name&quot;  

```'>
				<Param name='Any* p0' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8951eb9c6906d3c8' func='yes'>
			<Overload retVal='void' descr='// 0x8951EB9C6906D3C8
MISC::_0x8951EB9C6906D3C8();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8d74e26f54b4e5c3' func='yes'>
			<Overload retVal='void' descr='// 0x8D74E26F54B4E5C3
// 0xE77199F7
MISC::_0x8D74E26F54B4E5C3(char* p0);
----------------------------------------------------------------------------------------------------
```

GAMEPLAY::_8D74E26F54B4E5C3(&quot;&quot;);  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8ef5573a1f801a5c' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8EF5573A1F801A5C
// 0x07FF553F
MISC::_0x8EF5573A1F801A5C(Any p0, Any* p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8fa9c42fc5d7c64b' func='yes'>
			<Overload retVal='void' descr='// 0x8FA9C42FC5D7C64B
// 0x0C8865DF
MISC::_0x8FA9C42FC5D7C64B(Any p0, Any p1, float p2, float p3, float p4, BOOL p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x918c7b2d2ff3928b' func='yes'>
			<Overload retVal='Any' descr='// 0x918C7B2D2FF3928B
// 0xF557BAF9
MISC::_0x918C7B2D2FF3928B(float p0, float p1, float p2, float p3, float p4, float p5, float p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x92790862e36c2ada' func='yes'>
			<Overload retVal='void' descr='// 0x92790862E36C2ADA
MISC::_0x92790862E36C2ADA();
----------------------------------------------------------------------------------------------------
```

I can 100% confirm this is some kind of START_* native.  

Next character in the name is either C, D or E.  

Used only once in the scripts (benchmark.ysc).  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9689123e3f213aa5' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9689123E3F213AA5
MISC::_0x9689123E3F213AA5();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x97e7e2c04245115b' func='yes'>
			<Overload retVal='void' descr='// 0x97E7E2C04245115B
MISC::_0x97E7E2C04245115B(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x996dd1e1e02f1008' func='yes'>
			<Overload retVal='int' descr='// 0x996DD1E1E02F1008
// 0x006F9BA2
MISC::_0x996DD1E1E02F1008();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9b2bd3773123ea2f' func='yes'>
			<Overload retVal='void' descr='// 0x9B2BD3773123EA2F
// 0xE0F0684F
MISC::_0x9B2BD3773123EA2F(int type, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int type' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9d8d44adbba61ef2' func='yes'>
			<Overload retVal='void' descr='// 0x9D8D44ADBBA61EF2
MISC::_0x9D8D44ADBBA61EF2(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9e82f0f362881b29' func='yes'>
			<Overload retVal='Any' descr='// 0x9E82F0F362881B29
MISC::_0x9E82F0F362881B29(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9f5e6bb6b34540da' func='yes'>
			<Overload retVal='void' descr='// 0x9F5E6BB6B34540DA
// 0x1C0CAE89
MISC::_0x9F5E6BB6B34540DA(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa049a5be0f04f2f8' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA049A5BE0F04F2F8
MISC::_0xA049A5BE0F04F2F8();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa09f896ce912481f' func='yes'>
			<Overload retVal='int' descr='// 0xA09F896CE912481F
// 0x9EF0BC64
MISC::_0xA09F896CE912481F(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa4a0065e39c9f25c' func='yes'>
			<Overload retVal='Any' descr='// 0xA4A0065E39C9F25C
// 0xC4D71AB4
MISC::_0xA4A0065E39C9F25C(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa735353c77334ea0' func='yes'>
			<Overload retVal='void' descr='// 0xA735353C77334EA0
MISC::_0xA735353C77334EA0(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa74802fb8d0b7814' func='yes'>
			<Overload retVal='void' descr='// 0xA74802FB8D0B7814
// 0xC9FA6E07
MISC::_0xA74802FB8D0B7814(char* p0, float p1);
----------------------------------------------------------------------------------------------------
```

Called 4 times in the b617d scripts:  

GAMEPLAY::_A74802FB8D0B7814(&quot;CONTRAILS&quot;, 0);  

```'>
				<Param name='char* p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa7a1127490312c36' func='yes'>
			<Overload retVal='void' descr='// 0xA7A1127490312C36
// 0x6926AB03
MISC::_0xA7A1127490312C36(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa8434f1dff41d6e7' func='yes'>
			<Overload retVal='void' descr='// 0xA8434F1DFF41D6E7
// 0x5F3DDEC0
MISC::_0xA8434F1DFF41D6E7(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xabb2fa71c83a1b72' func='yes'>
			<Overload retVal='Any' descr='// 0xABB2FA71C83A1B72
MISC::_0xABB2FA71C83A1B72();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb08b85d860e7ba3c' func='yes'>
			<Overload retVal='void' descr='// 0xB08B85D860E7BA3C
// 0x0242D88E
MISC::_0xB08B85D860E7BA3C(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb129e447a2eda4bf' func='yes'>
			<Overload retVal='void' descr='// 0xB129E447A2EDA4BF
// 0xFBDBE374
MISC::_0xB129E447A2EDA4BF(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb335f761606db47c' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB335F761606DB47C
MISC::_0xB335F761606DB47C(Any* p1, Any* p2, Any p3, BOOL p4);
----------------------------------------------------------------------------------------------------
```

This line found 48 times in the scripts:  

GAMEPLAY::_B335F761606DB47C(&v_4, &v_7, a_0, v_A);  

```'>
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb3cd58cca6cda852' func='yes'>
			<Overload retVal='void' descr='// 0xB3CD58CCA6CDA852
// 0x66C3C59C
MISC::_0xB3CD58CCA6CDA852();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb3e6360dde733e82' func='yes'>
			<Overload retVal='void' descr='// 0xB3E6360DDE733E82
// 0x0DE40C28
MISC::_0xB3E6360DDE733E82(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb51b9ab9ef81868c' func='yes'>
			<Overload retVal='void' descr='// 0xB51B9AB9EF81868C
// 0x75B06B5A
MISC::_0xB51B9AB9EF81868C(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb8721407ee9c3ff6' func='yes'>
			<Overload retVal='void' descr='// 0xB8721407EE9C3FF6
// 0x24A4E0B2
MISC::_0xB8721407EE9C3FF6(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb8f87ead7533b176' func='yes'>
			<Overload retVal='void' descr='// 0xB8F87EAD7533B176
// 0x625181DC
MISC::_0xB8F87EAD7533B176(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb9854dfde0d833d6' func='yes'>
			<Overload retVal='void' descr='// 0xB9854DFDE0D833D6
// 0x4671AC2E
MISC::_0xB9854DFDE0D833D6(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba4b8d83bdc75551' func='yes'>
			<Overload retVal='void' descr='// 0xBA4B8D83BDC75551
MISC::_0xBA4B8D83BDC75551(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc3c221addde31a11' func='yes'>
			<Overload retVal='void' descr='// 0xC3C221ADDDE31A11
// 0x63A89684
MISC::_0xC3C221ADDDE31A11(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc3ead29ab273ece8' func='yes'>
			<Overload retVal='void' descr='// 0xC3EAD29AB273ECE8
// 0xBEBBFDC8
MISC::_0xC3EAD29AB273ECE8(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc54a08c85ae4d410' func='yes'>
			<Overload retVal='void' descr='// 0xC54A08C85AE4D410
// 0xDA02F415
MISC::_0xC54A08C85AE4D410(float p0);
----------------------------------------------------------------------------------------------------
```

This seems to edit the water wave, intensity around your current location.  

0.0f = Normal  

1.0f = So Calm and Smooth, a boat will stay still.  

3.0f = Really Intense.  

```'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc79ae21974b01fb2' func='yes'>
			<Overload retVal='void' descr='// 0xC79AE21974B01FB2
MISC::_0xC79AE21974B01FB2();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc7db36c24634f52b' func='yes'>
			<Overload retVal='void' descr='// 0xC7DB36C24634F52B
MISC::_0xC7DB36C24634F52B();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd10282b6e3751ba0' func='yes'>
			<Overload retVal='Any' descr='// 0xD10282B6E3751BA0
MISC::_0xD10282B6E3751BA0();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd10f442036302d50' func='yes'>
			<Overload retVal='void' descr='// 0xD10F442036302D50
// 0x6F009E33
MISC::_0xD10F442036302D50(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd261ba3e7e998072' func='yes'>
			<Overload retVal='void' descr='// 0xD261BA3E7E998072
// 0x1F38102E
MISC::_0xD261BA3E7E998072(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd3d15555431ab793' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD3D15555431AB793
// 0xBAF17315
MISC::_0xD3D15555431AB793();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd642319c54aadeb6' func='yes'>
			<Overload retVal='Any' descr='// 0xD642319C54AADEB6
// 0xC58250F1
MISC::_0xD642319C54AADEB6();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd79185689f8fd5df' func='yes'>
			<Overload retVal='void' descr='// 0xD79185689F8FD5DF
// 0x3C806A2D
MISC::_0xD79185689F8FD5DF(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd9f692d349249528' func='yes'>
			<Overload retVal='void' descr='// 0xD9F692D349249528
// 0xE0C9307E
MISC::_0xD9F692D349249528();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdc9274a7ef6b2867' func='yes'>
			<Overload retVal='Any' descr='// 0xDC9274A7EF6B2867
// 0xC7BD1AF0
MISC::_0xDC9274A7EF6B2867();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdea36202fc3382df' func='yes'>
			<Overload retVal='void' descr='// 0xDEA36202FC3382DF
// 0x082BA6F2
MISC::_0xDEA36202FC3382DF(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Dr. Underscore (1/6/18):  

Most references of this native come from the creator scripts. (creator, fm_capture_creator, fm_death
match_creator, fm_lts_creator, fm_race_creator).  

Seems to have something to do with initializing/destroying creator shit.  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe266ed23311f24d4' func='yes'>
			<Overload retVal='void' descr='// 0xE266ED23311F24D4
// 0xC20A7D2B
MISC::_0xE266ED23311F24D4(Any p0, Any* p1, Any* p2, float p3, float p4, BOOL p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe3d969d2785ffb5e' func='yes'>
			<Overload retVal='void' descr='// 0xE3D969D2785FFB5E
MISC::_0xE3D969D2785FFB5E();
----------------------------------------------------------------------------------------------------
```

sets something to 1  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe532ec1a63231b4f' func='yes'>
			<Overload retVal='void' descr='// 0xE532EC1A63231B4F
// 0xA0D8C749
MISC::_0xE532EC1A63231B4F(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe574a662acaefbb1' func='yes'>
			<Overload retVal='void' descr='// 0xE574A662ACAEFBB1
MISC::_0xE574A662ACAEFBB1();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe6869becdd8f2403' func='yes'>
			<Overload retVal='void' descr='// 0xE6869BECDD8F2403
MISC::_0xE6869BECDD8F2403(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe8b9c0ec9e183f35' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE8B9C0EC9E183F35
MISC::_0xE8B9C0EC9E183F35();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe95b0c7d5ba3b96b' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE95B0C7D5BA3B96B
MISC::_0xE95B0C7D5BA3B96B(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xea2f2061875eed90' func='yes'>
			<Overload retVal='Any' descr='// 0xEA2F2061875EED90
MISC::_0xEA2F2061875EED90();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xeb078ca2b5e82add' func='yes'>
			<Overload retVal='void' descr='// 0xEB078CA2B5E82ADD
MISC::_0xEB078CA2B5E82ADD(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xeb2104e905c6f2e9' func='yes'>
			<Overload retVal='Any' descr='// 0xEB2104E905C6F2E9
MISC::_0xEB2104E905C6F2E9();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xebd3205a207939ed' func='yes'>
			<Overload retVal='void' descr='// 0xEBD3205A207939ED
MISC::_0xEBD3205A207939ED(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf2f6a2fa49278625' func='yes'>
			<Overload retVal='void' descr='// 0xF2F6A2FA49278625
// 0x87B92190
MISC::_0xF2F6A2FA49278625(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float
----------------------------------------------------------------------------------------------------
float p8, Any* p9, Any* p10, Any* p11, Any* p12);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf56dfb7b61be7276' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF56DFB7B61BE7276
// 0xC6CC812C
MISC::_0xF56DFB7B61BE7276(float p0, float p1, float p2, float p3, float p4, float p5, float p6, float
----------------------------------------------------------------------------------------------------
float p8, float p9, float p10, float p11, Any* p12);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf751b16fb32abc1d' func='yes'>
			<Overload retVal='void' descr='// 0xF751B16FB32ABC1D
// 0x5656D578
MISC::_0xF751B16FB32ABC1D(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfaa457ef263e8763' func='yes'>
			<Overload retVal='void' descr='// 0xFAA457EF263E8763
// 0x6B4335DD
MISC::_0xFAA457EF263E8763(Any* p0, char* name);
----------------------------------------------------------------------------------------------------
```

Another unknown label type...  

GAMEPLAY::_FAA457EF263E8763(a_0, &quot;Thumb_label&quot;);  

GAMEPLAY::_FAA457EF263E8763(&a_0._f10, &quot;Photo_label&quot;);  

GAMEPLAY::_FAA457EF263E8763(a_0, &quot;GXTlabel&quot;);  

GAMEPLAY::_FAA457EF263E8763(&a_0._f21, &quot;StringComp&quot;);  

GAMEPLAY::_FAA457EF263E8763(&a_0._f43, &quot;SecondStringComp&quot;);  

GAMEPLAY::_FAA457EF263E8763(&a_0._f53, &quot;ThirdStringComp&quot;);  

GAMEPLAY::_FAA457EF263E8763(&a_0._f32, &quot;SenderStringComp&quot;);  

GAMEPLAY::_FAA457EF263E8763(&a_0._f726[v_1A/*16*/], &v_20); // where v_20 is &quot;LastJobTL_0_1&quot; thru &quot;L
astJobTL_2_1&quot;, gets saved in a struct called &quot;LAST_JobGamer_TL&quot;  

GAMEPLAY::_FAA457EF263E8763(&a_0._f4B, &quot;PAID_PLAYER&quot;);  

GAMEPLAY::_FAA457EF263E8763(&a_0._f5B, &quot;RADIO_STATION&quot;);  

```'>
				<Param name='Any* p0' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfb00ca71da386228' func='yes'>
			<Overload retVal='void' descr='// 0xFB00CA71DA386228
// 0x054EC103
MISC::_0xFB00CA71DA386228();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfb80ab299d2ee1bd' func='yes'>
			<Overload retVal='void' descr='// 0xFB80AB299D2EE1BD
MISC::_0xFB80AB299D2EE1BD(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='OverrideSaveHouse' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1162EA8AE9D24EEA
// 0x47436C12
MISC::OVERRIDE_SAVE_HOUSE(BOOL p0, float p1, float p2, float p3, float p4, BOOL p5, float p6, float p
----------------------------------------------------------------------------------------------------
```'>
				<Param name='BOOL p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='BOOL p5' />
				<Param name='float p6' />
				<Param name='float p' />
			</Overload>
		</KeyWord>
		<KeyWord name='PopulateNow' func='yes'>
			<Overload retVal='void' descr='// 0x7472BB270D7B4F3E
// 0x72C20700
MISC::POPULATE_NOW();
----------------------------------------------------------------------------------------------------
```

spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterBoolToSave' func='yes'>
			<Overload retVal='void' descr='// 0xC8F4131414C835A1
// 0x5417E0E0
MISC::REGISTER_BOOL_TO_SAVE(Any* p0, char* name);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterEnumToSave' func='yes'>
			<Overload retVal='void' descr='// 0x10C2FA78D0E128A1
// 0x9B38374A
MISC::REGISTER_ENUM_TO_SAVE(Any* p0, char* name);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterFloatToSave' func='yes'>
			<Overload retVal='void' descr='// 0x7CAEC29ECB5DFEBB
// 0xDB06F7AD
MISC::REGISTER_FLOAT_TO_SAVE(Any* p0, char* name);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterIntToSave' func='yes'>
			<Overload retVal='void' descr='// 0x34C9EE5986258415
// 0xB930956F
MISC::REGISTER_INT_TO_SAVE(Any* p0, char* name);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterSaveHouse' func='yes'>
			<Overload retVal='Any' descr='// 0xC0714D0A7EEECA54
// 0x39C1849A
MISC::REGISTER_SAVE_HOUSE(float p0, float p1, float p2, float p3, Any* p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='Any* p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterTextLabelToSave' func='yes'>
			<Overload retVal='void' descr='// 0xEDB1232C5BEAE62F
// 0x284352C4
MISC::REGISTER_TEXT_LABEL_TO_SAVE(Any* p0, char* name);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveDispatchSpawnBlockingArea' func='yes'>
			<Overload retVal='void' descr='// 0x264AC28B01B353A5
// 0xA8D2FB92
MISC::REMOVE_DISPATCH_SPAWN_BLOCKING_AREA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveStealthKill' func='yes'>
			<Overload retVal='void' descr='// 0xA6A12939F16D85BE
// 0x42B484ED
MISC::_REMOVE_STEALTH_KILL(Hash hash, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Appears to remove stealth kill action from memory.  

------------------------------------  

I agree with the above statement.  

p1 is unknown, my best guess would be if false it marks the stealth kill for immediate deletion, or 
if true marks it for deletion later.  

```'>
				<Param name='Hash hash' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetDispatchIdealSpawnDistance' func='yes'>
			<Overload retVal='void' descr='// 0x77A84429DD9F0A15
// 0xDA65ECAA
MISC::RESET_DISPATCH_IDEAL_SPAWN_DISTANCE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ResetDispatchSpawnBlockingAreas' func='yes'>
			<Overload retVal='void' descr='// 0xAC7BFD5C1D83EA75
// 0x9A17F835
MISC::RESET_DISPATCH_SPAWN_BLOCKING_AREAS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ResetLocalplayerState' func='yes'>
			<Overload retVal='void' descr='// 0xC0AA53F866B3134D
// 0x5D209F25
MISC::_RESET_LOCALPLAYER_STATE();
----------------------------------------------------------------------------------------------------
```

Sets the localplayer playerinfo state back to playing (State 0)  

States are:  

-1: &quot;Invalid&quot;  

0: &quot;Playing&quot;  

1: &quot;Died&quot;  

2: &quot;Arrested&quot;  

3: &quot;Failed Mission&quot;  

4: &quot;Left Game&quot;  

5: &quot;Respawn&quot;  

6: &quot;In MP Cutscene&quot;  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetBit' func='yes'>
			<Overload retVal='void' descr='// 0x933D6A9EEC1BACD0
// 0x4EFE7E6B
MISC::SET_BIT(int* address, int offset);
----------------------------------------------------------------------------------------------------
```

This sets bit [offset] of [address] to on.  

The offsets used are different bits to be toggled on and off, typically there is only one address us
ed in a script.  

Example:  

GAMEPLAY::SET_BIT(&bitAddress, 1);  

To check if this bit has been enabled:  

GAMEPLAY::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards  

Please note, this method may assign a value to [address] when used.  

```'>
				<Param name='int* address' />
				<Param name='int offset' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBitsInRange' func='yes'>
			<Overload retVal='void' descr='// 0x8EF07E15701D61ED
// 0x32094719
MISC::SET_BITS_IN_RANGE(int* var, int rangeStart, int rangeEnd, int p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* var' />
				<Param name='int rangeStart' />
				<Param name='int rangeEnd' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCloudHatOpacity' func='yes'>
			<Overload retVal='void' descr='// 0xF36199225D6D8C86
MISC::_SET_CLOUD_HAT_OPACITY(float opacity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float opacity' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCloudHatTransition' func='yes'>
			<Overload retVal='void' descr='// 0xFC4842A34657BFCB
// 0xED88FC61
MISC::_SET_CLOUD_HAT_TRANSITION(char* type, float transitionTime);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* type' />
				<Param name='float transitionTime' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCreditsActive' func='yes'>
			<Overload retVal='void' descr='// 0xB938B7E6D3C0620C
// 0xEC2A0ECF
MISC::SET_CREDITS_ACTIVE(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCustomRespawnPosition' func='yes'>
			<Overload retVal='void' descr='// 0x706B5EDCAA7FA663
MISC::_SET_CUSTOM_RESPAWN_POSITION(float x, float y, float z, float heading);
----------------------------------------------------------------------------------------------------
```

Specifies a custom respawn position to be used in conjunction with _SET_NEXT_RESPAWN_TO_CUSTOM  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float heading' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDispatchIdealSpawnDistance' func='yes'>
			<Overload retVal='void' descr='// 0x6FE601A64180D423
// 0x6283BE32
MISC::SET_DISPATCH_IDEAL_SPAWN_DISTANCE(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDispatchTimeBetweenSpawnAttempts' func='yes'>
			<Overload retVal='void' descr='// 0x44F7CBC1BEB3327D
// 0xABADB709
MISC::SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDispatchTimeBetweenSpawnAttemptsMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0x48838ED9937A15D1
// 0x1C996BCD
MISC::SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetExplosiveAmmoThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xA66C71C98D5F2CFB
// 0x2EAFA1D1
MISC::SET_EXPLOSIVE_AMMO_THIS_FRAME(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetExplosiveMeleeThisFrame' func='yes'>
			<Overload retVal='Any' descr='// 0xFF1BED81BFDC0FE0
// 0x96663D56
MISC::SET_EXPLOSIVE_MELEE_THIS_FRAME(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFadeInAfterDeathArrest' func='yes'>
			<Overload retVal='void' descr='// 0xDA66D2796BA33F12
// 0xACDE6985
MISC::SET_FADE_IN_AFTER_DEATH_ARREST(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Sets whether the game should fade in after the player dies or is arrested.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFadeInAfterLoad' func='yes'>
			<Overload retVal='void' descr='// 0xF3D78F59DFE18D79
// 0x6E00EB0B
MISC::SET_FADE_IN_AFTER_LOAD(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFadeOutAfterArrest' func='yes'>
			<Overload retVal='void' descr='// 0x1E0B4DC0D990A4E7
// 0xCB074B9D
MISC::SET_FADE_OUT_AFTER_ARREST(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Sets whether the game should fade out after the player is arrested.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFadeOutAfterDeath' func='yes'>
			<Overload retVal='void' descr='// 0x4A18E01DF2C87B86
// 0xC9F6F0BC
MISC::SET_FADE_OUT_AFTER_DEATH(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Sets whether the game should fade out after the player dies.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFakeWantedLevel' func='yes'>
			<Overload retVal='void' descr='// 0x1454F2448DE30163
// 0x85B1C9FA
MISC::SET_FAKE_WANTED_LEVEL(int fakeWantedLevel);
----------------------------------------------------------------------------------------------------
```

Sets a visually fake wanted level on the user interface. Used by Rockstar&apos;s scripts to &quot;override&quot; re
gular wanted levels and make custom ones while the real wanted level and multipliers are ignored.  


Max is 6. Also the mini-map gets the red & blue flashing effect.  

```'>
				<Param name='int fakeWantedLevel' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFireAmmoThisFrame' func='yes'>
			<Overload retVal='Any' descr='// 0x11879CDD803D30F4
// 0x7C18FC8A
MISC::SET_FIRE_AMMO_THIS_FRAME(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGamePaused' func='yes'>
			<Overload retVal='void' descr='// 0x577D1284D6873711
// 0x8230FF6C
MISC::SET_GAME_PAUSED(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Make sure to call this from the correct thread if you&apos;re using multiple threads because all other th
reads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose contr
ol and the game remains in paused mode until you exit GTA5.exe  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGravityLevel' func='yes'>
			<Overload retVal='void' descr='// 0x740E14FAD5842351
// 0x2D833F4A
MISC::SET_GRAVITY_LEVEL(int level);
----------------------------------------------------------------------------------------------------
```

level can be from 0 to 3  

0: 9.8   

1: 2.4   

2: 0.1 - very low  

3: 0.0  

```'>
				<Param name='int level' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMinigameInProgress' func='yes'>
			<Overload retVal='void' descr='// 0x19E00D7322C6F85B
// 0x348B9046
MISC::SET_MINIGAME_IN_PROGRESS(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMissionFlag' func='yes'>
			<Overload retVal='void' descr='// 0xC4301E5121A0ED73
// 0x57592D52
MISC::SET_MISSION_FLAG(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

If true, the player can&apos;t save the game.   

If the parameter is true, sets the mission flag to true, if the parameter is false, the function doe
s nothing at all.  

^ also, if the mission flag is already set, the function does nothing at all  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNextRespawnToCustom' func='yes'>
			<Overload retVal='void' descr='// 0xA2716D40842EAF79
MISC::_SET_NEXT_RESPAWN_TO_CUSTOM();
----------------------------------------------------------------------------------------------------
```

Sets the next spawn location to the position supplied to _SET_CUSTOM_RESPAWN_POSITION.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetOverrideWeather' func='yes'>
			<Overload retVal='void' descr='// 0xA43D5C6FE51ADBEF
// 0xD9082BB5
MISC::SET_OVERRIDE_WEATHER(char* weatherType);
----------------------------------------------------------------------------------------------------
```

Appears to have an optional bool parameter that is unused in the scripts.  

If you pass true, something will be set to zero.  

```'>
				<Param name='char* weatherType' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRainFxIntensity' func='yes'>
			<Overload retVal='void' descr='// 0x643E26EA6E024D92
MISC::_SET_RAIN_FX_INTENSITY(float intensity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float intensity' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRandomEventFlag' func='yes'>
			<Overload retVal='void' descr='// 0x971927086CFD2158
// 0xA77F31E8
MISC::SET_RANDOM_EVENT_FLAG(Any p0);
----------------------------------------------------------------------------------------------------
```

If the parameter is true, sets the random event flag to true, if the parameter is false, the functio
n does nothing at all.  

Does nothing if the mission flag is set.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRandomSeed' func='yes'>
			<Overload retVal='void' descr='// 0x444D98F98C11F3EC
// 0xDB3FEB5C
MISC::SET_RANDOM_SEED(int time);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int time' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRandomWeatherType' func='yes'>
			<Overload retVal='void' descr='// 0x8B05F884CF7E8020
// 0xE7AA1BC9
MISC::SET_RANDOM_WEATHER_TYPE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetSaveHouse' func='yes'>
			<Overload retVal='void' descr='// 0x4F548CABEAE553BC
// 0xC3240BB4
MISC::SET_SAVE_HOUSE(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSaveMenuActive' func='yes'>
			<Overload retVal='void' descr='// 0xC9BF75D28165FF77
// 0xF5CCF164
MISC::SET_SAVE_MENU_ACTIVE(BOOL unk);
----------------------------------------------------------------------------------------------------
```

The bool is not a toggle!!!  

```'>
				<Param name='BOOL unk' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSuperJumpThisFrame' func='yes'>
			<Overload retVal='int' descr='// 0x57FFF03E423A4C0B
// 0x86745EF3
MISC::SET_SUPER_JUMP_THIS_FRAME(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetThisScriptCanBePaused' func='yes'>
			<Overload retVal='void' descr='// 0xAA391C728106F7AF
// 0xA0C3CE29
MISC::SET_THIS_SCRIPT_CAN_BE_PAUSED(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetThisScriptCanRemoveBlipsCreatedByAnyScript' func='yes'>
			<Overload retVal='void' descr='// 0xB98236CAAECEF897
// 0xD06F1720
MISC::SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTimeScale' func='yes'>
			<Overload retVal='void' descr='// 0x1D408577D440E81E
// 0xA7F84694
MISC::SET_TIME_SCALE(float time);
----------------------------------------------------------------------------------------------------
```

Maximum value is 1.  

At a value of 0 the game will still run at a minimum time scale.  

Slow Motion 1: 0.6  

Slow Motion 2: 0.4  

Slow Motion 3: 0.2  

```'>
				<Param name='float time' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetUnkMapFlag' func='yes'>
			<Overload retVal='void' descr='// 0xC5F0A8EBD3F361CE
// 0xE202879D
MISC::_SET_UNK_MAP_FLAG(int flag);
----------------------------------------------------------------------------------------------------
```

Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw,
 similar to 9BAE5AD2508DF078.  

Documented by NTAuthority (http://fivem.net/).  

```'>
				<Param name='int flag' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWeatherTypeNow' func='yes'>
			<Overload retVal='void' descr='// 0x29B487C359E19889
// 0x361E9EAC
MISC::SET_WEATHER_TYPE_NOW(char* weatherType);
----------------------------------------------------------------------------------------------------
```

The following weatherTypes are used in the scripts:  

&quot;CLEAR&quot;  

&quot;EXTRASUNNY&quot;  

&quot;CLOUDS&quot;  

&quot;OVERCAST&quot;  

&quot;RAIN&quot;  

&quot;CLEARING&quot;  

&quot;THUNDER&quot;  

&quot;SMOG&quot;  

&quot;FOGGY&quot;  

&quot;XMAS&quot;  

&quot;SNOWLIGHT&quot;  

&quot;BLIZZARD&quot;  

```'>
				<Param name='char* weatherType' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWeatherTypeNowPersist' func='yes'>
			<Overload retVal='void' descr='// 0xED712CA327900C8A
// 0xC869FE97
MISC::SET_WEATHER_TYPE_NOW_PERSIST(char* weatherType);
----------------------------------------------------------------------------------------------------
```

The following weatherTypes are used in the scripts:  

&quot;CLEAR&quot;  

&quot;EXTRASUNNY&quot;  

&quot;CLOUDS&quot;  

&quot;OVERCAST&quot;  

&quot;RAIN&quot;  

&quot;CLEARING&quot;  

&quot;THUNDER&quot;  

&quot;SMOG&quot;  

&quot;FOGGY&quot;  

&quot;XMAS&quot;  

&quot;SNOWLIGHT&quot;  

&quot;BLIZZARD&quot;  

```'>
				<Param name='char* weatherType' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWeatherTypeOverTime' func='yes'>
			<Overload retVal='void' descr='// 0xFB5045B7C42B75BF
// 0x386F0D25
MISC::_SET_WEATHER_TYPE_OVER_TIME(char* weatherType, float time);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* weatherType' />
				<Param name='float time' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWeatherTypePersist' func='yes'>
			<Overload retVal='void' descr='// 0x704983DF373B198F
// 0xC6C04C75
MISC::SET_WEATHER_TYPE_PERSIST(char* weatherType);
----------------------------------------------------------------------------------------------------
```

The following weatherTypes are used in the scripts:  

&quot;CLEAR&quot;  

&quot;EXTRASUNNY&quot;  

&quot;CLOUDS&quot;  

&quot;OVERCAST&quot;  

&quot;RAIN&quot;  

&quot;CLEARING&quot;  

&quot;THUNDER&quot;  

&quot;SMOG&quot;  

&quot;FOGGY&quot;  

&quot;XMAS&quot;  

&quot;SNOWLIGHT&quot;  

&quot;BLIZZARD&quot;  

```'>
				<Param name='char* weatherType' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWeatherTypeTransition' func='yes'>
			<Overload retVal='void' descr='// 0x578C752848ECFA0C
// 0x5CA74040
MISC::_SET_WEATHER_TYPE_TRANSITION(Hash weatherType1, Hash weatherType2, float percentWeather2);
----------------------------------------------------------------------------------------------------
```

Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of wea
therType1, if it is set to 1.0f it will be entirely of weatherType2. If it&apos;s set somewhere in betwee
n, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change th
e float to different values between 0 and 1:  

execute &quot;NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(&quot;&quot;RAIN&quot;&quot;), Game.GetHashKey(&quot;&quot;SMOG&quot;
&quot;), 0.50f);  

Note that unlike most of the other weather natives, this native takes the hash of the weather name, 
not the plain string. These are the weather names and their hashes:  

CLEAR	0x36A83D84  

EXTRASUNNY	0x97AA0A79  

CLOUDS	0x30FDAF5C  

OVERCAST	0xBB898D2D  

RAIN	0x54A69840  

CLEARING	0x6DB1A50D  

THUNDER	0xB677829F  

SMOG	0x10DCF4B5  

FOGGY	0xAE737644  

XMAS	0xAAC9C895  

SNOWLIGHT	0x23FB812B  

BLIZZARD	0x27EA2814  

/* OLD INVALID INFO BELOW */  

Not tested. Based purely on disassembly. Instantly sets the weather to sourceWeather, then transitio
ns to targetWeather over the specified transitionTime in seconds.  

If an invalid hash is specified for sourceWeather, the current weather type will be used.  

If an invalid hash is specified for targetWeather, the next weather type will be used.  

If an invalid hash is specified for both sourceWeather and targetWeather, the function just changes 
the transition time of the current transition.  

```'>
				<Param name='Hash weatherType1' />
				<Param name='Hash weatherType2' />
				<Param name='float percentWeather2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWind' func='yes'>
			<Overload retVal='void' descr='// 0xAC3A74E8384A9919
// 0xC6294698
MISC::SET_WIND(float speed);
----------------------------------------------------------------------------------------------------
```

Sets the the raw wind speed value.  

```'>
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWindDirection' func='yes'>
			<Overload retVal='void' descr='// 0xEB0F4468467B4528
// 0x381AEEE9
MISC::SET_WIND_DIRECTION(float direction);
----------------------------------------------------------------------------------------------------
```

This is NOT a heading. It&apos;s a FLOAT value from 0.0-7.0. Look at this image:  

i.imgur.com/FwVpGS6.png  

----------------------------  

This appears to be a heading, in radians (0-2*pi) -PNWParksFan  

```'>
				<Param name='float direction' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWindSpeed' func='yes'>
			<Overload retVal='void' descr='// 0xEE09ECEDBABE47FC
// 0x45705F94
MISC::SET_WIND_SPEED(float speed);
----------------------------------------------------------------------------------------------------
```

Using this native will clamp the wind speed value to a range of 0.0- 12.0. Using SET_WIND sets the s
ame value but without the restriction.  

```'>
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShootSingleBulletBetweenCoords' func='yes'>
			<Overload retVal='void' descr='// 0x867654CBC7606F2C
// 0xCB7415AC
MISC::SHOOT_SINGLE_BULLET_BETWEEN_COORDS(float x1, float y1, float z1, float x2, float y2, float z2, 
----------------------------------------------------------------------------------------------------
damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible, float speed);


```

```

this is what p7 does in disassembly  

__int8 var = 32;  

if (isInvisible)  

{  

   var = 16;  

}  

int v110 = var | 2 * p7;  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShootSingleBulletBetweenCoordsPresetParams' func='yes'>
			<Overload retVal='void' descr='// 0xE3A7742E0B7A2F8B
// 0x52ACCB7B
MISC::_SHOOT_SINGLE_BULLET_BETWEEN_COORDS_PRESET_PARAMS(float x1, float y1, float z1, float x2, float
----------------------------------------------------------------------------------------------------
float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisible,
 float speed, Entity entity);

```

```

entity - entity to ignore  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShootSingleBulletBetweenCoordsWithExtraParams' func='yes'>
			<Overload retVal='void' descr='// 0xBFE5756E7407064A
MISC::_SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS(float x1, float y1, float z1, float x2, f
----------------------------------------------------------------------------------------------------
y2, float z2, int damage, BOOL p7, Hash weaponHash, Ped ownerPed, BOOL isAudible, BOOL isInvisi
ble, float speed, Entity entity, BOOL p14, BOOL p15, BOOL p16, BOOL p17);

```

```

Since latest patches has 18 parameters.  

Console Hash: 0xCCDC33CC  

entity - entity to ignore  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShowPedInPauseMenu' func='yes'>
			<Overload retVal='void' descr='// 0x4EBB7E87AA0DBED4
MISC::_SHOW_PED_IN_PAUSE_MENU(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

If toggle is true, the ped&apos;s head is shown in the pause menu  

If toggle is false, the ped&apos;s head is not shown in the pause menu  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartSaveArray' func='yes'>
			<Overload retVal='void' descr='// 0x60FE567DF1B1AF9D
// 0x893A342C
MISC::_START_SAVE_ARRAY(Any* p0, int p1, char* arrayName);
----------------------------------------------------------------------------------------------------
```

Second parameter might be length.  

```'>
				<Param name='Any* p0' />
				<Param name='int p1' />
				<Param name='char* arrayName' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartSaveData' func='yes'>
			<Overload retVal='void' descr='// 0xA9575F812C6A7997
// 0x881A694D
MISC::START_SAVE_DATA(Any* p0, Any p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartSaveStruct' func='yes'>
			<Overload retVal='void' descr='// 0xBF737600CDDBEADD
// 0xFB45728E
MISC::_START_SAVE_STRUCT(Any* p0, int p1, char* structName);
----------------------------------------------------------------------------------------------------
```

Second parameter might be length.  

```'>
				<Param name='Any* p0' />
				<Param name='int p1' />
				<Param name='char* structName' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopSaveArray' func='yes'>
			<Overload retVal='void' descr='// 0x04456F95153C6BE4
// 0x0CAD8217
MISC::STOP_SAVE_ARRAY();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='StopSaveData' func='yes'>
			<Overload retVal='void' descr='// 0x74E20C9145FB66FD
// 0x3B1C07C8
MISC::STOP_SAVE_DATA();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='StopSaveStruct' func='yes'>
			<Overload retVal='void' descr='// 0xEB1774DF12BB9F12
// 0xC2624A28
MISC::STOP_SAVE_STRUCT();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='StringToInt' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5A5F40FE637EB584
// 0x590A8160
MISC::STRING_TO_INT(char* string, int* outInteger);
----------------------------------------------------------------------------------------------------
```

Returns false if it&apos;s a null or empty string or if the string is too long. outInteger will be set to
 -999 in that case.  

If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64
, 10); returns.  

```'>
				<Param name='char* string' />
				<Param name='int* outInteger' />
			</Overload>
		</KeyWord>
		<KeyWord name='Tan' func='yes'>
			<Overload retVal='float' descr='// 0x632106CC96E82E91
// 0xD320CE5E
MISC::TAN(float p0);
----------------------------------------------------------------------------------------------------
```

Returns tangent value of p0.  

```'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='TerminateAllScriptsWithThisName' func='yes'>
			<Overload retVal='void' descr='// 0x9DC711BC69C548DF
// 0x9F861FD4
MISC::TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME(char* scriptName);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/yLNWicUi  

```'>
				<Param name='char* scriptName' />
			</Overload>
		</KeyWord>
		<KeyWord name='UpdateOnscreenKeyboard' func='yes'>
			<Overload retVal='int' descr='// 0x0CF2B696BBF945AE
// 0x23D0A1CE
MISC::UPDATE_ONSCREEN_KEYBOARD();
----------------------------------------------------------------------------------------------------
```

Returns the current status of the onscreen keyboard, and updates the output.  

Status Codes:  

0 - User still editing  

1 - User has finished editing  

2 - User has canceled editing  

3 - Keyboard isn&apos;t active  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='UseFreemodeMapBehavior' func='yes'>
			<Overload retVal='void' descr='// 0x9BAE5AD2508DF078
// 0x721B2492
MISC::_USE_FREEMODE_MAP_BEHAVIOR(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Formerly known as _LOWER_MAP_PROP_DENSITY and wrongly due to idiots as _ENABLE_MP_DLC_MAPS.  

Sets the maximum prop density and changes a loading screen flag from &apos;loading story mode&apos; to &apos;loadin
g GTA Online&apos;. Does not touch DLC map data at all.  

In fact, I doubt this changes the flag whatsoever, that&apos;s the OTHER native idiots use together with 
this that does so, this one only causes a loading screen to show as it reloads map data.  

------------------------  

While you&apos;re going on your rant about other &quot;idiots&quot; can you please supply the name of the &quot;other na
tive&quot; for us &quot;idiots&quot; who&apos;d like to actually learn about loading IPL&apos;s? Thank, you.  

```

----------------------------------------------------------------------------------------------------

Old name: _ENABLE_MP_DLC_MAPS'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_ENABLE_MP_DLC_MAPS' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: UseFreemodeMapBehavior' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='UsingMissionCreator' func='yes'>
			<Overload retVal='void' descr='// 0xF14878FC50BEC6EE
// 0x20AB0B6B
MISC::USING_MISSION_CREATOR(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Hash collision  

If this is a hash collision, it&apos;s a very lucky one. It does seem strangely named but it is used to t
oggle the mission creator mode.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanPhoneBeSeenOnScreen' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC4E2813898C97A4B
// 0x5F978584
MOBILE::CAN_PHONE_BE_SEEN_ON_SCREEN();
----------------------------------------------------------------------------------------------------
```

This one is weird and seems to return a TRUE state regardless of whether the phone is visible on scr
een or tucked away.  

I can confirm the above. This function is hard-coded to always return 1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='CellCamActivate' func='yes'>
			<Overload retVal='void' descr='// 0xFDE8F069C542D126
// 0x234C1AE9
MOBILE::CELL_CAM_ACTIVATE(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='CellCamIsCharVisibleNoFaceCheck' func='yes'>
			<Overload retVal='BOOL' descr='// 0x439E9BC95B7E7FBE
// 0xBEA88097
MOBILE::CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK(Entity entity);
----------------------------------------------------------------------------------------------------
```

hash collision???  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateMobilePhone' func='yes'>
			<Overload retVal='void' descr='// 0xA4E8E696C532FBC7
// 0x5BBC5E23
MOBILE::CREATE_MOBILE_PHONE(int p3);
----------------------------------------------------------------------------------------------------
```

Creates a mobile phone of the specified type.  

Possible phone types:  

0 - Default phone / Michael&apos;s phone  

1 - Trevor&apos;s phone  

2 - Franklin&apos;s phone  

4 - Prologue phone  

These values represent bit flags, so a value of &apos;3&apos; would toggle Trevor and Franklin&apos;s phones togeth
er, causing unexpected behavior and most likely crash the game.  

```'>
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='DestroyMobilePhone' func='yes'>
			<Overload retVal='void' descr='// 0x3BC861DF703E5097
// 0x1A65037B
MOBILE::DESTROY_MOBILE_PHONE();
----------------------------------------------------------------------------------------------------
```

Destroys the currently active mobile phone.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='DisablePhoneThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x015C49A93E3E086E
// 0x4479B304
MOBILE::_DISABLE_PHONE_THIS_FRAME(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Disables the phone up-button, oddly enough.   

i.e.: When the phone is out, and this method is called with false as it&apos;s parameter, the phone will 
not be able to scroll up. However, when you use the down arrow key, it&apos;s functionality still, works 
on the phone.   

When the phone is not out, and this method is called with false as it&apos;s parameter, you will not be a
ble to bring up the phone. Although the up arrow key still works for whatever functionality it&apos;s use
d for, just not for the phone.  

This can be used for creating menu&apos;s when trying to disable the phone from being used.   

You do not have to call the function again with false as a parameter, as soon as the function stops 
being called, the phone will again be usable.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMobilePhonePosition' func='yes'>
			<Overload retVal='void' descr='// 0x584FDFDA48805B86
// 0xB2E1E1A0
MOBILE::GET_MOBILE_PHONE_POSITION(Vector3* position);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vector3* position' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMobilePhoneRenderId' func='yes'>
			<Overload retVal='void' descr='// 0xB4A53E05F68B6FA1
// 0x88E4FECE
MOBILE::GET_MOBILE_PHONE_RENDER_ID(int* renderId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* renderId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMobilePhoneRotation' func='yes'>
			<Overload retVal='void' descr='// 0x1CEFB61F193070AE
// 0x17A29F23
MOBILE::GET_MOBILE_PHONE_ROTATION(Vector3* rotation, Vehicle p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vector3* rotation' />
				<Param name='Vehicle p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='MoveFinger' func='yes'>
			<Overload retVal='void' descr='// 0x95C9E72F3D7DEC9B
MOBILE::_MOVE_FINGER(int direction);
----------------------------------------------------------------------------------------------------
```

For move the finger of player, the value of int goes 1 at 5.  

```'>
				<Param name='int direction' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopDoesItemExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBD4D7EAF8A30F637
MOBILE::_NETWORK_SHOP_DOES_ITEM_EXIST(char* name);
----------------------------------------------------------------------------------------------------
```

Belongs in UNK3, non-hashed version of 0x247F0F73A182EA0B  

```

----------------------------------------------------------------------------------------------------

Old name: _NETWORK_SHOP_IS_ITEM_UNLOCKED'>
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='_NETWORK_SHOP_IS_ITEM_UNLOCKED' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: NetworkShopDoesItemExist' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='NetworkShopDoesItemExistHash' func='yes'>
			<Overload retVal='BOOL' descr='// 0x247F0F73A182EA0B
MOBILE::_NETWORK_SHOP_DOES_ITEM_EXIST_HASH(Hash hash);
----------------------------------------------------------------------------------------------------
```

ex.:  

v_15 = sub_10cc8(VEHICLE::GET_VEHICLE_WHEEL_TYPE(a_2));  

if (!MOBILE::_247F0F73A182EA0B(v_15)) {  

    return 1;  

}  

Belongs in UNK3, hashed version of 0xBD4D7EAF8A30F637  

```

----------------------------------------------------------------------------------------------------

Old name: _NETWORK_SHOP_IS_ITEM_UNLOCKED_HASH'>
				<Param name='Hash hash' />
			</Overload>
		</KeyWord>
		<KeyWord name='_NETWORK_SHOP_IS_ITEM_UNLOCKED_HASH' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: NetworkShopDoesItemExistHash' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='N_0x15e69e2802c24b8d' func='yes'>
			<Overload retVal='void' descr='// 0x15E69E2802C24B8D
MOBILE::_0x15E69E2802C24B8D(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1b0b4aeed5b9b41c' func='yes'>
			<Overload retVal='void' descr='// 0x1B0B4AEED5B9B41C
MOBILE::_0x1B0B4AEED5B9B41C(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3117d84efa60f77b' func='yes'>
			<Overload retVal='void' descr='// 0x3117D84EFA60F77B
MOBILE::_0x3117D84EFA60F77B(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x375a706a5c2fd084' func='yes'>
			<Overload retVal='void' descr='// 0x375A706A5C2FD084
MOBILE::_0x375A706A5C2FD084(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x466da42c89865553' func='yes'>
			<Overload retVal='void' descr='// 0x466DA42C89865553
// 0x66DCD9D2
MOBILE::_0x466DA42C89865553(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x53f4892d18ec90a4' func='yes'>
			<Overload retVal='void' descr='// 0x53F4892D18EC90A4
MOBILE::_0x53F4892D18EC90A4(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa2ccbe62cd4c91a4' func='yes'>
			<Overload retVal='void' descr='// 0xA2CCBE62CD4C91A4
// 0xC273BB4D
MOBILE::_0xA2CCBE62CD4C91A4(int* toggle);
----------------------------------------------------------------------------------------------------
```

Needs more research. If the &quot;phone_cam12&quot; filter is applied, this function is called with &quot;TRUE&quot;; ot
herwise, &quot;FALSE&quot;.  

Example (XBOX 360):  

// check current filter selection  

if (GAMEPLAY::ARE_STRINGS_EQUAL(getElem(g_2471024, &l_17, 4), &quot;phone_cam12&quot;) != 0)  

{  

    MOBILE::_0xC273BB4D(0); // FALSE  

}  

else  

{  

    MOBILE::_0xC273BB4D(1); // TRUE  

}  

```'>
				<Param name='int* toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xac2890471901861c' func='yes'>
			<Overload retVal='void' descr='// 0xAC2890471901861C
MOBILE::_0xAC2890471901861C(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd6ade981781fca09' func='yes'>
			<Overload retVal='void' descr='// 0xD6ADE981781FCA09
MOBILE::_0xD6ADE981781FCA09(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf1e22dc13f5eebad' func='yes'>
			<Overload retVal='void' descr='// 0xF1E22DC13F5EEBAD
MOBILE::_0xF1E22DC13F5EEBAD(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScriptIsMovingMobilePhoneOffscreen' func='yes'>
			<Overload retVal='void' descr='// 0xF511F759238A5122
// 0x29828690
MOBILE::SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

If bool Toggle = true so the mobile is hide to screen.  

If bool Toggle = false so the mobile is show to screen.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMobilePhonePosition' func='yes'>
			<Overload retVal='void' descr='// 0x693A5C6D6734085B
// 0x841800B3
MOBILE::SET_MOBILE_PHONE_POSITION(float posX, float posY, float posZ);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMobilePhoneRotation' func='yes'>
			<Overload retVal='void' descr='// 0xBB779C0CA917E865
// 0x209C28CF
MOBILE::SET_MOBILE_PHONE_ROTATION(float rotX, float rotY, float rotZ, Any p3);
----------------------------------------------------------------------------------------------------
```

Last parameter is unknown and always zero.  

```'>
				<Param name='float rotX' />
				<Param name='float rotY' />
				<Param name='float rotZ' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMobilePhoneScale' func='yes'>
			<Overload retVal='void' descr='// 0xCBDD322A73D6D932
// 0x09BCF1BE
MOBILE::SET_MOBILE_PHONE_SCALE(float scale);
----------------------------------------------------------------------------------------------------
```

The minimum/default is 500.0f. If you plan to make it bigger set it&apos;s position as well. Also this se
ems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop 
you&apos;d need to call it everytime before you re-open the phone.  

```'>
				<Param name='float scale' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPhoneLean' func='yes'>
			<Overload retVal='void' descr='// 0x44E44169EF70138E
MOBILE::_SET_PHONE_LEAN(BOOL Toggle);
----------------------------------------------------------------------------------------------------
```

if the bool &quot;Toggle&quot; is &quot;true&quot; so the phone is lean.  

if the bool &quot;Toggle&quot; is &quot;false&quot; so the phone is not lean.  

```'>
				<Param name='BOOL Toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0035bb914316f1e3' func='yes'>
			<Overload retVal='void' descr='// 0x0035BB914316F1E3
NETCASH::_0x0035BB914316F1E3(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x05f04155a226fbbf' func='yes'>
			<Overload retVal='void' descr='// 0x05F04155A226FBBF
NETCASH::_0x05F04155A226FBBF(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x08a1b82b91900682' func='yes'>
			<Overload retVal='void' descr='// 0x08A1B82B91900682
NETCASH::_0x08A1B82B91900682(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x08b0ca7a6ab3ac32' func='yes'>
			<Overload retVal='void' descr='// 0x08B0CA7A6AB3AC32
NETCASH::_0x08B0CA7A6AB3AC32(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0c82d21a77c22d49' func='yes'>
			<Overload retVal='void' descr='// 0x0C82D21A77C22D49
NETCASH::_0x0C82D21A77C22D49(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0cb1be0633c024a8' func='yes'>
			<Overload retVal='void' descr='// 0x0CB1BE0633C024A8
NETCASH::_0x0CB1BE0633C024A8(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0d30eb83668e63c5' func='yes'>
			<Overload retVal='void' descr='// 0x0D30EB83668E63C5
NETCASH::_0x0D30EB83668E63C5(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0fe8e1fcd2b86b33' func='yes'>
			<Overload retVal='void' descr='// 0x0FE8E1FCD2B86B33
NETCASH::_0x0FE8E1FCD2B86B33(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x112209ce0290c03a' func='yes'>
			<Overload retVal='void' descr='// 0x112209CE0290C03A
NETCASH::_0x112209CE0290C03A(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x12d148d26538d0f9' func='yes'>
			<Overload retVal='void' descr='// 0x12D148D26538D0F9
NETCASH::_0x12D148D26538D0F9(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2afc2d19b50797f2' func='yes'>
			<Overload retVal='void' descr='// 0x2AFC2D19B50797F2
NETCASH::_0x2AFC2D19B50797F2(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2fab6614ce22e196' func='yes'>
			<Overload retVal='void' descr='// 0x2FAB6614CE22E196
NETCASH::_0x2FAB6614CE22E196(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x30fd873ece50e9f6' func='yes'>
			<Overload retVal='void' descr='// 0x30FD873ECE50E9F6
NETCASH::_0x30FD873ECE50E9F6(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x33981d6804e62f49' func='yes'>
			<Overload retVal='void' descr='// 0x33981D6804E62F49
NETCASH::_0x33981D6804E62F49(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x365e877c61d6988b' func='yes'>
			<Overload retVal='void' descr='// 0x365E877C61D6988B
NETCASH::_0x365E877C61D6988B(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3e4adaff1830f146' func='yes'>
			<Overload retVal='Any' descr='// 0x3E4ADAFF1830F146
NETCASH::_0x3E4ADAFF1830F146();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4128464231e3ca0b' func='yes'>
			<Overload retVal='void' descr='// 0x4128464231E3CA0B
NETCASH::_0x4128464231E3CA0B(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5182a339a3474510' func='yes'>
			<Overload retVal='void' descr='// 0x5182A339A3474510
NETCASH::_0x5182A339A3474510(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x55a1e095db052fa5' func='yes'>
			<Overload retVal='void' descr='// 0x55A1E095DB052FA5
NETCASH::_0x55A1E095DB052FA5(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5bcde0f640c773d2' func='yes'>
			<Overload retVal='void' descr='// 0x5BCDE0F640C773D2
NETCASH::_0x5BCDE0F640C773D2(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5d97630a8a0ef123' func='yes'>
			<Overload retVal='void' descr='// 0x5D97630A8A0EF123
NETCASH::_0x5D97630A8A0EF123(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5f456788b05faeac' func='yes'>
			<Overload retVal='void' descr='// 0x5F456788B05FAEAC
NETCASH::_0x5F456788B05FAEAC(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x675d19c6067cae08' func='yes'>
			<Overload retVal='void' descr='// 0x675D19C6067CAE08
NETCASH::_0x675D19C6067CAE08(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x69ef772b192614c1' func='yes'>
			<Overload retVal='void' descr='// 0x69EF772B192614C1
NETCASH::_0x69EF772B192614C1(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6fd97159fe3c971a' func='yes'>
			<Overload retVal='void' descr='// 0x6FD97159FE3C971A
NETCASH::_0x6FD97159FE3C971A(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x821418c727fcacd7' func='yes'>
			<Overload retVal='void' descr='// 0x821418C727FCACD7
NETCASH::_0x821418C727FCACD7(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x84c0116d012e8fc2' func='yes'>
			<Overload retVal='void' descr='// 0x84C0116D012E8FC2
NETCASH::_0x84C0116D012E8FC2(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8586789730b10caf' func='yes'>
			<Overload retVal='void' descr='// 0x8586789730B10CAF
NETCASH::_0x8586789730B10CAF(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8e243837643d9583' func='yes'>
			<Overload retVal='void' descr='// 0x8E243837643D9583
NETCASH::_0x8E243837643D9583(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9251b6abf2d0a5b4' func='yes'>
			<Overload retVal='void' descr='// 0x9251B6ABF2D0A5B4
NETCASH::_0x9251B6ABF2D0A5B4(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9777734dad16992f' func='yes'>
			<Overload retVal='Any' descr='// 0x9777734DAD16992F
NETCASH::_0x9777734DAD16992F();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x998e18ceb44487fc' func='yes'>
			<Overload retVal='void' descr='// 0x998E18CEB44487FC
NETCASH::_0x998E18CEB44487FC(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa51b086b0b2c0f7a' func='yes'>
			<Overload retVal='void' descr='// 0xA51B086B0B2C0F7A
NETCASH::_0xA51B086B0B2C0F7A(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa75ccf58a60a5fd1' func='yes'>
			<Overload retVal='void' descr='// 0xA75CCF58A60A5FD1
NETCASH::_0xA75CCF58A60A5FD1(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any
----------------------------------------------------------------------------------------------------
;

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa95f667a755725da' func='yes'>
			<Overload retVal='void' descr='// 0xA95F667A755725DA
NETCASH::_0xA95F667A755725DA(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xac272c0ae01b4bd8' func='yes'>
			<Overload retVal='void' descr='// 0xAC272C0AE01B4BD8
NETCASH::_0xAC272C0AE01B4BD8(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb49eca122467d05f' func='yes'>
			<Overload retVal='void' descr='// 0xB49ECA122467D05F
NETCASH::_0xB49ECA122467D05F(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb4c2ec463672474e' func='yes'>
			<Overload retVal='void' descr='// 0xB4C2EC463672474E
NETCASH::_0xB4C2EC463672474E(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbd0efb25cca8f97a' func='yes'>
			<Overload retVal='void' descr='// 0xBD0EFB25CCA8F97A
NETCASH::_0xBD0EFB25CCA8F97A(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc1952f3773ba18fe' func='yes'>
			<Overload retVal='void' descr='// 0xC1952F3773BA18FE
NETCASH::_0xC1952F3773BA18FE(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc8407624cef2354b' func='yes'>
			<Overload retVal='void' descr='// 0xC8407624CEF2354B
NETCASH::_0xC8407624CEF2354B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcda1c62be2777802' func='yes'>
			<Overload retVal='void' descr='// 0xCDA1C62BE2777802
NETCASH::_0xCDA1C62BE2777802(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd7cccba28c4ecaf0' func='yes'>
			<Overload retVal='void' descr='// 0xD7CCCBA28C4ECAF0
NETCASH::_0xD7CCCBA28C4ECAF0(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd99db210089617fe' func='yes'>
			<Overload retVal='void' descr='// 0xD99DB210089617FE
NETCASH::_0xD99DB210089617FE(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdbc966a01c02bca7' func='yes'>
			<Overload retVal='void' descr='// 0xDBC966A01C02BCA7
NETCASH::_0xDBC966A01C02BCA7(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe23adc6fcb1f29ae' func='yes'>
			<Overload retVal='void' descr='// 0xE23ADC6FCB1F29AE
NETCASH::_0xE23ADC6FCB1F29AE(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe7df4e0545dfb56e' func='yes'>
			<Overload retVal='void' descr='// 0xE7DF4E0545DFB56E
NETCASH::_0xE7DF4E0545DFB56E(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe8b0b270b6e7c76e' func='yes'>
			<Overload retVal='void' descr='// 0xE8B0B270B6E7C76E
NETCASH::_0xE8B0B270B6E7C76E(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xeca658ce2a4e5a72' func='yes'>
			<Overload retVal='void' descr='// 0xECA658CE2A4E5A72
NETCASH::_0xECA658CE2A4E5A72(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xed5fd7af10f5e262' func='yes'>
			<Overload retVal='void' descr='// 0xED5FD7AF10F5E262
NETCASH::_0xED5FD7AF10F5E262(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xedead9a91ec768b3' func='yes'>
			<Overload retVal='void' descr='// 0xEDEAD9A91EC768B3
NETCASH::_0xEDEAD9A91EC768B3(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfa07759e6fddd7cf' func='yes'>
			<Overload retVal='void' descr='// 0xFA07759E6FDDD7CF
NETCASH::_0xFA07759E6FDDD7CF(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfc4ee00a7b3bfb76' func='yes'>
			<Overload retVal='void' descr='// 0xFC4EE00A7B3BFB76
NETCASH::_0xFC4EE00A7B3BFB76(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xffbe02cd385356bd' func='yes'>
			<Overload retVal='Any' descr='// 0xFFBE02CD385356BD
NETCASH::_0xFFBE02CD385356BD();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetOnlineVersion' func='yes'>
			<Overload retVal='char*' descr='// 0xFCA9373EF340AC0A
NETSHOP::_GET_ONLINE_VERSION();
----------------------------------------------------------------------------------------------------
```

Online version is defined here: update\update.rpf\common\data\version.txt  

Example:  

[ONLINE_VERSION_NUMBER]  

1.33  

_GET_ONLINE_VERSION() will return &quot;1.33&quot;  

Belongs in NETWORK  

```

## Return value

----------------------------------------------------------------------------------------------------

Old name: _GET_GAME_VERSION'>
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_GAME_VERSION' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetOnlineVersion' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='NetworkShopBasketAddItem' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF30980718C8ED876
NETSHOP::_NETWORK_SHOP_BASKET_ADD_ITEM(Any* p0, Any p1);
----------------------------------------------------------------------------------------------------
```

p0 is pointer to a script array  

```'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopBasketApplyServerData' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE1A0450ED46A7812
NETSHOP::_NETWORK_SHOP_BASKET_APPLY_SERVER_DATA(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
```

p0 =&gt; unk3::_network_shop_basket_apply_server_data(Global_2590199[iParam0 /*76*/], &uVar6); =&gt; scrip
t array  

```'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopBasketEnd' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA65568121DF2EA26
NETSHOP::_NETWORK_SHOP_BASKET_END();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopBasketIsFull' func='yes'>
			<Overload retVal='Any' descr='// 0x27F76CC6C55AD30E
NETSHOP::_NETWORK_SHOP_BASKET_IS_FULL();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopBasketStart' func='yes'>
			<Overload retVal='BOOL' descr='// 0x279F08B1A4B29B7E
NETSHOP::_NETWORK_SHOP_BASKET_START(Any* p0, int p1, int p2, int p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='int p1' />
				<Param name='int p2' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopBeginService' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3C5FD37B5499582E
NETSHOP::_NETWORK_SHOP_BEGIN_SERVICE(int* transactionID, Hash p1, Hash transactionHash, int amount, Hash
----------------------------------------------------------------------------------------------------
int mode);

```

```

No longer works if you hook it as a stealth money method  

Modes------------------  

1: Wallet  

2: Bank  

4: Bank  

8: Wallet  

Only difference I noticed.  

```'>
				<Param name='int* transactionID' />
				<Param name='Hash p1' />
				<Param name='Hash transactionHash' />
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopCashTransferSetTelemetryNonceSeed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x498C1E05CE5F7877
NETSHOP::_NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopCheckoutStart' func='yes'>
			<Overload retVal='BOOL' descr='// 0x39BE7CEA8D9CC8E6
NETSHOP::_NETWORK_SHOP_CHECKOUT_START(int transactionID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int transactionID' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopDeleteSetTelemetryNonceSeed' func='yes'>
			<Overload retVal='Any' descr='// 0x112CEF1615A1139F
NETSHOP::_NETWORK_SHOP_DELETE_SET_TELEMETRY_NONCE_SEED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopGetPrice' func='yes'>
			<Overload retVal='int' descr='// 0xC27009422FCCA88D
NETSHOP::_NETWORK_SHOP_GET_PRICE(Hash itemHash, Hash hash2, BOOL p2);
----------------------------------------------------------------------------------------------------
```

bool is always true in game scripts  

```'>
				<Param name='Hash itemHash' />
				<Param name='Hash hash2' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopGetTransactionsDisabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x810E8431C0614BF9
NETSHOP::_NETWORK_SHOP_GET_TRANSACTIONS_DISABLED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopGetTransactionsEnabledForCharacter' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB24F0944DA203D9E
NETSHOP::_NETWORK_SHOP_GET_TRANSACTIONS_ENABLED_FOR_CHARACTER(int mpChar);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int mpChar' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopSessionApplyReceivedData' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2F41D51BA3BCD1F1
NETSHOP::_NETWORK_SHOP_SESSION_APPLY_RECEIVED_DATA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopSetTelemetryNonceSeed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9507D4271988E1AE
NETSHOP::_NETWORK_SHOP_SET_TELEMETRY_NONCE_SEED(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopStartSession' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA135AC892A58FC07
NETSHOP::_NETWORK_SHOP_START_SESSION(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShopTerminateService' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE2A99A9B524BEFFF
NETSHOP::_NETWORK_SHOP_TERMINATE_SERVICE(int transactionID);
----------------------------------------------------------------------------------------------------
```

Will cancel the transaction  

```

----------------------------------------------------------------------------------------------------

Old name: _NETWORK_SHOP_END_SERVICE'>
				<Param name='int transactionID' />
			</Overload>
		</KeyWord>
		<KeyWord name='_NETWORK_SHOP_END_SERVICE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: NetworkShopTerminateService' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='NetworkTransferBankToWallet' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD47A2C1BA117471D
NETSHOP::_NETWORK_TRANSFER_BANK_TO_WALLET(int charStatInt, int amount);
----------------------------------------------------------------------------------------------------
```

used in atm_trigger script.  

usage:  

int iVar0;STATS::STAT_GET_INT(GAMEPLAY::GET_HASH_KEY(&quot;mpply_last_mp_char&quot;), &iVar0, -1);  

UNK3::_NETWORK_TRANSFER_WALLET_TO_BANK(iVar0, amount);  

used to deposit money into bank from wallet, shows up in transaction log.  

```'>
				<Param name='int charStatInt' />
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkTransferWalletToBank' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC2F7FE5309181C7D
NETSHOP::_NETWORK_TRANSFER_WALLET_TO_BANK(int charStatInt, int amount);
----------------------------------------------------------------------------------------------------
```

used in atm_trigger script.  

usage:  

int iVar0; STATS::STAT_GET_INT(GAMEPLAY::GET_HASH_KEY(&quot;mpply_last_mp_char&quot;), &iVar0, -1);  

UNK3::_NETWORK_TRANSFER_BANK_TO_WALLET(iVar0, amount);  

used to withdraw money from bank into wallet, shows up in transaction log.  

```'>
				<Param name='int charStatInt' />
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0395cb47b022e62c' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0395CB47B022E62C
NETSHOP::_0x0395CB47B022E62C(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0a6d923dffc9bd89' func='yes'>
			<Overload retVal='Any' descr='// 0x0A6D923DFFC9BD89
NETSHOP::_0x0A6D923DFFC9BD89();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x170910093218c8b9' func='yes'>
			<Overload retVal='BOOL' descr='// 0x170910093218C8B9
NETSHOP::_0x170910093218C8B9(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x23789e777d14ce44' func='yes'>
			<Overload retVal='Any' descr='// 0x23789E777D14CE44
NETSHOP::_0x23789E777D14CE44();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2b949a1e6aec8f6a' func='yes'>
			<Overload retVal='Any' descr='// 0x2B949A1E6AEC8F6A
NETSHOP::_0x2B949A1E6AEC8F6A();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x350aa5ebc03d3bd2' func='yes'>
			<Overload retVal='Any' descr='// 0x350AA5EBC03D3BD2
NETSHOP::_0x350AA5EBC03D3BD2();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x357b152ef96c30b6' func='yes'>
			<Overload retVal='Any' descr='// 0x357B152EF96C30B6
NETSHOP::_0x357B152EF96C30B6();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x35a1b3e1d1315cfa' func='yes'>
			<Overload retVal='BOOL' descr='// 0x35A1B3E1D1315CFA
NETSHOP::_0x35A1B3E1D1315CFA(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3c4487461e9b0dcb' func='yes'>
			<Overload retVal='Any' descr='// 0x3C4487461E9B0DCB
NETSHOP::_0x3C4487461E9B0DCB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x51f1a8e48c3d2f6d' func='yes'>
			<Overload retVal='BOOL' descr='// 0x51F1A8E48C3D2F6D
NETSHOP::_0x51F1A8E48C3D2F6D(Any p0, BOOL p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x613f125ba3bd2eb9' func='yes'>
			<Overload retVal='Any' descr='// 0x613F125BA3BD2EB9
NETSHOP::_0x613F125BA3BD2EB9();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x72eb7ba9b69bf6ab' func='yes'>
			<Overload retVal='BOOL' descr='// 0x72EB7BA9B69BF6AB
NETSHOP::_0x72EB7BA9B69BF6AB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x74a0fd0688f1ee45' func='yes'>
			<Overload retVal='int' descr='// 0x74A0FD0688F1EE45
NETSHOP::_0x74A0FD0688F1EE45(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x85f6c9aba1de2bcf' func='yes'>
			<Overload retVal='Any' descr='// 0x85F6C9ABA1DE2BCF
NETSHOP::_0x85F6C9ABA1DE2BCF();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x897433d292b44130' func='yes'>
			<Overload retVal='BOOL' descr='// 0x897433D292B44130
NETSHOP::_0x897433D292B44130(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc13c38e47ea5df31' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC13C38E47EA5DF31
NETSHOP::_0xC13C38E47EA5DF31(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcf38dafbb49ede5e' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCF38DAFBB49EDE5E
NETSHOP::_0xCF38DAFBB49EDE5E(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe3e5a7c64ca2c6ed' func='yes'>
			<Overload retVal='Any' descr='// 0xE3E5A7C64CA2C6ED
NETSHOP::_0xE3E5A7C64CA2C6ED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe547e9114277098f' func='yes'>
			<Overload retVal='Any' descr='// 0xE547E9114277098F
NETSHOP::_0xE547E9114277098F();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='ActivateDamageTrackerOnNetworkId' func='yes'>
			<Overload retVal='void' descr='// 0xD45B1FFCCD52FF19
// 0x95D07BA5
NETWORK::ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID(int netID, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netID' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='BadSportPlayerLeftDetected' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEC5E3AF5289DCA81
// 0x4C2C6B6A
NETWORK::BAD_SPORT_PLAYER_LEFT_DETECTED(int* networkHandle, int event, int amountReceived);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
				<Param name='int event' />
				<Param name='int amountReceived' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanPlayOnline' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5F91D5D0B36AA310
// 0x97287D68
NETWORK::_CAN_PLAY_ONLINE();
----------------------------------------------------------------------------------------------------
```

if(_CAN_PLAY_ONLINE() == 0) means the player is banned(Social Club or Rockstar)  

```

## Return value

----------------------------------------------------------------------------------------------------

Old name: _IS_PLAYER_BANNED'>
			</Overload>
		</KeyWord>
		<KeyWord name='_IS_PLAYER_BANNED' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: CanPlayOnline' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='CanRegisterMissionEntities' func='yes'>
			<Overload retVal='BOOL' descr='// 0x69778E7564BADE6D
// 0x83794008
NETWORK::CAN_REGISTER_MISSION_ENTITIES(int ped_amt, int vehicle_amt, int object_amt, int pickup_amt);
----------------------------------------------------------------------------------------------------
```

if (CAN_REGISTER_MISSION_ENTITIES(20, 20, 20, 10))  

{  

}  

```'>
				<Param name='int ped_amt' />
				<Param name='int vehicle_amt' />
				<Param name='int object_amt' />
				<Param name='int pickup_amt' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanRegisterMissionObjects' func='yes'>
			<Overload retVal='BOOL' descr='// 0x800DD4721A8B008B
// 0x7F85DFDE
NETWORK::CAN_REGISTER_MISSION_OBJECTS(int amount);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanRegisterMissionPeds' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBCBF4FEF9FA5D781
// 0xCCAA5CE9
NETWORK::CAN_REGISTER_MISSION_PEDS(int amount);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanRegisterMissionPickups' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0A49D1CB6E34AF72
NETWORK::_CAN_REGISTER_MISSION_PICKUPS(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanRegisterMissionVehicles' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7277F1F2E085EE74
// 0x818B6830
NETWORK::CAN_REGISTER_MISSION_VEHICLES(int amount);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='DownloadCheck' func='yes'>
			<Overload retVal='void' descr='// 0x4F18196C8D38768D
// 0xC38E9DB0
NETWORK::_DOWNLOAD_CHECK();
----------------------------------------------------------------------------------------------------
```

Downloads prod.cloud.rockstargames.com/titles/gta5/&lt;platform&gt;/check.json  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='FacebookDoUnkCheck' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA75E2B6733DA5142
// 0x11E8B5CD
NETWORK::_FACEBOOK_DO_UNK_CHECK();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='FacebookIsAvailable' func='yes'>
			<Overload retVal='BOOL' descr='// 0x43865688AE10F0D7
// 0x429AEAB3
NETWORK::_FACEBOOK_IS_AVAILABLE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='FacebookIsSendingData' func='yes'>
			<Overload retVal='BOOL' descr='// 0x62B9FEC9A11F10EF
// 0x37A28C26
NETWORK::_FACEBOOK_IS_SENDING_DATA();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='FacebookSetCreateCharacterComplete' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDC48473142545431
// 0x02DAD93F
NETWORK::_FACEBOOK_SET_CREATE_CHARACTER_COMPLETE();
----------------------------------------------------------------------------------------------------
```

GTA Online character creation  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='FacebookSetHeistComplete' func='yes'>
			<Overload retVal='BOOL' descr='// 0x098AB65B9ED9A9EC
// 0x30B51753
NETWORK::_FACEBOOK_SET_HEIST_COMPLETE(char* heistName, int cashEarned, int xpEarned);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* heistName' />
				<Param name='int cashEarned' />
				<Param name='int xpEarned' />
			</Overload>
		</KeyWord>
		<KeyWord name='FacebookSetMilestoneComplete' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0AE1F1653B554AB9
// 0x2D947814
NETWORK::_FACEBOOK_SET_MILESTONE_COMPLETE(int milestoneId);
----------------------------------------------------------------------------------------------------
```

milestoneId:  

0 = &quot;percentcomplete&quot;  

1 = &quot;storycomplete&quot;  

2 = &quot;vehicles&quot;  

3 = &quot;properties&quot;  

4 = &quot;psych&quot;  

5 = &quot;mapreveal&quot;  

6 = &quot;prologue&quot;  

```'>
				<Param name='int milestoneId' />
			</Overload>
		</KeyWord>
		<KeyWord name='FadeOutLocalPlayer' func='yes'>
			<Overload retVal='void' descr='// 0x416DBD4CD6ED8DD2
// 0x8FA7CEBD
NETWORK::FADE_OUT_LOCAL_PLAYER(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Hardcoded to not work in SP.  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='FilloutPmPlayerList' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCBBD7C4991B64809
// 0xCE40F423
NETWORK::FILLOUT_PM_PLAYER_LIST(int* networkHandle, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='FilloutPmPlayerListWithNames' func='yes'>
			<Overload retVal='BOOL' descr='// 0x716B6DB9D1886106
// 0xB8DF604E
NETWORK::FILLOUT_PM_PLAYER_LIST_WITH_NAMES(Any* p0, Any* p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetContentCategory' func='yes'>
			<Overload retVal='int' descr='// 0xA7BAB11E7C9C6C5A
// 0x5E8A7559
NETWORK::_GET_CONTENT_CATEGORY(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetContentDescriptionHash' func='yes'>
			<Overload retVal='int' descr='// 0x7CF0448787B23758
// 0x91534C6E
NETWORK::_GET_CONTENT_DESCRIPTION_HASH(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetContentFileVersion' func='yes'>
			<Overload retVal='Any' descr='// 0x37025B27D9B658B1
// 0xFF7D44E6
NETWORK::_GET_CONTENT_FILE_VERSION(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetContentId' func='yes'>
			<Overload retVal='char*' descr='// 0x55AA95F481D694D2
// 0x331AEABF
NETWORK::_GET_CONTENT_ID(Any p0);
----------------------------------------------------------------------------------------------------
```

Return the mission id of a job.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetDateAndTimeFromUnixEpoch' func='yes'>
			<Overload retVal='void' descr='// 0xAC97AF97FA68E5D5
// 0xBB7CCE49
NETWORK::_GET_DATE_AND_TIME_FROM_UNIX_EPOCH(int unixEpoch, Any* timeStructure);
----------------------------------------------------------------------------------------------------
```

Takes the specified time and writes it to the structure specified in the second argument.  

struct date_time  

{  

    alignas(8) int year;  

    alignas(8) int month;  

    alignas(8) int day;  

    alignas(8) int hour;  

    alignas(8) int minute;  

    alignas(8) int second;  

};  

```'>
				<Param name='int unixEpoch' />
				<Param name='Any* timeStructure' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNetworkTime' func='yes'>
			<Overload retVal='int' descr='// 0x7A5487FE9FAA6B48
// 0x998103C2
NETWORK::GET_NETWORK_TIME();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumMembershipDesc' func='yes'>
			<Overload retVal='int' descr='// 0x1F471B79ACC90BEF
// 0x807B3450
NETWORK::_GET_NUM_MEMBERSHIP_DESC();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumReservedMissionObjects' func='yes'>
			<Overload retVal='int' descr='// 0xAA81B5F10BC43AC2
// 0x16A80CD6
NETWORK::GET_NUM_RESERVED_MISSION_OBJECTS(BOOL p0);
----------------------------------------------------------------------------------------------------
```

p0 appears to be for MP  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumReservedMissionPeds' func='yes'>
			<Overload retVal='int' descr='// 0x1F13D5AE5CB17E17
// 0x6C25975C
NETWORK::GET_NUM_RESERVED_MISSION_PEDS(BOOL p0);
----------------------------------------------------------------------------------------------------
```

p0 appears to be for MP  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumReservedMissionVehicles' func='yes'>
			<Overload retVal='int' descr='// 0xCF3A965906452031
// 0xA9A308F3
NETWORK::GET_NUM_RESERVED_MISSION_VEHICLES(BOOL p0);
----------------------------------------------------------------------------------------------------
```

p0 appears to be for MP  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerAdvancedModifierPrivileges' func='yes'>
			<Overload retVal='char*' descr='// 0xCD67AD041A394C9C
// 0x8F3137E6
NETWORK::GET_PLAYER_ADVANCED_MODIFIER_PRIVILEGES(int p0);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _GET_CONTENT_USER_ID'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_CONTENT_USER_ID' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetPlayerAdvancedModifierPrivileges' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetPosixTime' func='yes'>
			<Overload retVal='int' descr='// 0x9A73240B49945C76
// 0xF2FDF2E0
NETWORK::_GET_POSIX_TIME();
----------------------------------------------------------------------------------------------------
```

Return POSIX timestamp.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetRootContentId' func='yes'>
			<Overload retVal='char*' descr='// 0xC0173D6BFF4E0348
// 0x0E5E8E5C
NETWORK::_GET_ROOT_CONTENT_ID(Any p0);
----------------------------------------------------------------------------------------------------
```

Return the root content id of a job.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTimeAsString' func='yes'>
			<Overload retVal='char*' descr='// 0x9E23B1777A927DAD
// 0x8218944E
NETWORK::GET_TIME_AS_STRING(int time);
----------------------------------------------------------------------------------------------------
```

Previously named, &apos;_FORMAT_TIME&apos; for people who can&apos;t find it&apos;s uses in decompiled scripts.  

```

----------------------------------------------------------------------------------------------------

Old name: _FORMAT_TIME'>
				<Param name='int time' />
			</Overload>
		</KeyWord>
		<KeyWord name='_FORMAT_TIME' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetTimeAsString' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetTimeDifference' func='yes'>
			<Overload retVal='int' descr='// 0xA2C6FC031D46FFF0
// 0x5666A837
NETWORK::GET_TIME_DIFFERENCE(int timeA, int timeB);
----------------------------------------------------------------------------------------------------
```

Subtracts the second argument from the first.  

```'>
				<Param name='int timeA' />
				<Param name='int timeB' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTimeOffset' func='yes'>
			<Overload retVal='int' descr='// 0x017008CCDAD48503
// 0x2E079AE6
NETWORK::GET_TIME_OFFSET(int timeA, int timeB);
----------------------------------------------------------------------------------------------------
```

Adds the first argument to the second.  

```'>
				<Param name='int timeA' />
				<Param name='int timeB' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTunablesContentModifierId' func='yes'>
			<Overload retVal='int' descr='// 0x187382F8A3E0A6C3
// 0xA78571CA
NETWORK::_GET_TUNABLES_CONTENT_MODIFIER_ID(Hash contentHash);
----------------------------------------------------------------------------------------------------
```

Return the content modifier id (the tunables context if you want) of a specific content.  

It takes the content hash (which is the mission id hash), and return the content modifier id, used a
s the tunables context.  

The mission id can be found on the Social club, for example, &apos;socialclub.rockstargames.com/games/gta
v/jobs/job/A8M6Bz8MLEC5xngvDCzGwA&apos;  

&apos;A8M6Bz8MLEC5xngvDCzGwA&apos; is the mission id, so the game hash this and use it as the parameter for th
is native.  

```'>
				<Param name='Hash contentHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasBgScriptBeenDownloaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8132C0EB8B2B3293
NETWORK::_HAS_BG_SCRIPT_BEEN_DOWNLOADED();
----------------------------------------------------------------------------------------------------
```

Console Hash  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='HasNetworkTimeStarted' func='yes'>
			<Overload retVal='BOOL' descr='// 0x46718ACEEDEAFC84
// 0x4538C4A2
NETWORK::HAS_NETWORK_TIME_STARTED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='HasTunablesBeenDownloaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0467C11ED88B7D28
NETWORK::_HAS_TUNABLES_BEEN_DOWNLOADED();
----------------------------------------------------------------------------------------------------
```

Console Hash  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsDamageTrackerActiveOnNetworkId' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6E192E33AD436366
// 0x597063BA
NETWORK::IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID(int netID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netID' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsNetworkVehicleBeenDamagedByAnyObject' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDBD2056652689917
// 0xF1E84832
NETWORK::IS_NETWORK_VEHICLE_BEEN_DAMAGED_BY_ANY_OBJECT(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

hash collision.  

Definitely a hash collision, has something do to with your local player, not a vehicle  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerInCutscene' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE73092F4157CD126
// 0xE0A619BD
NETWORK::IS_PLAYER_IN_CUTSCENE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsRockstarBanned' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8020A73847E0CA7D
// 0xD3BBE42F
NETWORK::_IS_ROCKSTAR_BANNED();
----------------------------------------------------------------------------------------------------
```

if(NETWORK::_IS_ROCKSTAR_BANNED() == 0) means the player is rockstar banned  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsSocialclubBanned' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA0AD7E2AF5349F61
// 0xBDBB5948
NETWORK::_IS_SOCIALCLUB_BANNED();
----------------------------------------------------------------------------------------------------
```

if(_IS_SOCIALCLUB_BANNED() == 0) means the player is social club banned  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsSphereVisibleToAnotherMachine' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD82CF8E64C8729D8
// 0x23C5274E
NETWORK::IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE(float p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsSphereVisibleToPlayer' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDC3A310219E5DA62
// 0xE9FCFB32
NETWORK::IS_SPHERE_VISIBLE_TO_PLAYER(Any p0, float p1, float p2, float p3, float p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsTimeEqualTo' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF5BC95857BD6D512
// 0x8B4D1C06
NETWORK::IS_TIME_EQUAL_TO(int timeA, int timeB);
----------------------------------------------------------------------------------------------------
```

Returns true if the two times are equal; otherwise returns false.  

```

----------------------------------------------------------------------------------------------------

Old name: _ARE_INTEGERS_EQUAL'>
				<Param name='int timeA' />
				<Param name='int timeB' />
			</Overload>
		</KeyWord>
		<KeyWord name='_ARE_INTEGERS_EQUAL' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: IsTimeEqualTo' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='IsTimeLessThan' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCB2CF5148012C8D0
// 0x50EF8FC6
NETWORK::IS_TIME_LESS_THAN(int timeA, int timeB);
----------------------------------------------------------------------------------------------------
```

Subtracts the second argument from the first, then returns whether the result is negative.  

```

----------------------------------------------------------------------------------------------------

Old name: _SUBTRACT_B_FROM_A_AND_CHECK_IF_NEGATIVE'>
				<Param name='int timeA' />
				<Param name='int timeB' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SUBTRACT_B_FROM_A_AND_CHECK_IF_NEGATIVE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: IsTimeLessThan' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='IsTimeMoreThan' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDE350F8651E4346C
// 0xBBB6DF61
NETWORK::IS_TIME_MORE_THAN(int timeA, int timeB);
----------------------------------------------------------------------------------------------------
```

Subtracts the first argument from the second, then returns whether the result is negative.  

```

----------------------------------------------------------------------------------------------------

Old name: _SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE'>
				<Param name='int timeA' />
				<Param name='int timeB' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SUBTRACT_A_FROM_B_AND_CHECK_IF_NEGATIVE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: IsTimeMoreThan' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='NetToEnt' func='yes'>
			<Overload retVal='Entity' descr='// 0xBFFEAB45A9A9094A
// 0x5E149683
NETWORK::NET_TO_ENT(int netHandle);
----------------------------------------------------------------------------------------------------
```

gets the entity id of a network id  

```'>
				<Param name='int netHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetToObj' func='yes'>
			<Overload retVal='Object' descr='// 0xD8515F5FEA14CB3F
// 0x27AA14D8
NETWORK::NET_TO_OBJ(int netHandle);
----------------------------------------------------------------------------------------------------
```

gets the object id of a network id  

```'>
				<Param name='int netHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetToPed' func='yes'>
			<Overload retVal='Ped' descr='// 0xBDCD95FC216A8B3E
// 0x87717DD4
NETWORK::NET_TO_PED(int netHandle);
----------------------------------------------------------------------------------------------------
```

gets the ped id of a network id  

```'>
				<Param name='int netHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetToVeh' func='yes'>
			<Overload retVal='Vehicle' descr='// 0x367B936610BA360C
// 0x7E02FAEA
NETWORK::NET_TO_VEH(int netHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAcceptPresenceInvite' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFA91550DF9318B22
// 0xE5DA4CED
NETWORK::NETWORK_ACCEPT_PRESENCE_INVITE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAccessTunableBool' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAA6A47A573ABB75A
// 0x8A04E1FE
NETWORK::NETWORK_ACCESS_TUNABLE_BOOL(char* tunableContext, char* tunableName);
----------------------------------------------------------------------------------------------------
```

Some of the tunable contexts used in the PC scripts:  

- &quot;BASE_GLOBALS&quot;  

- &quot;MP_GLOBAL&quot;  

and some of the tunable names used in the PC scripts:  

- &quot;XP_MULTIPLIER&quot;  

- &quot;CASH_MULTIPLIER&quot;  

- &quot;ARMOUR_REWARD_GIFT&quot;  

- &quot;TOGGLE_CREATORS_OFF&quot;  

- &quot;MULTIPLAYER_DISABLED&quot;  

```'>
				<Param name='char* tunableContext' />
				<Param name='char* tunableName' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAccessTunableBoolHash' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEA16B69D93D71A45
NETWORK::_NETWORK_ACCESS_TUNABLE_BOOL_HASH(Hash tunableContext, Hash tunableName);
----------------------------------------------------------------------------------------------------
```

Console Hash - 0x18867C61 = NETWORK_ACCESS_TUNABLE_BOOL_HASH  

```'>
				<Param name='Hash tunableContext' />
				<Param name='Hash tunableName' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAccessTunableBoolHashFailVal' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC7420099936CE286
NETWORK::_NETWORK_ACCESS_TUNABLE_BOOL_HASH_FAIL_VAL(Hash tunableContext, Hash tunableName, BOOL defaultV
----------------------------------------------------------------------------------------------------
);

```

```

Returns a default value if the tunable don&apos;t exist.  

Console Hash  

```'>
				<Param name='Hash tunableContext' />
				<Param name='Hash tunableName' />
				<Param name='BOOL defaultV' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAccessTunableFloat' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE5608CA7BC163A5F
// 0x41E8912A
NETWORK::NETWORK_ACCESS_TUNABLE_FLOAT(char* tunableContext, char* tunableName, float* value);
----------------------------------------------------------------------------------------------------
```

Some of the tunable contexts used in the PC scripts:  

- &quot;BASE_GLOBALS&quot;  

- &quot;MP_GLOBAL&quot;  

- &quot;MP_FM_RACES&quot;  

- &quot;MP_FM_RACES_CAR&quot;  

- &quot;MP_FM_RACES_SEA&quot;  

- &quot;MP_FM_RACES_CAR&quot;  

- &quot;MP_FM_RACES_AIR&quot;  

- &quot;MP_FM_BASEJUMP&quot;  

- &quot;MP_FM_RACES_CYCLE&quot;  

- &quot;MP_FM_RACES_BIKE&quot;  

- &quot;MP_FM_MISSIONS&quot;  

- &quot;MP_FM_CONTACT&quot;  

- &quot;MP_FM_RANDOM&quot;  

- &quot;MP_FM_VERSUS&quot;  

- &quot;MP_FM_LTS&quot;  

- &quot;MP_FM_CAPTURE&quot;  

- &quot;MP_FM_DM&quot;  

- &quot;MP_FM_SURVIVAL&quot;  

- &quot;MP_FM_GANG_ATTACK&quot;  

- &quot;MP_FM_BASEJUMP&quot;  

- &quot;MP_CNC_TEAM_COP&quot;  

- &quot;MP_CNC_TEAM_VAGOS&quot;  

- &quot;MP_CNC_TEAM_LOST&quot;  

and some of the tunable names used in the PC scripts:  

- &quot;XP_MULTIPLIER&quot;  

- &quot;CASH_MULTIPLIER&quot;  

- &quot;ARMOUR_REWARD_GIFT&quot;  

- &quot;TOGGLE_CREATORS_OFF&quot;  

```'>
				<Param name='char* tunableContext' />
				<Param name='char* tunableName' />
				<Param name='float* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAccessTunableFloatHash' func='yes'>
			<Overload retVal='BOOL' descr='// 0x972BC203BBC4C4D5
NETWORK::_NETWORK_ACCESS_TUNABLE_FLOAT_HASH(Hash tunableContext, Hash tunableName, float* value);
----------------------------------------------------------------------------------------------------
```

Console Hash - 0x3972551F = NETWORK_ACCESS_TUNABLE_FLOAT_HASH  

```'>
				<Param name='Hash tunableContext' />
				<Param name='Hash tunableName' />
				<Param name='float* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAccessTunableInt' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8BE1146DFD5D4468
// 0xE4B3726A
NETWORK::NETWORK_ACCESS_TUNABLE_INT(char* tunableContext, char* tunableName, int* value);
----------------------------------------------------------------------------------------------------
```

Some of the tunable contexts used in the PC scripts:  

- &quot;MP_FM_RACES&quot;  

- &quot;MP_FM_RACES_CAR&quot;  

- &quot;MP_FM_RACES_SEA&quot;  

- &quot;MP_FM_RACES_CAR&quot;  

- &quot;MP_FM_RACES_AIR&quot;  

- &quot;MP_FM_BASEJUMP&quot;  

- &quot;MP_FM_RACES_CYCLE&quot;  

- &quot;MP_FM_RACES_BIKE&quot;  

- &quot;MP_FM_MISSIONS&quot;  

- &quot;MP_FM_CONTACT&quot;  

- &quot;MP_FM_RANDOM&quot;  

- &quot;MP_FM_VERSUS&quot;  

- &quot;MP_FM_LTS&quot;  

- &quot;MP_FM_CAPTURE&quot;  

- &quot;MP_FM_DM&quot;  

- &quot;MP_FM_SURVIVAL&quot;  

- &quot;MP_FM_GANG_ATTACK&quot;  

- &quot;MP_FM_BASEJUMP&quot;  

- &quot;BASE_GLOBALS&quot;  

- &quot;MP_GLOBAL&quot;  

and some of the tunable names used in the PC scripts:  

- &quot;XP_MULTIPLIER&quot;  

- &quot;CASH_MULTIPLIER&quot;  

- &quot;ARMOUR_REWARD_GIFT&quot;  

- &quot;TOGGLE_CREATORS_OFF&quot;  

```'>
				<Param name='char* tunableContext' />
				<Param name='char* tunableName' />
				<Param name='int* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAccessTunableIntHash' func='yes'>
			<Overload retVal='BOOL' descr='// 0x40FCE03E50E8DBE8
NETWORK::_NETWORK_ACCESS_TUNABLE_INT_HASH(Hash tunableContext, Hash tunableName, int* value);
----------------------------------------------------------------------------------------------------
```

Console Hash - 0xB2E83B75 = NETWORK_ACCESS_TUNABLE_INT_HASH  

```'>
				<Param name='Hash tunableContext' />
				<Param name='Hash tunableName' />
				<Param name='int* value' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkActionFollowInvite' func='yes'>
			<Overload retVal='Any' descr='// 0xC88156EBB786F8D5
// 0xAB969F00
NETWORK::NETWORK_ACTION_FOLLOW_INVITE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAddEntityAngledArea' func='yes'>
			<Overload retVal='Any' descr='// 0x376C6375BA60293A
NETWORK::_NETWORK_ADD_ENTITY_ANGLED_AREA(float p0, float p1, float p2, float p3, float p4, float p5, floa
----------------------------------------------------------------------------------------------------
);

```

```

Console hash: 0xCD69BEA1  

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAddEntityArea' func='yes'>
			<Overload retVal='Any' descr='// 0x494C8FB299290269
// 0x51030E5B
NETWORK::NETWORK_ADD_ENTITY_AREA(float p0, float p1, float p2, float p3, float p4, float p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAddEntityToSynchronisedScene' func='yes'>
			<Overload retVal='void' descr='// 0xF2404D68CBC855FA
// 0x10DD636C
NETWORK::NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(Entity entity, int netScene, char* animDict, char* ani
----------------------------------------------------------------------------------------------------
e, float speed, float speedMulitiplier, int flag);

```'>
				<Param name='Entity entity' />
				<Param name='int netScene' />
				<Param name='char* animDict' />
				<Param name='char* ani' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAddFollowers' func='yes'>
			<Overload retVal='void' descr='// 0x236406F60CF216D6
// 0x0EC62629
NETWORK::NETWORK_ADD_FOLLOWERS(int* p0, int p1);
----------------------------------------------------------------------------------------------------
```

..  

```'>
				<Param name='int* p0' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAddFriend' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8E02D73914064223
// 0x20E5B3EE
NETWORK::NETWORK_ADD_FRIEND(int* networkHandle, char* message);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
				<Param name='char* message' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAddPedToSynchronisedScene' func='yes'>
			<Overload retVal='void' descr='// 0x742A637471BCECD9
// 0xB386713E
NETWORK::NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(Ped ped, int netScene, char* animDict, char* animnName, f
----------------------------------------------------------------------------------------------------
speed, float speedMultiplier, int duration, int flag, float playbackRate, Any p9);

```'>
				<Param name='Ped ped' />
				<Param name='int netScene' />
				<Param name='char* animDict' />
				<Param name='char* animnName' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAmIBlockedByGamer' func='yes'>
			<Overload retVal='BOOL' descr='// 0x15337C7C268A27B2
// 0xD19B312C
NETWORK::NETWORK_AM_I_BLOCKED_BY_GAMER(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAmIBlockedByPlayer' func='yes'>
			<Overload retVal='BOOL' descr='// 0x87F395D957D4353D
// 0x953EF45E
NETWORK::NETWORK_AM_I_BLOCKED_BY_PLAYER(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAmIMutedByGamer' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDF02A2C93F1F26DA
// 0x7685B333
NETWORK::NETWORK_AM_I_MUTED_BY_GAMER(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAmIMutedByPlayer' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9D6981DFC91A8604
// 0xE128F2B0
NETWORK::NETWORK_AM_I_MUTED_BY_PLAYER(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkApplyTransitionParameter' func='yes'>
			<Overload retVal='void' descr='// 0x521638ADA1BA0D18
// 0xCEE79711
NETWORK::NETWORK_APPLY_TRANSITION_PARAMETER(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAreHandlesTheSame' func='yes'>
			<Overload retVal='BOOL' descr='// 0x57DBA049E110F217
// 0x45975AE3
NETWORK::NETWORK_ARE_HANDLES_THE_SAME(int* netHandle1, int* netHandle2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* netHandle1' />
				<Param name='int* netHandle2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAreRosAvailable' func='yes'>
			<Overload retVal='BOOL' descr='// 0x85443FF4C328F53B
// 0x3FB40673
NETWORK::_NETWORK_ARE_ROS_AVAILABLE();
----------------------------------------------------------------------------------------------------
```

Returns whether the Rockstar game services are available or not:  

SCLB_NO_ROS = The Rockstar game services are unavailable right now. Please try again later.  

ros.rockstargames.com  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAreTransitionDetailsValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2615AA2A695930C1
// 0xCDEBCCE7
NETWORK::NETWORK_ARE_TRANSITION_DETAILS_VALID(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkAttachSynchronisedSceneToEntity' func='yes'>
			<Overload retVal='void' descr='// 0x478DCBD2A98B705A
// 0x3FE5B222
NETWORK::NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY(int netScene, Entity entity, int bone);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netScene' />
				<Param name='Entity entity' />
				<Param name='int bone' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBail' func='yes'>
			<Overload retVal='void' descr='// 0x95914459A87EBA28
// 0x87D79A04
NETWORK::NETWORK_BAIL();
----------------------------------------------------------------------------------------------------
```

This has arguments.. in PC scripts.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBailTransition' func='yes'>
			<Overload retVal='void' descr='// 0xEAA572036990CD1B
// 0xB59D74CA
NETWORK::NETWORK_BAIL_TRANSITION();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBlockInvites' func='yes'>
			<Overload retVal='void' descr='// 0x34F9E9049454A7A0
// 0xD156FD1A
NETWORK::NETWORK_BLOCK_INVITES(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBlockInvites_2' func='yes'>
			<Overload retVal='void' descr='// 0x4A9FDE3A5A6D0437
// 0x18F03AFD
NETWORK::_NETWORK_BLOCK_INVITES_2(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBlockKickedPlayers' func='yes'>
			<Overload retVal='void' descr='// 0x6B07B9CE4D390375
// 0x0FCE995D
NETWORK::_NETWORK_BLOCK_KICKED_PLAYERS(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCanAccessMultiplayer' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAF50DA1A3F8B1BA4
// 0xA520B982
NETWORK::NETWORK_CAN_ACCESS_MULTIPLAYER(int* loadingState);
----------------------------------------------------------------------------------------------------
```

11 - Need to download tunables.  

12 - Need to download background script.  

Returns 1 if the multiplayer is loaded, otherwhise 0.  

```'>
				<Param name='int* loadingState' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCanBail' func='yes'>
			<Overload retVal='BOOL' descr='// 0x580CE4438479CC61
// 0x60E1FEDF
NETWORK::NETWORK_CAN_BAIL();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCanCommunicateWithGamer' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA150A4F065806B1F
// 0xD05EB7F6
NETWORK::NETWORK_CAN_COMMUNICATE_WITH_GAMER(int* player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCanEnterMultiplayer' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7E782A910C362C25
// 0x4A23B9C9
NETWORK::NETWORK_CAN_ENTER_MULTIPLAYER();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCanNetworkIdBeSeen' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA1607996431332DF
// 0xEA5176C0
NETWORK::_NETWORK_CAN_NETWORK_ID_BE_SEEN(int netId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netId' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCanSessionEnd' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4EEBC3694E49C572
// 0xE1FCCDBA
NETWORK::NETWORK_CAN_SESSION_END();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCanSetWaypoint' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC927EC229934AF60
// 0x009E68F3
NETWORK::NETWORK_CAN_SET_WAYPOINT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkChangeTransitionSlots' func='yes'>
			<Overload retVal='void' descr='// 0xEEEDA5E6D7080987
// 0x1E5F6AEF
NETWORK::NETWORK_CHANGE_TRANSITION_SLOTS(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkChatMute' func='yes'>
			<Overload retVal='void' descr='// 0x57B192B4D4AD23D5
// 0x2F98B405
NETWORK::_NETWORK_CHAT_MUTE(BOOL p0);
----------------------------------------------------------------------------------------------------
```

this function is toggle when people report you and you get the auto mute message  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCheckDataManagerForHandle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x796A87B3B68D1F3D
NETWORK::_NETWORK_CHECK_DATA_MANAGER_FOR_HANDLE(Any* p0);
----------------------------------------------------------------------------------------------------
```

console hash: 0x3624F054  

```'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClanAnimation' func='yes'>
			<Overload retVal='BOOL' descr='// 0x729E3401F0430686
// 0xBDA90BAC
NETWORK::_NETWORK_CLAN_ANIMATION(char* animDict, char* animName);
----------------------------------------------------------------------------------------------------
```

Only documented...  

```'>
				<Param name='char* animDict' />
				<Param name='char* animName' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClanDownloadMembership' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA989044E70010ABE
// 0x8E8CB520
NETWORK::NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClanDownloadMembershipPending' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5B9E023DC6EBEDC0
// 0x1FDB590F
NETWORK::NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClanGetMembership' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC8BC2011F67B3411
// 0xCDC4A590
NETWORK::NETWORK_CLAN_GET_MEMBERSHIP(int* p0, int* clanMembership, int p2);
----------------------------------------------------------------------------------------------------
```

BOOL DEBUG_MEMBRESHIP(int Param)  

{  

	int membership;  

	networkHandleMgr handle;  

	NETWORK_HANDLE_FROM_PLAYER(iSelectedPlayer, &handle.netHandle, 13);  

	if (!_NETWORK_IS_CLAN_MEMBERSHIP_FINISHED_DOWNLOADING())  

	{  

		if (NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(&Param))  

		{  

if (NETWORK_CLAN_GET_MEMBERSHIP_COUNT(&Param) &gt; 0)  

{  

	if (NETWORK_CLAN_GET_MEMBERSHIP_VALID(&Param, 0))  

	{  

		if (NETWORK_CLAN_GET_MEMBERSHIP(&Param, &membership, -1))  

		{  

_0xF633805A(&membership, 35, &handle.netHandle);  

		}  

	}  

}  

		}  

	}  

	else  

	{  

		NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(&handle.netHandle);  

	}  

}  

```'>
				<Param name='int* p0' />
				<Param name='int* clanMembership' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClanGetMembershipCount' func='yes'>
			<Overload retVal='int' descr='// 0xAAB11F6C4ADBC2C1
// 0x25924010
NETWORK::NETWORK_CLAN_GET_MEMBERSHIP_COUNT(int* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClanGetMembershipDesc' func='yes'>
			<Overload retVal='BOOL' descr='// 0x48DE78AF2C8885B8
// 0x3369DD1F
NETWORK::NETWORK_CLAN_GET_MEMBERSHIP_DESC(int* memberDesc, int p1);
----------------------------------------------------------------------------------------------------
```

networkMembershipMgr memShip;  

int maxMemship = _GET_NUM_MEMBERSHIP_DESC();  

for (int i = 0; i &lt; maxMemship; i++)  

{  

	NETWORK_CLAN_GET_MEMBERSHIP_DESC(&memShip.memHandle, i);  

}  

```'>
				<Param name='int* memberDesc' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClanGetMembershipValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0x48A59CF88D43DF0E
// 0x48914F6A
NETWORK::NETWORK_CLAN_GET_MEMBERSHIP_VALID(int* p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClanJoin' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9FAAA4F4FC71F87F
// 0x79C916C5
NETWORK::NETWORK_CLAN_JOIN(int clanDesc);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int clanDesc' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClanPlayerGetDesc' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEEE6EACBE8874FBA
// 0x6EE4A282
NETWORK::NETWORK_CLAN_PLAYER_GET_DESC(int* clanDesc, int bufferSize, int* networkHandle);
----------------------------------------------------------------------------------------------------
```

bufferSize is 35 in the scripts.  

bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is ob
tained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can&apos;t explain why 35 * sizeof(int) == 28
0 and not 140, but I&apos;ll get back to you on that.  

the answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]  

pastebin.com/cSZniHak  

```'>
				<Param name='int* clanDesc' />
				<Param name='int bufferSize' />
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClanPlayerIsActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB124B57F571D8F18
// 0xAB8319A3
NETWORK::NETWORK_CLAN_PLAYER_IS_ACTIVE(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClanRemoteMembershipsAreInCache' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBB6E6FEE99D866B2
// 0x40202867
NETWORK::NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(int* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClearClockTimeOverride' func='yes'>
			<Overload retVal='void' descr='// 0xD972DF67326F966E
// 0xC4AEAF49
NETWORK::NETWORK_CLEAR_CLOCK_TIME_OVERRIDE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClearFollowers' func='yes'>
			<Overload retVal='void' descr='// 0x058F43EC59A8631A
// 0x5E557307
NETWORK::NETWORK_CLEAR_FOLLOWERS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClearFollowInvite' func='yes'>
			<Overload retVal='Any' descr='// 0x439BFDE3CD0610F6
// 0x3242F952
NETWORK::NETWORK_CLEAR_FOLLOW_INVITE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClearFoundGamers' func='yes'>
			<Overload retVal='void' descr='// 0x6D14CCEE1B40381A
// 0x6AA9A154
NETWORK::NETWORK_CLEAR_FOUND_GAMERS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClearPropertyId' func='yes'>
			<Overload retVal='void' descr='// 0xC2B82527CA77053E
// 0x38BC35C8
NETWORK::NETWORK_CLEAR_PROPERTY_ID();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClearTransitionCreatorHandle' func='yes'>
			<Overload retVal='void' descr='// 0xFB3272229A82C759
// 0x8BB336F7
NETWORK::NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClearVoiceChannel' func='yes'>
			<Overload retVal='void' descr='// 0xE036A705F989E049
// 0x9ECF722A
NETWORK::NETWORK_CLEAR_VOICE_CHANNEL();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCloseTransitionMatchmaking' func='yes'>
			<Overload retVal='void' descr='// 0x43F4DBA69710E01E
// 0x82D32D07
NETWORK::NETWORK_CLOSE_TRANSITION_MATCHMAKING();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkConvertSynchronisedSceneToSynchronizedScene' func='yes'>
			<Overload retVal='int' descr='// 0x02C40BF885C567B6
// 0x16AED87B
NETWORK::_NETWORK_CONVERT_SYNCHRONISED_SCENE_TO_SYNCHRONIZED_SCENE(int netScene);
----------------------------------------------------------------------------------------------------
```

netScene to scene  

```

----------------------------------------------------------------------------------------------------

Old name: _NETWORK_UNLINK_NETWORKED_SYNCHRONISED_SCENE'>
				<Param name='int netScene' />
			</Overload>
		</KeyWord>
		<KeyWord name='_NETWORK_UNLINK_NETWORKED_SYNCHRONISED_SCENE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: NetworkConvertSynchronisedSceneToSynchronizedScene' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='NetworkCopyPedBlendData' func='yes'>
			<Overload retVal='BOOL' descr='// 0x99B72C7ABDE5C910
NETWORK::_NETWORK_COPY_PED_BLEND_DATA(Ped ped, Player player);
----------------------------------------------------------------------------------------------------
```

console hash: 0x99F58A07  

Sadly I thought this copied their tattoos, but it just seems to copy their &apos;blend data&apos;. E.G. skin t
one/color, fat/skinny face, etc.  

```'>
				<Param name='Ped ped' />
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCreateSynchronisedScene' func='yes'>
			<Overload retVal='int' descr='// 0x7CD6BC4C2BBDD526
// 0xB06FE3FE
NETWORK::NETWORK_CREATE_SYNCHRONISED_SCENE(float x, float y, float z, float xRot, float yRot, float zRot,
----------------------------------------------------------------------------------------------------
p6, int p7, int p8, float p9);

```

```

returns netScene  

this native is missing 2 params  

float p10, float p11  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float xRot' />
				<Param name='float yRot' />
				<Param name='float zRot' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDisableInvincibleFlashing' func='yes'>
			<Overload retVal='void' descr='// 0x9DD368BF06983221
// 0x8D27280E
NETWORK::NETWORK_DISABLE_INVINCIBLE_FLASHING(int player, BOOL p1);
----------------------------------------------------------------------------------------------------
```

hash collision???  

I did this and I didn&apos;t see anything happening  

int pindex;  

for (int i = 0; i &lt; 32; i++)  

{  

	if (NETWORK_IS_PARTICIPANT_ACTIVE(INT_TO_PARTICIPANTINDEX(i)))  

	{  

pindex = NETWORK_GET_PLAYER_INDEX(INT_TO_PARTICIPANTINDEX(i));  

NETWORK_DISABLE_INVINCIBLE_FLASHING(pindex, 1);  

	}  

}  

```'>
				<Param name='int player' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDoesEntityExistWithNetworkId' func='yes'>
			<Overload retVal='BOOL' descr='// 0x18A47D074708FD68
// 0x1E2E3177
NETWORK::NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDoesNetworkIdExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0x38CE16C96BD11344
// 0xB8D2C99E
NETWORK::NETWORK_DOES_NETWORK_ID_EXIST(int netID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netID' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDoesTunableExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0x85E5F8B9B898B20A
// 0x9FCE9C9A
NETWORK::NETWORK_DOES_TUNABLE_EXIST(char* tunableContext, char* tunableName);
----------------------------------------------------------------------------------------------------
```

Some of the tunable contexts used in the PC scripts:  

- &quot;MP_FM_RACES&quot;  

- &quot;MP_FM_RACES_CAR&quot;  

- &quot;MP_FM_RACES_SEA&quot;  

- &quot;MP_FM_RACES_CAR&quot;  

- &quot;MP_FM_RACES_AIR&quot;  

- &quot;MP_FM_BASEJUMP&quot;  

- &quot;MP_FM_RACES_CYCLE&quot;  

- &quot;MP_FM_RACES_BIKE&quot;  

- &quot;MP_FM_MISSIONS&quot;  

- &quot;MP_FM_CONTACT&quot;  

- &quot;MP_FM_RANDOM&quot;  

- &quot;MP_FM_VERSUS&quot;  

- &quot;MP_FM_LTS&quot;  

- &quot;MP_FM_CAPTURE&quot;  

- &quot;MP_FM_DM&quot;  

- &quot;MP_FM_SURVIVAL&quot;  

- &quot;MP_FM_GANG_ATTACK&quot;  

- &quot;MP_FM_BASEJUMP&quot;  

- &quot;BASE_GLOBALS&quot;  

- &quot;MP_GLOBAL&quot;  

and some of the tunable names used in the PC scripts:  

- &quot;XP_MULTIPLIER&quot;  

- &quot;CASH_MULTIPLIER&quot;  

- &quot;ARMOUR_REWARD_GIFT&quot;  

- &quot;TOGGLE_CREATORS_OFF&quot;  

```'>
				<Param name='char* tunableContext' />
				<Param name='char* tunableName' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDoesTunableExistHash' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE4E53E1419D81127
NETWORK::_NETWORK_DOES_TUNABLE_EXIST_HASH(Hash tunableContext, Hash tunableName);
----------------------------------------------------------------------------------------------------
```

Console Hash - 0x25915CB9 = NETWORK_DOES_TUNABLE_EXIST_HASH  

```'>
				<Param name='Hash tunableContext' />
				<Param name='Hash tunableName' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDoTransitionQuickmatch' func='yes'>
			<Overload retVal='BOOL' descr='// 0x71FB0EBCD4915D56
// 0x2FF65C0B
NETWORK::NETWORK_DO_TRANSITION_QUICKMATCH(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDoTransitionQuickmatchAsync' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA091A5E44F0072E5
// 0x47D61C99
NETWORK::NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDoTransitionQuickmatchWithGroup' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9C4AB58491FDC98A
// 0x5CE60A11
NETWORK::NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP(Any p0, Any p1, Any p2, Any p3, Any* p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any* p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDoTransitionToFreemode' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3AAD8B2FCA1E289F
// 0xC7CB8ADF
NETWORK::NETWORK_DO_TRANSITION_TO_FREEMODE(Any* p0, Any p1, BOOL p2, int players, BOOL p4);
----------------------------------------------------------------------------------------------------
```

p2 is true 3/4 of the occurrences I found.  

&apos;players&apos; is the number of players for a session. On PS3/360 it&apos;s always 18. On PC it&apos;s 32.  

```'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
				<Param name='int players' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDoTransitionToGame' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3E9BB38102A589B0
// 0x1B2114D2
NETWORK::NETWORK_DO_TRANSITION_TO_GAME(BOOL p0, int maxPlayers);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='int maxPlayers' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDoTransitionToNewFreemode' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9E80A5BA8109F974
// 0xAD13375E
NETWORK::NETWORK_DO_TRANSITION_TO_NEW_FREEMODE(Any* p0, Any* p1, int players, BOOL p3, BOOL p4, BOOL p5)
----------------------------------------------------------------------------------------------------
``'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='int players' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDoTransitionToNewGame' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4665F51EFED00034
// 0x58AFBE63
NETWORK::NETWORK_DO_TRANSITION_TO_NEW_GAME(BOOL p0, int maxPlayers, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='int maxPlayers' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEnableMotionDrugged' func='yes'>
			<Overload retVal='Any' descr='// 0x0B0CC10720653F3B
// 0x9262744C
NETWORK::NETWORK_ENABLE_MOTION_DRUGGED();
----------------------------------------------------------------------------------------------------
```

Pretty sure this is a hash collision  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEndTutorialSession' func='yes'>
			<Overload retVal='void' descr='// 0xD0AFAFF5A51D72F7
// 0xBA57E53E
NETWORK::NETWORK_END_TUTORIAL_SESSION();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkExplodeVehicle' func='yes'>
			<Overload retVal='Any' descr='// 0x301A42153C9AD707
// 0x0E1B38AE
NETWORK::NETWORK_EXPLODE_VEHICLE(Vehicle vehicle, BOOL isAudible, BOOL isInvisible, BOOL p3);
----------------------------------------------------------------------------------------------------
```

In the console script dumps, this is only referenced once.   

NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);  

^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differen
ces in the parameters.  

Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?  

am_plane_takedown.c   

network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);  

armenian2.c   

network_explode_vehicle(Local_80[6 &lt;2&gt;], 1, 0, 0);  

fm_horde_controler.c  

network_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);  

fm_mission_controller.c, has 6 hits so not going to list them.  

Side note, setting the first parameter to 0 seems to mute sound or so?  

Seems it&apos;s like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always
 seems to be 0.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL isAudible' />
				<Param name='BOOL isInvisible' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkFadeInEntity' func='yes'>
			<Overload retVal='void' descr='// 0x1F4ED342ACEFE62D
// 0x9B9FCD02
NETWORK::NETWORK_FADE_IN_ENTITY(Entity entity, BOOL state);
----------------------------------------------------------------------------------------------------
```

state - 0 does 5 fades  

state - 1 does 6 fades  

native is missing third argument, also boolean, setting to 1 made vehicle fade in slower, probably &quot;
slow&quot; as per NETWORK_FADE_OUT_ENTITY  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL state' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkFadeOutEntity' func='yes'>
			<Overload retVal='void' descr='// 0xDE564951F95E09ED
// 0x47EDEE56
NETWORK::NETWORK_FADE_OUT_ENTITY(Entity entity, BOOL normal, BOOL slow);
----------------------------------------------------------------------------------------------------
```

normal - transition like when your coming out of LSC  

slow - transition like when you walk into a mission  

```'>
				<Param name='Entity entity' />
				<Param name='BOOL normal' />
				<Param name='BOOL slow' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkFindMatchedGamers' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF7B2CFDE5C9F700D
// 0xA13045D4
NETWORK::NETWORK_FIND_MATCHED_GAMERS(Any p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkForceLocalUseOfSyncedSceneCamera' func='yes'>
			<Overload retVal='void' descr='// 0xCF8BD3B0BD6D42D7
// 0xBFFE8B5C
NETWORK::_NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA(int netScene, char* animDict, char* animName);
----------------------------------------------------------------------------------------------------
`'>
				<Param name='int netScene' />
				<Param name='char* animDict' />
				<Param name='char* animName' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGamerHasHeadset' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF2FD55CB574BCC55
// 0xD036DA4A
NETWORK::NETWORK_GAMER_HAS_HEADSET(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGamertagFromHandlePending' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB071E27958EF4CF0
// 0xF000828E
NETWORK::NETWORK_GAMERTAG_FROM_HANDLE_PENDING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGamertagFromHandleStart' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9F0C0A981D73FA56
// 0xEBA00C2A
NETWORK::NETWORK_GAMERTAG_FROM_HANDLE_START(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGamertagFromHandleSucceeded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFD00798DBA7523DD
// 0x89C2B5EA
NETWORK::NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetActivityPlayerNum' func='yes'>
			<Overload retVal='int' descr='// 0x73E2B500410DA5A2
// 0x31F951FD
NETWORK::NETWORK_GET_ACTIVITY_PLAYER_NUM(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetBackgroundLoadingRecipients' func='yes'>
			<Overload retVal='BOOL' descr='// 0x97A770BEEF227E2B
// 0x1CFB3F51
NETWORK::NETWORK_GET_BACKGROUND_LOADING_RECIPIENTS(Any p0, Any p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetCurrentlySelectedGamerHandleFromInviteMenu' func='yes'>
			<Overload retVal='BOOL' descr='// 0x74881E6BCAE2327C
// 0x72BA00CE
NETWORK::NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetDesroyerOfEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4CACA84440FA26F6
// 0x28A45454
NETWORK::_NETWORK_GET_DESROYER_OF_ENTITY(Any p0, Any p1, Hash* weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Hash* weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetDestroyerOfNetworkId' func='yes'>
			<Overload retVal='int' descr='// 0x7A1ADEEF01740A24
// 0x4FCA6436
NETWORK::NETWORK_GET_DESTROYER_OF_NETWORK_ID(int netId, Hash* weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netId' />
				<Param name='Hash* weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetEntityFromNetworkId' func='yes'>
			<Overload retVal='Entity' descr='// 0xCE4E5D9B0A4FF560
// 0x5B912C3F
NETWORK::NETWORK_GET_ENTITY_FROM_NETWORK_ID(int netId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netId' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetEntityIsLocal' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0991549DE4D64762
// 0x813353ED
NETWORK::NETWORK_GET_ENTITY_IS_LOCAL(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetEntityIsNetworked' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC7827959479DCC78
// 0xD7F934F4
NETWORK::NETWORK_GET_ENTITY_IS_NETWORKED(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetEntityKillerOfPlayer' func='yes'>
			<Overload retVal='Entity' descr='// 0x42B2DAA6B596F5F8
// 0xA7E7E04F
NETWORK::NETWORK_GET_ENTITY_KILLER_OF_PLAYER(Player player, Hash* weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='Hash* weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetFoundGamer' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9DCFF2AFB68B3476
// 0xA08C9141
NETWORK::NETWORK_GET_FOUND_GAMER(Any* p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetFriendCount' func='yes'>
			<Overload retVal='int' descr='// 0x203F1CFD823B27A4
// 0xA396ACDE
NETWORK::NETWORK_GET_FRIEND_COUNT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetFriendName' func='yes'>
			<Overload retVal='char*' descr='// 0xE11EBBB2A783FE8B
// 0x97420B6D
NETWORK::NETWORK_GET_FRIEND_NAME(int friendIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int friendIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetFriendNameFromIndex' func='yes'>
			<Overload retVal='char*' descr='// 0x4164F227D052E293
NETWORK::_NETWORK_GET_FRIEND_NAME_FROM_INDEX(int friendIndex);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _NETWORK_GET_FRIEND_NAME'>
				<Param name='int friendIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='_NETWORK_GET_FRIEND_NAME' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: NetworkGetFriendNameFromIndex' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='NetworkGetGamertagFromHandle' func='yes'>
			<Overload retVal='char*' descr='// 0x426141162EBE5CDB
// 0xA18A1B26
NETWORK::NETWORK_GET_GAMERTAG_FROM_HANDLE(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetHostOfScript' func='yes'>
			<Overload retVal='int' descr='// 0x1D6A14F1F9A736FC
// 0x9C95D0BB
NETWORK::NETWORK_GET_HOST_OF_SCRIPT(char* scriptName, int p1, int p2);
----------------------------------------------------------------------------------------------------
```

scriptName examples:  

&quot;freemode&quot;, &quot;AM_CR_SecurityVan&quot;, ...  

Most of the time, these values are used:  

p1 = -1  

p2 = 0  

```'>
				<Param name='char* scriptName' />
				<Param name='int p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetHostOfThisScript' func='yes'>
			<Overload retVal='Any' descr='// 0xC7B4D79B01FA7A5C
// 0x89EA7B54
NETWORK::NETWORK_GET_HOST_OF_THIS_SCRIPT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetLocalHandle' func='yes'>
			<Overload retVal='void' descr='// 0xE86051786B66CD8E
// 0x08023B16
NETWORK::NETWORK_GET_LOCAL_HANDLE(int* networkHandle, int bufferSize);
----------------------------------------------------------------------------------------------------
```

Retrieves the local player&apos;s NetworkHandle* and stores it in the given buffer.  

* Currently unknown struct  

```'>
				<Param name='int* networkHandle' />
				<Param name='int bufferSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetMaxFriends' func='yes'>
			<Overload retVal='int' descr='// 0xAFEBB0D5D8F687D2
// 0x048171BC
NETWORK::NETWORK_GET_MAX_FRIENDS();
----------------------------------------------------------------------------------------------------
```

On PC this is hardcoded to 250.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetNetworkIdFromEntity' func='yes'>
			<Overload retVal='int' descr='// 0xA11700682F3AD45C
// 0x9E35DAB6
NETWORK::NETWORK_GET_NETWORK_ID_FROM_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetNumConnectedPlayers' func='yes'>
			<Overload retVal='int' descr='// 0xA4A79DD2D9600654
// 0xF7952E62
NETWORK::NETWORK_GET_NUM_CONNECTED_PLAYERS();
----------------------------------------------------------------------------------------------------
```

Returns the amount of players connected in the current session. Only works when connected to a sessi
on/server.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetNumFoundGamers' func='yes'>
			<Overload retVal='int' descr='// 0xA1B043EE79A916FB
// 0xF4B80C7E
NETWORK::NETWORK_GET_NUM_FOUND_GAMERS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetNumParticipants' func='yes'>
			<Overload retVal='int' descr='// 0x18D0456E86604654
// 0x3E25A3C5
NETWORK::NETWORK_GET_NUM_PARTICIPANTS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetNumParticipantsHost' func='yes'>
			<Overload retVal='int' descr='// 0xA6C90FBC38E395EE
// 0xCCD8C02D
NETWORK::_NETWORK_GET_NUM_PARTICIPANTS_HOST();
----------------------------------------------------------------------------------------------------
```

Seems to always return 0, but it&apos;s used in quite a few loops.  

for (num3 = 0; num3 &lt; NETWORK::0xCCD8C02D(); num3++)  

    {  

        if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)  

        {  

            var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetNumPresenceInvites' func='yes'>
			<Overload retVal='int' descr='// 0xCEFA968912D0F78D
// 0x3FDA00F3
NETWORK::NETWORK_GET_NUM_PRESENCE_INVITES();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetNumScriptParticipants' func='yes'>
			<Overload retVal='int' descr='// 0x3658E8CD94FC121A
// 0x8F7D9F46
NETWORK::NETWORK_GET_NUM_SCRIPT_PARTICIPANTS(Any* p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetParticipantIndex' func='yes'>
			<Overload retVal='int' descr='// 0x1B84DF6AF2A46938
// 0xC4D91094
NETWORK::NETWORK_GET_PARTICIPANT_INDEX(int index);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPlayerCrewEmblemTxdName' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5835D9CD92E83184
// 0xBA672146
NETWORK::_NETWORK_GET_PLAYER_CREW_EMBLEM_TXD_NAME(Player* player, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player* player' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPlayerFromGamerHandle' func='yes'>
			<Overload retVal='Player' descr='// 0xCE5F689CF5A0A49D
// 0x2E96EF1E
NETWORK::NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPlayerIndex' func='yes'>
			<Overload retVal='int' descr='// 0x24FB80D107371267
// 0xBE1C1506
NETWORK::NETWORK_GET_PLAYER_INDEX(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPlayerIndexFromPed' func='yes'>
			<Overload retVal='Player' descr='// 0x6C0E2E0125610278
// 0x40DBF464
NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns the Player associated to a given Ped when in an online session.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPlayerLoudness' func='yes'>
			<Overload retVal='float' descr='// 0x21A1684A25C2867F
// 0xF2F67014
NETWORK::NETWORK_GET_PLAYER_LOUDNESS(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPresenceInviteHandle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x38D5B0FEBB086F75
// 0xB2451429
NETWORK::NETWORK_GET_PRESENCE_INVITE_HANDLE(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPresenceInviteId' func='yes'>
			<Overload retVal='Any' descr='// 0xDFF09646E12EC386
// 0xD50DF46C
NETWORK::NETWORK_GET_PRESENCE_INVITE_ID(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPresenceInviteInviter' func='yes'>
			<Overload retVal='Any' descr='// 0x4962CC4AA2F345B7
// 0x19EC65D9
NETWORK::NETWORK_GET_PRESENCE_INVITE_INVITER(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPresenceInviteSessionId' func='yes'>
			<Overload retVal='Any' descr='// 0x26E1CD96B0903D60
// 0xC5E0C989
NETWORK::NETWORK_GET_PRESENCE_INVITE_SESSION_ID(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPrimaryClanDataCancel' func='yes'>
			<Overload retVal='void' descr='// 0x042E4B70B93E6054
// 0x455DDF5C
NETWORK::NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPrimaryClanDataClear' func='yes'>
			<Overload retVal='Any' descr='// 0x9AA46BADAD0E27ED
// 0xE22445DA
NETWORK::NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPrimaryClanDataNew' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC080FF658B2E41DA
// 0x9B8631EB
NETWORK::NETWORK_GET_PRIMARY_CLAN_DATA_NEW(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPrimaryClanDataPending' func='yes'>
			<Overload retVal='Any' descr='// 0xB5074DB804E28CE7
// 0xA4EF02F3
NETWORK::NETWORK_GET_PRIMARY_CLAN_DATA_PENDING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPrimaryClanDataStart' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCE86D8191B762107
// 0x89DB0EC7
NETWORK::NETWORK_GET_PRIMARY_CLAN_DATA_START(Any* p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetPrimaryClanDataSuccess' func='yes'>
			<Overload retVal='Any' descr='// 0x5B4F04F19376A0BA
// 0x068A054E
NETWORK::NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetRandomInt' func='yes'>
			<Overload retVal='int' descr='// 0x599E4FA1F87EB5FF
// 0x208DD848
NETWORK::NETWORK_GET_RANDOM_INT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetRandomIntInRange' func='yes'>
			<Overload retVal='int' descr='// 0xE30CF56F1EFA5F43
// 0xF9B6426D
NETWORK::_NETWORK_GET_RANDOM_INT_IN_RANGE(int rangeStart, int rangeEnd);
----------------------------------------------------------------------------------------------------
```

Same as GAMEPLAY::GET_RANDOM_INT_IN_RANGE  

```'>
				<Param name='int rangeStart' />
				<Param name='int rangeEnd' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetRespawnResult' func='yes'>
			<Overload retVal='void' descr='// 0x371EA43692861CF1
// 0xDDFE9FBC
NETWORK::NETWORK_GET_RESPAWN_RESULT(int randomInt, Vector3* coordinates, float* heading);
----------------------------------------------------------------------------------------------------
```

Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param 
it a Vector3 and Float, but the first is based on get_random_int_in_range..  

```'>
				<Param name='int randomInt' />
				<Param name='Vector3* coordinates' />
				<Param name='float* heading' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetScriptStatus' func='yes'>
			<Overload retVal='int' descr='// 0x57D158647A6BFABF
// 0x2BE9235A
NETWORK::NETWORK_GET_SCRIPT_STATUS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetServerTime' func='yes'>
			<Overload retVal='void' descr='// 0x6D03BFBD643B2A02
// 0x74E8C53E
NETWORK::_NETWORK_GET_SERVER_TIME(int* hours, int* minutes, int* seconds);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* hours' />
				<Param name='int* minutes' />
				<Param name='int* seconds' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetTalkerProximity' func='yes'>
			<Overload retVal='Any' descr='// 0x84F0F13120B4E098
// 0x19991ADD
NETWORK::NETWORK_GET_TALKER_PROXIMITY();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetThisScriptIsNetworkScript' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2910669969E9535E
// 0xD9BF6549
NETWORK::NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetTimeoutTime' func='yes'>
			<Overload retVal='int' descr='// 0x5ED0356A0CE3A34F
// 0xE1F86C6A
NETWORK::NETWORK_GET_TIMEOUT_TIME();
----------------------------------------------------------------------------------------------------
```

Returns the value of the tunable 0x9A82F2B. Usually 8000 iirc.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetTransitionHost' func='yes'>
			<Overload retVal='BOOL' descr='// 0x65042B9774C4435E
// 0x73098D40
NETWORK::NETWORK_GET_TRANSITION_HOST(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetTransitionMembers' func='yes'>
			<Overload retVal='Any' descr='// 0x73B000F7FBC55829
// 0x31F19263
NETWORK::NETWORK_GET_TRANSITION_MEMBERS(Any* p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHandleFromFriend' func='yes'>
			<Overload retVal='void' descr='// 0xD45CB817D7E177D2
// 0x3B0BB3A3
NETWORK::NETWORK_HANDLE_FROM_FRIEND(Player friendIndex, int* networkHandle, int bufferSize);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player friendIndex' />
				<Param name='int* networkHandle' />
				<Param name='int bufferSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHandleFromMemberId' func='yes'>
			<Overload retVal='void' descr='// 0xA0FD21BED61E5C4C
// 0x9BFC9FE2
NETWORK::NETWORK_HANDLE_FROM_MEMBER_ID(char* memberId, int* networkHandle, int bufferSize);
----------------------------------------------------------------------------------------------------
```

Returns a NetworkHandle* from the specified member ID and stores it in a given buffer.  

* Currently unknown struct  

```'>
				<Param name='char* memberId' />
				<Param name='int* networkHandle' />
				<Param name='int bufferSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHandleFromPlayer' func='yes'>
			<Overload retVal='void' descr='// 0x388EB2B86C73B6B3
// 0xD3498917
NETWORK::NETWORK_HANDLE_FROM_PLAYER(Player player, int* networkHandle, int bufferSize);
----------------------------------------------------------------------------------------------------
```

Returns a handle to networkHandle* from the specified player handle and stores it in a given buffer.
  

* Currently unknown struct  

Example:  

std::vector&lt;UINT64&gt; GetPlayerNetworkHandle(Player player) {  

    const int size = 13;  

    uint64_t *buffer = std::make_unique&lt;uint64_t[]&gt;(size).get();  

    NETWORK::NETWORK_HANDLE_FROM_PLAYER(player, reinterpret_cast&lt;int *&gt;(buffer), 13);  

    for (int i = 0; i &lt; size; i++) {  

        Log::Msg(&quot;networkhandle[%i]: %llx&quot;, i, buffer[i]);  

    }  

    std::vector&lt;UINT64&gt; result(buffer, buffer + sizeof(buffer));  

    return result;  

}  

```'>
				<Param name='Player player' />
				<Param name='int* networkHandle' />
				<Param name='int bufferSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHandleFromUserId' func='yes'>
			<Overload retVal='void' descr='// 0xDCD51DD8F87AEC5C
// 0x74C2C1B7
NETWORK::NETWORK_HANDLE_FROM_USER_ID(char* userId, int* networkHandle, int bufferSize);
----------------------------------------------------------------------------------------------------
```

Returns a NetworkHandle* from the specified user ID and stores it in a given buffer.  

* Currently unknown struct  

```'>
				<Param name='char* userId' />
				<Param name='int* networkHandle' />
				<Param name='int bufferSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHasControlOfDoor' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCB3C68ADB06195DF
// 0x136326EC
NETWORK::NETWORK_HAS_CONTROL_OF_DOOR(Hash doorHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash doorHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHasControlOfEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x01BF60A500E28887
// 0x005FD797
NETWORK::NETWORK_HAS_CONTROL_OF_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHasControlOfNetworkId' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4D36070FE0215186
// 0x92E77D21
NETWORK::NETWORK_HAS_CONTROL_OF_NETWORK_ID(int netId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netId' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHasControlOfPavementStats' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC01E93FAC20C3346
NETWORK::_NETWORK_HAS_CONTROL_OF_PAVEMENT_STATS(Hash doorHash);
----------------------------------------------------------------------------------------------------
```

console hash: 0xD14D9C07  

```'>
				<Param name='Hash doorHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHasControlOfPickup' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5BC9495F0B3B6FA6
// 0xF7784FC8
NETWORK::NETWORK_HAS_CONTROL_OF_PICKUP(Pickup pickup);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Pickup pickup' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHasFollowInvite' func='yes'>
			<Overload retVal='BOOL' descr='// 0x76D9B976C4C09FDE
// 0xE96CFE7D
NETWORK::NETWORK_HAS_FOLLOW_INVITE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHasHeadset' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE870F9F1F7B4F1FA
// 0xA7DC5657
NETWORK::NETWORK_HAS_HEADSET();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHashFromGamerHandle' func='yes'>
			<Overload retVal='Hash' descr='// 0x58575AC3CF2CA8EC
NETWORK::_NETWORK_HASH_FROM_GAMER_HANDLE(int* networkHandle);
----------------------------------------------------------------------------------------------------
```

console hash: 0x5AC9F04D = network_hash_from_gamer_handle  

```'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHashFromPlayerHandle' func='yes'>
			<Overload retVal='Hash' descr='// 0xBC1D768F2F5D6C05
NETWORK::_NETWORK_HASH_FROM_PLAYER_HANDLE(Player player);
----------------------------------------------------------------------------------------------------
```

console hash: 0xF8D7AF3B = NETWORK_HASH_FROM_PLAYER_HANDLE  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHasInvitedGamer' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4D86CD31E8976ECE
// 0xEC651BC0
NETWORK::NETWORK_HAS_INVITED_GAMER(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHasInvitedGamerToTransition' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7284A47B3540E6CF
// 0x4F41DF6B
NETWORK::NETWORK_HAS_INVITED_GAMER_TO_TRANSITION(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHasPendingInvite' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAC8C7B9B88C4A668
// 0x0C207D6E
NETWORK::NETWORK_HAS_PENDING_INVITE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHasPlayerStartedTransition' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9AC9CCBFA8C29795
// 0x4ABD1E59
NETWORK::NETWORK_HAS_PLAYER_STARTED_TRANSITION(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHaveOnlinePrivileges' func='yes'>
			<Overload retVal='BOOL' descr='// 0x25CB5A9F37BFD063
// 0xEF63BFDF
NETWORK::NETWORK_HAVE_ONLINE_PRIVILEGES();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkHostTransition' func='yes'>
			<Overload retVal='Any' descr='// 0xA60BB5CE242BB254
// 0x146764FB
NETWORK::NETWORK_HOST_TRANSITION(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkInviteGamers' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9D80CD1D0E6327DE
// 0x52FB8074
NETWORK::NETWORK_INVITE_GAMERS(Any* p0, Any p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
```

//nothing doin  

int Global_1837683 = GlobalVariable::Get(1837683);  

int Global_1837683_f_404 = GlobalVariable::Get(1837683 + 404);  

NETWORK_INVITE_GAMERS(&Global_1837683, Global_1837683_f_404, 0, 0);  

```'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkInviteGamersToTransition' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4A595C32F77DFF76
// 0x5332E645
NETWORK::NETWORK_INVITE_GAMERS_TO_TRANSITION(Any* p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsActivitySession' func='yes'>
			<Overload retVal='BOOL' descr='// 0x05095437424397FA
// 0x577DAA8A
NETWORK::NETWORK_IS_ACTIVITY_SESSION();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsActivitySpectator' func='yes'>
			<Overload retVal='Any' descr='// 0x12103B9E0C9F92FB
// 0xAF329720
NETWORK::NETWORK_IS_ACTIVITY_SPECTATOR();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsActivitySpectatorFromHandle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2763BBAA72A7BCB9
// 0x58F1DF7D
NETWORK::NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsAddingFriend' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6EA101606F6E4D81
// 0xBB7EC8C4
NETWORK::NETWORK_IS_ADDING_FRIEND();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsCableConnected' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEFFB25453D8600F9
// 0x5C065D55
NETWORK::NETWORK_IS_CABLE_CONNECTED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsChattingInPlatformParty' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8DE9945BCC9AEC52
// 0x51367B34
NETWORK::NETWORK_IS_CHATTING_IN_PLATFORM_PARTY(int* networkHandle);
----------------------------------------------------------------------------------------------------
```

This would be nice to see if someone is in party chat, but 2 sad notes.  

1) It only becomes true if said person is speaking in that party at the time.  

2) It will never, become true unless you are in that party with said person.  

```'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsClanMembershipFinishedDownloading' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB3F64A6A91432477
// 0x83ED8E08
NETWORK::_NETWORK_IS_CLAN_MEMBERSHIP_FINISHED_DOWNLOADING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsClockTimeOverridden' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD7C95D322FF57522
// 0x2465296D
NETWORK::NETWORK_IS_CLOCK_TIME_OVERRIDDEN();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsCloudAvailable' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9A4CF4F48AD77302
// 0xC7FF5AFC
NETWORK::NETWORK_IS_CLOUD_AVAILABLE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsFindingGamers' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDDDF64C91BFCF0AA
// 0xA6DAA79F
NETWORK::NETWORK_IS_FINDING_GAMERS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsFriend' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1A24A179F9B31654
// 0x2DA4C282
NETWORK::NETWORK_IS_FRIEND(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsFriendIndexOnline' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBAD8F2A42B844821
// 0x94AE7172
NETWORK::NETWORK_IS_FRIEND_INDEX_ONLINE(int friendIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int friendIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsFriendInMultiplayer' func='yes'>
			<Overload retVal='BOOL' descr='// 0x57005C18827F3A28
// 0x400BDDD9
NETWORK::NETWORK_IS_FRIEND_IN_MULTIPLAYER(char* friendName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* friendName' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsFriendInSameTitle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2EA9A3BEDF3F17B8
// 0xC54365C2
NETWORK::NETWORK_IS_FRIEND_IN_SAME_TITLE(char* friendName);
----------------------------------------------------------------------------------------------------
```

In scripts R* calls &apos;NETWORK_GET_FRIEND_NAME&apos; in this param.  

```'>
				<Param name='char* friendName' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsFriendOnline' func='yes'>
			<Overload retVal='BOOL' descr='// 0x425A44533437B64D
// 0xE0A42430
NETWORK::NETWORK_IS_FRIEND_ONLINE(char* name);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsFriendOnline_2' func='yes'>
			<Overload retVal='BOOL' descr='// 0x87EB7A3FFCB314DB
NETWORK::_NETWORK_IS_FRIEND_ONLINE_2(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsGameInProgress' func='yes'>
			<Overload retVal='BOOL' descr='// 0x10FAB35428CCC9D7
// 0x09B88E3E
NETWORK::NETWORK_IS_GAME_IN_PROGRESS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsGamerBlockedByMe' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE944C4F5AF1B5883
// 0x3FDCC8D7
NETWORK::NETWORK_IS_GAMER_BLOCKED_BY_ME(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsGamerInMySession' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0F10B05DDF8D16E9
// 0x59127716
NETWORK::NETWORK_IS_GAMER_IN_MY_SESSION(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsGamerMutedByMe' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCE60DE011B6C7978
// 0x001B4046
NETWORK::NETWORK_IS_GAMER_MUTED_BY_ME(int* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsGamerTalking' func='yes'>
			<Overload retVal='BOOL' descr='// 0x71C33B22606CD88A
// 0x99B58DBC
NETWORK::NETWORK_IS_GAMER_TALKING(int* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsHandleValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6F79B93B0A8E4133
// 0xF0996C6E
NETWORK::NETWORK_IS_HANDLE_VALID(int* networkHandle, int bufferSize);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
				<Param name='int bufferSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsHost' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8DB296B814EDDA07
// 0xE46AC10F
NETWORK::NETWORK_IS_HOST();
----------------------------------------------------------------------------------------------------
```

If you are host, returns true else returns false.  

anyone know how to use this to find correct host? is possible?  

go to a mission and it will set a host then search the host name using a program then find the point
er to the host name  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsHostOfThisScript' func='yes'>
			<Overload retVal='BOOL' descr='// 0x83CD99A1E6061AB5
// 0x6970BA94
NETWORK::NETWORK_IS_HOST_OF_THIS_SCRIPT();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsInactiveProfile' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7E58745504313A2E
// 0x95481343
NETWORK::NETWORK_IS_INACTIVE_PROFILE(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsInMpCutscene' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6CC27C9FA2040220
// 0x4BB33316
NETWORK::NETWORK_IS_IN_MP_CUTSCENE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsInParty' func='yes'>
			<Overload retVal='BOOL' descr='// 0x966C2BC2A7FE3F30
// 0xF9D7D67D
NETWORK::NETWORK_IS_IN_PARTY();
----------------------------------------------------------------------------------------------------
```

Note according to IDA TU27 X360(Console),  

This native & &apos;NETWORK_IS_PARTY_MEMBER&apos; both jump to the same location.  

Side note: This location just stops where it&apos;s at once jumped to.  

Screenshot for side note,   

h t t p ://i.imgur.com/m2ci1mF.png  

h t t p://i.imgur.com/Z0Wx2B6.png  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsInSession' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCA97246103B63917
// 0x4BC4105E
NETWORK::NETWORK_IS_IN_SESSION();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsInSpectatorMode' func='yes'>
			<Overload retVal='BOOL' descr='// 0x048746E388762E11
// 0x3EAD9DB8
NETWORK::NETWORK_IS_IN_SPECTATOR_MODE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsInTransition' func='yes'>
			<Overload retVal='BOOL' descr='// 0x68049AEFF83D8F0A
// 0xC3CDB626
NETWORK::NETWORK_IS_IN_TRANSITION();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsInTutorialSession' func='yes'>
			<Overload retVal='Any' descr='// 0xADA24309FE08DACF
// 0x34DD7B28
NETWORK::NETWORK_IS_IN_TUTORIAL_SESSION();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsLocalPlayerInvincible' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8A8694B48715B000
// 0x8DE13B36
NETWORK::NETWORK_IS_LOCAL_PLAYER_INVINCIBLE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsMultiplayerDisabled' func='yes'>
			<Overload retVal='ScrHandle' descr='// 0x9747292807126EDA
// 0x05518C0F
NETWORK::NETWORK_IS_MULTIPLAYER_DISABLED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsParticipantActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6FF8FF40B6357D45
// 0x4E2C348B
NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPartyMember' func='yes'>
			<Overload retVal='BOOL' descr='// 0x676ED266AADD31E0
// 0x1D0C929D
NETWORK::NETWORK_IS_PARTY_MEMBER(int* networkHandle);
----------------------------------------------------------------------------------------------------
```

Note according to IDA TU27 X360(Console),  

This native & &apos;NETWORK_IS_PARTY_MEMBER&apos; both jump to the same location.  

Side note: This location just stops where it&apos;s at once jumped to.  

Screenshot for side note,   

h t t p ://i.imgur.com/m2ci1mF.png  

h t t p://i.imgur.com/Z0Wx2B6.png  

```'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPendingFriend' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0BE73DA6984A6E33
// 0x5C85FF81
NETWORK::NETWORK_IS_PENDING_FRIEND(Any p0);
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 0.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPlayerActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB8DFD30D6973E135
// 0x43657B17
NETWORK::NETWORK_IS_PLAYER_ACTIVE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPlayerAnimationDrawingSynchronized' func='yes'>
			<Overload retVal='void' descr='// 0xC6F8AB8A4189CF3A
// 0x3D6360B5
NETWORK::NETWORK_IS_PLAYER_ANIMATION_DRAWING_SYNCHRONIZED();
----------------------------------------------------------------------------------------------------
```

hash collision  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPlayerAParticipant' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3CA58F6CB7CBD784
// 0xB08B6992
NETWORK::NETWORK_IS_PLAYER_A_PARTICIPANT(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPlayerBlockedByMe' func='yes'>
			<Overload retVal='BOOL' descr='// 0x57AF1F8E27483721
// 0xAE4F4560
NETWORK::NETWORK_IS_PLAYER_BLOCKED_BY_ME(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPlayerConnected' func='yes'>
			<Overload retVal='BOOL' descr='// 0x93DC1BE4E1ABE9D1
// 0x168EE2C2
NETWORK::NETWORK_IS_PLAYER_CONNECTED(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPlayerEqualToIndex' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9DE986FC9A87C474
// 0xE66A0B40
NETWORK::_NETWORK_IS_PLAYER_EQUAL_TO_INDEX(Player player, int index);
----------------------------------------------------------------------------------------------------
```

NETWORK_ARE_*  

```'>
				<Param name='Player player' />
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPlayerInMpCutscene' func='yes'>
			<Overload retVal='BOOL' descr='// 0x63F9EE203C3619F2
// 0x56F961E4
NETWORK::NETWORK_IS_PLAYER_IN_MP_CUTSCENE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPlayerInScript' func='yes'>
			<Overload retVal='BOOL' descr='// 0x46FB3ED415C7641C
// 0xF9A51B92
NETWORK::_NETWORK_IS_PLAYER_IN_SCRIPT(Player player, int p1, Hash scriptHash);
----------------------------------------------------------------------------------------------------
```

p1 = 6  

NETWORK_CRC_HASH_CHECK?  

```'>
				<Param name='Player player' />
				<Param name='int p1' />
				<Param name='Hash scriptHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPlayerMutedByMe' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8C71288AE68EDE39
// 0x7A21050E
NETWORK::NETWORK_IS_PLAYER_MUTED_BY_ME(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPlayerTalking' func='yes'>
			<Overload retVal='BOOL' descr='// 0x031E11F3D447647E
// 0xDA9FD9DB
NETWORK::NETWORK_IS_PLAYER_TALKING(Player player);
----------------------------------------------------------------------------------------------------
```

returns true if someone is screaming or talking in a microphone  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsPsnAvailable' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8D11E61A4ABF49CC
NETWORK::_NETWORK_IS_PSN_AVAILABLE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsScriptActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9D40DF90FAD26098
// 0x4A65250C
NETWORK::NETWORK_IS_SCRIPT_ACTIVE(char* scriptName, Player player, BOOL p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* scriptName' />
				<Param name='Player player' />
				<Param name='BOOL p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsSessionActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD83C2B94E7508980
// 0x715CB8C4
NETWORK::NETWORK_IS_SESSION_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsSessionBusy' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF4435D66A8E2905E
// 0x8592152D
NETWORK::NETWORK_IS_SESSION_BUSY();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsSessionStarted' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9DE624D2FC4B603F
// 0x9D854A37
NETWORK::NETWORK_IS_SESSION_STARTED();
----------------------------------------------------------------------------------------------------
```

This checks if player is playing on gta online or not.  

Please add an if and block your mod if this is &quot;true&quot;.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsSignedIn' func='yes'>
			<Overload retVal='BOOL' descr='// 0x054354A99211EB96
// 0xADD0B40F
NETWORK::NETWORK_IS_SIGNED_IN();
----------------------------------------------------------------------------------------------------
```

Returns whether the player is signed into Social Club.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsSignedOnline' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1077788E268557C2
// 0x6E5BDCE2
NETWORK::NETWORK_IS_SIGNED_ONLINE();
----------------------------------------------------------------------------------------------------
```

Returns whether the game is not in offline mode.  

seemed not to work for some ppl  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsTextChatActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5FCF4D7069B09026
NETWORK::_NETWORK_IS_TEXT_CHAT_ACTIVE();
----------------------------------------------------------------------------------------------------
```

Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized
, and therefore may crash.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsThisScriptMarked' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD1110739EEADB592
NETWORK::_NETWORK_IS_THIS_SCRIPT_MARKED(Any p0, BOOL p1, Any p2);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _NETWORK_SET_THIS_SCRIPT_MARKED'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='_NETWORK_SET_THIS_SCRIPT_MARKED' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: NetworkIsThisScriptMarked' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='NetworkIsTransitionBusy' func='yes'>
			<Overload retVal='Any' descr='// 0x520F3282A53D26B7
// 0xA357A2C6
NETWORK::NETWORK_IS_TRANSITION_BUSY();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsTransitionHost' func='yes'>
			<Overload retVal='Any' descr='// 0x0B824797C9BF2159
// 0x0C0900BC
NETWORK::NETWORK_IS_TRANSITION_HOST();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsTransitionHostFromHandle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6B5C83BA3EFE6A10
// 0x0E2854C4
NETWORK::NETWORK_IS_TRANSITION_HOST_FROM_HANDLE(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsTransitionMatchmaking' func='yes'>
			<Overload retVal='Any' descr='// 0x292564C735375EDF
// 0x8262C70E
NETWORK::NETWORK_IS_TRANSITION_MATCHMAKING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsTransitionStarted' func='yes'>
			<Overload retVal='BOOL' descr='// 0x53FA83401D9C07FE
// 0x7917E111
NETWORK::NETWORK_IS_TRANSITION_STARTED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkIsTransitionToGame' func='yes'>
			<Overload retVal='Any' descr='// 0x9D7696D8F4FA6CB7
// 0x17146B2B
NETWORK::NETWORK_IS_TRANSITION_TO_GAME();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkJoinGroupActivity' func='yes'>
			<Overload retVal='Any' descr='// 0xA06509A691D12BE4
// 0x0D7E5CF9
NETWORK::NETWORK_JOIN_GROUP_ACTIVITY();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkJoinTransition' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9D060B08CD63321A
// 0xB054EC4B
NETWORK::NETWORK_JOIN_TRANSITION(Player player);
----------------------------------------------------------------------------------------------------
```

int handle[76];  

NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);  

Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);  

NETWORK_JOIN_TRANSITION(uVar2);  

		nothing doin.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkLaunchTransition' func='yes'>
			<Overload retVal='Any' descr='// 0x2DCF46CB1A4F0884
// 0xE3570BA2
NETWORK::NETWORK_LAUNCH_TRANSITION();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkLeaveTransition' func='yes'>
			<Overload retVal='Any' descr='// 0xD23A1A815D21DB19
// 0x3A3599B7
NETWORK::NETWORK_LEAVE_TRANSITION();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkMarkTransitionGamerAsFullyJoined' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5728BB6D63E3FF1D
// 0x03383F57
NETWORK::NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkMemberIdFromGamerHandle' func='yes'>
			<Overload retVal='char*' descr='// 0xC82630132081BB6F
// 0x62EF0A63
NETWORK::NETWORK_MEMBER_ID_FROM_GAMER_HANDLE(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkOpenTransitionMatchmaking' func='yes'>
			<Overload retVal='void' descr='// 0x2B3A8F7CA3A38FDE
// 0xC71E607B
NETWORK::NETWORK_OPEN_TRANSITION_MATCHMAKING();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkOverrideChatRestrictions' func='yes'>
			<Overload retVal='void' descr='// 0x3039AE5AD2C9C0C4
// 0x74EE2D8B
NETWORK::NETWORK_OVERRIDE_CHAT_RESTRICTIONS(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Could possibly bypass being muted or automatically muted  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkOverrideClockTime' func='yes'>
			<Overload retVal='void' descr='// 0xE679E3E06E363892
// 0xC077BCD6
NETWORK::NETWORK_OVERRIDE_CLOCK_TIME(int Hours, int Minutes, int Seconds);
----------------------------------------------------------------------------------------------------
```

Works in Singleplayer too.  

Actually has a 4th param (BOOL) that sets byte_14273C46C (in b944) to whatever was passed to p3.  

```'>
				<Param name='int Hours' />
				<Param name='int Minutes' />
				<Param name='int Seconds' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkOverrideReceiveRestrictions' func='yes'>
			<Overload retVal='void' descr='// 0xDDF73E2B1FEC5AB4
// 0x95F1C60D
NETWORK::NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

R* uses this to hear all player when spectating.   

It allows you to hear other online players when their chat is on none, crew and or friends  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkOverrideSendRestrictions' func='yes'>
			<Overload retVal='void' descr='// 0x97DD4C5944CC2E6A
NETWORK::_NETWORK_OVERRIDE_SEND_RESTRICTIONS(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0x6C344AE3  

&quot;NETWORK_OVERRIDE_SEND_RESTRICTIONS&quot; is right, but dev-c put a _ by default.  

This is used alongside the native,  

&apos;NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS&apos;. Read it&apos;s description for more info.  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkOverrideTransitionChat' func='yes'>
			<Overload retVal='void' descr='// 0xAF66059A131AA269
// 0xCAB21090
NETWORK::NETWORK_OVERRIDE_TRANSITION_CHAT(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPlayerGetName' func='yes'>
			<Overload retVal='char*' descr='// 0x7718D2E2060837D2
// 0xCE48F260
NETWORK::NETWORK_PLAYER_GET_NAME(Player player);
----------------------------------------------------------------------------------------------------
```

Returns the name of a given player. Returns &quot;**Invalid**&quot; if CPlayerInfo of the given player cannot 
be retrieved or the player doesn&apos;t exist.  

Does exactly the same as GET_PLAYER_NAME.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPlayerGetUserid' func='yes'>
			<Overload retVal='char*' descr='// 0x4927FC39CD0869A0
// 0x4EC0D983
NETWORK::NETWORK_PLAYER_GET_USERID(Player player, char* userID);
----------------------------------------------------------------------------------------------------
```

Sets [userID] to the user id of the given player. Returns &quot;**Invalid**&quot; if CPlayerInfo of the given 
player cannot be retrieved or the player doesn&apos;t exist.  

```

----------------------------------------------------------------------------------------------------

Old name: _NETWORK_PLAYER_GET_USER_ID'>
				<Param name='Player player' />
				<Param name='char* userID' />
			</Overload>
		</KeyWord>
		<KeyWord name='_NETWORK_PLAYER_GET_USER_ID' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: NetworkPlayerGetUserid' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='NetworkPlayerHasHeadset' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3FB99A8B08D18FD6
// 0x451FB6B6
NETWORK::NETWORK_PLAYER_HAS_HEADSET(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPlayerIsBadsport' func='yes'>
			<Overload retVal='BOOL' descr='// 0x19D8DA0E5A68045A
// 0xA19708E3
NETWORK::NETWORK_PLAYER_IS_BADSPORT();
----------------------------------------------------------------------------------------------------
```

Returns whether the player has been reported too often or not.  

Example : griefing.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPlayerIsCheater' func='yes'>
			<Overload retVal='BOOL' descr='// 0x655B91F1495A9090
// 0xA51DC214
NETWORK::NETWORK_PLAYER_IS_CHEATER();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPlayerIsInClan' func='yes'>
			<Overload retVal='BOOL' descr='// 0x579CCED0265D4896
// 0xF5F4BD95
NETWORK::_NETWORK_PLAYER_IS_IN_CLAN();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPlayerIsRockstarDev' func='yes'>
			<Overload retVal='BOOL' descr='// 0x544ABDDA3B409B6D
// 0xF6659045
NETWORK::NETWORK_PLAYER_IS_ROCKSTAR_DEV(Player player);
----------------------------------------------------------------------------------------------------
```

Checks if a specific value (BYTE) in CPlayerInfo is nonzero.  

Returns always false in Singleplayer.  

No longer used for dev checks since first mods were released on PS3 & 360.  

R* now checks with the is_dlc_present native for the dlc hash 2532323046,  

if that is present it will unlock dev stuff.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPlayerIsUnk' func='yes'>
			<Overload retVal='BOOL' descr='// 0x172F75B6EE2233BA
// 0x1720ABA6
NETWORK::_NETWORK_PLAYER_IS_UNK();
----------------------------------------------------------------------------------------------------
```

fuck this function in particular.  

It&apos;s similar to unk_0x9A176B6E but this ones got a different stat hash:  

0xBC707798  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPlayerSomething' func='yes'>
			<Overload retVal='BOOL' descr='// 0x565E430DB3B05BEC
// 0xD265B049
NETWORK::_NETWORK_PLAYER_SOMETHING(Player player);
----------------------------------------------------------------------------------------------------
```

NETWORK_PLAYER_???  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRegisterEntityAsNetworked' func='yes'>
			<Overload retVal='void' descr='// 0x06FAACD625D80CAA
// 0x31A630A4
NETWORK::NETWORK_REGISTER_ENTITY_AS_NETWORKED(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRegisterHostBroadcastVariables' func='yes'>
			<Overload retVal='void' descr='// 0x3E9B2F01C50DF595
// 0xDAF3B0AE
NETWORK::NETWORK_REGISTER_HOST_BROADCAST_VARIABLES(int* vars, int sizeofVars);
----------------------------------------------------------------------------------------------------
```

sizeofVars is in bytes  

```'>
				<Param name='int* vars' />
				<Param name='int sizeofVars' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRegisterPlayerBroadcastVariables' func='yes'>
			<Overload retVal='void' descr='// 0x3364AA97340CA215
// 0xBE3D32B4
NETWORK::NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES(int* vars, int numVars);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* vars' />
				<Param name='int numVars' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRemoveAllTransitionInvite' func='yes'>
			<Overload retVal='void' descr='// 0x726E0375C7A26368
// 0xF7134E73
NETWORK::NETWORK_REMOVE_ALL_TRANSITION_INVITE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRemoveEntityArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x93CF869BAA0C4874
// 0xEAB97F25
NETWORK::NETWORK_REMOVE_ENTITY_AREA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRemovePresenceInvite' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF0210268DB0974B1
// 0x93C665FA
NETWORK::NETWORK_REMOVE_PRESENCE_INVITE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRemoveTransitionInvite' func='yes'>
			<Overload retVal='void' descr='// 0x7524B431B2E6F7EE
// 0xFDE84CB7
NETWORK::NETWORK_REMOVE_TRANSITION_INVITE(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRequestCloudBackgroundScripts' func='yes'>
			<Overload retVal='BOOL' descr='// 0x924426BFFD82E915
// 0x29532731
NETWORK::_NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS();
----------------------------------------------------------------------------------------------------
```

NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS - Correct console hash is 0x98EFB921  

Start the downloading of BG_NG.RPF from R* Cloud which contains hotfix.  

The console hash given is incorrect for Xbox360 that is. I searched in IDA and found 0x98EFB921 whic
h came right after 0x155465EE. Then I searched it in TU27 X360 scripts and found it was the same res
ults same scripts as the PC Hash for this which is obviously correct. I found the correct one as I n
oticed TU27 X360 script search pulled no results for 0x29532731 when it should have.  

As you can see here you will see the 155465EE first then the correct hash for this native. Then the 
current 29532731 one which could be the native below or the native below&apos;s hash could be the has bel
ow the 29532731   

puu.sh/nhdQI/e0ca5567b4.png  

0x98EFB921 is the correct console hash for &quot;_DOWNLOAD_BG_SCRIPT_RPF&quot;. 0x29532731 is &quot;_HAS_BG_SCRIPT_
BEEN_DOWNLOADED&quot;  

The code:  

seg001:00000000003EFF4C uunk_0x29532731:                        # CODE XREF: sub_158C8AC+14p  

seg001:00000000003EFF4C                 lis       r3, dword_1CFB100@ha  

seg001:00000000003EFF50                 lwz       r3, dword_1CFB100@l(r3)  

seg001:00000000003EFF54                 ld        r3, 0x1020(r3)  

seg001:00000000003EFF58                 extsw     r3, r3  

seg001:00000000003EFF5C                 blr  

seg001:00000000003EFF5C # End of function uunk_0x29532731  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRequestCloudTunables' func='yes'>
			<Overload retVal='void' descr='// 0x42FB3B532D526E6C
// 0xD760CAD5
NETWORK::NETWORK_REQUEST_CLOUD_TUNABLES();
----------------------------------------------------------------------------------------------------
```

This native start the download of tunables from R* cloud  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRequestControlOfDoor' func='yes'>
			<Overload retVal='BOOL' descr='// 0x870DDFD5A4A796E4
// 0xF60DAAF6
NETWORK::NETWORK_REQUEST_CONTROL_OF_DOOR(int doorID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int doorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRequestControlOfEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB69317BF5E782347
// 0xA05FEBD7
NETWORK::NETWORK_REQUEST_CONTROL_OF_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRequestControlOfNetworkId' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA670B3662FAFFBD0
// 0x9262A60A
NETWORK::NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(int netId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netId' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkResetBodyTracker' func='yes'>
			<Overload retVal='void' descr='// 0x72433699B4E6DD64
// 0x3914463F
NETWORK::NETWORK_RESET_BODY_TRACKER();
----------------------------------------------------------------------------------------------------
```

hash collision?? - Not sure, but fits alphabetically  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRespawnCoords' func='yes'>
			<Overload retVal='void' descr='// 0x9769F811D1785B03
// 0xBE6A30C3
NETWORK::_NETWORK_RESPAWN_COORDS(Player player, float x, float y, float z, BOOL p4, BOOL p5);
----------------------------------------------------------------------------------------------------
```

p4 and p5 are always 0 in scripts  

```'>
				<Param name='Player player' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkResurrectLocalPlayer' func='yes'>
			<Overload retVal='void' descr='// 0xEA23C49EAA83ACFB
// 0xF1F9D4B4
NETWORK::NETWORK_RESURRECT_LOCAL_PLAYER(float x, float y, float z, float heading, BOOL unk, BOOL changet
----------------------------------------------------------------------------------------------------
;

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float heading' />
				<Param name='BOOL unk' />
				<Param name='BOOL changet' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSctvSlots' func='yes'>
			<Overload retVal='void' descr='// 0x49EC8030F5015F8B
// 0x3C3E2AB6
NETWORK::_NETWORK_SCTV_SLOTS(int p0);
----------------------------------------------------------------------------------------------------
```

p0 = 0 or 4  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSendPresenceInvite' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC3C7A6AFDB244624
// 0x8B99B72B
NETWORK::_NETWORK_SEND_PRESENCE_INVITE(int* networkHandle, Any* p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSendPresenceTransitionInvite' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC116FF9B4D488291
// 0x877C0E1C
NETWORK::_NETWORK_SEND_PRESENCE_TRANSITION_INVITE(Any* p0, Any* p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
```

String &quot;NETWORK_SEND_PRESENCE_TRANSITION_INVITE&quot; is contained in the function in ida so this one is 
correct.  

```'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSendTextMessage' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3A214F2EC889B100
// 0xAFFEA720
NETWORK::NETWORK_SEND_TEXT_MESSAGE(char* message, int* networkHandle);
----------------------------------------------------------------------------------------------------
```

how can I increase the character limit on this native?  

--------------------------------  

return - it&apos;s possible for it to have an error and return a value. One error is if it cannot find sp
ace to create the event it doesn&apos;t send the text and returns zero. It also returns 0 is the strlen i
s 0 or the strlen &gt; 0x100 (I thought it was 64 so idk why it&apos;s checking 265. I may just be dumb :P )
 There are other ways it could return 0 also but who the hell cares cuz it&apos;s very unlikely, but it r
eturns a bool.  

to the top guy, idk if it is possible. It is probably read a max of 64 characters on the recieving e
nd so even if we did modify it to send more it probably wouldn&apos;t work. One of the other problems is 
that in part of the function it copies the string to the local stack which means we would have to ch
ange that to make it work.  

```'>
				<Param name='char* message' />
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSendTransitionGamerInstruction' func='yes'>
			<Overload retVal='BOOL' descr='// 0x31D1D2B858D25E6B
// 0x468B0884
NETWORK::NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION(int* networkHandle, char* p1, int p2, int p3, BOOL p4
----------------------------------------------------------------------------------------------------
```

```

the first arg seems to be the network player handle (&handle) and the second var is pretty much alwa
ys &quot;&quot; and the third seems to be a number between 0 and ~10 and the 4th is is something like 0 to 5 a
nd I guess the 5th is a bool cuz it is always 0 or 1  

does this send an invite to a player?  

```'>
				<Param name='int* networkHandle' />
				<Param name='char* p1' />
				<Param name='int p2' />
				<Param name='int p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionActivityQuickmatch' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBE3E347A87ACEB82
// 0x3F75CC38
NETWORK::NETWORK_SESSION_ACTIVITY_QUICKMATCH(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionBlockJoinRequests' func='yes'>
			<Overload retVal='void' descr='// 0xA73667484D7037C3
// 0xE6EEF8AF
NETWORK::NETWORK_SESSION_BLOCK_JOIN_REQUESTS(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionCancelInvite' func='yes'>
			<Overload retVal='void' descr='// 0x2FBF47B1B36D36F9
// 0x20317535
NETWORK::NETWORK_SESSION_CANCEL_INVITE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionChangeSlots' func='yes'>
			<Overload retVal='void' descr='// 0xB4AB419E0D86ACAE
// 0x6BB93227
NETWORK::NETWORK_SESSION_CHANGE_SLOTS(int p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionCrewMatchmaking' func='yes'>
			<Overload retVal='BOOL' descr='// 0x94BC51E9449D917F
// 0xD7624E6B
NETWORK::NETWORK_SESSION_CREW_MATCHMAKING(int p0, int p1, int p2, int maxPlayers, BOOL p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='int p1' />
				<Param name='int p2' />
				<Param name='int maxPlayers' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionEnd' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA02E59562D711006
// 0xBCACBEA2
NETWORK::NETWORK_SESSION_END(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p0 is always false and p1 varies.  

NETWORK_SESSION_END(0, 1)  

NETWORK_SESSION_END(0, 0)  

Results in: &quot;Connection to session lost due to an unknown network error. Please return to Grand Thef
t Auto V and try again later.&quot;  

```'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionEnter' func='yes'>
			<Overload retVal='Any' descr='// 0x330ED4D05491934F
// 0x543CD2BE
NETWORK::NETWORK_SESSION_ENTER(Any p0, Any p1, Any p2, int maxPlayers, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
```

unknown params  

p0 = 0, 2, or 999 (The global is 999 by default.)  

p1 = 0 (Always in every script it&apos;s found in atleast.)  

p2 = 0, 3, or 4 (Based on a var that is determined by a function.)  

p3 = maxPlayers (It&apos;s obvious in x360 scripts it&apos;s always 18)  

p4 = 0 (Always in every script it&apos;s found in atleast.)  

p5 = 0 or 1. (1 if network_can_enter_multiplayer, but set to 0 if other checks after that are passed
.)  

p5 is reset to 0 if,  

Global_1315318 = 0 or Global_1315323 = 9 or 12 or (Global_1312629 = 0 && Global_1312631 = true/1) th
ose are passed.  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='int maxPlayers' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionForceCancelInvite' func='yes'>
			<Overload retVal='void' descr='// 0xA29177F7703B5644
// 0x3FD49D3B
NETWORK::NETWORK_SESSION_FORCE_CANCEL_INVITE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionFriendMatchmaking' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2CFC76E0D087C994
// 0x4E53202A
NETWORK::NETWORK_SESSION_FRIEND_MATCHMAKING(int p0, int p1, int maxPlayers, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='int p1' />
				<Param name='int maxPlayers' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionGetInviter' func='yes'>
			<Overload retVal='void' descr='// 0xE57397B4A3429DD0
// 0xE9C6B3FD
NETWORK::NETWORK_SESSION_GET_INVITER(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionGetUnk' func='yes'>
			<Overload retVal='int' descr='// 0x56CE820830EF040B
// 0x36EAD960
NETWORK::_NETWORK_SESSION_GET_UNK(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionHost' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6F3D4ED9BEE4E61D
// 0x6716460F
NETWORK::NETWORK_SESSION_HOST(int p0, int maxPlayers, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens pas
t then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually h
ost a session.  

```'>
				<Param name='int p0' />
				<Param name='int maxPlayers' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionHostClosed' func='yes'>
			<Overload retVal='BOOL' descr='// 0xED34C0C02C098BB7
// 0x8AC9EA19
NETWORK::NETWORK_SESSION_HOST_CLOSED(int p0, int maxPlayers);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='int maxPlayers' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionHosted' func='yes'>
			<Overload retVal='void' descr='// 0xC19F6C8E7865A6FF
// 0xF3768F90
NETWORK::_NETWORK_SESSION_HOSTED(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionHostFriendsOnly' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB9CFD27A5D578D83
// 0x26864403
NETWORK::NETWORK_SESSION_HOST_FRIENDS_ONLY(int p0, int maxPlayers);
----------------------------------------------------------------------------------------------------
```

Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens pas
t then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually h
ost a session.  

```'>
				<Param name='int p0' />
				<Param name='int maxPlayers' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionHostSinglePlayer' func='yes'>
			<Overload retVal='void' descr='// 0xC74C33FCA52856D5
// 0xF3B1CA85
NETWORK::NETWORK_SESSION_HOST_SINGLE_PLAYER(int p0);
----------------------------------------------------------------------------------------------------
```

Loads up the map that is loaded when beeing in mission creator  

Player gets placed in a mix between online/offline mode  

p0 is always 2 in R* scripts.  

Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives t
o prevent online modding ~ghost30812  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionIsClosedCrew' func='yes'>
			<Overload retVal='BOOL' descr='// 0x74732C6CA90DA2B4
// 0xA95299B9
NETWORK::NETWORK_SESSION_IS_CLOSED_CREW();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionIsClosedFriends' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFBCFA2EA2E206890
// 0x56E75FE4
NETWORK::NETWORK_SESSION_IS_CLOSED_FRIENDS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionIsPlayerVotedToKick' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD6D09A6F32F49EF1
// 0x8A559D26
NETWORK::_NETWORK_SESSION_IS_PLAYER_VOTED_TO_KICK(Player player);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _NETWORK_SESSION_ARE_PLAYERS_VOTING_TO_KICK'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='_NETWORK_SESSION_ARE_PLAYERS_VOTING_TO_KICK' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: NetworkSessionIsPlayerVotedToKick' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionIsPrivate' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCEF70AA5B3F89BA1
// 0xDB67785D
NETWORK::NETWORK_SESSION_IS_PRIVATE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionIsSolo' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF3929C2379B60CCE
// 0x3D2C1916
NETWORK::NETWORK_SESSION_IS_SOLO();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionIsVisible' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBA416D68C631496A
// 0x4977AC28
NETWORK::NETWORK_SESSION_IS_VISIBLE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionKickPlayer' func='yes'>
			<Overload retVal='void' descr='// 0xFA8904DC5F304220
// 0x1E20138A
NETWORK::NETWORK_SESSION_KICK_PLAYER(Player player);
----------------------------------------------------------------------------------------------------
```

Only works when you are host.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionLeaveSinglePlayer' func='yes'>
			<Overload retVal='void' descr='// 0x3442775428FD2DAA
// 0xC692F86A
NETWORK::NETWORK_SESSION_LEAVE_SINGLE_PLAYER();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionMarkVisible' func='yes'>
			<Overload retVal='void' descr='// 0x271CC6AB59EBF9A5
// 0x7017257D
NETWORK::NETWORK_SESSION_MARK_VISIBLE(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionSetMaxPlayers' func='yes'>
			<Overload retVal='void' descr='// 0x8B6A4DD0AF9CE215
// 0x5F29A7E0
NETWORK::_NETWORK_SESSION_SET_MAX_PLAYERS(int playerType, int playerCount);
----------------------------------------------------------------------------------------------------
```

BLR the shit.  

```'>
				<Param name='int playerType' />
				<Param name='int playerCount' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionVoiceHost' func='yes'>
			<Overload retVal='void' descr='// 0x9C1556705F864230
// 0x345C2980
NETWORK::NETWORK_SESSION_VOICE_HOST();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionVoiceLeave' func='yes'>
			<Overload retVal='void' descr='// 0x6793E42BE02B575D
// 0xE566C7DA
NETWORK::NETWORK_SESSION_VOICE_LEAVE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSessionWasInvited' func='yes'>
			<Overload retVal='BOOL' descr='// 0x23DFB504655D0CE4
// 0x6A0BEA60
NETWORK::NETWORK_SESSION_WAS_INVITED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetActivitySpectator' func='yes'>
			<Overload retVal='void' descr='// 0x75138790B4359A74
// 0xFC9AD060
NETWORK::NETWORK_SET_ACTIVITY_SPECTATOR(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetActivitySpectatorMax' func='yes'>
			<Overload retVal='void' descr='// 0x9D277B76D1D12222
// 0x74E0BC0A
NETWORK::NETWORK_SET_ACTIVITY_SPECTATOR_MAX(int maxSpectators);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int maxSpectators' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetCurrentlySelectedGamerHandleFromInviteMenu' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7206F674F2A3B1BB
// 0xFD95899E
NETWORK::NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetEntityCanBlend' func='yes'>
			<Overload retVal='void' descr='// 0xD830567D88A1E873
// 0xDE8C0DB8
NETWORK::NETWORK_SET_ENTITY_CAN_BLEND(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetEntityInvisibleToNetwork' func='yes'>
			<Overload retVal='void' descr='// 0xF1CA12B18AEF5298
// 0x09CBC4B0
NETWORK::_NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK(Entity entity, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

if set to true other network players can&apos;t see it  

if set to false other network player can see it  

=========================================  

^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this 
naive no matter the toggle he could still see it.  

pc or last gen?  

^^ last-gen  

```

----------------------------------------------------------------------------------------------------

Old name: _NETWORK_SET_ENTITY_VISIBLE_TO_NETWORK'>
				<Param name='Entity entity' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_NETWORK_SET_ENTITY_VISIBLE_TO_NETWORK' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: NetworkSetEntityInvisibleToNetwork' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='NetworkSetFriendlyFireOption' func='yes'>
			<Overload retVal='void' descr='// 0xF808475FA571D823
// 0x6BAF95FA
NETWORK::NETWORK_SET_FRIENDLY_FIRE_OPTION(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

//friendly fire toggle  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetGamerInvitedToTransition' func='yes'>
			<Overload retVal='void' descr='// 0xCA2C8073411ECDB6
// 0x17F1C69D
NETWORK::NETWORK_SET_GAMER_INVITED_TO_TRANSITION(int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetInMpCutscene' func='yes'>
			<Overload retVal='void' descr='// 0x9CA5DE655269FEC4
// 0x8434CB43
NETWORK::NETWORK_SET_IN_MP_CUTSCENE(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetInSpectatorMode' func='yes'>
			<Overload retVal='void' descr='// 0x423DE3854BB50894
// 0x5C4C8458
NETWORK::NETWORK_SET_IN_SPECTATOR_MODE(BOOL toggle, Ped playerPed);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
				<Param name='Ped playerPed' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetKeepFocuspoint' func='yes'>
			<Overload retVal='void' descr='// 0x7F8413B7FC2AA6B9
// 0x075321B5
NETWORK::NETWORK_SET_KEEP_FOCUSPOINT(BOOL p0, Any p1);
----------------------------------------------------------------------------------------------------
```

hash collision???  

```'>
				<Param name='BOOL p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetLocalPlayerInvincibleTime' func='yes'>
			<Overload retVal='void' descr='// 0x2D95C7E2D7E07307
// 0xFEA9B85C
NETWORK::NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME(int time);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int time' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetMissionFinished' func='yes'>
			<Overload retVal='void' descr='// 0x3B3D11CD9FFCDFC9
// 0x3083FAD7
NETWORK::NETWORK_SET_MISSION_FINISHED();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetNetworkIdDynamic' func='yes'>
			<Overload retVal='void' descr='// 0x2B1813ABA29016C5
// 0x155465EE
NETWORK::_NETWORK_SET_NETWORK_ID_DYNAMIC(int netID, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

This is called shortly after setting Network ID Migration off it seems. Does anyone know the point o
f this?   

Example scenario,   

If I were to request and gain control of an online players vehicle then their vehicle&apos;s Network ID a
nd turn migration off. I wouldn&apos;t need to ever request control again as they wouldn&apos;t gain control b
ack.   

- scenario over -  

So what would be the point hereafter of setting it &apos;dynamic&apos;?  

```'>
				<Param name='int netID' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetOverrideSpectatorMode' func='yes'>
			<Overload retVal='void' descr='// 0x70DA3BF8DACD3210
// 0xA0FD42D3
NETWORK::NETWORK_SET_OVERRIDE_SPECTATOR_MODE(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetPropertyId' func='yes'>
			<Overload retVal='void' descr='// 0x1775961C2FBBCB5C
// 0x5A74E873
NETWORK::NETWORK_SET_PROPERTY_ID(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetRichPresence' func='yes'>
			<Overload retVal='void' descr='// 0x1DCCACDCFC569362
// 0x932A6CED
NETWORK::NETWORK_SET_RICH_PRESENCE(int p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
```

On PC it&apos;s a nullsub which means it does absolutely nothing.  

Now that Discord supports Rich Presence, R* might finally implement this for PC. Or maybe in future 
games like RDR2, GTA VI...  

```'>
				<Param name='int p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetRichPresence_2' func='yes'>
			<Overload retVal='void' descr='// 0x3E200C2BCF4164EB
// 0x017E6777
NETWORK::_NETWORK_SET_RICH_PRESENCE_2(int p0, char* gxtLabel);
----------------------------------------------------------------------------------------------------
```

NETWORK_SET_RICH_PRESENCE but for PlayStation? (On PC it&apos;s a nullsub)  

```'>
				<Param name='int p0' />
				<Param name='char* gxtLabel' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetTalkerProximity' func='yes'>
			<Overload retVal='void' descr='// 0xCBF12D65F95AD686
// 0x67555C66
NETWORK::NETWORK_SET_TALKER_PROXIMITY(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetTeamOnlyChat' func='yes'>
			<Overload retVal='void' descr='// 0xD5B4883AC32F24C3
// 0x3813019A
NETWORK::NETWORK_SET_TEAM_ONLY_CHAT(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetThisScriptIsNetworkScript' func='yes'>
			<Overload retVal='void' descr='// 0x1CA59E306ECB80A5
// 0x470810ED
NETWORK::NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(int lobbySize, BOOL p1, int playerId);
----------------------------------------------------------------------------------------------------
```

p1 is always 0  

```'>
				<Param name='int lobbySize' />
				<Param name='BOOL p1' />
				<Param name='int playerId' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetTransitionActivityId' func='yes'>
			<Overload retVal='void' descr='// 0x30DE938B516F0AD2
// 0xCCA9C022
NETWORK::NETWORK_SET_TRANSITION_ACTIVITY_ID(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetTransitionCreatorHandle' func='yes'>
			<Overload retVal='void' descr='// 0xEF26739BCD9907D5
// 0x1DD01FE7
NETWORK::NETWORK_SET_TRANSITION_CREATOR_HANDLE(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetVoiceActive' func='yes'>
			<Overload retVal='void' descr='// 0xBABEC9E69A91C57B
// 0x8011247F
NETWORK::NETWORK_SET_VOICE_ACTIVE(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSetVoiceChannel' func='yes'>
			<Overload retVal='void' descr='// 0xEF6212C2EFEF1A23
// 0x3974879F
NETWORK::NETWORK_SET_VOICE_CHANNEL(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkShowProfileUi' func='yes'>
			<Overload retVal='void' descr='// 0x859ED1CEA343FCA8
// 0xF00A20B0
NETWORK::NETWORK_SHOW_PROFILE_UI(int* networkHandle);
----------------------------------------------------------------------------------------------------
```

Example:  

int playerHandle;	  

NETWORK_HANDLE_FROM_PLAYER(selectedPlayer, &playerHandle, 13);  

NETWORK_SHOW_PROFILE_UI(&playerHandle);  

```'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkStartSynchronisedScene' func='yes'>
			<Overload retVal='void' descr='// 0x9A1B3FCDB36C8697
// 0xA9DFDC40
NETWORK::NETWORK_START_SYNCHRONISED_SCENE(int netScene);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netScene' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkStopSynchronisedScene' func='yes'>
			<Overload retVal='void' descr='// 0xC254481A4574CB2F
// 0x97B1CDF6
NETWORK::NETWORK_STOP_SYNCHRONISED_SCENE(int netScene);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netScene' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSuppressInvite' func='yes'>
			<Overload retVal='void' descr='// 0xA0682D67EF1FBA3D
// 0x323DC78C
NETWORK::NETWORK_SUPPRESS_INVITE(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkUnregisterNetworkedEntity' func='yes'>
			<Overload retVal='void' descr='// 0x7368E683BB9038D6
// 0x5C645F64
NETWORK::NETWORK_UNREGISTER_NETWORKED_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkVoiceConnectToPlayer' func='yes'>
			<Overload retVal='void' descr='// 0xABD5E88B8A2D3DB2
// 0x9DFD89E6
NETWORK::_NETWORK_VOICE_CONNECT_TO_PLAYER(Any* globalPtr);
----------------------------------------------------------------------------------------------------
```

Only one occurence in the scripts:  

auto sub_cb43(auto a_0, auto a_1) {  

    if (g_2594CB._f1) {  

        if (NETWORK::_855BC38818F6F684()) {  

            NETWORK::_ABD5E88B8A2D3DB2(&a_0._fB93);  

            g_2594CB._f14/*{13}*/ = a_0._fB93;  

            g_2594CB._f4/*&quot;64&quot;*/ = a_1;  

            return 1;  

        }  

    }  

    return 0;  

}  

other:  

looks like it passes a player in the paramater  

Contains string &quot;NETWORK_VOICE_CONNECT_TO_PLAYER&quot; in ida  

```'>
				<Param name='Any* globalPtr' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkXAffectsGamers' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE532D6811B3A4D2A
// 0x7771AB83
NETWORK::NETWORK_X_AFFECTS_GAMERS(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x01abce5e7cbda196' func='yes'>
			<Overload retVal='Any' descr='// 0x01ABCE5E7CBDA196
NETWORK::_0x01ABCE5E7CBDA196();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x02a8bec6fd9af660' func='yes'>
			<Overload retVal='BOOL' descr='// 0x02A8BEC6FD9AF660
// 0xB5ABC4B4
NETWORK::_0x02A8BEC6FD9AF660(Any* p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x02ada21ea2f6918f' func='yes'>
			<Overload retVal='Any' descr='// 0x02ADA21EA2F6918F
// 0x50296140
NETWORK::_0x02ADA21EA2F6918F();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0379daf89ba09aa5' func='yes'>
			<Overload retVal='void' descr='// 0x0379DAF89BA09AA5
NETWORK::_0x0379DAF89BA09AA5(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x041c7f2a6c9894e6' func='yes'>
			<Overload retVal='Any' descr='// 0x041C7F2A6C9894E6
NETWORK::_0x041C7F2A6C9894E6(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x04918a41bc9b8157' func='yes'>
			<Overload retVal='Any' descr='// 0x04918A41BC9B8157
NETWORK::_0x04918A41BC9B8157(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x07dd29d5e22763f1' func='yes'>
			<Overload retVal='BOOL' descr='// 0x07DD29D5E22763F1
NETWORK::_0x07DD29D5E22763F1(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x07eab372c8841d99' func='yes'>
			<Overload retVal='Any' descr='// 0x07EAB372C8841D99
NETWORK::_0x07EAB372C8841D99(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0afce529f69b21ff' func='yes'>
			<Overload retVal='Any' descr='// 0x0AFCE529F69B21FF
// 0xC3A12135
NETWORK::_0x0AFCE529F69B21FF();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0b203b4afde53a4f' func='yes'>
			<Overload retVal='Any' descr='// 0x0B203B4AFDE53A4F
// 0x1856D008
NETWORK::_0x0B203B4AFDE53A4F(Any* p0, Any* p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0c1f7d49c39d2289' func='yes'>
			<Overload retVal='Any' descr='// 0x0C1F7D49C39D2289
// 0x744AC008
NETWORK::_0x0C1F7D49C39D2289();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0c978fda19692c2c' func='yes'>
			<Overload retVal='void' descr='// 0x0C978FDA19692C2C
NETWORK::_0x0C978FDA19692C2C(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

x360 Hash: 0x4AF0ADF5  

```'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0cd9ab83489430ea' func='yes'>
			<Overload retVal='int' descr='// 0x0CD9AB83489430EA
// 0x20527695
NETWORK::_0x0CD9AB83489430EA(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0d77a82dc2d0da59' func='yes'>
			<Overload retVal='void' descr='// 0x0D77A82DC2D0DA59
// 0x0808D4CC
NETWORK::_0x0D77A82DC2D0DA59(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0dbd5d7e3c5bec3b' func='yes'>
			<Overload retVal='Any' descr='// 0x0DBD5D7E3C5BEC3B
NETWORK::_0x0DBD5D7E3C5BEC3B();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0e4f77f7b9d74d84' func='yes'>
			<Overload retVal='void' descr='// 0x0E4F77F7B9D74D84
NETWORK::_0x0E4F77F7B9D74D84(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0ede326d47cd0f3e' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0EDE326D47CD0F3E
// 0xBEB7281A
NETWORK::_0x0EDE326D47CD0F3E(Ped ped, Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0ff2862b61a58af9' func='yes'>
			<Overload retVal='void' descr='// 0x0FF2862B61A58AF9
// 0x1BCD3DDF
NETWORK::_0x0FF2862B61A58AF9(BOOL p0);
----------------------------------------------------------------------------------------------------
```

p0 is always false in scripts.  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x10bd227a753b0d84' func='yes'>
			<Overload retVal='Any' descr='// 0x10BD227A753B0D84
// 0x231CFD12
NETWORK::_0x10BD227A753B0D84();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x113e6e3e50e286b0' func='yes'>
			<Overload retVal='void' descr='// 0x113E6E3E50E286B0
// 0xD6E3D5EA
NETWORK::_0x113E6E3E50E286B0(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1153fa02a659051c' func='yes'>
			<Overload retVal='void' descr='// 0x1153FA02A659051C
// 0x57F9BC83
NETWORK::_0x1153FA02A659051C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1171a97a3d3981b6' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1171A97A3D3981B6
NETWORK::_0x1171A97A3D3981B6(Any* p0, Any* p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x120364de2845daf8' func='yes'>
			<Overload retVal='Any' descr='// 0x120364DE2845DAF8
// 0xF30E5814
NETWORK::_0x120364DE2845DAF8(Any* p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x125e6d638b8605d4' func='yes'>
			<Overload retVal='Vector3' descr='// 0x125E6D638B8605D4
NETWORK::_0x125E6D638B8605D4(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x12b6281b6c6706c0' func='yes'>
			<Overload retVal='int' descr='// 0x12B6281B6C6706C0
// 0x603FA104
NETWORK::_0x12B6281B6C6706C0(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x13518ff1c6b28938' func='yes'>
			<Overload retVal='BOOL' descr='// 0x13518FF1C6B28938
// 0x7963FA4D
NETWORK::_0x13518FF1C6B28938(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1353f87e89946207' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1353F87E89946207
NETWORK::_0x1353F87E89946207();
----------------------------------------------------------------------------------------------------
```

Returns some kind of banned state  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x135f9b7b7add2185' func='yes'>
			<Overload retVal='BOOL' descr='// 0x135F9B7B7ADD2185
NETWORK::_0x135F9B7B7ADD2185(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1398582b7f72b3ed' func='yes'>
			<Overload retVal='void' descr='// 0x1398582B7F72B3ED
NETWORK::_0x1398582B7F72B3ED(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x13f1fcb111b820b0' func='yes'>
			<Overload retVal='void' descr='// 0x13F1FCB111B820B0
NETWORK::_0x13F1FCB111B820B0(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x140e6a44870a11ce' func='yes'>
			<Overload retVal='void' descr='// 0x140E6A44870A11CE
// 0x50507BED
NETWORK::_0x140E6A44870A11CE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x144da052257ae7d8' func='yes'>
			<Overload retVal='void' descr='// 0x144DA052257AE7D8
NETWORK::_0x144DA052257AE7D8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x14922ed3e38761f0' func='yes'>
			<Overload retVal='Any' descr='// 0x14922ED3E38761F0
// 0x8FA6EE0E
NETWORK::_0x14922ED3E38761F0();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x152d90e4c1b4738a' func='yes'>
			<Overload retVal='BOOL' descr='// 0x152D90E4C1B4738A
// 0x08243B79
NETWORK::_0x152D90E4C1B4738A(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x158ec424f35ec469' func='yes'>
			<Overload retVal='BOOL' descr='// 0x158EC424F35EC469
// 0xDED82A6E
NETWORK::_0x158EC424F35EC469(char* p0, BOOL p1, char* contentType);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='BOOL p1' />
				<Param name='char* contentType' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x162c23ca83ed0a62' func='yes'>
			<Overload retVal='BOOL' descr='// 0x162C23CA83ED0A62
// 0xB3BBD241
NETWORK::_0x162C23CA83ED0A62(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1632be0ac1e62876' func='yes'>
			<Overload retVal='void' descr='// 0x1632BE0AC1E62876
NETWORK::_0x1632BE0AC1E62876(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x171df6a0c07fb3dc' func='yes'>
			<Overload retVal='Any' descr='// 0x171DF6A0C07FB3DC
// 0x84315226
NETWORK::_0x171DF6A0C07FB3DC(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x17330ebf2f2124a8' func='yes'>
			<Overload retVal='void' descr='// 0x17330EBF2F2124A8
NETWORK::_0x17330EBF2F2124A8();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x17440aa15d1d3739' func='yes'>
			<Overload retVal='void' descr='// 0x17440AA15D1D3739
// 0x133FF2D5
NETWORK::_0x17440AA15D1D3739();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x17e0198b3882c2cb' func='yes'>
			<Overload retVal='void' descr='// 0x17E0198B3882C2CB
// 0x408A9436
NETWORK::_0x17E0198B3882C2CB();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1888694923ef4591' func='yes'>
			<Overload retVal='void' descr='// 0x1888694923EF4591
NETWORK::_0x1888694923EF4591();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1950dae9848a4739' func='yes'>
			<Overload retVal='Any' descr='// 0x1950DAE9848A4739
NETWORK::_0x1950DAE9848A4739(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1accfba3d8dab2ee' func='yes'>
			<Overload retVal='Any' descr='// 0x1ACCFBA3D8DAB2EE
// 0x1E34953F
NETWORK::_0x1ACCFBA3D8DAB2EE(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1ad5b71586b94820' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1AD5B71586B94820
// 0xCEA55F4C
NETWORK::_0x1AD5B71586B94820(Player p0, Any* p1, Any p2);
----------------------------------------------------------------------------------------------------
```

unk_0xCEA55F4C(uVar3, &quot;AM_ROLLERCOASTER&quot;, -1))  

Probably has to do with seeing if they are riding the roller coaster or ferris wheel  

NETWORK_IS_PLAYER_???  

```'>
				<Param name='Player p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1b857666604b1a74' func='yes'>
			<Overload retVal='void' descr='// 0x1B857666604B1A74
NETWORK::_0x1B857666604B1A74(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0x76A9FEB6  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1d4dc17c38feaff0' func='yes'>
			<Overload retVal='Any' descr='// 0x1D4DC17C38FEAFF0
// 0xED4A272F
NETWORK::_0x1D4DC17C38FEAFF0();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1d610eb0fea716d9' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1D610EB0FEA716D9
NETWORK::_0x1D610EB0FEA716D9(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1de0f5f50d723caa' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1DE0F5F50D723CAA
// 0xAD334B40
NETWORK::_0x1DE0F5F50D723CAA(Any* p0, Any* p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1f8e00fb18239600' func='yes'>
			<Overload retVal='void' descr='// 0x1F8E00FB18239600
NETWORK::_0x1F8E00FB18239600(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x21d04d7bc538c146' func='yes'>
			<Overload retVal='BOOL' descr='// 0x21D04D7BC538C146
NETWORK::_0x21D04D7BC538C146(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2302c0264ea58d31' func='yes'>
			<Overload retVal='void' descr='// 0x2302C0264EA58D31
// 0x8DCFE77D
NETWORK::_0x2302C0264EA58D31();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x237d5336a9a54108' func='yes'>
			<Overload retVal='BOOL' descr='// 0x237D5336A9A54108
NETWORK::_0x237D5336A9A54108(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x24409fc4c55cb22d' func='yes'>
			<Overload retVal='Any' descr='// 0x24409FC4C55CB22D
// 0xA4302183
NETWORK::_0x24409FC4C55CB22D(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x24e4e51fc16305f9' func='yes'>
			<Overload retVal='Any' descr='// 0x24E4E51FC16305F9
// 0x742075FE
NETWORK::_0x24E4E51FC16305F9();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x25b99872d588a101' func='yes'>
			<Overload retVal='Any' descr='// 0x25B99872D588A101
// 0x4C2C2B12
NETWORK::_0x25B99872D588A101(float p0, float p1, float p2, float p3, float p4, float p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x25d990f8e0e3f13c' func='yes'>
			<Overload retVal='void' descr='// 0x25D990F8E0E3F13C
NETWORK::_0x25D990F8E0E3F13C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x261e97ad7bcf3d40' func='yes'>
			<Overload retVal='void' descr='// 0x261E97AD7BCF3D40
// 0x7EF353E1
NETWORK::_0x261E97AD7BCF3D40(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x265559da40b3f327' func='yes'>
			<Overload retVal='void' descr='// 0x265559DA40B3F327
NETWORK::_0x265559DA40B3F327(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x265635150fb0d82e' func='yes'>
			<Overload retVal='void' descr='// 0x265635150FB0D82E
// 0xA7FA70AE
NETWORK::_0x265635150FB0D82E();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x267c78c60e806b9a' func='yes'>
			<Overload retVal='void' descr='// 0x267C78C60E806B9A
// 0xBB2D33D3
NETWORK::_0x267C78C60E806B9A(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x26f07dd83a5f7f98' func='yes'>
			<Overload retVal='Any' descr='// 0x26F07DD83A5F7F98
// 0x9A176B6E
NETWORK::_0x26F07DD83A5F7F98();
----------------------------------------------------------------------------------------------------
```

spook.  

This function calls a function that gets another player stat, although implementation wasn&apos;t finishe
d so it can only get your own stat.  

Stat value it calls: 0xFC58E972  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x274a1519dfc1094f' func='yes'>
			<Overload retVal='BOOL' descr='// 0x274A1519DFC1094F
// 0x980D45D7
NETWORK::_0x274A1519DFC1094F(Any* p0, BOOL p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='BOOL p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x283b6062a2c01e9b' func='yes'>
			<Overload retVal='void' descr='// 0x283B6062A2C01E9B
// 0x96E28FE2
NETWORK::_0x283B6062A2C01E9B();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x299ef3c576773506' func='yes'>
			<Overload retVal='Any' descr='// 0x299EF3C576773506
// 0x611E0BE2
NETWORK::_0x299EF3C576773506();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2a5e0621dd815a9a' func='yes'>
			<Overload retVal='void' descr='// 0x2A5E0621DD815A9A
NETWORK::_0x2A5E0621DD815A9A(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2a7776c709904ab0' func='yes'>
			<Overload retVal='Any' descr='// 0x2A7776C709904AB0
// 0x1CF89DA5
NETWORK::_0x2A7776C709904AB0(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2b1c623823db0d9d' func='yes'>
			<Overload retVal='Any' descr='// 0x2B1C623823DB0D9D
NETWORK::_0x2B1C623823DB0D9D(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2b51edbefc301339' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2B51EDBEFC301339
// 0x8E952B12
NETWORK::_0x2B51EDBEFC301339(int p0, char* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2bf66d2e7414f686' func='yes'>
			<Overload retVal='Any' descr='// 0x2BF66D2E7414F686
// 0x9156EFC0
NETWORK::_0x2BF66D2E7414F686();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2cc848a861d01493' func='yes'>
			<Overload retVal='Any' descr='// 0x2CC848A861D01493
// 0xBEB98840
NETWORK::_0x2CC848A861D01493();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2ce9d95e4051aecd' func='yes'>
			<Overload retVal='void' descr='// 0x2CE9D95E4051AECD
NETWORK::_0x2CE9D95E4051AECD(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2d5dc831176d0114' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2D5DC831176D0114
// 0xA69AE16C
NETWORK::_0x2D5DC831176D0114(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2da41ed6e1fcd7a5' func='yes'>
			<Overload retVal='Any' descr='// 0x2DA41ED6E1FCD7A5
NETWORK::_0x2DA41ED6E1FCD7A5(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2e0bf682cc778d49' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2E0BF682CC778D49
// 0xBFAA349B
NETWORK::_0x2E0BF682CC778D49(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2e4c123d1c8a710e' func='yes'>
			<Overload retVal='Any' descr='// 0x2E4C123D1C8A710E
NETWORK::_0x2E4C123D1C8A710E(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2eac52b4019e2782' func='yes'>
			<Overload retVal='Any' descr='// 0x2EAC52B4019E2782
// 0x25E2DBA9
NETWORK::_0x2EAC52B4019E2782();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2fc5650b0271cb57' func='yes'>
			<Overload retVal='Any' descr='// 0x2FC5650B0271CB57
// 0xA812B6CB
NETWORK::_0x2FC5650B0271CB57();
----------------------------------------------------------------------------------------------------
```

NETWORK_IS_IN_???  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3054f114121c21ea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3054F114121C21EA
// 0xA850DDE1
NETWORK::_0x3054F114121C21EA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x308f96458b7087cc' func='yes'>
			<Overload retVal='Any' descr='// 0x308F96458B7087CC
// 0x68C9AF69
NETWORK::_0x308F96458B7087CC(Any* p0, Any p1, Any p2, Any p3, Any* p4, BOOL p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any* p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3195f8dd0d531052' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3195F8DD0D531052
// 0x4C2C0D1F
NETWORK::_0x3195F8DD0D531052(Any p0, Any p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x32dd916f3f7c9672' func='yes'>
			<Overload retVal='Any' descr='// 0x32DD916F3F7C9672
// 0xA2C5BD9D
NETWORK::_0x32DD916F3F7C9672(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x32ebd154cb6b8b99' func='yes'>
			<Overload retVal='void' descr='// 0x32EBD154CB6B8B99
NETWORK::_0x32EBD154CB6B8B99(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x33de49edf4dde77a' func='yes'>
			<Overload retVal='Vector3' descr='// 0x33DE49EDF4DDE77A
NETWORK::_0x33DE49EDF4DDE77A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x35f0b98a8387274d' func='yes'>
			<Overload retVal='Any' descr='// 0x35F0B98A8387274D
// 0xA003C40B
NETWORK::_0x35F0B98A8387274D();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x36391f397731595d' func='yes'>
			<Overload retVal='Any' descr='// 0x36391F397731595D
NETWORK::_0x36391F397731595D(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x367ef5e2f439b4c6' func='yes'>
			<Overload retVal='void' descr='// 0x367EF5E2F439B4C6
// 0x53C9563C
NETWORK::_0x367EF5E2F439B4C6(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x37a4494483b9f5c9' func='yes'>
			<Overload retVal='Any' descr='// 0x37A4494483B9F5C9
// 0xC901AA9F
NETWORK::_0x37A4494483B9F5C9();
----------------------------------------------------------------------------------------------------
```

NETWORK_IS_TRANSITION_???  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x37d5f739fd494675' func='yes'>
			<Overload retVal='Any' descr='// 0x37D5F739FD494675
NETWORK::_0x37D5F739FD494675(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3855fb5eb2c5e8b2' func='yes'>
			<Overload retVal='Any' descr='// 0x3855FB5EB2C5E8B2
NETWORK::_0x3855FB5EB2C5E8B2(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x39917e1b4cb0f911' func='yes'>
			<Overload retVal='void' descr='// 0x39917E1B4CB0F911
// 0xF60986FC
NETWORK::_0x39917E1B4CB0F911(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3a17a27d75c74887' func='yes'>
			<Overload retVal='Any' descr='// 0x3A17A27D75C74887
// 0x8E1D8F78
NETWORK::_0x3A17A27D75C74887();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3a3d5568af297cd5' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3A3D5568AF297CD5
// 0x9B9AFFF1
NETWORK::_0x3A3D5568AF297CD5(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3a8b55fda4c8ddef' func='yes'>
			<Overload retVal='Any' descr='// 0x3A8B55FDA4C8DDEF
NETWORK::_0x3A8B55FDA4C8DDEF(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3b39236746714134' func='yes'>
			<Overload retVal='Any' descr='// 0x3B39236746714134
// 0x5E1020CC
NETWORK::_0x3B39236746714134(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3c5c1e2c2ff814b1' func='yes'>
			<Overload retVal='void' descr='// 0x3C5C1E2C2FF814B1
// 0xC9DDA85B
NETWORK::_0x3C5C1E2C2FF814B1(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3c891a251567dfce' func='yes'>
			<Overload retVal='Any' descr='// 0x3C891A251567DFCE
// 0x90700C7D
NETWORK::_0x3C891A251567DFCE(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3dbf2df0aeb7d289' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3DBF2DF0AEB7D289
// 0xF5E3401C
NETWORK::_0x3DBF2DF0AEB7D289(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3f52e880aaf6c8ca' func='yes'>
			<Overload retVal='void' descr='// 0x3F52E880AAF6C8CA
// 0xB3D9A67F
NETWORK::_0x3F52E880AAF6C8CA(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3f9990bf5f22759c' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3F9990BF5F22759C
NETWORK::_0x3F9990BF5F22759C(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3fa36981311fa4ff' func='yes'>
			<Overload retVal='void' descr='// 0x3FA36981311FA4FF
// 0x00AE4E17
NETWORK::_0x3FA36981311FA4FF(int netId, BOOL state);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netId' />
				<Param name='BOOL state' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x407091cf6037118e' func='yes'>
			<Overload retVal='void' descr='// 0x407091CF6037118E
NETWORK::_0x407091CF6037118E(int netID);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0x9F82917F  

```'>
				<Param name='int netID' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x40f7e66472df3e5c' func='yes'>
			<Overload retVal='Any' descr='// 0x40F7E66472DF3E5C
// 0x70A2845C
NETWORK::_0x40F7E66472DF3E5C(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x419594e137637120' func='yes'>
			<Overload retVal='void' descr='// 0x419594E137637120
// 0x54058F5F
NETWORK::_0x419594E137637120(BOOL p0, Any p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x422d396f80a96547' func='yes'>
			<Overload retVal='BOOL' descr='// 0x422D396F80A96547
// 0xC6EA802E
NETWORK::_0x422D396F80A96547();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x422f32cc7e56abad' func='yes'>
			<Overload retVal='BOOL' descr='// 0x422F32CC7E56ABAD
NETWORK::_0x422F32CC7E56ABAD(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4237e822315d8ba9' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4237E822315D8BA9
NETWORK::_0x4237E822315D8BA9();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x42613035157e4208' func='yes'>
			<Overload retVal='void' descr='// 0x42613035157E4208
NETWORK::_0x42613035157E4208(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4348bfda56023a2f' func='yes'>
			<Overload retVal='Any' descr='// 0x4348BFDA56023A2F
NETWORK::_0x4348BFDA56023A2F(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x444c4525ece0a4b9' func='yes'>
			<Overload retVal='void' descr='// 0x444C4525ECE0A4B9
// 0xCC7DCE24
NETWORK::_0x444C4525ECE0A4B9();
----------------------------------------------------------------------------------------------------
```

sfink: related to: NETWORK_BAIL  

NETWORK_BAIL_TRANSITION  

NETWORK_JOIN_GROUP_ACTIVITY  

NETWORK_JOIN_TRANSITION  

NETWORK_LAUNCH_TRANSITION  

NETWORK_SESSION_HOST  

NETWORK_SESSION_HOST_CLOSED  

NETWORK_SESSION_HOST_FRIENDS_ONLY  

NETWORK_SESSION_HOST_SINGLE_PLAYER  

NETWORK_SESSION_VOICE_LEAVE  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x44b37cdcae765aae' func='yes'>
			<Overload retVal='BOOL' descr='// 0x44B37CDCAE765AAE
NETWORK::_0x44B37CDCAE765AAE(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x45a83257ed02d9bc' func='yes'>
			<Overload retVal='void' descr='// 0x45A83257ED02D9BC
NETWORK::_0x45A83257ED02D9BC();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x45e816772e93a9db' func='yes'>
			<Overload retVal='Any' descr='// 0x45E816772E93A9DB
// 0x8E664EFD
NETWORK::_0x45E816772E93A9DB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x472841a026d26d8b' func='yes'>
			<Overload retVal='Any' descr='// 0x472841A026D26D8B
NETWORK::_0x472841A026D26D8B();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4811bbac21c5fcd5' func='yes'>
			<Overload retVal='void' descr='// 0x4811BBAC21C5FCD5
// 0xE5961511
NETWORK::_0x4811BBAC21C5FCD5(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4a2d4e8bf4265b0f' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4A2D4E8BF4265B0F
// 0xC6D53AA0
NETWORK::_0x4A2D4E8BF4265B0F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4ad490ae1536933b' func='yes'>
			<Overload retVal='Any' descr='// 0x4AD490AE1536933B
NETWORK::_0x4AD490AE1536933B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4ba166079d658ed4' func='yes'>
			<Overload retVal='void' descr='// 0x4BA166079D658ED4
NETWORK::_0x4BA166079D658ED4(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4ba92a18502bca61' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4BA92A18502BCA61
// 0x74D6B13C
NETWORK::_0x4BA92A18502BCA61(Player player, float p1, float p2, float p3, float p4, float p5, float p6, 
----------------------------------------------------------------------------------------------------
t p7, float p8, float p9, float p10, int flags);

```

```

Seems to call GET_PAUSED_MAP_STREAMING_REQUEST lol wtf  

seg001:000000000158C324 sub_158C324:                            # DATA XREF: OPD:stru_1C29978o  

seg001:000000000158C324  

seg001:000000000158C324 .set arg_10,  0x10  

seg001:000000000158C324  

seg001:000000000158C324                 mflr      r0  

seg001:000000000158C328                 bl        sub_1803774  

seg001:000000000158C32C                 stdu      r1, -0x80(r1)  

seg001:000000000158C330                 std       r0, 0x80+arg_10(r1)  

seg001:000000000158C334                 mr        r31, r3  

seg001:000000000158C338                 lwz       r3, 8(r31)  

seg001:000000000158C33C                 addic     r4, r3, 4  

seg001:000000000158C340                 addic     r5, r3, 0x10  

seg001:000000000158C344                 addic     r7, r3, 0x20  

seg001:000000000158C348                 lwz       r6, 0(r3)  

seg001:000000000158C34C                 lfs       f1, 0x1C(r3)  

seg001:000000000158C350                 lwz       r8, 0x2C(r3)  

seg001:000000000158C354                 extsw     r3, r6  

seg001:000000000158C358                 extsw     r8, r8  

seg001:000000000158C35C                 bl        GET_PAUSED_MAP_STREAMING_REQUEST  

seg001:000000000158C360                 lwz       r4, 0(r31)  

seg001:000000000158C364                 stw       r3, 0(r4)  

seg001:000000000158C368                 addi      r1, r1, 0x80  

seg001:000000000158C36C                 b         loc_18037D8  

sorta makes sense though since the one above this native and GET_PAUSED_MAP_STREAMING_REQUEST are us
ed together often in scripts  

```'>
				<Param name='Player player' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4c2a9fdc22377075' func='yes'>
			<Overload retVal='void' descr='// 0x4C2A9FDC22377075
NETWORK::_0x4C2A9FDC22377075();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4c61b39930d045da' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4C61B39930D045DA
// 0xBAF52DD8
NETWORK::_0x4C61B39930D045DA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4d02279c83be69fe' func='yes'>
			<Overload retVal='Any' descr='// 0x4D02279C83BE69FE
// 0xA7F3F82B
NETWORK::_0x4D02279C83BE69FE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4df7cfff471a7fb1' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4DF7CFFF471A7FB1
// 0xCB1CD6D3
NETWORK::_0x4DF7CFFF471A7FB1(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4e548c0d7ae39ff9' func='yes'>
			<Overload retVal='Any' descr='// 0x4E548C0D7AE39FF9
// 0x41A0FB02
NETWORK::_0x4E548C0D7AE39FF9(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x524ff0aeff9c3973' func='yes'>
			<Overload retVal='void' descr='// 0x524FF0AEFF9C3973
// 0xB72F086D
NETWORK::_0x524FF0AEFF9C3973(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5324a0e3e4ce3570' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5324A0E3E4CE3570
// 0x87D1E6BD
NETWORK::_0x5324A0E3E4CE3570(Any p0, Any p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x53afd64c6758f2f9' func='yes'>
			<Overload retVal='Any' descr='// 0x53AFD64C6758F2F9
NETWORK::_0x53AFD64C6758F2F9();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x53c10c8bd774f2c9' func='yes'>
			<Overload retVal='Any' descr='// 0x53C10C8BD774F2C9
NETWORK::_0x53C10C8BD774F2C9();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5539c3ebf104a53a' func='yes'>
			<Overload retVal='void' descr='// 0x5539C3EBF104A53A
// 0xAE396263
NETWORK::_0x5539C3EBF104A53A(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5626d9d6810730d5' func='yes'>
			<Overload retVal='Any' descr='// 0x5626D9D6810730D5
NETWORK::_0x5626D9D6810730D5();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x584770794d758c18' func='yes'>
			<Overload retVal='BOOL' descr='// 0x584770794D758C18
NETWORK::_0x584770794D758C18(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x58c21165f6545892' func='yes'>
			<Overload retVal='void' descr='// 0x58C21165F6545892
// 0x365C50EE
NETWORK::_0x58C21165F6545892(char* p0, char* p1);
----------------------------------------------------------------------------------------------------
```

Has a 3rd param (int) since patch [???].  

```'>
				<Param name='char* p0' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x58cc181719256197' func='yes'>
			<Overload retVal='Any' descr='// 0x58CC181719256197
NETWORK::_0x58CC181719256197(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 0.  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x59328eb08c5ceb2b' func='yes'>
			<Overload retVal='Any' descr='// 0x59328EB08C5CEB2B
// 0x70F6D3AD
NETWORK::_0x59328EB08C5CEB2B();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x593570c289a77688' func='yes'>
			<Overload retVal='Any' descr='// 0x593570C289A77688
NETWORK::_0x593570C289A77688();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x595f028698072dd9' func='yes'>
			<Overload retVal='BOOL' descr='// 0x595F028698072DD9
// 0xBB54AA3D
NETWORK::_0x595F028698072DD9(Any p0, Any p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x597f8dba9b206fc7' func='yes'>
			<Overload retVal='Any' descr='// 0x597F8DBA9B206FC7
// 0x410C61D1
NETWORK::_0x597F8DBA9B206FC7();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x59d421683d31835a' func='yes'>
			<Overload retVal='void' descr='// 0x59D421683D31835A
NETWORK::_0x59D421683D31835A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x59df79317f85a7e0' func='yes'>
			<Overload retVal='Any' descr='// 0x59DF79317F85A7E0
NETWORK::_0x59DF79317F85A7E0();
----------------------------------------------------------------------------------------------------
```

may be 0x6CDAA7D2  

sfink: related to: NETWORK_BAIL  

NETWORK_BAIL_TRANSITION  

NETWORK_JOIN_GROUP_ACTIVITY  

NETWORK_JOIN_TRANSITION  

NETWORK_LAUNCH_TRANSITION  

NETWORK_SESSION_HOST  

NETWORK_SESSION_HOST_CLOSED  

NETWORK_SESSION_HOST_FRIENDS_ONLY  

NETWORK_SESSION_HOST_SINGLE_PLAYER  

NETWORK_SESSION_VOICE_LEAVE  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5a0a3d1a186a5508' func='yes'>
			<Overload retVal='Any' descr='// 0x5A0A3D1A186A5508
// 0x1F0DD8AF
NETWORK::_0x5A0A3D1A186A5508();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5a34cd9c3c5bec44' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5A34CD9C3C5BEC44
// 0x346B506C
NETWORK::_0x5A34CD9C3C5BEC44(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5a6aa44ff8e931e6' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5A6AA44FF8E931E6
NETWORK::_0x5A6AA44FF8E931E6();
----------------------------------------------------------------------------------------------------
```

NETWORK_IS_TRANSITION_???  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5a6ffa2433e2f14c' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5A6FFA2433E2F14C
// 0xC62E77B3
NETWORK::_0x5A6FFA2433E2F14C(Player player, float p1, float p2, float p3, float p4, float p5, float p6, 
----------------------------------------------------------------------------------------------------
t p7, int flags);

```

```

One of the first things it does is get the players ped.  

Then it calls a function that is used in some tasks and ped based functions.  

```'>
				<Param name='Player player' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5ae17c6b0134b7f1' func='yes'>
			<Overload retVal='Any' descr='// 0x5AE17C6B0134B7F1
// 0xC871E745
NETWORK::_0x5AE17C6B0134B7F1();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5b8ed3db018927b1' func='yes'>
			<Overload retVal='void' descr='// 0x5B8ED3DB018927B1
// 0x6EFC2FD0
NETWORK::_0x5B8ED3DB018927B1(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5c497525f803486b' func='yes'>
			<Overload retVal='void' descr='// 0x5C497525F803486B
NETWORK::_0x5C497525F803486B();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5c707a667df8b9fa' func='yes'>
			<Overload retVal='void' descr='// 0x5C707A667DF8B9FA
// 0x64235620
NETWORK::_0x5C707A667DF8B9FA(BOOL p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5cae833b0ee0c500' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5CAE833B0EE0C500
// 0x0D4F845D
NETWORK::_0x5CAE833B0EE0C500(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5d10b3795f3fc886' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5D10B3795F3FC886
// 0x0B739F53
NETWORK::_0x5D10B3795F3FC886();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5dc577201723960a' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5DC577201723960A
NETWORK::_0x5DC577201723960A();
----------------------------------------------------------------------------------------------------
```

NETWORK_IS_TRANSITION_???  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5e0165278f6339ee' func='yes'>
			<Overload retVal='Any' descr='// 0x5E0165278F6339EE
// 0x1C4F9FDB
NETWORK::_0x5E0165278F6339EE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5e24341a7f92a74b' func='yes'>
			<Overload retVal='Any' descr='// 0x5E24341A7F92A74B
// 0xE69E8D0D
NETWORK::_0x5E24341A7F92A74B();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5e3aa4ca2b6fb0ee' func='yes'>
			<Overload retVal='void' descr='// 0x5E3AA4CA2B6FB0EE
// 0x7BBEA8CF
NETWORK::_0x5E3AA4CA2B6FB0EE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5ea784d197556507' func='yes'>
			<Overload retVal='Any' descr='// 0x5EA784D197556507
NETWORK::_0x5EA784D197556507();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5ecd378ee64450ab' func='yes'>
			<Overload retVal='void' descr='// 0x5ECD378EE64450AB
NETWORK::_0x5ECD378EE64450AB(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x600f8cb31c7aab6e' func='yes'>
			<Overload retVal='void' descr='// 0x600F8CB31C7AAB6E
// 0x959E43A3
NETWORK::_0x600F8CB31C7AAB6E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x606e4d3e3cccf3eb' func='yes'>
			<Overload retVal='Any' descr='// 0x606E4D3E3CCCF3EB
// 0x424C6E27
NETWORK::_0x606E4D3E3CCCF3EB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x60edd13eb3ac1ff3' func='yes'>
			<Overload retVal='Any' descr='// 0x60EDD13EB3AC1FF3
// 0x4DEBC227
NETWORK::_0x60EDD13EB3AC1FF3();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x617f49c2668e6155' func='yes'>
			<Overload retVal='Any' descr='// 0x617F49C2668E6155
NETWORK::_0x617F49C2668E6155();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x61a885d3f7cfee9a' func='yes'>
			<Overload retVal='void' descr='// 0x61A885D3F7CFEE9A
// 0xE13C1F7F
NETWORK::_0x61A885D3F7CFEE9A();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x62a0296c1bb1ceb3' func='yes'>
			<Overload retVal='Any' descr='// 0x62A0296C1BB1CEB3
// 0x0907A6BF
NETWORK::_0x62A0296C1BB1CEB3();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x631dc5dff4b110e3' func='yes'>
			<Overload retVal='BOOL' descr='// 0x631DC5DFF4B110E3
NETWORK::_0x631DC5DFF4B110E3(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x638a3a81733086db' func='yes'>
			<Overload retVal='int' descr='// 0x638A3A81733086DB
// 0xDB8B5D71
NETWORK::_0x638A3A81733086DB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x63b406d7884bfa95' func='yes'>
			<Overload retVal='Any' descr='// 0x63B406D7884BFA95
// 0xF79FFF3C
NETWORK::_0x63B406D7884BFA95();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x64d779659bc37b19' func='yes'>
			<Overload retVal='Vector3' descr='// 0x64D779659BC37B19
NETWORK::_0x64D779659BC37B19(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x64f62afb081e260d' func='yes'>
			<Overload retVal='void' descr='// 0x64F62AFB081E260D
// 0xA71A1D2A
NETWORK::_0x64F62AFB081E260D();
----------------------------------------------------------------------------------------------------
```

this is lightly associated with the 2 above meaning it accesses a variable that them 2 access also  


```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6512765e3be78c50' func='yes'>
			<Overload retVal='Any' descr='// 0x6512765E3BE78C50
NETWORK::_0x6512765E3BE78C50();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x658500ae6d723a7e' func='yes'>
			<Overload retVal='void' descr='// 0x658500AE6D723A7E
NETWORK::_0x658500AE6D723A7E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x659cf2ef7f550c4f' func='yes'>
			<Overload retVal='Any' descr='// 0x659CF2EF7F550C4F
NETWORK::_0x659CF2EF7F550C4F();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x662635855957c411' func='yes'>
			<Overload retVal='Any' descr='// 0x662635855957C411
// 0x4ACF110C
NETWORK::_0x662635855957C411(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x66b59cffd78467af' func='yes'>
			<Overload retVal='Any' descr='// 0x66B59CFFD78467AF
// 0x0CA1167F
NETWORK::_0x66B59CFFD78467AF();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x66f010a4b031a331' func='yes'>
			<Overload retVal='void' descr='// 0x66F010A4B031A331
NETWORK::_0x66F010A4B031A331(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x678bb03c1a3bd51e' func='yes'>
			<Overload retVal='BOOL' descr='// 0x678BB03C1A3BD51E
// 0x67E74842
NETWORK::_0x678BB03C1A3BD51E(Any p0, Any p1, Any p2, Any* p3, Any* p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any* p3' />
				<Param name='Any* p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x67a5589628e0cff6' func='yes'>
			<Overload retVal='BOOL' descr='// 0x67A5589628E0CFF6
// 0x66EC713F
NETWORK::_0x67A5589628E0CFF6();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x67fc09bc554a75e5' func='yes'>
			<Overload retVal='Any' descr='// 0x67FC09BC554A75E5
NETWORK::_0x67FC09BC554A75E5();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x68103e2247887242' func='yes'>
			<Overload retVal='void' descr='// 0x68103E2247887242
// 0x0095DB71
NETWORK::_0x68103E2247887242();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x692d58df40657e8c' func='yes'>
			<Overload retVal='BOOL' descr='// 0x692D58DF40657E8C
NETWORK::_0x692D58DF40657E8C(Any p0, Any p1, Any p2, Any* p3, Any p4, BOOL p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any* p3' />
				<Param name='Any p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x697f508861875b42' func='yes'>
			<Overload retVal='Any' descr='// 0x697F508861875B42
NETWORK::_0x697F508861875B42(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6a5d89d7769a40d8' func='yes'>
			<Overload retVal='void' descr='// 0x6A5D89D7769A40D8
// 0x4FFEFE43
NETWORK::_0x6A5D89D7769A40D8(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Called in freemode related scripts but not freemode itself.  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6bff5f84102df80a' func='yes'>
			<Overload retVal='void' descr='// 0x6BFF5F84102DF80A
NETWORK::_0x6BFF5F84102DF80A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6c34f1208b8923fd' func='yes'>
			<Overload retVal='Any' descr='// 0x6C34F1208B8923FD
// 0x03287FD2
NETWORK::_0x6C34F1208B8923FD(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6ce50e47f5543d0c' func='yes'>
			<Overload retVal='void' descr='// 0x6CE50E47F5543D0C
NETWORK::_0x6CE50E47F5543D0C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6d4cb481fac835e8' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6D4CB481FAC835E8
// 0x40CF0783
NETWORK::_0x6D4CB481FAC835E8(Any p0, Any p1, Any* p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6f44cbf56d79fac0' func='yes'>
			<Overload retVal='Any' descr='// 0x6F44CBF56D79FAC0
// 0x16E53875
NETWORK::_0x6F44CBF56D79FAC0(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6f697a66ce78674e' func='yes'>
			<Overload retVal='void' descr='// 0x6F697A66CE78674E
// 0xC8CC9E75
NETWORK::_0x6F697A66CE78674E(int team, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int team' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6fb7bb3607d27fa2' func='yes'>
			<Overload retVal='Any' descr='// 0x6FB7BB3607D27FA2
NETWORK::_0x6FB7BB3607D27FA2();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x702bc4d605522539' func='yes'>
			<Overload retVal='void' descr='// 0x702BC4D605522539
// 0x913FD7D6
NETWORK::_0x702BC4D605522539(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x703f12425eca8bf5' func='yes'>
			<Overload retVal='Any' descr='// 0x703F12425ECA8BF5
// 0xB9137BA7
NETWORK::_0x703F12425ECA8BF5(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x70ea8da57840f9be' func='yes'>
			<Overload retVal='BOOL' descr='// 0x70EA8DA57840F9BE
// 0x11DC0F27
NETWORK::_0x70EA8DA57840F9BE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x71302ec70689052a' func='yes'>
			<Overload retVal='Any' descr='// 0x71302EC70689052A
NETWORK::_0x71302EC70689052A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x715135f4b82ac90d' func='yes'>
			<Overload retVal='void' descr='// 0x715135F4B82AC90D
// 0xCEAE5AFC
NETWORK::_0x715135F4B82AC90D(Entity entity);
----------------------------------------------------------------------------------------------------
```

Used in am_mp_property_ext and am_mp_property_int  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x71dc455f5cd1c2b1' func='yes'>
			<Overload retVal='Any' descr='// 0x71DC455F5CD1C2B1
NETWORK::_0x71DC455F5CD1C2B1(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x722f5d28b61c5ea8' func='yes'>
			<Overload retVal='Any' descr='// 0x722F5D28B61C5EA8
// 0x44A58B0A
NETWORK::_0x722F5D28B61C5EA8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7242f8b741ce1086' func='yes'>
			<Overload retVal='Any' descr='// 0x7242F8B741CE1086
NETWORK::_0x7242F8B741CE1086(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x728c4cc7920cd102' func='yes'>
			<Overload retVal='Any' descr='// 0x728C4CC7920CD102
// 0x4677C656
NETWORK::_0x728C4CC7920CD102(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x72d0706cd6ccdb58' func='yes'>
			<Overload retVal='void' descr='// 0x72D0706CD6CCDB58
// 0xCA7A0A49
NETWORK::_0x72D0706CD6CCDB58();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x72d918c99bcacc54' func='yes'>
			<Overload retVal='BOOL' descr='// 0x72D918C99BCACC54
// 0x1F88819D
NETWORK::_0x72D918C99BCACC54(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x741a3d8380319a81' func='yes'>
			<Overload retVal='void' descr='// 0x741A3D8380319A81
// 0x331D9A27
NETWORK::_0x741A3D8380319A81();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x742b58f723233ed9' func='yes'>
			<Overload retVal='Any' descr='// 0x742B58F723233ED9
// 0x5E832444
NETWORK::_0x742B58F723233ED9(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x74698374c45701d2' func='yes'>
			<Overload retVal='Any' descr='// 0x74698374C45701D2
// 0x70ED476A
NETWORK::_0x74698374C45701D2();
----------------------------------------------------------------------------------------------------
```

NETWORK_IS_*  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x74fb3e29e6d10fa9' func='yes'>
			<Overload retVal='Any' descr='// 0x74FB3E29E6D10FA9
NETWORK::_0x74FB3E29E6D10FA9();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7543bb439f63792b' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7543BB439F63792B
// 0x54E79E9C
NETWORK::_0x7543BB439F63792B(int* clanDesc, int bufferSize);
----------------------------------------------------------------------------------------------------
```

bufferSize is 35 in the scripts.  

```'>
				<Param name='int* clanDesc' />
				<Param name='int bufferSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x759299c5bb31d2a9' func='yes'>
			<Overload retVal='Any' descr='// 0x759299C5BB31D2A9
// 0x771FE190
NETWORK::_0x759299C5BB31D2A9(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x769951e2455e2eb5' func='yes'>
			<Overload retVal='Any' descr='// 0x769951E2455E2EB5
// 0x81BD8D3B
NETWORK::_0x769951E2455E2EB5();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x76bf03fadbf154f5' func='yes'>
			<Overload retVal='Any*' descr='// 0x76BF03FADBF154F5
NETWORK::_0x76BF03FADBF154F5();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x77758139ec9b66c7' func='yes'>
			<Overload retVal='void' descr='// 0x77758139EC9B66C7
NETWORK::_0x77758139EC9B66C7(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x77faddcbe3499df7' func='yes'>
			<Overload retVal='void' descr='// 0x77FADDCBE3499DF7
// 0x8179C48A
NETWORK::_0x77FADDCBE3499DF7(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7808619f31ff22db' func='yes'>
			<Overload retVal='Any' descr='// 0x7808619F31FF22DB
NETWORK::_0x7808619F31FF22DB();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x78321bea235fd8cd' func='yes'>
			<Overload retVal='BOOL' descr='// 0x78321BEA235FD8CD
NETWORK::_0x78321BEA235FD8CD(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x793ff272d5b365f4' func='yes'>
			<Overload retVal='Any' descr='// 0x793FF272D5B365F4
// 0xF0211AC1
NETWORK::_0x793FF272D5B365F4();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7ac752103856fb20' func='yes'>
			<Overload retVal='void' descr='// 0x7AC752103856FB20
// 0xA639DCA2
NETWORK::_0x7AC752103856FB20(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7d395ea61622e116' func='yes'>
			<Overload retVal='void' descr='// 0x7D395EA61622E116
// 0x5C05B7E1
NETWORK::_0x7D395EA61622E116(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7db53b37a2f211a0' func='yes'>
			<Overload retVal='Any' descr='// 0x7DB53B37A2F211A0
// 0x053BB329
NETWORK::_0x7DB53B37A2F211A0();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7ef7649b64d7ff10' func='yes'>
			<Overload retVal='Any' descr='// 0x7EF7649B64D7FF10
NETWORK::_0x7EF7649B64D7FF10(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7fcc39c46c3c03bd' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7FCC39C46C3C03BD
NETWORK::_0x7FCC39C46C3C03BD(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7fd2990af016795e' func='yes'>
			<Overload retVal='Any' descr='// 0x7FD2990AF016795E
// 0x38FC2EEB
NETWORK::_0x7FD2990AF016795E(Any* p0, Any* p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x815f18ad865f057f' func='yes'>
			<Overload retVal='Any' descr='// 0x815F18AD865F057F
NETWORK::_0x815F18AD865F057F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x82377b65e943f72d' func='yes'>
			<Overload retVal='BOOL' descr='// 0x82377B65E943F72D
// 0xB802B671
NETWORK::_0x82377B65E943F72D(Any p0);
----------------------------------------------------------------------------------------------------
```

&quot;GET_OBJ_ENTITY&quot; seems highly unlikely.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x82a2b386716608f1' func='yes'>
			<Overload retVal='Any' descr='// 0x82A2B386716608F1
NETWORK::_0x82A2B386716608F1();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x83660b734994124d' func='yes'>
			<Overload retVal='Any' descr='// 0x83660B734994124D
NETWORK::_0x83660B734994124D(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x838da0936a24ed4d' func='yes'>
			<Overload retVal='void' descr='// 0x838DA0936A24ED4D
NETWORK::_0x838DA0936A24ED4D(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x83f28ce49fbbffba' func='yes'>
			<Overload retVal='BOOL' descr='// 0x83F28CE49FBBFFBA
NETWORK::_0x83F28CE49FBBFFBA(Any p0, Any p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x83fe8d7229593017' func='yes'>
			<Overload retVal='void' descr='// 0x83FE8D7229593017
NETWORK::_0x83FE8D7229593017();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x855bc38818f6f684' func='yes'>
			<Overload retVal='BOOL' descr='// 0x855BC38818F6F684
// 0x60AA4AA1
NETWORK::_0x855BC38818F6F684();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x85a0ef54a500882c' func='yes'>
			<Overload retVal='BOOL' descr='// 0x85A0EF54A500882C
// 0x42BD0780
NETWORK::_0x85A0EF54A500882C(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x86e0660e4f5c956d' func='yes'>
			<Overload retVal='void' descr='// 0x86E0660E4F5C956D
// 0x3F7EDBBD
NETWORK::_0x86E0660E4F5C956D();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x87e5c46c187fe0ae' func='yes'>
			<Overload retVal='Any' descr='// 0x87E5C46C187FE0AE
// 0x3276D9D3
NETWORK::_0x87E5C46C187FE0AE(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8806cebfabd3ce05' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8806CEBFABD3CE05
// 0x7D593B4C
NETWORK::_0x8806CEBFABD3CE05(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x883d79c4071e18b3' func='yes'>
			<Overload retVal='Any' descr='// 0x883D79C4071E18B3
// 0xD32FA11F
NETWORK::_0x883D79C4071E18B3();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x88b588b41ff7868e' func='yes'>
			<Overload retVal='Any' descr='// 0x88B588B41FF7868E
NETWORK::_0x88B588B41FF7868E();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x89023fbbf9200e9f' func='yes'>
			<Overload retVal='int' descr='// 0x89023FBBF9200E9F
// 0x98AA48E5
NETWORK::_0x89023FBBF9200E9F();
----------------------------------------------------------------------------------------------------
```

Something to do with time, used in context:  

NETWORK::GET_TIME_DIFFERENCE(NETWORK::_89023FBBF9200E9F(), ... )  

sfink: returns the same value as NETWORK::GET_NETWORK_TIME in freemode.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8b0c2964ba471961' func='yes'>
			<Overload retVal='Any' descr='// 0x8B0C2964BA471961
NETWORK::_0x8B0C2964BA471961();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8b4ffc790ca131ef' func='yes'>
			<Overload retVal='Any' descr='// 0x8B4FFC790CA131EF
NETWORK::_0x8B4FFC790CA131EF(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8bd6c6dea20e82c6' func='yes'>
			<Overload retVal='Any' descr='// 0x8BD6C6DEA20E82C6
// 0x03225BA3
NETWORK::_0x8BD6C6DEA20E82C6(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8c8d2739ba44af0f' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8C8D2739BA44AF0F
NETWORK::_0x8C8D2739BA44AF0F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8f5d1ad832aeb06c' func='yes'>
			<Overload retVal='Any' descr='// 0x8F5D1AD832AEB06C
NETWORK::_0x8F5D1AD832AEB06C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x919b3c98ed8292f9' func='yes'>
			<Overload retVal='BOOL' descr='// 0x919B3C98ED8292F9
// 0xB0313590
NETWORK::_0x919B3C98ED8292F9(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x91b87c55093de351' func='yes'>
			<Overload retVal='Any' descr='// 0x91B87C55093DE351
NETWORK::_0x91B87C55093DE351();
----------------------------------------------------------------------------------------------------
```

bool?  

am_crate_drop.c  

&lt;...&gt;  

if (network::_network_are_ros_available())  

{  

	if (network::_0x91B87C55093DE351())  

&lt;..&gt;  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x941e5306bcd7c2c7' func='yes'>
			<Overload retVal='Any' descr='// 0x941E5306BCD7C2C7
// 0x3970B0DA
NETWORK::_0x941E5306BCD7C2C7();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x94538037ee44f5cf' func='yes'>
			<Overload retVal='void' descr='// 0x94538037EE44F5CF
// 0x6B97075B
NETWORK::_0x94538037EE44F5CF(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9465e683b12d3f6b' func='yes'>
			<Overload retVal='void' descr='// 0x9465E683B12D3F6B
// 0x273C6180
NETWORK::_0x9465E683B12D3F6B();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x94a8394d150b013a' func='yes'>
			<Overload retVal='Any' descr='// 0x94A8394D150B013A
// 0x08029970
NETWORK::_0x94A8394D150B013A();
----------------------------------------------------------------------------------------------------
```

NETWORK_IS_*  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9614b71f8adb982b' func='yes'>
			<Overload retVal='Any' descr='// 0x9614B71F8ADB982B
NETWORK::_0x9614B71F8ADB982B();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x966dd84fb6a46017' func='yes'>
			<Overload retVal='void' descr='// 0x966DD84FB6A46017
NETWORK::_0x966DD84FB6A46017();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x973d76aa760a6cb6' func='yes'>
			<Overload retVal='void' descr='// 0x973D76AA760A6CB6
// 0x0532DDD2
NETWORK::_0x973D76AA760A6CB6(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x993cbe59d350d225' func='yes'>
			<Overload retVal='BOOL' descr='// 0x993CBE59D350D225
// 0x0DEB3F5A
NETWORK::_0x993CBE59D350D225(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9bf438815f5d96ea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9BF438815F5D96EA
// 0xCBA7242F
NETWORK::_0x9BF438815F5D96EA(Any p0, Any p1, Any* p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
```

Gets some kind of data related to missions like the online player created races n stuff  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9d7afcbf21c51712' func='yes'>
			<Overload retVal='void' descr='// 0x9D7AFCBF21C51712
NETWORK::_0x9D7AFCBF21C51712(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9eca15adfe141431' func='yes'>
			<Overload retVal='Any' descr='// 0x9ECA15ADFE141431
NETWORK::_0x9ECA15ADFE141431();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9f6e2821885caee2' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9F6E2821885CAEE2
// 0xA6D8B798
NETWORK::_0x9F6E2821885CAEE2(Any p0, Any p1, Any p2, Any* p3, Any* p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any* p3' />
				<Param name='Any* p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9fedf86898f100e9' func='yes'>
			<Overload retVal='Any' descr='// 0x9FEDF86898F100E9
// 0x798D6C27
NETWORK::_0x9FEDF86898F100E9();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa0fa4ec6a05da44e' func='yes'>
			<Overload retVal='Any' descr='// 0xA0FA4EC6A05DA44E
NETWORK::_0xA0FA4EC6A05DA44E();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa12d3a5a3753cc23' func='yes'>
			<Overload retVal='Any' descr='// 0xA12D3A5A3753CC23
NETWORK::_0xA12D3A5A3753CC23();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa134777ff7f33331' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA134777FF7F33331
// 0x88B13CDC
NETWORK::_0xA134777FF7F33331(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa1e5e0204a6fcc70' func='yes'>
			<Overload retVal='void' descr='// 0xA1E5E0204A6FCC70
// 0x405ECA16
NETWORK::_0xA1E5E0204A6FCC70();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa2a707979fe754dc' func='yes'>
			<Overload retVal='void' descr='// 0xA2A707979FE754DC
NETWORK::_0xA2A707979FE754DC(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa2e9c1ab8a92e8cd' func='yes'>
			<Overload retVal='void' descr='// 0xA2E9C1AB8A92E8CD
NETWORK::_0xA2E9C1AB8A92E8CD(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa2f952104fc6dd4b' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA2F952104FC6DD4B
// 0x1FDC75DC
NETWORK::_0xA2F952104FC6DD4B(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa306f470d1660581' func='yes'>
			<Overload retVal='Any' descr='// 0xA306F470D1660581
NETWORK::_0xA306F470D1660581();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa699957e60d80214' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA699957E60D80214
// 0xFD261E30
NETWORK::_0xA699957E60D80214(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa72835064dd63e4c' func='yes'>
			<Overload retVal='Any' descr='// 0xA72835064DD63E4C
// 0x6A036061
NETWORK::_0xA72835064DD63E4C();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa7862bc5ed1dfd7e' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA7862BC5ED1DFD7E
// 0x37F5BD93
NETWORK::_0xA7862BC5ED1DFD7E(Any p0, Any p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa7c511fa1c5bda38' func='yes'>
			<Overload retVal='void' descr='// 0xA7C511FA1C5BDA38
NETWORK::_0xA7C511FA1C5BDA38(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa7e30de9272b6d49' func='yes'>
			<Overload retVal='void' descr='// 0xA7E30DE9272B6D49
// 0x644141C5
NETWORK::_0xA7E30DE9272B6D49(Ped ped, float x, float y, float z, float p4);
----------------------------------------------------------------------------------------------------
```

NETWORK_OVERRIDE_???  

```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa8acb6459542a8c8' func='yes'>
			<Overload retVal='Any' descr='// 0xA8ACB6459542A8C8
NETWORK::_0xA8ACB6459542A8C8();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa9240a96c74cca13' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA9240A96C74CCA13
// 0x8F6754AE
NETWORK::_0xA9240A96C74CCA13(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaa5fafcd2c5f5e47' func='yes'>
			<Overload retVal='Any' descr='// 0xAA5FAFCD2C5F5E47
NETWORK::_0xAA5FAFCD2C5F5E47();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaaa553e7dd28a457' func='yes'>
			<Overload retVal='void' descr='// 0xAAA553E7DD28A457
NETWORK::_0xAAA553E7DD28A457(BOOL p0);
----------------------------------------------------------------------------------------------------
```

console hash: 0xFD0F7EDD  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xadb57e5b663cca8b' func='yes'>
			<Overload retVal='void' descr='// 0xADB57E5B663CCA8B
// 0x92268BB5
NETWORK::_0xADB57E5B663CCA8B(Player p0, float* p1, float* p2);
----------------------------------------------------------------------------------------------------
```

gets 2 floats from the CNetGamePlayer of p0 and stores them in p1 and p2.  

Possibly waypoint?  

```'>
				<Param name='Player p0' />
				<Param name='float* p1' />
				<Param name='float* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaeab987727c5a8a4' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAEAB987727C5A8A4
// 0x9FEEAA9C
NETWORK::_0xAEAB987727C5A8A4(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaeef48cdf5b6ce7c' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAEEF48CDF5B6CE7C
// 0x2D817A5E
NETWORK::_0xAEEF48CDF5B6CE7C(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb07d3185e11657a5' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB07D3185E11657A5
// 0xEDA68956
NETWORK::_0xB07D3185E11657A5(Entity p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb13e88e655e5a3bc' func='yes'>
			<Overload retVal='void' descr='// 0xB13E88E655E5A3BC
// 0x36A5F2DA
NETWORK::_0xB13E88E655E5A3BC();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb2092a1eaa7fd45f' func='yes'>
			<Overload retVal='Any' descr='// 0xB2092A1EAA7FD45F
NETWORK::_0xB2092A1EAA7FD45F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb309ebea797e001f' func='yes'>
			<Overload retVal='Any' descr='// 0xB309EBEA797E001F
// 0x5C0AB2A9
NETWORK::_0xB309EBEA797E001F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb37e4e6a2388ca7b' func='yes'>
			<Overload retVal='Any' descr='// 0xB37E4E6A2388CA7B
// 0x755A2B3E
NETWORK::_0xB37E4E6A2388CA7B();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb4271092ca7edf48' func='yes'>
			<Overload retVal='Any' descr='// 0xB4271092CA7EDF48
// 0x1AA3A0D5
NETWORK::_0xB4271092CA7EDF48(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb57a49545ba53ce7' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB57A49545BA53CE7
NETWORK::_0xB57A49545BA53CE7(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb5d3453c98456528' func='yes'>
			<Overload retVal='Any' descr='// 0xB5D3453C98456528
NETWORK::_0xB5D3453C98456528();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb606e6cc59664972' func='yes'>
			<Overload retVal='void' descr='// 0xB606E6CC59664972
// 0x866D1B67
NETWORK::_0xB606E6CC59664972(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb746d20b17f2a229' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB746D20B17F2A229
// 0x9567392B
NETWORK::_0xB746D20B17F2A229(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb7c7f6ad6424304b' func='yes'>
			<Overload retVal='void' descr='// 0xB7C7F6AD6424304B
// 0x371BBA08
NETWORK::_0xB7C7F6AD6424304B();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba7f0b77d80a4eb7' func='yes'>
			<Overload retVal='void' descr='// 0xBA7F0B77D80A4EB7
NETWORK::_0xBA7F0B77D80A4EB7(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba96394a0eecfa65' func='yes'>
			<Overload retVal='void' descr='// 0xBA96394A0EECFA65
// 0x0D35DD93
NETWORK::_0xBA96394A0EECFA65();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba9775570db788cf' func='yes'>
			<Overload retVal='Any' descr='// 0xBA9775570DB788CF
// 0x358D1D77
NETWORK::_0xBA9775570DB788CF();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbaf6babf9e7ccc13' func='yes'>
			<Overload retVal='Any' descr='// 0xBAF6BABF9E7CCC13
// 0x744A9EA5
NETWORK::_0xBAF6BABF9E7CCC13(int p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbbdf066252829606' func='yes'>
			<Overload retVal='void' descr='// 0xBBDF066252829606
// 0x72052DB3
NETWORK::_0xBBDF066252829606(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbd0be0bfc927eac1' func='yes'>
			<Overload retVal='void' descr='// 0xBD0BE0BFC927EAC1
NETWORK::_0xBD0BE0BFC927EAC1();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbd545d44cce70597' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBD545D44CCE70597
NETWORK::_0xBD545D44CCE70597();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbdb6f89c729cf388' func='yes'>
			<Overload retVal='Any' descr='// 0xBDB6F89C729CF388
NETWORK::_0xBDB6F89C729CF388();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbec0816ff5acbcda' func='yes'>
			<Overload retVal='void' descr='// 0xBEC0816FF5ACBCDA
NETWORK::_0xBEC0816FF5ACBCDA(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbf09786a7fcab582' func='yes'>
			<Overload retVal='Any' descr='// 0xBF09786A7FCAB582
// 0xA5A0C695
NETWORK::_0xBF09786A7FCAB582(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbf22e0f32968e967' func='yes'>
			<Overload retVal='void' descr='// 0xBF22E0F32968E967
// 0x22E03AD0
NETWORK::_0xBF22E0F32968E967(Player player, BOOL p1);
----------------------------------------------------------------------------------------------------
```

respawn player  

```'>
				<Param name='Player player' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc0d2af00bcc234ca' func='yes'>
			<Overload retVal='Any' descr='// 0xC0D2AF00BCC234CA
NETWORK::_0xC0D2AF00BCC234CA();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc22912b1d85f26b1' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC22912B1D85F26B1
// 0x8570DD34
NETWORK::_0xC22912B1D85F26B1(int p0, int* p1, Vector3* p2);
----------------------------------------------------------------------------------------------------
```

Seems to return time in vector3  

```'>
				<Param name='int p0' />
				<Param name='int* p1' />
				<Param name='Vector3* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc32ea7a2f6ca7557' func='yes'>
			<Overload retVal='Any' descr='// 0xC32EA7A2F6CA7557
// 0x966C90FD
NETWORK::_0xC32EA7A2F6CA7557();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc3bfed92026a2aad' func='yes'>
			<Overload retVal='Any' descr='// 0xC3BFED92026A2AAD
NETWORK::_0xC3BFED92026A2AAD(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc42dd763159f3461' func='yes'>
			<Overload retVal='Any' descr='// 0xC42DD763159F3461
// 0xFBBAC350
NETWORK::_0xC42DD763159F3461();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc434133d9ba52777' func='yes'>
			<Overload retVal='Any' descr='// 0xC434133D9BA52777
NETWORK::_0xC434133D9BA52777(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc505036a35afd01b' func='yes'>
			<Overload retVal='void' descr='// 0xC505036A35AFD01B
// 0xA100CC97
NETWORK::_0xC505036A35AFD01B(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc55a0b40ffb1ed23' func='yes'>
			<Overload retVal='Any' descr='// 0xC55A0B40FFB1ED23
// 0x82146BE9
NETWORK::_0xC55A0B40FFB1ED23();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc571d0e77d8bbc29' func='yes'>
			<Overload retVal='Any' descr='// 0xC571D0E77D8BBC29
NETWORK::_0xC571D0E77D8BBC29();
----------------------------------------------------------------------------------------------------
```

NETWORK_IS_TRANSITION_???  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc64ded7ef0d2fe37' func='yes'>
			<Overload retVal='Any' descr='// 0xC64DED7EF0D2FE37
// 0x2B7B57B3
NETWORK::_0xC64DED7EF0D2FE37(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc7397a83f7a2a462' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC7397A83F7A2A462
NETWORK::_0xC7397A83F7A2A462(Any* p0, Any p1, BOOL p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc7abac5de675ee3b' func='yes'>
			<Overload retVal='Any' descr='// 0xC7ABAC5DE675EE3B
// 0x32A4EB22
NETWORK::_0xC7ABAC5DE675EE3B();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc7be335216b5ec7c' func='yes'>
			<Overload retVal='Any' descr='// 0xC7BE335216B5EC7C
// 0x8687E285
NETWORK::_0xC7BE335216B5EC7C();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc87e740d9f3872cc' func='yes'>
			<Overload retVal='Any' descr='// 0xC87E740D9F3872CC
// 0xC1487110
NETWORK::_0xC87E740D9F3872CC();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc9b43a33d09cada7' func='yes'>
			<Overload retVal='void' descr='// 0xC9B43A33D09CADA7
NETWORK::_0xC9B43A33D09CADA7(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xca575c391fea25cc' func='yes'>
			<Overload retVal='void' descr='// 0xCA575C391FEA25CC
// 0xE797A4B6
NETWORK::_0xCA575C391FEA25CC(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xca94551b50b4932c' func='yes'>
			<Overload retVal='Any' descr='// 0xCA94551B50B4932C
// 0x37877757
NETWORK::_0xCA94551B50B4932C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcae55f48d3d7875c' func='yes'>
			<Overload retVal='void' descr='// 0xCAE55F48D3D7875C
// 0x5BE529F7
NETWORK::_0xCAE55F48D3D7875C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcb215c4b56a7fae7' func='yes'>
			<Overload retVal='int' descr='// 0xCB215C4B56A7FAE7
// 0xD8FEC4F8
NETWORK::_0xCB215C4B56A7FAE7(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcca4318e1ab03f1f' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCCA4318E1AB03F1F
NETWORK::_0xCCA4318E1AB03F1F(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcd71a4ecab22709e' func='yes'>
			<Overload retVal='void' descr='// 0xCD71A4ECAB22709E
// 0xBC54371B
NETWORK::_0xCD71A4ECAB22709E(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcf61d4b4702ee9eb' func='yes'>
			<Overload retVal='int' descr='// 0xCF61D4B4702EE9EB
// 0xF4F13B06
NETWORK::_0xCF61D4B4702EE9EB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcfd115b373c0df63' func='yes'>
			<Overload retVal='void' descr='// 0xCFD115B373C0DF63
// 0xA19A238D
NETWORK::_0xCFD115B373C0DF63(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcfeb46dcd7d8d5eb' func='yes'>
			<Overload retVal='void' descr='// 0xCFEB46DCD7D8D5EB
// 0x1A3EA6CD
NETWORK::_0xCFEB46DCD7D8D5EB(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcfeb8af24fc1d0bb' func='yes'>
			<Overload retVal='void' descr='// 0xCFEB8AF24FC1D0BB
NETWORK::_0xCFEB8AF24FC1D0BB(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd05d1a6c74da3498' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD05D1A6C74DA3498
// 0x48CCC328
NETWORK::_0xD05D1A6C74DA3498(Any* p0, BOOL p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='BOOL p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd0a484cb2f829fbe' func='yes'>
			<Overload retVal='Any' descr='// 0xD0A484CB2F829FBE
NETWORK::_0xD0A484CB2F829FBE();
----------------------------------------------------------------------------------------------------
```

x360 Hash: 0xF637166E  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd313de83394af134' func='yes'>
			<Overload retVal='Any' descr='// 0xD313DE83394AF134
// 0x3EA9D44C
NETWORK::_0xD313DE83394AF134();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd38c4a6d047c019d' func='yes'>
			<Overload retVal='Any' descr='// 0xD38C4A6D047C019D
// 0x17CBC608
NETWORK::_0xD38C4A6D047C019D();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd39b3fff8ffdd5bf' func='yes'>
			<Overload retVal='Any' descr='// 0xD39B3FFF8FFDD5BF
// 0x51B2D848
NETWORK::_0xD39B3FFF8FFDD5BF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd53acdbef24a46e8' func='yes'>
			<Overload retVal='Any' descr='// 0xD53ACDBEF24A46E8
// 0x4908A514
NETWORK::_0xD53ACDBEF24A46E8();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd5a4b59980401588' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD5A4B59980401588
// 0x4609D596
NETWORK::_0xD5A4B59980401588(Any p0, Any p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd66c9e72b3cc4982' func='yes'>
			<Overload retVal='int' descr='// 0xD66C9E72B3CC4982
NETWORK::_0xD66C9E72B3CC4982(Any* p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd7b6c73cad419bcf' func='yes'>
			<Overload retVal='void' descr='// 0xD7B6C73CAD419BCF
NETWORK::_0xD7B6C73CAD419BCF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdeb2b99a1af1a2a6' func='yes'>
			<Overload retVal='Any' descr='// 0xDEB2B99A1AF1A2A6
NETWORK::_0xDEB2B99A1AF1A2A6(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdffa5be8381c3314' func='yes'>
			<Overload retVal='Any' descr='// 0xDFFA5BE8381C3314
NETWORK::_0xDFFA5BE8381C3314();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe0a6138401bcb837' func='yes'>
			<Overload retVal='Any' descr='// 0xE0A6138401BCB837
// 0x2DE69817
NETWORK::_0xE0A6138401BCB837();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe16aa70ce9beedc3' func='yes'>
			<Overload retVal='Any' descr='// 0xE16AA70CE9BEEDC3
NETWORK::_0xE16AA70CE9BEEDC3(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe64a3ca08dfa37a9' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE64A3CA08DFA37A9
// 0x69956127
NETWORK::_0xE64A3CA08DFA37A9(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe66c690248f11150' func='yes'>
			<Overload retVal='void' descr='// 0xE66C690248F11150
// 0x4818ACD0
NETWORK::_0xE66C690248F11150(Entity p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe6717e652b8c8d8a' func='yes'>
			<Overload retVal='void' descr='// 0xE6717E652B8C8D8A
NETWORK::_0xE6717E652B8C8D8A(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe9b99b6853181409' func='yes'>
			<Overload retVal='void' descr='// 0xE9B99B6853181409
// 0x021D5A94
NETWORK::_0xE9B99B6853181409();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xea14eef5b7cd2c30' func='yes'>
			<Overload retVal='Any' descr='// 0xEA14EEF5B7CD2C30
// 0xEEFC8A55
NETWORK::_0xEA14EEF5B7CD2C30();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xebcab9e5048434f4' func='yes'>
			<Overload retVal='Any' descr='// 0xEBCAB9E5048434F4
NETWORK::_0xEBCAB9E5048434F4();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xebefc2e77084f599' func='yes'>
			<Overload retVal='void' descr='// 0xEBEFC2E77084F599
// 0xE0C28DB5
NETWORK::_0xEBEFC2E77084F599(Any p0, char* p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

example from scripts:  

unk_0xE0C28DB5(0,Global_2398291.imm_726,1);  

that global is for ps3/xbox not pc  

no idea what this does does  

```'>
				<Param name='Any p0' />
				<Param name='char* p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xebf8284d8cadeb53' func='yes'>
			<Overload retVal='void' descr='// 0xEBF8284D8CADEB53
// 0x9773F36A
NETWORK::_0xEBF8284D8CADEB53();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xebfa8d50addc54c4' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEBFA8D50ADDC54C4
// 0xF50BC67A
NETWORK::_0xEBFA8D50ADDC54C4(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xedf7f927136c224b' func='yes'>
			<Overload retVal='Any' descr='// 0xEDF7F927136C224B
// 0xCC2356E3
NETWORK::_0xEDF7F927136C224B();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xef0912ddf7c4cb4b' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEF0912DDF7C4CB4B
// 0x132CA01E
NETWORK::_0xEF0912DDF7C4CB4B();
----------------------------------------------------------------------------------------------------
```

dont know what this native does but im storing some documentation here  

_NETWORK_VOICE_CONNECT_TO_PLAYER  

_NETWORK_GET_GAMER_STATUS  

_NETWORK_HAS_TRANSITION_INVITE_BEEN_ACKED  

_NETWORK_SEND_PRESENCE_INVITE  

_NETWORK_SEND_PRESENCE_TRANSITION_INVITE  

_NETWORK_CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE  

_NETWORK_CHECK_DATA_MANAGER_FOR_HANDLE  

_NETWORK_CAN_COMMUNICATE_WITH_GAMER  

_NETWORK_CRC_HASH_CHECK_EVENT  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf03755696450470c' func='yes'>
			<Overload retVal='void' descr='// 0xF03755696450470C
// 0x7F9B9052
NETWORK::_0xF03755696450470C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf083835b70ba9bfe' func='yes'>
			<Overload retVal='void' descr='// 0xF083835B70BA9BFE
// 0xC47352E7
NETWORK::_0xF083835B70BA9BFE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf12e6cd06c73d69e' func='yes'>
			<Overload retVal='Any' descr='// 0xF12E6CD06C73D69E
NETWORK::_0xF12E6CD06C73D69E();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf1b84178f8674195' func='yes'>
			<Overload retVal='void' descr='// 0xF1B84178F8674195
// 0x41702C8A
NETWORK::_0xF1B84178F8674195(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf1eea2dda9ffa69d' func='yes'>
			<Overload retVal='void' descr='// 0xF1EEA2DDA9FFA69D
// 0x6CC062FC
NETWORK::_0xF1EEA2DDA9FFA69D(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf287f506767cc8a9' func='yes'>
			<Overload retVal='Any' descr='// 0xF287F506767CC8A9
NETWORK::_0xF287F506767CC8A9();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf2eac213d5ea0623' func='yes'>
			<Overload retVal='Any' descr='// 0xF2EAC213D5EA0623
// 0x965EA007
NETWORK::_0xF2EAC213D5EA0623();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf45352426ff3a4f0' func='yes'>
			<Overload retVal='void' descr='// 0xF45352426FF3A4F0
// 0xF633805A
NETWORK::_0xF45352426FF3A4F0(int* clanDesc, int bufferSize, int* networkHandle);
----------------------------------------------------------------------------------------------------
```

bufferSize is 35 in the scripts.  

```'>
				<Param name='int* clanDesc' />
				<Param name='int bufferSize' />
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf46a1e03e8755980' func='yes'>
			<Overload retVal='void' descr='// 0xF46A1E03E8755980
// 0xD33AFF79
NETWORK::_0xF46A1E03E8755980(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf49abc20d8552257' func='yes'>
			<Overload retVal='void' descr='// 0xF49ABC20D8552257
// 0x454C7B67
NETWORK::_0xF49ABC20D8552257(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf53e48461b71eecb' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF53E48461B71EECB
// 0xB4668B23
NETWORK::_0xF53E48461B71EECB(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf6f4383b7c92f11a' func='yes'>
			<Overload retVal='void' descr='// 0xF6F4383B7C92F11A
NETWORK::_0xF6F4383B7C92F11A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf814fec6a19fd6e0' func='yes'>
			<Overload retVal='void' descr='// 0xF814FEC6A19FD6E0
// 0x32B7A076
NETWORK::_0xF814FEC6A19FD6E0();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf98dde0a8ed09323' func='yes'>
			<Overload retVal='void' descr='// 0xF98DDE0A8ED09323
// 0x213C6D36
NETWORK::_0xF98DDE0A8ED09323(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf9b83b77929d8863' func='yes'>
			<Overload retVal='Any' descr='// 0xF9B83B77929D8863
// 0xBEDC4503
NETWORK::_0xF9B83B77929D8863();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf9e1ccae8ba4c281' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF9E1CCAE8BA4C281
// 0x9EFBD5D1
NETWORK::_0xF9E1CCAE8BA4C281(Any p0, Any p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfa2888e3833c8e96' func='yes'>
			<Overload retVal='void' descr='// 0xFA2888E3833C8E96
// 0x7F70C15A
NETWORK::_0xFA2888E3833C8E96();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfae628f1e9adb239' func='yes'>
			<Overload retVal='void' descr='// 0xFAE628F1E9ADB239
NETWORK::_0xFAE628F1E9ADB239(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfafc23aee23868db' func='yes'>
			<Overload retVal='Any' descr='// 0xFAFC23AEE23868DB
NETWORK::_0xFAFC23AEE23868DB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfb1f9381e80fa13f' func='yes'>
			<Overload retVal='Any' descr='// 0xFB1F9381E80FA13F
// 0x0679CE71
NETWORK::_0xFB1F9381E80FA13F(int p0, Any* p1);
----------------------------------------------------------------------------------------------------
```

p0 is always 0. p1 is pointing to a global.  

```'>
				<Param name='int p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfb680d403909dc70' func='yes'>
			<Overload retVal='void' descr='// 0xFB680D403909DC70
// 0xFFB2ADA1
NETWORK::_0xFB680D403909DC70(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfb8f2a6f3df08cbe' func='yes'>
			<Overload retVal='void' descr='// 0xFB8F2A6F3DF08CBE
// 0x44BFB619
NETWORK::_0xFB8F2A6F3DF08CBE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfbc5e768c7a77a6a' func='yes'>
			<Overload retVal='Any' descr='// 0xFBC5E768C7A77A6A
// 0xCE569932
NETWORK::_0xFBC5E768C7A77A6A();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfc18db55ae19e046' func='yes'>
			<Overload retVal='void' descr='// 0xFC18DB55AE19E046
// 0xA7E36020
NETWORK::_0xFC18DB55AE19E046(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfd75dabc0957bf33' func='yes'>
			<Overload retVal='void' descr='// 0xFD75DABC0957BF33
// 0x511E6F50
NETWORK::_0xFD75DABC0957BF33(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfd8b834a8ba05048' func='yes'>
			<Overload retVal='Any' descr='// 0xFD8B834A8BA05048
// 0xC6609191
NETWORK::_0xFD8B834A8BA05048();
----------------------------------------------------------------------------------------------------
```

NETWORK_IS_IN_???  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xffe1e5b792d92b34' func='yes'>
			<Overload retVal='Any' descr='// 0xFFE1E5B792D92B34
NETWORK::_0xFFE1E5B792D92B34();
----------------------------------------------------------------------------------------------------
```

may be 0xBF21818E  

related to: NETWORK_BAIL  

NETWORK_BAIL_TRANSITION  

NETWORK_JOIN_GROUP_ACTIVITY  

NETWORK_JOIN_TRANSITION  

NETWORK_LAUNCH_TRANSITION  

NETWORK_SESSION_HOST  

NETWORK_SESSION_HOST_CLOSED  

NETWORK_SESSION_HOST_FRIENDS_ONLY  

NETWORK_SESSION_HOST_SINGLE_PLAYER  

NETWORK_SESSION_VOICE_LEAVE  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='ObjToNet' func='yes'>
			<Overload retVal='int' descr='// 0x99BFDC94A603E541
// 0x1E05F29F
NETWORK::OBJ_TO_NET(Object object);
----------------------------------------------------------------------------------------------------
```

Lets objects spawn online simply do it like this:  

int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0,
 0));  

```'>
				<Param name='Object object' />
			</Overload>
		</KeyWord>
		<KeyWord name='ParticipantId' func='yes'>
			<Overload retVal='Player' descr='// 0x90986E8876CE0A83
// 0x9C35A221
NETWORK::PARTICIPANT_ID();
----------------------------------------------------------------------------------------------------
```

Return the local Participant ID  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='ParticipantIdToInt' func='yes'>
			<Overload retVal='int' descr='// 0x57A3BDDAD8E5AA0A
// 0x907498B0
NETWORK::PARTICIPANT_ID_TO_INT();
----------------------------------------------------------------------------------------------------
```

Return the local Participant ID.  

This native is exactly the same as &apos;PARTICIPANT_ID&apos; native.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='PedToNet' func='yes'>
			<Overload retVal='int' descr='// 0x0EDEC3C276198689
// 0x86A0B759
NETWORK::PED_TO_NET(Ped ped);
----------------------------------------------------------------------------------------------------
```

gets the network id of a ped  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ReserveNetworkMissionObjects' func='yes'>
			<Overload retVal='void' descr='// 0x4E5C93BD0C32FBF8
// 0x391DF4F3
NETWORK::RESERVE_NETWORK_MISSION_OBJECTS(int amount);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='ReserveNetworkMissionPeds' func='yes'>
			<Overload retVal='void' descr='// 0xB60FEBA45333D36F
// 0x54998C37
NETWORK::RESERVE_NETWORK_MISSION_PEDS(int amount);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='ReserveNetworkMissionVehicles' func='yes'>
			<Overload retVal='void' descr='// 0x76B02E21ED27A469
// 0x5062875E
NETWORK::RESERVE_NETWORK_MISSION_VEHICLES(int amount);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBalanceAddMachine' func='yes'>
			<Overload retVal='BOOL' descr='// 0x815E5E3073DA1D67
// 0xE123C7AC
NETWORK::SET_BALANCE_ADD_MACHINE(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBalanceAddMachines' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB8322EEB38BE7C26
// 0x22C33603
NETWORK::SET_BALANCE_ADD_MACHINES(Any* p0, Any p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityLocallyInvisible' func='yes'>
			<Overload retVal='void' descr='// 0xE135A9FF3F5D05D8
// 0x51ADCC5F
NETWORK::SET_ENTITY_LOCALLY_INVISIBLE(Entity entity);
----------------------------------------------------------------------------------------------------
```

I tried using this and I see nothing happening, what is this suppose to do?  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityLocallyVisible' func='yes'>
			<Overload retVal='void' descr='// 0x241E289B5C059EDC
// 0x235A57B3
NETWORK::SET_ENTITY_LOCALLY_VISIBLE(Entity entity);
----------------------------------------------------------------------------------------------------
```

I tried using this and I see nothing happening, what is this suppose to do?  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEntityVisibleInCutscene' func='yes'>
			<Overload retVal='void' descr='// 0xE0031D3C8F36AB82
// 0xDBFB067B
NETWORK::SET_ENTITY_VISIBLE_IN_CUTSCENE(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetLocalPlayerInvisibleLocally' func='yes'>
			<Overload retVal='void' descr='// 0xE5F773C1A1D9D168
// 0x764F6222
NETWORK::SET_LOCAL_PLAYER_INVISIBLE_LOCALLY(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetLocalPlayerVisibleInCutscene' func='yes'>
			<Overload retVal='void' descr='// 0xD1065D68947E7B6E
// 0x59F3479B
NETWORK::SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE(BOOL p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetLocalPlayerVisibleLocally' func='yes'>
			<Overload retVal='void' descr='// 0x7619364C82D3BF14
// 0x324B56DB
NETWORK::SET_LOCAL_PLAYER_VISIBLE_LOCALLY(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNetworkIdCanMigrate' func='yes'>
			<Overload retVal='void' descr='// 0x299EEB23175895FC
// 0x47C8E5FF
NETWORK::SET_NETWORK_ID_CAN_MIGRATE(int netId, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Whether or not another player is allowed to take control of the entity  

```'>
				<Param name='int netId' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNetworkIdExistsOnAllMachines' func='yes'>
			<Overload retVal='void' descr='// 0xE05E81A888FA63C8
// 0x68D486B2
NETWORK::SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(int netId, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netId' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNetworkIdSyncToPlayer' func='yes'>
			<Overload retVal='void' descr='// 0xA8A024587329F36A
// 0x4D15FDB1
NETWORK::_SET_NETWORK_ID_SYNC_TO_PLAYER(int netId, Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

not tested....  

```'>
				<Param name='int netId' />
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNetworkIdVisibleInCutscene' func='yes'>
			<Overload retVal='void' descr='// 0xA6928482543022B4
// 0x199E75EF
NETWORK::SET_NETWORK_ID_VISIBLE_IN_CUTSCENE(int netId, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netId' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNetworkObjectNonContact' func='yes'>
			<Overload retVal='void' descr='// 0x6274C4712850841E
// 0xEA235081
NETWORK::_SET_NETWORK_OBJECT_NON_CONTACT(Object object, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Original put name,  

_SET_NETWORK_VEHICLE_NON_CONTACT  

However changed to &apos;object&apos; as the instances where this is called in scripts both freemode and golf 
it&apos;s only used on objects after the objects are called OBJ_TO_NET p_parachute_s (freemode) prop_golf
_ball (golf). Tho the script search was done via TU27 Xbox360 ones.  

Got my hopes up whoever put this as vehicle. I was hoping it was what R* used in non-contact races. 
 

```'>
				<Param name='Object object' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNetworkVehicleRespotTimer' func='yes'>
			<Overload retVal='void' descr='// 0xEC51713AB6EC36E8
// 0x2C30912D
NETWORK::SET_NETWORK_VEHICLE_RESPOT_TIMER(int netId, int time);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int netId' />
				<Param name='int time' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerInvisibleLocally' func='yes'>
			<Overload retVal='void' descr='// 0x12B37D54667DB0B8
// 0x18227209
NETWORK::SET_PLAYER_INVISIBLE_LOCALLY(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerVisibleLocally' func='yes'>
			<Overload retVal='void' descr='// 0xFAA10F1FAFB11AF2
// 0xBA2BB4B4
NETWORK::SET_PLAYER_VISIBLE_LOCALLY(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetStoreEnabled' func='yes'>
			<Overload retVal='void' descr='// 0x9641A9FF718E9C5E
// 0xC1F6443B
NETWORK::SET_STORE_ENABLED(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Access to the store for shark cards etc...  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShutdownAndLaunchSinglePlayerGame' func='yes'>
			<Overload retVal='void' descr='// 0x593850C16A36B692
// 0x92B7351C
NETWORK::SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME();
----------------------------------------------------------------------------------------------------
```

Starts a new singleplayer game (at the prologue).  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='TextureDownloadGetName' func='yes'>
			<Overload retVal='char*' descr='// 0x3448505B6E35262D
// 0xA40EF65A
NETWORK::TEXTURE_DOWNLOAD_GET_NAME(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='TextureDownloadHasFailed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5776ED562C134687
// 0xE4547765
NETWORK::TEXTURE_DOWNLOAD_HAS_FAILED(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='TextureDownloadRelease' func='yes'>
			<Overload retVal='void' descr='// 0x487EB90B98E9FB19
// 0xEE8D9E70
NETWORK::TEXTURE_DOWNLOAD_RELEASE(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='TextureDownloadRequest' func='yes'>
			<Overload retVal='int' descr='// 0x16160DA74A8E74A2
// 0xAD546CC3
NETWORK::TEXTURE_DOWNLOAD_REQUEST(int* PlayerHandle, char* FilePath, char* Name, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* PlayerHandle' />
				<Param name='char* FilePath' />
				<Param name='char* Name' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='UsePlayerColourInsteadOfTeamColour' func='yes'>
			<Overload retVal='void' descr='// 0x5FFE9B4144F9712F
// 0x4DD46DAE
NETWORK::USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

hash collision?  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='UsingNetworkWeapontype' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE26CCFF8094D8C74
// 0xF49C1533
NETWORK::USING_NETWORK_WEAPONTYPE(Any p0);
----------------------------------------------------------------------------------------------------
```

hash collision?  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='VehToNet' func='yes'>
			<Overload retVal='int' descr='// 0xB4C94523F023419C
// 0xF17634EB
NETWORK::VEH_TO_NET(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

calls from vehicle to net.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBuyAirstrike' func='yes'>
			<Overload retVal='void' descr='// 0x763B4BD305338F19
// 0x40470683
NETWORKCASH::NETWORK_BUY_AIRSTRIKE(int cost, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

p1 = 0 (always)  

p2 = 1 (always)  

```'>
				<Param name='int cost' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBuyBounty' func='yes'>
			<Overload retVal='void' descr='// 0x7B718E197453F2D9
// 0xCB89CBE0
NETWORKCASH::NETWORK_BUY_BOUNTY(int amount, Player victim, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
```

p1 is just an assumption. p2 was false and p3 was true.  

```'>
				<Param name='int amount' />
				<Param name='Player victim' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBuyFairgroundRide' func='yes'>
			<Overload retVal='void' descr='// 0x8A7B3952DD64D2B5
// 0xD9622D64
NETWORKCASH::NETWORK_BUY_FAIRGROUND_RIDE(int amountSpent, Any p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
```

The first parameter is the amount spent which is store in a global when this native is called. The g
lobal returns 10. Which is the price for both rides.  

The last 3 parameters are,   

2,0,1 in the am_ferriswheel.c  

1,0,1 in the am_rollercoaster.c  

```'>
				<Param name='int amountSpent' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBuyHealthcare' func='yes'>
			<Overload retVal='void' descr='// 0xD9B067E55253E3DD
// 0x832150E5
NETWORKCASH::NETWORK_BUY_HEALTHCARE(int cost, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int cost' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBuyHeliStrike' func='yes'>
			<Overload retVal='void' descr='// 0x81AA4610E3FD3A69
// 0x047547D4
NETWORKCASH::NETWORK_BUY_HELI_STRIKE(int cost, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

p1 = 0 (always)  

p2 = 1 (always)  

```'>
				<Param name='int cost' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBuyItem' func='yes'>
			<Overload retVal='void' descr='// 0xF0077C797F66A355
// 0xA07B6368
NETWORKCASH::NETWORK_BUY_ITEM(Ped player, Hash item, Any p2, Any p3, BOOL p4, char* item_name, Any p6, Any p
----------------------------------------------------------------------------------------------------
ny p8, BOOL p9);

```'>
				<Param name='Ped player' />
				<Param name='Hash item' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='BOOL p4' />
				<Param name='char* item_name' />
				<Param name='Any p6' />
				<Param name='Any p' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkBuyProperty' func='yes'>
			<Overload retVal='void' descr='// 0x650A08A280870AF6
// 0x7D479AAB
NETWORKCASH::NETWORK_BUY_PROPERTY(float propertyCost, Hash propertyName, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float propertyCost' />
				<Param name='Hash propertyName' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCanBet' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3A54E33660DED67F
// 0xE3802533
NETWORKCASH::NETWORK_CAN_BET(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCanReceivePlayerCash' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5D17BE59D2123284
// 0x41F5F10E
NETWORKCASH::NETWORK_CAN_RECEIVE_PLAYER_CASH(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkCanSpendMoney' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAB3CAA6B422164DA
// 0x5AA379D9
NETWORKCASH::NETWORK_CAN_SPEND_MONEY(Any p0, BOOL p1, BOOL p2, BOOL p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkClearCharacterWallet' func='yes'>
			<Overload retVal='void' descr='// 0xA921DED15FDF28F5
// 0x19F0C471
NETWORKCASH::NETWORK_CLEAR_CHARACTER_WALLET(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkDeleteCharacter' func='yes'>
			<Overload retVal='void' descr='// 0x05A50AF38947EB8D
// 0xA9F7E9C3
NETWORKCASH::NETWORK_DELETE_CHARACTER(int characterIndex, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So
 when you delete the character it of course wipes the wallet cash at that time. So if that was the c
ase, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);  

```'>
				<Param name='int characterIndex' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromAiTargetKill' func='yes'>
			<Overload retVal='void' descr='// 0x515B4A22E4D3C6D7
// 0x866004A8
NETWORKCASH::NETWORK_EARN_FROM_AI_TARGET_KILL(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
```

DSPORT  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromAmbientJob' func='yes'>
			<Overload retVal='void' descr='// 0xFB6DB092FBAE29E6
NETWORKCASH::_NETWORK_EARN_FROM_AMBIENT_JOB(int p0, char* p1, Any* p2);
----------------------------------------------------------------------------------------------------
```

Console Hash - 0xA14CC95D = NETWORK_EARN_FROM_AMBIENT_JOB  

Example for p1: &quot;AM_DISTRACT_COPS&quot;  

```'>
				<Param name='int p0' />
				<Param name='char* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromArmourTruck' func='yes'>
			<Overload retVal='void' descr='// 0xF514621E8EA463D0
// 0x30B3EC0A
NETWORKCASH::_NETWORK_EARN_FROM_ARMOUR_TRUCK(int amount);
----------------------------------------------------------------------------------------------------
```

For the money bags that drop a max of $40,000. Often called 40k bags.  

Most likely NETWORK_EARN_FROM_ROB***  

MONEY_EARN_JOBS  

```'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromBetting' func='yes'>
			<Overload retVal='void' descr='// 0x827A5BA1A44ACA6D
// 0xA0F7F07C
NETWORKCASH::NETWORK_EARN_FROM_BETTING(int amount, char* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromBounty' func='yes'>
			<Overload retVal='void' descr='// 0x131BB5DA15453ACF
// 0x127F2DAE
NETWORKCASH::NETWORK_EARN_FROM_BOUNTY(int amount, int* networkHandle, Any* p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
				<Param name='int* networkHandle' />
				<Param name='Any* p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromChallengeWin' func='yes'>
			<Overload retVal='void' descr='// 0x2B171E6B2F64D8DF
// 0x2BEFB6C4
NETWORKCASH::NETWORK_EARN_FROM_CHALLENGE_WIN(Any p0, Any* p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromCrateDrop' func='yes'>
			<Overload retVal='void' descr='// 0xB1CC1B9EC3007A2A
// 0xEAF04923
NETWORKCASH::NETWORK_EARN_FROM_CRATE_DROP(int amount);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromDailyObjective' func='yes'>
			<Overload retVal='void' descr='// 0x6EA318C91C1A8786
NETWORKCASH::_NETWORK_EARN_FROM_DAILY_OBJECTIVE(int p0, char* p1, int p2);
----------------------------------------------------------------------------------------------------
```

Console Hash - 0xAB6BD72F = NETWORK_EARN_FROM_DAILY_OBJECTIVE  

```'>
				<Param name='int p0' />
				<Param name='char* p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromGangPickup' func='yes'>
			<Overload retVal='void' descr='// 0xA03D4ACE0A3284CE
// 0x33C20BC4
NETWORKCASH::_NETWORK_EARN_FROM_GANG_PICKUP(int amount);
----------------------------------------------------------------------------------------------------
```

MONEY_EARN_PICKED_UP  

```'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromHoldups' func='yes'>
			<Overload retVal='void' descr='// 0x45B8154E077D9E4D
// 0xE6B90E9C
NETWORKCASH::NETWORK_EARN_FROM_HOLDUPS(int amount);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromImportExport' func='yes'>
			<Overload retVal='void' descr='// 0xF92A014A634442D6
// 0xF11FC458
NETWORKCASH::NETWORK_EARN_FROM_IMPORT_EXPORT(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromJob' func='yes'>
			<Overload retVal='void' descr='// 0xB2CC4836834E8A98
// 0x0B6997FC
NETWORKCASH::NETWORK_EARN_FROM_JOB(int amount, char* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromJobBonus' func='yes'>
			<Overload retVal='void' descr='// 0x6816FB4416760775
NETWORKCASH::_NETWORK_EARN_FROM_JOB_BONUS(Any p0, Any* p1, Any* p2);
----------------------------------------------------------------------------------------------------
```

Console Hash - 0xBEE23713 = NETWORK_EARN_FROM_JOB_BONUS  

```'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromMissionH' func='yes'>
			<Overload retVal='void' descr='// 0x61326EE6DF15B0CA
// 0x5E81F55C
NETWORKCASH::NETWORK_EARN_FROM_MISSION_H(int amount, char* heistHash);
----------------------------------------------------------------------------------------------------
```

Pretty sure this is actually a hash collision.  

It should be NETWORK_EARN_FROM_A*** or NETWORK_EARN_FROM_B***  

=============================================================  

Not a hash collision, test it for yourself when finishing heist.  

lackos; 2017.03.12  

```'>
				<Param name='int amount' />
				<Param name='char* heistHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromNotBadsport' func='yes'>
			<Overload retVal='void' descr='// 0x4337511FA8221D36
// 0xCC068380
NETWORKCASH::NETWORK_EARN_FROM_NOT_BADSPORT(int amount);
----------------------------------------------------------------------------------------------------
```

Enough007: Adds an entry in the Network Transaction Log.  

Max value for amount 2000  

```'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromPersonalVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x3F4D00167E41E0AD
// 0x96B8BEE8
NETWORKCASH::NETWORK_EARN_FROM_PERSONAL_VEHICLE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any 
----------------------------------------------------------------------------------------------------
Any p8);

```

```

Now has 9 parameters.  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any ' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromPickup' func='yes'>
			<Overload retVal='Any' descr='// 0xED1517D3AF17C698
// 0x70A0ED62
NETWORKCASH::NETWORK_EARN_FROM_PICKUP(int amount);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromProperty' func='yes'>
			<Overload retVal='void' descr='// 0x849648349D77F5C5
// 0x9BE4F7E1
NETWORKCASH::NETWORK_EARN_FROM_PROPERTY(int amount, Hash propertyName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
				<Param name='Hash propertyName' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromRockstar' func='yes'>
			<Overload retVal='void' descr='// 0x02CE1D6AC0FC73EA
// 0x5A3733CC
NETWORKCASH::NETWORK_EARN_FROM_ROCKSTAR(int amount);
----------------------------------------------------------------------------------------------------
```

This merely adds an entry in the Network Transaction Log;   

it does not grant cash to the player (on PC).  

Max value for amount is 9999999.  

```'>
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkEarnFromVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xB539BD8A4C1EECF8
// 0xF803589D
NETWORKCASH::NETWORK_EARN_FROM_VEHICLE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7);
----------------------------------------------------------------------------------------------------
```

Now has 8 params.  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetBankBalanceString' func='yes'>
			<Overload retVal='char*' descr='// 0xA6FA3979BED01B81
NETWORKCASH::_NETWORK_GET_BANK_BALANCE_STRING();
----------------------------------------------------------------------------------------------------
```

Console Hash: Probably 0xAA7EA3BD  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetVcBalance' func='yes'>
			<Overload retVal='int' descr='// 0x5CBAD97E059E1B94
// 0xADF8F882
NETWORKCASH::NETWORK_GET_VC_BALANCE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetVcBankBalance' func='yes'>
			<Overload retVal='int' descr='// 0x76EF28DA05EA395A
// 0x16184FB5
NETWORKCASH::NETWORK_GET_VC_BANK_BALANCE();
----------------------------------------------------------------------------------------------------
```

From what I can see in ida, I believe it retrieves the players online bank balance.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGetVcWalletBalance' func='yes'>
			<Overload retVal='int' descr='// 0xA40F9C2623F6A8B5
// 0x4F5B781C
NETWORKCASH::NETWORK_GET_VC_WALLET_BALANCE(int character);
----------------------------------------------------------------------------------------------------
```

From what I understand, it retrieves STAT_WALLET_BALANCE for the specified character (-1 means use M
PPLY_LAST_MP_CHAR)  

```'>
				<Param name='int character' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkGivePlayerJobshareCash' func='yes'>
			<Overload retVal='void' descr='// 0xFB18DF9CB95E0105
// 0xC6047FDB
NETWORKCASH::NETWORK_GIVE_PLAYER_JOBSHARE_CASH(int amount, int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkInitializeCash' func='yes'>
			<Overload retVal='void' descr='// 0x3DA5ECD1A56CBA6D
// 0x66DA9935
NETWORKCASH::NETWORK_INITIALIZE_CASH(int p0, int p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkMoneyCanBet' func='yes'>
			<Overload retVal='BOOL' descr='// 0x81404F3DC124FE5B
// 0x8474E6F0
NETWORKCASH::NETWORK_MONEY_CAN_BET(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPayEmployeeWage' func='yes'>
			<Overload retVal='void' descr='// 0x5FD5ED82CBBE9989
// 0xBE70849B
NETWORKCASH::NETWORK_PAY_EMPLOYEE_WAGE(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPayMatchEntryFee' func='yes'>
			<Overload retVal='void' descr='// 0x9346E14F2AF74D46
// 0x224A3488
NETWORKCASH::NETWORK_PAY_MATCH_ENTRY_FEE(int value, int* p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int value' />
				<Param name='int* p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPayUtilityBill' func='yes'>
			<Overload retVal='void' descr='// 0xAFE08B35EC0C9EAE
// 0x451A2644
NETWORKCASH::NETWORK_PAY_UTILITY_BILL(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkReceivePlayerJobshareCash' func='yes'>
			<Overload retVal='void' descr='// 0x56A3B51944C50598
// 0x4ED71C1A
NETWORKCASH::NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH(int value, int* networkHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int value' />
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkRefundCash' func='yes'>
			<Overload retVal='void' descr='// 0xF9C812CD7C46E817
// 0x07C92F21
NETWORKCASH::NETWORK_REFUND_CASH(int index, char* context, char* reason, BOOL unk);
----------------------------------------------------------------------------------------------------
```

index  

-------  

See function sub_1005 in am_boat_taxi.ysc  

context  

----------  

&quot;BACKUP_VAGOS&quot;  

&quot;BACKUP_LOST&quot;  

&quot;BACKUP_FAMILIES&quot;  

&quot;HIRE_MUGGER&quot;  

&quot;HIRE_MERCENARY&quot;  

&quot;BUY_CARDROPOFF&quot;  

&quot;HELI_PICKUP&quot;  

&quot;BOAT_PICKUP&quot;  

&quot;CLEAR_WANTED&quot;  

&quot;HEAD_2_HEAD&quot;  

&quot;CHALLENGE&quot;  

&quot;SHARE_LAST_JOB&quot;  

&quot;DEFAULT&quot;  

reason  

---------  

&quot;NOTREACHTARGET&quot;  

&quot;TARGET_ESCAPE&quot;  

&quot;DELIVERY_FAIL&quot;  

&quot;NOT_USED&quot;  

&quot;TEAM_QUIT&quot;  

&quot;SERVER_ERROR&quot;  

&quot;RECEIVE_LJ_L&quot;  

&quot;CHALLENGE_PLAYER_LEFT&quot;  

&quot;DEFAULT&quot;  

unk  

-----  

Unknown bool value  

```'>
				<Param name='int index' />
				<Param name='char* context' />
				<Param name='char* reason' />
				<Param name='BOOL unk' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentAmmoDrop' func='yes'>
			<Overload retVal='void' descr='// 0xB162DC95C0A3317B
// 0x4B643076
NETWORKCASH::NETWORK_SPENT_AMMO_DROP(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentArrestBail' func='yes'>
			<Overload retVal='void' descr='// 0x812F5488B1B2A299
// 0x5AEE2FC1
NETWORKCASH::NETWORK_SPENT_ARREST_BAIL(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentBetting' func='yes'>
			<Overload retVal='void' descr='// 0x1C436FD11FFA692F
// 0xF8A07513
NETWORKCASH::NETWORK_SPENT_BETTING(Any p0, Any p1, Any* p2, BOOL p3, BOOL p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentBoatPickup' func='yes'>
			<Overload retVal='void' descr='// 0x524EE43A37232C00
// 0xB241CABD
NETWORKCASH::NETWORK_SPENT_BOAT_PICKUP(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentBounty' func='yes'>
			<Overload retVal='void' descr='// 0x29B260B84947DFCC
// 0x3401FC96
NETWORKCASH::NETWORK_SPENT_BOUNTY(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentBullShark' func='yes'>
			<Overload retVal='void' descr='// 0xA6DD8458CE24012C
// 0xDE7D398C
NETWORKCASH::NETWORK_SPENT_BULL_SHARK(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentBuyOfftheradar' func='yes'>
			<Overload retVal='void' descr='// 0xA628A745E2275C5D
// 0x20DDCF2F
NETWORKCASH::NETWORK_SPENT_BUY_OFFTHERADAR(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentBuyPassiveMode' func='yes'>
			<Overload retVal='void' descr='// 0x6D3A430D1A809179
// 0x7E97C92C
NETWORKCASH::NETWORK_SPENT_BUY_PASSIVE_MODE(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentBuyRevealPlayers' func='yes'>
			<Overload retVal='void' descr='// 0x6E176F1B18BC0637
// 0x2F7836E2
NETWORKCASH::NETWORK_SPENT_BUY_REVEAL_PLAYERS(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentBuyWantedlevel' func='yes'>
			<Overload retVal='void' descr='// 0xE1B13771A843C4F6
// 0xE7CB4F95
NETWORKCASH::NETWORK_SPENT_BUY_WANTEDLEVEL(Any p0, Any* p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentCallPlayer' func='yes'>
			<Overload retVal='void' descr='// 0xACDE7185B374177C
// 0x1A89B5FC
NETWORKCASH::NETWORK_SPENT_CALL_PLAYER(Any p0, Any* p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentCarwash' func='yes'>
			<Overload retVal='void' descr='// 0xEC03C719DB2F4306
// 0x8283E028
NETWORKCASH::NETWORK_SPENT_CARWASH(Any p0, Any p1, Any p2, BOOL p3, BOOL p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentCashDrop' func='yes'>
			<Overload retVal='void' descr='// 0x289016EC778D60E0
// 0x87BD1D11
NETWORKCASH::NETWORK_SPENT_CASH_DROP(int amount, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentCinema' func='yes'>
			<Overload retVal='void' descr='// 0x6B38ECB05A63A685
// 0x1100CAF5
NETWORKCASH::NETWORK_SPENT_CINEMA(Any p0, Any p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentFromRockstar' func='yes'>
			<Overload retVal='void' descr='// 0x6A445B64ED7ABEB5
// 0x54198922
NETWORKCASH::NETWORK_SPENT_FROM_ROCKSTAR(int bank, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int bank' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentHeliPickup' func='yes'>
			<Overload retVal='void' descr='// 0x7BF1D73DB2ECA492
// 0x27EEBCAB
NETWORKCASH::NETWORK_SPENT_HELI_PICKUP(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentHireMercenary' func='yes'>
			<Overload retVal='void' descr='// 0xE7B80E2BF9D80BD6
// 0x99CF02C4
NETWORKCASH::NETWORK_SPENT_HIRE_MERCENARY(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentHireMugger' func='yes'>
			<Overload retVal='void' descr='// 0xE404BFB981665BF0
// 0xE792C4A5
NETWORKCASH::NETWORK_SPENT_HIRE_MUGGER(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Only used once in a script (am_contact_requests)  

p1 = 0  

p2 = 1  

```'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentHoldups' func='yes'>
			<Overload retVal='void' descr='// 0xD9B86B9872039763
// 0x1B3803B1
NETWORKCASH::NETWORK_SPENT_HOLDUPS(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentInStripclub' func='yes'>
			<Overload retVal='void' descr='// 0xEE99784E4467689C
// 0x8957038E
NETWORKCASH::NETWORK_SPENT_IN_STRIPCLUB(Any p0, BOOL p1, Any p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='Any p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentNoCops' func='yes'>
			<Overload retVal='void' descr='// 0xD5BB406F4E04019F
// 0x2E51C61C
NETWORKCASH::NETWORK_SPENT_NO_COPS(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentPayVehicleInsurancePremium' func='yes'>
			<Overload retVal='void' descr='// 0x9FF28D88C766E3E8
// 0x4E665BB2
NETWORKCASH::NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM(int amount, Hash vehicleModel, int* networkHandle, 
----------------------------------------------------------------------------------------------------
notBankrupt, BOOL hasTheMoney);

```

```

According to how I understood this in the freemode script alone,  

The first parameter is determined by a function named, func_5749 within the freemode script which ha
s a list of all the vehicles and a set price to return which some vehicles deals with globals as wel
l. So the first parameter is basically the set in stone insurance cost it&apos;s gonna charge you for tha
t specific vehicle model.  

The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the pa
remeter.  

The third parameter is the network handle as they call their little struct&lt;13&gt; func or atleast how t
he script decompiled it to look which in lamens terms just returns the network handle of the previou
s owner based on DECOR_GET_INT(vehicle, &quot;Previous_Owner&quot;).  

The fourth parameter is a bool that returns true/false depending on if your bank balance is greater 
then 0.  

The fifth and last parameter is a bool that returns true/false depending on if you have the money fo
r the car based on the cost returned by func_5749. In the freemode script eg,  

bool hasTheMoney = NETWORKCASH::_GET_BANK_BALANCE() &lt; carCost.  

```'>
				<Param name='int amount' />
				<Param name='Hash vehicleModel' />
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentPlayerHealthcare' func='yes'>
			<Overload retVal='void' descr='// 0x7C99101F7FCE2EE5
// 0x3D96A21C
NETWORKCASH::NETWORK_SPENT_PLAYER_HEALTHCARE(Any p0, Any p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentProstitutes' func='yes'>
			<Overload retVal='void' descr='// 0xB21B89501CFAC79E
// 0x78436D07
NETWORKCASH::NETWORK_SPENT_PROSTITUTES(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentRequestHeist' func='yes'>
			<Overload retVal='void' descr='// 0x9D26502BB97BFE62
NETWORKCASH::_NETWORK_SPENT_REQUEST_HEIST(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Console Hash 0xF4287778 = NETWORK_SPENT_REQUEST_HEIST  

```'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentRequestJob' func='yes'>
			<Overload retVal='void' descr='// 0x8204DA7934DF3155
// 0xD57A5125
NETWORKCASH::NETWORK_SPENT_REQUEST_JOB(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentRobbedByMugger' func='yes'>
			<Overload retVal='void' descr='// 0x995A65F15F581359
// 0xE6AAA0D5
NETWORKCASH::NETWORK_SPENT_ROBBED_BY_MUGGER(int amount, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentTaxi' func='yes'>
			<Overload retVal='void' descr='// 0x17C3A7D31EAE39F9
// 0x1F3DB3E3
NETWORKCASH::NETWORK_SPENT_TAXI(int amount, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int amount' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkSpentTelescope' func='yes'>
			<Overload retVal='void' descr='// 0x7FE61782AD94CC09
// 0xAE7FF044
NETWORKCASH::NETWORK_SPENT_TELESCOPE(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1c2473301b1c66ba' func='yes'>
			<Overload retVal='Any' descr='// 0x1C2473301B1C66BA
// 0xA27B9FE8
NETWORKCASH::_0x1C2473301B1C66BA();
----------------------------------------------------------------------------------------------------
```

NETWORK_CAN_R??? or NETWORK_CAN_S???  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6fcf8ddea146c45b' func='yes'>
			<Overload retVal='void' descr='// 0x6FCF8DDEA146C45B
// 0xB96C7ABE
NETWORKCASH::_0x6FCF8DDEA146C45B(Any p0);
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 1. Крч какая-то хуйня.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7303e27cc6532080' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7303E27CC6532080
NETWORKCASH::_0x7303E27CC6532080(Any p0, BOOL p1, BOOL p2, BOOL p3, Any* p4, Any p5);
----------------------------------------------------------------------------------------------------
```

NETWORK_CAN_R??? or NETWORK_CAN_S???  

```'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
				<Param name='Any* p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7c4fccd2e4deb394' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7C4FCCD2E4DEB394
NETWORKCASH::_0x7C4FCCD2E4DEB394();
----------------------------------------------------------------------------------------------------
```

Used for cash gifts  

Console Hash  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdc18531d7019a535' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDC18531D7019A535
NETWORKCASH::_0xDC18531D7019A535(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
```

probably 0x3461981 on console  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe154b48b68ef72bc' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE154B48B68EF72BC
// 0x531E4892
NETWORKCASH::_0xE154B48B68EF72BC(Any p0);
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 1.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe260e0bb9cd995ac' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE260E0BB9CD995AC
// 0x8F266745
NETWORKCASH::_0xE260E0BB9CD995AC(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf70efa14fe091429' func='yes'>
			<Overload retVal='Any' descr='// 0xF70EFA14FE091429
// 0x8B755993
NETWORKCASH::_0xF70EFA14FE091429(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ProcessCashGift' func='yes'>
			<Overload retVal='char*' descr='// 0x20194D48EAEC9A41
// 0xC5D8B1E9
NETWORKCASH::PROCESS_CASH_GIFT(int* p0, int* p1, char* p2);
----------------------------------------------------------------------------------------------------
```

This isn&apos;t a hash collision. It is used to give the player cash via the CASH_GIFT stats.  

```'>
				<Param name='int* p0' />
				<Param name='int* p1' />
				<Param name='char* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddDoorToSystem' func='yes'>
			<Overload retVal='void' descr='// 0x6F8838D03D1DC226
// 0x9D2D778D
OBJECT::ADD_DOOR_TO_SYSTEM(Hash doorHash, Hash modelHash, float x, float y, float z, BOOL p5, BOOL p6, 
----------------------------------------------------------------------------------------------------
p7);

```'>
				<Param name='Hash doorHash' />
				<Param name='Hash modelHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='AttachPortablePickupToPed' func='yes'>
			<Overload retVal='void' descr='// 0x8DC39368BDD57755
// 0x184F6AB3
OBJECT::ATTACH_PORTABLE_PICKUP_TO_PED(Ped ped, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateAmbientPickup' func='yes'>
			<Overload retVal='Pickup' descr='// 0x673966A0C0FD7171
// 0x17B99CE7
OBJECT::CREATE_AMBIENT_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int p4, int value,
----------------------------------------------------------------------------------------------------
h modelHash, BOOL returnHandle, BOOL p8);

```

```

Used for doing money drop  

Pickup hashes: pastebin.com/8EuSv2r1  

```'>
				<Param name='Hash pickupHash' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='int p4' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateMoneyPickups' func='yes'>
			<Overload retVal='void' descr='// 0x0589B5E791CE9B2B
// 0x36C9A5EA
OBJECT::CREATE_MONEY_PICKUPS(float x, float y, float z, int value, int amount, Hash model);
----------------------------------------------------------------------------------------------------
```

Spawns one or more money pickups.  

x: The X-component of the world position to spawn the money pickups at.  

y: The Y-component of the world position to spawn the money pickups at.  

z: The Z-component of the world position to spawn the money pickups at.  

value: The combined value of the pickups (in dollars).  

amount: The number of pickups to spawn.  

model: The model to use, or 0 for default money model.  

Example:  

CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);  

Spawns 3 spray cans that&apos;ll collectively give $1000 when picked up. (Three spray cans, each giving $
334, $334, $332 = $1000).  

==============================================  

Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be a
ble to pickup 20 - $2,000 bags. So, $40,000  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int value' />
				<Param name='int amount' />
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateObject' func='yes'>
			<Overload retVal='Object' descr='// 0x509D5878EB39E842
// 0x2F7AA05C
OBJECT::CREATE_OBJECT(Object modelHash, float x, float y, float z, BOOL isNetwork, BOOL thisScriptChe
----------------------------------------------------------------------------------------------------
BOOL dynamic);

```

```

thisScriptCheck - can be destroyed if it belongs to the calling script.  

p5 - last parameter does not mean object handle is returned  

maybe a quick view in disassembly will tell us what is actually does  

----------  

prop_tt_screenstatic (0xE2E039BC) is handled different. Not sure how yet but it I know it is.  

```'>
				<Param name='Object modelHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL isNetwork' />
				<Param name='BOOL thisScriptChe' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateObjectNoOffset' func='yes'>
			<Overload retVal='Object' descr='// 0x9A294B2138ABB884
// 0x58040420
OBJECT::CREATE_OBJECT_NO_OFFSET(Hash modelHash, float x, float y, float z, BOOL isNetwork, BOOL thisS
----------------------------------------------------------------------------------------------------
tCheck, BOOL dynamic);

```

```

thisScriptCheck - can be destroyed if it belongs to the calling script.  

p5 - does not mean object handle is returned  

maybe a quick view in disassembly will tell us what is actually does  

----------  

prop_tt_screenstatic (0xE2E039BC) is handled different. Not sure how yet but it I know it is.  

```'>
				<Param name='Hash modelHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL isNetwork' />
				<Param name='BOOL thisS' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreatePickup' func='yes'>
			<Overload retVal='Pickup' descr='// 0xFBA08C503DD5FA58
// 0x5E14DF68
OBJECT::CREATE_PICKUP(Hash pickupHash, float posX, float posY, float posZ, int p4, int value, BOOL p6
----------------------------------------------------------------------------------------------------
sh modelHash);

```

```

Pickup hashes: pastebin.com/8EuSv2r1  

```'>
				<Param name='Hash pickupHash' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='int p4' />
				<Param name='int value' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreatePickupRotate' func='yes'>
			<Overload retVal='Pickup' descr='// 0x891804727E0A98B7
// 0xF015BFE2
OBJECT::CREATE_PICKUP_ROTATE(Hash pickupHash, float posX, float posY, float posZ, float rotX, float r
----------------------------------------------------------------------------------------------------
float rotZ, int flag, int amount, Any p9, BOOL p10, Hash modelHash);

```

```

Pickup hashes: pastebin.com/8EuSv2r1  

flags:  

8 (1 &lt;&lt; 3): place on ground  

512 (1 &lt;&lt; 9): spin around  

```'>
				<Param name='Hash pickupHash' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float rotX' />
				<Param name='float r' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreatePortablePickup' func='yes'>
			<Overload retVal='Pickup' descr='// 0x2EAF1FDB2FB55698
// 0x8C886BE5
OBJECT::CREATE_PORTABLE_PICKUP(Hash pickupHash, float x, float y, float z, BOOL placeOnGround, Hash m
----------------------------------------------------------------------------------------------------
Hash);

```

```

Pickup hashes: pastebin.com/8EuSv2r1  

```'>
				<Param name='Hash pickupHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL placeOnGround' />
				<Param name='Hash m' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreatePortablePickup_2' func='yes'>
			<Overload retVal='Pickup' descr='// 0x125494B98A21AAF7
// 0x56A02502
OBJECT::_CREATE_PORTABLE_PICKUP_2(Hash pickupHash, float x, float y, float z, BOOL placeOnGround, Has
----------------------------------------------------------------------------------------------------
delHash);

```'>
				<Param name='Hash pickupHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL placeOnGround' />
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteObject' func='yes'>
			<Overload retVal='void' descr='// 0x539E0AE3E6634B9F
// 0xD6EF9DA7
OBJECT::DELETE_OBJECT(Object* object);
----------------------------------------------------------------------------------------------------
```

Deletes the specified object, then sets the handle pointed to by the pointer to NULL.  

meme.  

```'>
				<Param name='Object* object' />
			</Overload>
		</KeyWord>
		<KeyWord name='DetachPortablePickupFromPed' func='yes'>
			<Overload retVal='void' descr='// 0xCF463D1E9A0AECB1
// 0x1D094562
OBJECT::DETACH_PORTABLE_PICKUP_FROM_PED(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesDesObjectExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0x52AF537A0C5B8AAD
// 0xE08C834D
OBJECT::_DOES_DES_OBJECT_EXIST(int handle);
----------------------------------------------------------------------------------------------------
```

Returns true if a destructible object with this handle exists, false otherwise.  

```'>
				<Param name='int handle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesDoorExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC153C43EA202C8C1
// 0x5AFCD8A1
OBJECT::_DOES_DOOR_EXIST(Hash doorHash);
----------------------------------------------------------------------------------------------------
```

Example:  

if (OBJECT::_DOES_DOOR_EXIST(doorHash))  

{  

    OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);  

}  

```'>
				<Param name='Hash doorHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesObjectOfTypeExistAtCoords' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBFA48E2FF417213F
// 0x23FF2BA4
OBJECT::DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(float x, float y, float z, float radius, Hash hash, BOOL p5
----------------------------------------------------------------------------------------------------
```

```

p5 is usually 0.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Hash hash' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesPickupExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAFC1CA75AD4074D1
// 0x9C6DA0B3
OBJECT::DOES_PICKUP_EXIST(Pickup pickup);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Pickup pickup' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesPickupObjectExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD9EFB6DBF7DAAEA3
// 0xE0B32108
OBJECT::DOES_PICKUP_OBJECT_EXIST(Object pickupObject);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object pickupObject' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoorControl' func='yes'>
			<Overload retVal='void' descr='// 0x9B12F9A24FABEDB0
// 0x4E0A260B
OBJECT::_DOOR_CONTROL(Hash doorHash, float x, float y, float z, BOOL locked, float xRotMult, float yRot
----------------------------------------------------------------------------------------------------
, float zRotMult);

```

```

OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door un
locked  

OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door lo
cked  

locked simply tells the game whether or not the door is locked.  

x,y,z RotMult are multipliers that specify how fast the door/gate will rotate in degrees per second.
  

```'>
				<Param name='Hash doorHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL locked' />
				<Param name='float xRotMult' />
				<Param name='float yRot' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetClosestObjectOfType' func='yes'>
			<Overload retVal='Object' descr='// 0xE143FA2249364369
// 0x45619B33
OBJECT::GET_CLOSEST_OBJECT_OF_TYPE(float x, float y, float z, float radius, Hash modelHash, BOOL isMi
----------------------------------------------------------------------------------------------------
n, BOOL p6, BOOL p7);

```

```

Has 8 params in the latest patches.  

isMission - if true doesn&apos;t return mission objects  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Hash modelHash' />
				<Param name='BOOL isMi' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetDesObject' func='yes'>
			<Overload retVal='int' descr='// 0xB48FCED898292E52
// 0xA286DE96
OBJECT::_GET_DES_OBJECT(float x, float y, float z, float rotation, char* name);
----------------------------------------------------------------------------------------------------
```

Gets a destructible object&apos;s handle  

Example:  

OBJECT::_B48FCED898292E52(-809.9619750976562, 170.919, 75.7406997680664, 3.0, &quot;des_tvsmash&quot;);  

All found arguments for p4 starts with &quot;des_&quot; like &quot;DES_FIB_Floor&quot; and &quot;des_shipsink&quot;.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float rotation' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetDesObjectState' func='yes'>
			<Overload retVal='Any' descr='// 0x899BA936634A322E
// 0xF1B8817A
OBJECT::_GET_DES_OBJECT_STATE(int handle);
----------------------------------------------------------------------------------------------------
```

Get a destrictible object&apos;s state.  

Substract 1 to get the real state.  

See _SET_DES_OBJECT_STATE to see the different states  

For example, if the object just spawned (state 2), the native will return 3.  

```'>
				<Param name='int handle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetObjectFragmentDamageHealth' func='yes'>
			<Overload retVal='float' descr='// 0xB6FBFD079B8D0596
// 0xF0B330AD
OBJECT::GET_OBJECT_FRAGMENT_DAMAGE_HEALTH(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetObjectOffsetFromCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0x163E252DE035A133
// 0x87A42A12
OBJECT::_GET_OBJECT_OFFSET_FROM_COORDS(float xPos, float yPos, float zPos, float heading, float xOff
----------------------------------------------------------------------------------------------------
float yOffset, float zOffset);

```'>
				<Param name='float xPos' />
				<Param name='float yPos' />
				<Param name='float zPos' />
				<Param name='float heading' />
				<Param name='float xOff' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPickupCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0x225B8B35C88029B3
// 0xC2E1E2C5
OBJECT::GET_PICKUP_COORDS(Pickup pickup);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Pickup pickup' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPickupHash' func='yes'>
			<Overload retVal='Hash' descr='// 0x5EAAD83F8CFB4575
// 0x6AE36192
OBJECT::_GET_PICKUP_HASH(Pickup pickupHash);
----------------------------------------------------------------------------------------------------
```

returns pickup hash.  

```'>
				<Param name='Pickup pickupHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPickupObject' func='yes'>
			<Overload retVal='Object' descr='// 0x5099BC55630B25AE
// 0x6052E62E
OBJECT::GET_PICKUP_OBJECT(Pickup pickup);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Pickup pickup' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetSafePickupCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0x6E16BC2503FF1FF0
// 0x618B5F67
OBJECT::GET_SAFE_PICKUP_COORDS(float x, float y, float z, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetStateOfClosestDoorOfType' func='yes'>
			<Overload retVal='void' descr='// 0xEDC1A5B84AEF33FF
// 0x4B44A83D
OBJECT::GET_STATE_OF_CLOSEST_DOOR_OF_TYPE(Hash type, float x, float y, float z, BOOL* locked, float* he
----------------------------------------------------------------------------------------------------
g);

```

```

locked is 0 if no door is found  

locked is 0 if door is unlocked  

locked is 1 if door is found and unlocked.  

-------------  

the locked bool is either 0(unlocked)(false) or 1(locked)(true)  

```'>
				<Param name='Hash type' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL* locked' />
				<Param name='float* he' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeaponHashFromPickup' func='yes'>
			<Overload retVal='Hash' descr='// 0x08F96CA6C551AD51
// 0xEDD01937
OBJECT::_GET_WEAPON_HASH_FROM_PICKUP(Pickup pickupHash);
----------------------------------------------------------------------------------------------------
```

returns the weapon hash of pickup  

```'>
				<Param name='Pickup pickupHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasClosestObjectOfTypeBeenBroken' func='yes'>
			<Overload retVal='BOOL' descr='// 0x761B0E69AC4D007E
// 0x6FC0353D
OBJECT::HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN(float p0, float p1, float p2, float p3, Hash modelHash, 
----------------------------------------------------------------------------------------------------
p5);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasObjectBeenBroken' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8ABFB70C49CC43E2
// 0xFE21F891
OBJECT::HAS_OBJECT_BEEN_BROKEN(Object object);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object object' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPickupBeenCollected' func='yes'>
			<Overload retVal='BOOL' descr='// 0x80EC48E6679313F9
// 0x0BE5CCED
OBJECT::HAS_PICKUP_BEEN_COLLECTED(Pickup pickup);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Pickup pickup' />
			</Overload>
		</KeyWord>
		<KeyWord name='HighlightPlacementCoords' func='yes'>
			<Overload retVal='void' descr='// 0x3430676B11CDF21D
// 0x63B02FAD
OBJECT::_HIGHLIGHT_PLACEMENT_COORDS(float x, float y, float z, int colorIndex);
----------------------------------------------------------------------------------------------------
```

draws circular marker at pos  

-1 = none  

0 = red  

1 = green  

2 = blue  

3 = green larger  

4 = nothing  

5 = green small  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int colorIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAnyObjectNearPoint' func='yes'>
			<Overload retVal='BOOL' descr='// 0x397DC58FF00298D1
// 0xE9E46941
OBJECT::IS_ANY_OBJECT_NEAR_POINT(float x, float y, float z, float range, BOOL p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float range' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsDoorClosed' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC531EE8A1145A149
// 0x48659CD7
OBJECT::IS_DOOR_CLOSED(Hash door);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash door' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsGarageEmpty' func='yes'>
			<Overload retVal='BOOL' descr='// 0x90E47239EA1980B8
// 0xA8B37DEA
OBJECT::IS_GARAGE_EMPTY(Any garage, BOOL p1, int p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any garage' />
				<Param name='BOOL p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsObjectNearPoint' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8C90FE4B381BA60A
// 0x50A62C43
OBJECT::IS_OBJECT_NEAR_POINT(Hash objectHash, float x, float y, float z, float range);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash objectHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float range' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsObjectVisible' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8B32ACE6326A7546
// 0xF4FD8AE4
OBJECT::IS_OBJECT_VISIBLE(Object object);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object object' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPickupWithinRadius' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF9C36251F6E48E33
// 0xF139681B
OBJECT::_IS_PICKUP_WITHIN_RADIUS(Hash pickupHash, float x, float y, float z, float radius);
----------------------------------------------------------------------------------------------------
```

Pickup hashes: pastebin.com/8EuSv2r1  

```'>
				<Param name='Hash pickupHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPointInAngledArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2A70BAE8883E4C81
// 0x73BCFFDC
OBJECT::IS_POINT_IN_ANGLED_AREA(float p0, float p1, float p2, float p3, float p4, float p5, float p6, f
----------------------------------------------------------------------------------------------------
p7, float p8, float p9, BOOL p10, BOOL p11);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='MarkObjectForDeletion' func='yes'>
			<Overload retVal='void' descr='// 0xADBE4809F19F927A
// 0x2048A7DD
OBJECT::_MARK_OBJECT_FOR_DELETION(Object object);
----------------------------------------------------------------------------------------------------
```

is this like setting is as no longer needed?  

```'>
				<Param name='Object object' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x024a60deb0ea69f0' func='yes'>
			<Overload retVal='BOOL' descr='// 0x024A60DEB0EA69F0
// 0xC33ED360
OBJECT::_0x024A60DEB0EA69F0(Any p0, Player player, float p2, int p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Player player' />
				<Param name='float p2' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0378c08504160d0d' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0378C08504160D0D
OBJECT::_0x0378C08504160D0D(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x03c27e13b42a0e82' func='yes'>
			<Overload retVal='void' descr='// 0x03C27E13B42A0E82
// 0x4F44AF21
OBJECT::_0x03C27E13B42A0E82(Hash doorHash, float p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash doorHash' />
				<Param name='float p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0596843b34b95ce5' func='yes'>
			<Overload retVal='void' descr='// 0x0596843B34B95CE5
OBJECT::_0x0596843B34B95CE5(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0bf3b3bd47d79c08' func='yes'>
			<Overload retVal='void' descr='// 0x0BF3B3BD47D79C08
// 0x7EFBA039
OBJECT::_0x0BF3B3BD47D79C08(Hash hash, int p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash hash' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x11d1e53a726891fe' func='yes'>
			<Overload retVal='BOOL' descr='// 0x11D1E53A726891FE
OBJECT::_0x11D1E53A726891FE(Object object);
----------------------------------------------------------------------------------------------------
```

console hash: 0x883DAB2D  

```'>
				<Param name='Object object' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x160aa1b32f6139b8' func='yes'>
			<Overload retVal='int' descr='// 0x160AA1B32F6139B8
// 0xD42A41C2
OBJECT::_0x160AA1B32F6139B8(Hash doorHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash doorHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x163f8b586bc95f2a' func='yes'>
			<Overload retVal='Any' descr='// 0x163F8B586BC95F2A
// 0x65213FC3
OBJECT::_0x163F8B586BC95F2A(Any coords, float radius, Hash modelHash, float x, float y, float z, Vector3
----------------------------------------------------------------------------------------------------
, int p7);

```

```

only documented params  

dont know what this does.... To Be Continued...  

```'>
				<Param name='Any coords' />
				<Param name='float radius' />
				<Param name='Hash modelHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1761dc5d8471cbaa' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1761DC5D8471CBAA
// 0x41924877
OBJECT::_0x1761DC5D8471CBAA(Any p0, Player player, int p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Player player' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x190428512b240692' func='yes'>
			<Overload retVal='void' descr='// 0x190428512B240692
// 0xA565E27E
OBJECT::_0x190428512B240692(Any p0, BOOL p1, BOOL p2, BOOL p3, BOOL p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1c1b69fae509ba97' func='yes'>
			<Overload retVal='void' descr='// 0x1C1B69FAE509BA97
OBJECT::_0x1C1B69FAE509BA97(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1e3f1b1b891a2aaa' func='yes'>
			<Overload retVal='void' descr='// 0x1E3F1B1B891A2AAA
OBJECT::_0x1E3F1B1B891A2AAA(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x260ee4fdbdf4db01' func='yes'>
			<Overload retVal='float' descr='// 0x260EE4FDBDF4DB01
// 0x020497DE
OBJECT::_0x260EE4FDBDF4DB01(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x318516e02de3ece2' func='yes'>
			<Overload retVal='void' descr='// 0x318516E02DE3ECE2
// 0x9879AC51
OBJECT::_0x318516E02DE3ECE2(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x31f924b53eaddf65' func='yes'>
			<Overload retVal='void' descr='// 0x31F924B53EADDF65
// 0xDB18FA01
OBJECT::_0x31F924B53EADDF65(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x372ef6699146a1e4' func='yes'>
			<Overload retVal='BOOL' descr='// 0x372EF6699146A1E4
// 0x142C8F76
OBJECT::_0x372EF6699146A1E4(Any p0, Entity entity, float p2, int p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Entity entity' />
				<Param name='float p2' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x394cd08e31313c28' func='yes'>
			<Overload retVal='void' descr='// 0x394CD08E31313C28
OBJECT::_0x394CD08E31313C28();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x39a5fb7eaf150840' func='yes'>
			<Overload retVal='void' descr='// 0x39A5FB7EAF150840
OBJECT::_0x39A5FB7EAF150840(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3ed2b83ab2e82799' func='yes'>
			<Overload retVal='void' descr='// 0x3ED2B83AB2E82799
OBJECT::_0x3ED2B83AB2E82799(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x46494a2475701343' func='yes'>
			<Overload retVal='BOOL' descr='// 0x46494A2475701343
// 0x7DB578DD
OBJECT::_0x46494A2475701343(float p0, float p1, float p2, float p3, Hash modelHash, BOOL p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='Hash modelHash' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x46f3add1e2d5baf2' func='yes'>
			<Overload retVal='void' descr='// 0x46F3ADD1E2D5BAF2
OBJECT::_0x46F3ADD1E2D5BAF2(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4a39db43e47cf3aa' func='yes'>
			<Overload retVal='void' descr='// 0x4A39DB43E47CF3AA
// 0xE3261B35
OBJECT::_0x4A39DB43E47CF3AA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4bc2854478f3a749' func='yes'>
			<Overload retVal='int' descr='// 0x4BC2854478F3A749
// 0xD649B7E1
OBJECT::_0x4BC2854478F3A749(Hash doorHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash doorHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4d89d607cb3dd1d2' func='yes'>
			<Overload retVal='void' descr='// 0x4D89D607CB3DD1D2
// 0x19B17769
OBJECT::_0x4D89D607CB3DD1D2(Object object, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object object' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x589f80b325cc82c5' func='yes'>
			<Overload retVal='BOOL' descr='// 0x589F80B325CC82C5
// 0xE9AE494F
OBJECT::_0x589F80B325CC82C5(float p0, float p1, float p2, Any p3, Any* p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='Any p3' />
				<Param name='Any* p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x616093ec6b139dd9' func='yes'>
			<Overload retVal='void' descr='// 0x616093EC6B139DD9
// 0x7FADB4B9
OBJECT::_0x616093EC6B139DD9(Player player, Hash pickupHash, BOOL p2);
----------------------------------------------------------------------------------------------------
```

From the scripts:  

OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);  

OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);  

OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);  

OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);  

OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);  

OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);  

SET_PLAYER_P*  

```'>
				<Param name='Player player' />
				<Param name='Hash pickupHash' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x62454a641b41f3c5' func='yes'>
			<Overload retVal='void' descr='// 0x62454A641B41F3C5
OBJECT::_0x62454A641B41F3C5(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x641f272b52e2f0f8' func='yes'>
			<Overload retVal='void' descr='// 0x641F272B52E2F0F8
OBJECT::_0x641F272B52E2F0F8(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x65499865fca6e5ec' func='yes'>
			<Overload retVal='float' descr='// 0x65499865FCA6E5EC
// 0xB74C3BD7
OBJECT::_0x65499865FCA6E5EC(Hash doorHash);
----------------------------------------------------------------------------------------------------
```

possibly called:  

ADD_DOOR_EXPERIMENTAL_MATRIX  

```'>
				<Param name='Hash doorHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x66a49d021870fe88' func='yes'>
			<Overload retVal='void' descr='// 0x66A49D021870FE88
// 0x6158959E
OBJECT::_0x66A49D021870FE88();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x673ed815d6e323b7' func='yes'>
			<Overload retVal='BOOL' descr='// 0x673ED815D6E323B7
// 0x7B44D659
OBJECT::_0x673ED815D6E323B7(Any p0, BOOL p1, BOOL p2, BOOL p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x701fda1e82076ba4' func='yes'>
			<Overload retVal='void' descr='// 0x701FDA1E82076BA4
// 0xF592AD10
OBJECT::_0x701FDA1E82076BA4();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x758a5c1b3b1e1990' func='yes'>
			<Overload retVal='void' descr='// 0x758A5C1B3B1E1990
OBJECT::_0x758A5C1B3B1E1990(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x762db2d380b48d04' func='yes'>
			<Overload retVal='void' descr='// 0x762DB2D380B48D04
// 0xD1BAAFB7
OBJECT::_0x762DB2D380B48D04(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x78857fc65cadb909' func='yes'>
			<Overload retVal='void' descr='// 0x78857FC65CADB909
// 0xA3CDF152
OBJECT::_0x78857FC65CADB909(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x826d1ee4d1cafc78' func='yes'>
			<Overload retVal='void' descr='// 0x826D1EE4D1CAFC78
OBJECT::_0x826D1EE4D1CAFC78(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x858ec9fd25de04aa' func='yes'>
			<Overload retVal='void' descr='// 0x858EC9FD25DE04AA
OBJECT::_0x858EC9FD25DE04AA(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x85b6c850546fdde2' func='yes'>
			<Overload retVal='BOOL' descr='// 0x85B6C850546FDDE2
// 0x4BD59750
OBJECT::_0x85B6C850546FDDE2(Any p0, BOOL p1, BOOL p2, BOOL p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x867458251d47ccb2' func='yes'>
			<Overload retVal='void' descr='// 0x867458251D47CCB2
OBJECT::_0x867458251D47CCB2(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8881c98a31117998' func='yes'>
			<Overload retVal='void' descr='// 0x8881C98A31117998
OBJECT::_0x8881C98A31117998(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x88eaec617cd26926' func='yes'>
			<Overload retVal='void' descr='// 0x88EAEC617CD26926
// 0x3A8F1BF7
OBJECT::_0x88EAEC617CD26926(Hash p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

SET_LOCAL_PLAYER_*  

```'>
				<Param name='Hash p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8caab2bd3ea58bd4' func='yes'>
			<Overload retVal='void' descr='// 0x8CAAB2BD3EA58BD4
OBJECT::_0x8CAAB2BD3EA58BD4(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x92aefb5f6e294023' func='yes'>
			<Overload retVal='void' descr='// 0x92AEFB5F6E294023
// 0xCBB5F9B6
OBJECT::_0x92AEFB5F6E294023(Object object, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object object' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x96ee0eba0163df80' func='yes'>
			<Overload retVal='void' descr='// 0x96EE0EBA0163DF80
OBJECT::_0x96EE0EBA0163DF80(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9ba001cb45cbf627' func='yes'>
			<Overload retVal='void' descr='// 0x9BA001CB45CBF627
// 0x47531446
OBJECT::_0x9BA001CB45CBF627(Hash doorHash, float heading, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash doorHash' />
				<Param name='float heading' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa08fe5e49bdc39dd' func='yes'>
			<Overload retVal='void' descr='// 0xA08FE5E49BDC39DD
// 0x276A7807
OBJECT::_0xA08FE5E49BDC39DD(Any p0, float p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa2c1f5e92afe49ed' func='yes'>
			<Overload retVal='void' descr='// 0xA2C1F5E92AFE49ED
// 0xB241806C
OBJECT::_0xA2C1F5E92AFE49ED();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa85a21582451e951' func='yes'>
			<Overload retVal='void' descr='// 0xA85A21582451E951
// 0xF736227C
OBJECT::_0xA85A21582451E951(Hash doorHash, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash doorHash' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa90e7227a9303fa9' func='yes'>
			<Overload retVal='void' descr='// 0xA90E7227A9303FA9
OBJECT::_0xA90E7227A9303FA9(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb2d0bde54f0e8e5a' func='yes'>
			<Overload retVal='void' descr='// 0xB2D0BDE54F0E8E5A
// 0x132B6D92
OBJECT::_0xB2D0BDE54F0E8E5A(Object object, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object object' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb3eca65c7317f174' func='yes'>
			<Overload retVal='Any' descr='// 0xB3ECA65C7317F174
OBJECT::_0xB3ECA65C7317F174();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbce595371a5fbaaf' func='yes'>
			<Overload retVal='void' descr='// 0xBCE595371A5FBAAF
// 0x3A68AA46
OBJECT::_0xBCE595371A5FBAAF(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc485e07e4f0b7958' func='yes'>
			<Overload retVal='void' descr='// 0xC485E07E4F0B7958
// 0xB4A9A558
OBJECT::_0xC485E07E4F0B7958(Hash doorHash, BOOL p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash doorHash' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc6033d32241f6fb5' func='yes'>
			<Overload retVal='void' descr='// 0xC6033D32241F6FB5
// 0xF4A1A14A
OBJECT::_0xC6033D32241F6FB5(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc7f29ca00f46350e' func='yes'>
			<Overload retVal='void' descr='// 0xC7F29CA00F46350E
// 0x9BF33E41
OBJECT::_0xC7F29CA00F46350E(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd76eeef746057fd6' func='yes'>
			<Overload retVal='Any' descr='// 0xD76EEEF746057FD6
OBJECT::_0xD76EEEF746057FD6(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd9b71952f78a2640' func='yes'>
			<Overload retVal='void' descr='// 0xD9B71952F78A2640
// 0xECE58AE0
OBJECT::_0xD9B71952F78A2640(Hash doorHash, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash doorHash' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xda05194260cdcdf9' func='yes'>
			<Overload retVal='void' descr='// 0xDA05194260CDCDF9
OBJECT::_0xDA05194260CDCDF9(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdb41d07a45a6d4b7' func='yes'>
			<Overload retVal='Any' descr='// 0xDB41D07A45A6D4B7
// 0x000E92DC
OBJECT::_0xDB41D07A45A6D4B7(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdf6ca0330f2e737b' func='yes'>
			<Overload retVal='void' descr='// 0xDF6CA0330F2E737B
OBJECT::_0xDF6CA0330F2E737B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdf97cdd4fc08fd34' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDF97CDD4FC08FD34
// 0x17FF9393
OBJECT::_0xDF97CDD4FC08FD34(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe7e4c198b0185900' func='yes'>
			<Overload retVal='void' descr='// 0xE7E4C198B0185900
// 0x1E82C2AE
OBJECT::_0xE7E4C198B0185900(Object p0, Any p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object p0' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe84eb93729c5f36a' func='yes'>
			<Overload retVal='Any' descr='// 0xE84EB93729C5F36A
OBJECT::_0xE84EB93729C5F36A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xeb6f1a9b5510a5d2' func='yes'>
			<Overload retVal='void' descr='// 0xEB6F1A9B5510A5D2
// 0xAF016CC1
OBJECT::_0xEB6F1A9B5510A5D2(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf0eed5a6bc7b237a' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF0EED5A6BC7B237A
// 0x95A9AB2B
OBJECT::_0xF0EED5A6BC7B237A(Any p0, Entity entity, int p2);
----------------------------------------------------------------------------------------------------
```

IS_OBJECT_???  

```'>
				<Param name='Any p0' />
				<Param name='Entity entity' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf12e33034d887f66' func='yes'>
			<Overload retVal='Any' descr='// 0xF12E33034D887F66
OBJECT::_0xF12E33034D887F66(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf2e1a7133dd356a6' func='yes'>
			<Overload retVal='void' descr='// 0xF2E1A7133DD356A6
// 0x43BB7E48
OBJECT::_0xF2E1A7133DD356A6(Hash hash, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash hash' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf92099527db8e2a7' func='yes'>
			<Overload retVal='void' descr='// 0xF92099527DB8E2A7
// 0xA7E936FD
OBJECT::_0xF92099527DB8E2A7(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf9c1681347c8bd15' func='yes'>
			<Overload retVal='void' descr='// 0xF9C1681347C8BD15
OBJECT::_0xF9C1681347C8BD15(Object object);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object object' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaceObjectOnGroundProperly' func='yes'>
			<Overload retVal='BOOL' descr='// 0x58A850EAEE20FAA3
// 0x8F95A20B
OBJECT::PLACE_OBJECT_ON_GROUND_PROPERLY(Object object);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object object' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveAllPickupsOfType' func='yes'>
			<Overload retVal='void' descr='// 0x27F9D613092159CF
// 0x40062C53
OBJECT::REMOVE_ALL_PICKUPS_OF_TYPE(Hash pickupHash);
----------------------------------------------------------------------------------------------------
```

Pickup hashes: pastebin.com/8EuSv2r1  

```'>
				<Param name='Hash pickupHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveDoorFromSystem' func='yes'>
			<Overload retVal='void' descr='// 0x464D8E1427156FE4
// 0x00253286
OBJECT::REMOVE_DOOR_FROM_SYSTEM(Hash doorHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash doorHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemovePickup' func='yes'>
			<Overload retVal='void' descr='// 0x3288D8ACAECD2AB2
// 0x64A7A0E0
OBJECT::REMOVE_PICKUP(Pickup pickup);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Pickup pickup' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetActivateObjectPhysicsAsSoonAsItIsUnfrozen' func='yes'>
			<Overload retVal='void' descr='// 0x406137F8EF90EAF5
// 0x3E263AE1
OBJECT::SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(Object object, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object object' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDesObjectState' func='yes'>
			<Overload retVal='void' descr='// 0x5C29F698D404C5E1
// 0x21F51560
OBJECT::_SET_DES_OBJECT_STATE(int handle, int state);
----------------------------------------------------------------------------------------------------
```

Defines the state of a destructible object.  

Use the &quot;0xB48FCED898292E52&quot; native to find an object&apos;s handle with its name / coords  

State 2 == object just spawned  

State 4 == Beginning of the animation  

State 6 == Start animation  

State 9 == End of the animation  

```'>
				<Param name='int handle' />
				<Param name='int state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDoorAccelerationLimit' func='yes'>
			<Overload retVal='void' descr='// 0x6BAB9442830C7F53
// 0xDF83DB47
OBJECT::_SET_DOOR_ACCELERATION_LIMIT(Hash doorHash, int limit, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
```

Sets the acceleration limit of a door.  

How fast it can open, or the inverse hinge resistance.  

A limit of 0 seems to lock doors.  

p2 is always 0, p3 is always 1.  

```'>
				<Param name='Hash doorHash' />
				<Param name='int limit' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDoorAjarAngle' func='yes'>
			<Overload retVal='void' descr='// 0xB6E6FBA95C7324AC
// 0x34883DE3
OBJECT::_SET_DOOR_AJAR_ANGLE(Hash doorHash, float ajar, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
```

Sets the ajar angle of a door.  

Ranges from -1.0 to 1.0, and 0.0 is closed / default.  

p2 is always 0, p3 is always 1.  

```'>
				<Param name='Hash doorHash' />
				<Param name='float ajar' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetForceObjectThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xF538081986E49E9D
// 0x3DA41C1A
OBJECT::SET_FORCE_OBJECT_THIS_FRAME(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetObjectColour' func='yes'>
			<Overload retVal='void' descr='// 0x3B2FD68DB5F8331C
// 0xA88C6937
OBJECT::_SET_OBJECT_COLOUR(Entity entity, Any p1, int R, int G, int B);
----------------------------------------------------------------------------------------------------
Seems to set the colour of the prop. Haven&apos;t really tested it on other props.

Only appears in am_mp_nightclub.c for the nightclub dancefloor.

Not sure what p1 does, seems to only ever be &apos;1&apos; in scripts.'>
				<Param name='Entity entity' />
				<Param name='Any p1' />
				<Param name='int R' />
				<Param name='int G' />
				<Param name='int B' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetObjectPhysicsParams' func='yes'>
			<Overload retVal='void' descr='// 0xF6DF6E90DE7DF90F
// 0xE8D11C58
OBJECT::SET_OBJECT_PHYSICS_PARAMS(Object object, float weight, float p2, float p3, float p4, float p5, 
----------------------------------------------------------------------------------------------------
t gravity, float p7, float p8, float p9, float p10, float buoyancy);

```

```

Adjust the physics parameters of a prop, or otherwise known as &quot;object&quot;. This is useful for simulate
d gravity.  

Other parameters seem to be unknown.  

p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive? 
 

p3: seems similar to p2  

p4: makes obj fall slower the higher the value  

p5: similar to p4  

```'>
				<Param name='Object object' />
				<Param name='float weight' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetObjectSomething' func='yes'>
			<Overload retVal='void' descr='// 0x77F33F2CCF64B3AA
// 0x483C5C88
OBJECT::_SET_OBJECT_SOMETHING(Object object, BOOL p1);
----------------------------------------------------------------------------------------------------
```

i don&apos;t know what this does  

```&lt;pre&gt;  

void __fastcall OBJECT___0x77F33F2CCF64B3AA_START(scrNativeCallContext *args)  

{  

  bool p2; // bl@1  

  CObject *pObject; // rax@1  

  scrNativeCallContextArgStruct *pArgs; // rax@1  

  pArgs = args-&gt;pArgs;  

  p2 = pArgs-&gt;a2.BOOL != 0;  

  pObject = getAddressOfObject(pArgs-&gt;a1.Object);  

  if ( pObject )  

  {  

    pObject-&gt;field_425 &= 0xDFu;                // 1101 1111 (clear bit 6)  

    pObject-&gt;field_425 |= 32 * p2;              // bit 6 = p2  

  }  

}  

// sfink  

// note to AB: please set &quot;white-space: pre&quot; in css  

```  

```'>
				<Param name='Object object' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetObjectTargettable' func='yes'>
			<Overload retVal='Any' descr='// 0x8A7391690F5AFD81
// 0x3F88CD86
OBJECT::SET_OBJECT_TARGETTABLE(Object object, BOOL targettable);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object object' />
				<Param name='BOOL targettable' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetObjectTextureVariant' func='yes'>
			<Overload retVal='void' descr='// 0x971DA0055324D033
OBJECT::_SET_OBJECT_TEXTURE_VARIANT(Object object, int paintIndex);
----------------------------------------------------------------------------------------------------
```

enum ObjectPaintVariants  

{  

	Pacific = 0,  

	Azure = 1,  

	Nautical = 2,  

	Continental = 3,  

	Battleship = 4,  

	Intrepid = 5,  

	Uniform = 6,  

	Classico = 7,  

	Mediterranean = 8,  

	Command = 9,  

	Mariner = 10,  

	Ruby = 11,  

	Vintage = 12,  

	Pristine = 13,  

	Merchant = 14,  

	Voyager = 15  

};  

```'>
				<Param name='Object object' />
				<Param name='int paintIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPickupRegenerationTime' func='yes'>
			<Overload retVal='void' descr='// 0x78015C9B4B3ECC9D
// 0xAB11267D
OBJECT::SET_PICKUP_REGENERATION_TIME(Pickup pickup, int duration);
----------------------------------------------------------------------------------------------------
```

duration specifies the time until the next respawn, in ms. (known values: 600000).  

Usage Example:  

Pickup pickup = OBJECT::CREATE_PICKUP_ROTATE(...);  

OBJECT::SET_PICKUP_REGENERATION_TIME(pickup, 600000); // 10mins  

```'>
				<Param name='Pickup pickup' />
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetStateOfClosestDoorOfType' func='yes'>
			<Overload retVal='void' descr='// 0xF82D8F1926A02C3D
// 0x38C951A4
OBJECT::SET_STATE_OF_CLOSEST_DOOR_OF_TYPE(Hash type, float x, float y, float z, BOOL locked, float head
----------------------------------------------------------------------------------------------------
BOOL p6);

```

```

Hardcoded to not work in multiplayer.  

Used to lock/unlock doors to interior areas of the game.  

(Possible) Door Types:  

pastebin.com/9S2m3qA4  

Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out
(-1) of the interior.  

Locked means that the heading is locked.    

p6 is always 0.   

225 door types, model names and coords found in stripclub.c4:  

pastebin.com/gywnbzsH  

get door info: pastebin.com/i14rbekD  

```'>
				<Param name='Hash type' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL locked' />
				<Param name='float head' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTeamPickupObject' func='yes'>
			<Overload retVal='void' descr='// 0x53E0DF1A2A3CF0CA
// 0x77687DC5
OBJECT::SET_TEAM_PICKUP_OBJECT(Object object, Any p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object object' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SlideObject' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2FDFF4107B8C1147
// 0x63BFA7A0
OBJECT::SLIDE_OBJECT(Object object, float toX, float toY, float toZ, float speedX, float speedY, float 
----------------------------------------------------------------------------------------------------
dZ, BOOL collision);

```

```

Returns true if the object has finished moving.  

If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and 
Z speed.  

See also: gtag.gtagaming.com/opcode-database/opcode/034E/  

```'>
				<Param name='Object object' />
				<Param name='float toX' />
				<Param name='float toY' />
				<Param name='float toZ' />
				<Param name='float speedX' />
				<Param name='float speedY' />
				<Param name='float ' />
			</Overload>
		</KeyWord>
		<KeyWord name='TrackObjectVisibility' func='yes'>
			<Overload retVal='void' descr='// 0xB252BC036B525623
// 0x46D06B9A
OBJECT::TRACK_OBJECT_VISIBILITY(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableAllControlActions' func='yes'>
			<Overload retVal='void' descr='// 0x5F4B6931816E599B
// 0x16753CF4
PAD::DISABLE_ALL_CONTROL_ACTIONS(int inputGroup);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int inputGroup' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableControlAction' func='yes'>
			<Overload retVal='void' descr='// 0xFE99B66D079CF6BC
// 0x3800C0DC
PAD::DISABLE_CONTROL_ACTION(int inputGroup, int control, BOOL disable);
----------------------------------------------------------------------------------------------------
```

control values and meaning: github.com/crosire/scripthookvdotnet/blob/dev_v3/source/scripting/Contro
ls.cs  

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

Control values from the decompiled scripts: 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,
22,23,24,25,26,27,  

28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,5  

4,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,  

79,80,81,82,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,105,  

107,108,109,110,111,112,113,114,115,116,117,118,119,123,126,129,130,131,132,  

133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,  

153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172  

,177,187,188,189,190,195,196,199,200,201,202,203,205,207,208,209,211,212,213, 217,219,220,221,225,22
6,230,234,235,236,237,238,239,240,241,242,243,244,257,  

261,262,263,264,265,270,271,272,273,274,278,279,280,281,282,283,284,285,286,  

287,288,289,337.  

Example: CONTROLS::DISABLE_CONTROL_ACTION(2, 19, true) disables the switching UI from appearing both
 when using a keyboard and Xbox 360 controller. Needs to be executed each frame.   

Control group 1 and 0 gives the same results as 2. Same results for all players.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
				<Param name='BOOL disable' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableInputGroup' func='yes'>
			<Overload retVal='void' descr='// 0x7F4724035FDCA1DD
// 0x2CEDE6C5
PAD::_DISABLE_INPUT_GROUP(int inputGroup);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int inputGroup' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableAllControlActions' func='yes'>
			<Overload retVal='void' descr='// 0xA5FFE9B05F199DE7
// 0xFC2F119F
PAD::ENABLE_ALL_CONTROL_ACTIONS(int inputGroup);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int inputGroup' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableControlAction' func='yes'>
			<Overload retVal='void' descr='// 0x351220255D64C155
// 0xD2753551
PAD::ENABLE_CONTROL_ACTION(int inputGroup, int control, BOOL enable);
----------------------------------------------------------------------------------------------------
```

control values and meaning: github.com/crosire/scripthookvdotnet/blob/dev_v3/source/scripting/Contro
l.cs  

and  

wiki.fivem.net/wiki/Controls  

0, 1 and 2 used in the scripts.  

Control values from the decompiled scripts:   

0,1,2,3,4,5,6,8,9,10,11,14,15,16,17,19,21,22,24,25,26,30,31,32,33,34,35,36,  

37,44,46,47,59,60,65,68,69,70,71,72,73,74,75,76,79,80,81,82,86,95,98,99,100  

,101,114,140,141,143,172,173,174,175,176,177,178,179,180,181,187,188,189,19  

0,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,217,218,219,2  

20,221,225,228,229,230,231,234,235,236,237,238,239,240,241,242,245,246,257,  

261,262,263,264,286,287,288,289,337,338,339,340,341,342,343  

INPUTGROUP_MOVE  

INPUTGROUP_LOOK  

INPUTGROUP_WHEEL  

INPUTGROUP_CELLPHONE_NAVIGATE  

INPUTGROUP_CELLPHONE_NAVIGATE_UD  

INPUTGROUP_CELLPHONE_NAVIGATE_LR  

INPUTGROUP_FRONTEND_DPAD_ALL  

INPUTGROUP_FRONTEND_DPAD_UD  

INPUTGROUP_FRONTEND_DPAD_LR  

INPUTGROUP_FRONTEND_LSTICK_ALL  

INPUTGROUP_FRONTEND_RSTICK_ALL  

INPUTGROUP_FRONTEND_GENERIC_UD  

INPUTGROUP_FRONTEND_GENERIC_LR  

INPUTGROUP_FRONTEND_GENERIC_ALL  

INPUTGROUP_FRONTEND_BUMPERS  

INPUTGROUP_FRONTEND_TRIGGERS  

INPUTGROUP_FRONTEND_STICKS  

INPUTGROUP_SCRIPT_DPAD_ALL  

INPUTGROUP_SCRIPT_DPAD_UD  

INPUTGROUP_SCRIPT_DPAD_LR  

INPUTGROUP_SCRIPT_LSTICK_ALL  

INPUTGROUP_SCRIPT_RSTICK_ALL  

INPUTGROUP_SCRIPT_BUMPERS  

INPUTGROUP_SCRIPT_TRIGGERS  

INPUTGROUP_WEAPON_WHEEL_CYCLE  

INPUTGROUP_FLY  

INPUTGROUP_SUB  

INPUTGROUP_VEH_MOVE_ALL  

INPUTGROUP_CURSOR  

INPUTGROUP_CURSOR_SCROLL  

INPUTGROUP_SNIPER_ZOOM_SECONDARY  

INPUTGROUP_VEH_HYDRAULICS_CONTROL  

Took those in IDA Pro.Not sure in which order they go  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
				<Param name='BOOL enable' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetControlInstructionalButton' func='yes'>
			<Overload retVal='char*' descr='// 0x0499D7B09FC9B407
// 0x3551727A
PAD::GET_CONTROL_INSTRUCTIONAL_BUTTON(int inputGroup, int control, Player p2);
----------------------------------------------------------------------------------------------------
```

formerly called _GET_CONTROL_ACTION_NAME incorrectly  

p2 appears to always be true.  

p2 is unused variable in function.  

EG:  

GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) /*INPUT_FRONTEND_ACCEPT (e.g. Enter button)*/  

GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) /*INPUT_FRONTEND_CANCEL (e.g. ESC button)*/  

GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) /*INPUT_CONTEXT (e.g. E button)*/  

gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378  

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
				<Param name='Player p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetControlNormal' func='yes'>
			<Overload retVal='float' descr='// 0xEC3C9B8D5327B563
// 0x5DE226A5
PAD::GET_CONTROL_NORMAL(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
```

Returns the value of CONTROLS::GET_CONTROL_VALUE Normalized (ie a real number value between -1 and 1
)  

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetControlValue' func='yes'>
			<Overload retVal='int' descr='// 0xD95E79E8686D2C27
// 0xC526F3C6
PAD::GET_CONTROL_VALUE(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
```

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetDisabledControlNormal' func='yes'>
			<Overload retVal='float' descr='// 0x11E65974A982637C
// 0x66FF4FAA
PAD::GET_DISABLED_CONTROL_NORMAL(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
```

control - c# works with (int)GTA.Control.CursorY / (int)GTA.Control.CursorX and returns the mouse mo
vement (additive).  

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetLocalPlayerAimState' func='yes'>
			<Overload retVal='int' descr='// 0xBB41AFBBBC0A0287
// 0x81802053
PAD::GET_LOCAL_PLAYER_AIM_STATE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsControlEnabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1CEA6BFDF248E5D9
// 0x9174AF84
PAD::IS_CONTROL_ENABLED(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
```

Control Groups:  

enum InputGroups  

{  

	INPUTGROUP_MOVE = 0,  

	INPUTGROUP_LOOK = 1,  

	INPUTGROUP_WHEEL = 2,  

	INPUTGROUP_CELLPHONE_NAVIGATE = 3,  

	INPUTGROUP_CELLPHONE_NAVIGATE_UD = 4,  

	INPUTGROUP_CELLPHONE_NAVIGATE_LR = 5,  

	INPUTGROUP_FRONTEND_DPAD_ALL = 6,  

	INPUTGROUP_FRONTEND_DPAD_UD = 7,  

	INPUTGROUP_FRONTEND_DPAD_LR = 8,  

	INPUTGROUP_FRONTEND_LSTICK_ALL = 9,  

	INPUTGROUP_FRONTEND_RSTICK_ALL = 10,  

	INPUTGROUP_FRONTEND_GENERIC_UD = 11,  

	INPUTGROUP_FRONTEND_GENERIC_LR = 12,  

	INPUTGROUP_FRONTEND_GENERIC_ALL = 13,  

	INPUTGROUP_FRONTEND_BUMPERS = 14,  

	INPUTGROUP_FRONTEND_TRIGGERS = 15,  

	INPUTGROUP_FRONTEND_STICKS = 16,  

	INPUTGROUP_SCRIPT_DPAD_ALL = 17,  

	INPUTGROUP_SCRIPT_DPAD_UD = 18,  

	INPUTGROUP_SCRIPT_DPAD_LR = 19,  

	INPUTGROUP_SCRIPT_LSTICK_ALL = 20,  

	INPUTGROUP_SCRIPT_RSTICK_ALL = 21,  

	INPUTGROUP_SCRIPT_BUMPERS = 22,  

	INPUTGROUP_SCRIPT_TRIGGERS = 23,  

	INPUTGROUP_WEAPON_WHEEL_CYCLE = 24,  

	INPUTGROUP_FLY = 25,  

	INPUTGROUP_SUB = 26,  

	INPUTGROUP_VEH_MOVE_ALL = 27,  

	INPUTGROUP_CURSOR = 28,  

	INPUTGROUP_CURSOR_SCROLL = 29,  

	INPUTGROUP_SNIPER_ZOOM_SECONDARY = 30,  

	INPUTGROUP_VEH_HYDRAULICS_CONTROL = 31,  

	MAX_INPUTGROUPS = 32,  

	INPUTGROUP_INVALID = 33  

};  

0, 1 and 2 used in the scripts.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsControlJustPressed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x580417101DDB492F
// 0x4487F579
PAD::IS_CONTROL_JUST_PRESSED(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsControlJustReleased' func='yes'>
			<Overload retVal='BOOL' descr='// 0x50F940259D3841E6
// 0x2314444B
PAD::IS_CONTROL_JUST_RELEASED(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsControlPressed' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF3A21BCD95725A4A
// 0x517A4384
PAD::IS_CONTROL_PRESSED(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
```

index always is 2 for xbox 360 controller and razerblade  

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsControlReleased' func='yes'>
			<Overload retVal='BOOL' descr='// 0x648EE3E7F38877DD
// 0x1F91A06E
PAD::IS_CONTROL_RELEASED(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
```

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsDisabledControlJustPressed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x91AEF906BCA88877
// 0xEE6ABD32
PAD::IS_DISABLED_CONTROL_JUST_PRESSED(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
```

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsDisabledControlJustReleased' func='yes'>
			<Overload retVal='BOOL' descr='// 0x305C8DCD79DA8B0F
// 0xD6A679E1
PAD::IS_DISABLED_CONTROL_JUST_RELEASED(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
```

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsDisabledControlPressed' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE2587F8CBBD87B1D
// 0x32A93544
PAD::IS_DISABLED_CONTROL_PRESSED(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
```

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsInputDisabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA571D46727E2B718
PAD::_IS_INPUT_DISABLED(int inputGroup);
----------------------------------------------------------------------------------------------------
```

Seems to return true if the input is currently disabled. &quot;_GET_LAST_INPUT_METHOD&quot; didn&apos;t seem very a
ccurate, but I&apos;ve left the original description below.  

--  

index usually 2  

returns true if the last input method was made with mouse + keyboard, false if it was made with a ga
mepad  

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_LAST_INPUT_METHOD'>
				<Param name='int inputGroup' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_LAST_INPUT_METHOD' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: IsInputDisabled' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='IsInputJustDisabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x13337B38DB572509
PAD::_IS_INPUT_JUST_DISABLED(int inputGroup);
----------------------------------------------------------------------------------------------------
```

I may be wrong with this one, but from the looks of the scripts, it sets keyboard related stuff as s
oon as this returns true.  

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsLookInverted' func='yes'>
			<Overload retVal='BOOL' descr='// 0x77B612531280010D
// 0x313434B2
PAD::IS_LOOK_INVERTED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0f70731baccfbb96' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0F70731BACCFBB96
PAD::_0x0F70731BACCFBB96();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x14d29bb12d47f68c' func='yes'>
			<Overload retVal='void' descr='// 0x14D29BB12D47F68C
PAD::_0x14D29BB12D47F68C(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x23f09eadc01449d6' func='yes'>
			<Overload retVal='BOOL' descr='// 0x23F09EADC01449D6
PAD::_0x23F09EADC01449D6(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3d42b92563939375' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3D42B92563939375
// 0xD2C80B2E
PAD::_0x3D42B92563939375(char* p0);
----------------------------------------------------------------------------------------------------
```

Used in carsteal3 script with p0 = &quot;Carsteal4_spycar&quot;.  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4683149ed1dde7a1' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4683149ED1DDE7A1
// 0xBBFC9050
PAD::_0x4683149ED1DDE7A1(char* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4f8a26a890fd62fb' func='yes'>
			<Overload retVal='float' descr='// 0x4F8A26A890FD62FB
// 0xF2A65A4C
PAD::_0x4F8A26A890FD62FB(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
```

The &quot;disabled&quot; variant of _0x5B84D09CEC5209C5.  

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x59b9a7af4c95133c' func='yes'>
			<Overload retVal='Any' descr='// 0x59B9A7AF4C95133C
PAD::_0x59B9A7AF4C95133C();
----------------------------------------------------------------------------------------------------
```

Same behavior as GET_LOCAL_PLAYER_AIM_STATE but only used on the PC version.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5b73c77d9eb66e24' func='yes'>
			<Overload retVal='void' descr='// 0x5B73C77D9EB66E24
PAD::_0x5B73C77D9EB66E24(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5b84d09cec5209c5' func='yes'>
			<Overload retVal='float' descr='// 0x5B84D09CEC5209C5
// 0xC49343BB
PAD::_0x5B84D09CEC5209C5(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
```

Seems to return values between -1 and 1 for controls like gas and steering.  

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x643ed62d5ea3bebd' func='yes'>
			<Overload retVal='void' descr='// 0x643ED62D5EA3BEBD
// 0x42140FF9
PAD::_0x643ED62D5EA3BEBD();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6cd79468a1e595c6' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6CD79468A1E595C6
PAD::_0x6CD79468A1E595C6(int inputGroup);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int inputGroup' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x80c2fd58d720c801' func='yes'>
			<Overload retVal='char*' descr='// 0x80C2FD58D720C801
// 0x3EE71F6A
PAD::_0x80C2FD58D720C801(int inputGroup, int control, BOOL p2);
----------------------------------------------------------------------------------------------------
```

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8290252fff36acb5' func='yes'>
			<Overload retVal='void' descr='// 0x8290252FFF36ACB5
PAD::_0x8290252FFF36ACB5(int p0, int red, int green, int blue);
----------------------------------------------------------------------------------------------------
```

HUD_COLOUR_CONTROLLER_CHOP = 174;  

UI::GET_HUD_COLOUR(174, &v_6, &v_7, &v_8, &v_9);  

CONTROLS::_8290252FFF36ACB5(0, v_6, v_7, v_8);  

```'>
				<Param name='int p0' />
				<Param name='int red' />
				<Param name='int green' />
				<Param name='int blue' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa0cefcea390aab9b' func='yes'>
			<Overload retVal='void' descr='// 0xA0CEFCEA390AAB9B
PAD::_0xA0CEFCEA390AAB9B(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcb0360efefb2580d' func='yes'>
			<Overload retVal='void' descr='// 0xCB0360EFEFB2580D
PAD::_0xCB0360EFEFB2580D(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd7d22f5592aed8ba' func='yes'>
			<Overload retVal='int' descr='// 0xD7D22F5592AED8BA
// 0x0E8EF929
PAD::_0xD7D22F5592AED8BA(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe1615ec03b3bb4fd' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE1615EC03B3BB4FD
PAD::_0xE1615EC03B3BB4FD();
----------------------------------------------------------------------------------------------------
```

Used with IS_LOOK_INVERTED() and negates its affect.  

--  

Not sure how the person above got that description, but here&apos;s an actual example:  

if (CONTROLS::_GET_LAST_INPUT_METHOD(2)) {  

    if (a_5) {  

        if (CONTROLS::IS_LOOK_INVERTED()) {  

            a_3 *= -1;  

        }  

        if (CONTROLS::_E1615EC03B3BB4FD()) {  

            a_3 *= -1;  

        }  

    }  

}  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf239400e16c23e08' func='yes'>
			<Overload retVal='void' descr='// 0xF239400E16C23E08
// 0x7D65EB6E
PAD::_0xF239400E16C23E08(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfb6c4072e9a32e92' func='yes'>
			<Overload retVal='Any' descr='// 0xFB6C4072E9A32E92
PAD::_0xFB6C4072E9A32E92(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfc859e2374407556' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFC859E2374407556
PAD::_0xFC859E2374407556();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetControlNormal' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE8A25867FBA3B05E
PAD::_SET_CONTROL_NORMAL(int inputGroup, int control, float amount);
----------------------------------------------------------------------------------------------------
```

This is for simulating player input.  

amount is a float value from 0   

0, 1 and 2 used in the scripts. 0 is by far the most common of them.  

```'>
				<Param name='int inputGroup' />
				<Param name='int control' />
				<Param name='float amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCursorLocation' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFC695459D4D0E219
PAD::_SET_CURSOR_LOCATION(float x, float y);
----------------------------------------------------------------------------------------------------
```

Renamed to SET_CURSOR_LOCATION (I previously named it _SET_CURSOR_POSTION) which is the correct name
 as far as I can tell.  

```'>
				<Param name='float x' />
				<Param name='float y' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetInputExclusive' func='yes'>
			<Overload retVal='void' descr='// 0xEDE476E5EE29EDB1
// 0x4E8E29E6
PAD::SET_INPUT_EXCLUSIVE(int inputGroup, int control);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int inputGroup' />
				<Param name='int control' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPadShake' func='yes'>
			<Overload retVal='void' descr='// 0x48B3886C1358D0D5
// 0x5D38BD2F
PAD::SET_PAD_SHAKE(int p0, int duration, int frequency);
----------------------------------------------------------------------------------------------------
```

p0 always seems to be 0  

duration in milliseconds   

frequency should range from about 10 (slow vibration) to 255 (very fast)  

appears to be a hash collision, though it does do what it says  

example:  

SET_PAD_SHAKE(0, 100, 200);  

```'>
				<Param name='int p0' />
				<Param name='int duration' />
				<Param name='int frequency' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerpadShakesWhenControllerDisabled' func='yes'>
			<Overload retVal='void' descr='// 0x798FDEB5B1575088
// 0xA86BD91F
PAD::SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopPadShake' func='yes'>
			<Overload retVal='void' descr='// 0x38C16A305E8CDC8D
// 0x8F75657E
PAD::STOP_PAD_SHAKE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddNavmeshBlockingObject' func='yes'>
			<Overload retVal='Any' descr='// 0xFCD5C8E06E502F5A
// 0x2952BA56
PATHFIND::ADD_NAVMESH_BLOCKING_OBJECT(float p0, float p1, float p2, float p3, float p4, float p5, float p6
----------------------------------------------------------------------------------------------------
OL p7, Any p8);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddNavmeshRequiredRegion' func='yes'>
			<Overload retVal='void' descr='// 0x387EAD7EE42F6685
// 0x12B086EA
PATHFIND::ADD_NAVMESH_REQUIRED_REGION(float x, float y, float radius);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='AreAllNavmeshRegionsLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8415D95B194A3AEA
// 0x34C4E789
PATHFIND::ARE_ALL_NAVMESH_REGIONS_LOADED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='CalculateTravelDistanceBetweenPoints' func='yes'>
			<Overload retVal='float' descr='// 0xADD95C7005C4A197
// 0xB114489B
PATHFIND::CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS(float x1, float y1, float z1, float x2, float y2, flo
----------------------------------------------------------------------------------------------------
2);

```

```

Calculates the travel distance between a set of points.  

Doesn&apos;t seem to correlate with distance on gps sometimes.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableNavmeshInArea' func='yes'>
			<Overload retVal='void' descr='// 0x4C8872D8CDBE1B8B
// 0x6E37F132
PATHFIND::DISABLE_NAVMESH_IN_AREA(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesNavmeshBlockingObjectExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0EAEB0DB4B132399
// 0x4B67D7EE
PATHFIND::DOES_NAVMESH_BLOCKING_OBJECT_EXIST(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GenerateDirectionsToCoord' func='yes'>
			<Overload retVal='int' descr='// 0xF90125F1F79ECDF8
// 0xED35C094
PATHFIND::GENERATE_DIRECTIONS_TO_COORD(float x, float y, float z, BOOL p3, float* direction, float* vehicl
----------------------------------------------------------------------------------------------------
loat* distToNxJunction);

```

```

Usage example:  

Public Function GenerateDirectionsToCoord(Pos As Vector3) As Tuple(Of String, Single, Single)  

        Dim f4, f5, f6 As New OutputArgument()  

        Native.Function.Call(Hash.GENERATE_DIRECTIONS_TO_COORD, Pos.X, Pos.Y, Pos.Z, True, f4, f5, f
6)  

        Dim direction As String = f4.GetResult(Of Single)()  

        Return New Tuple(Of String, Single, Single)(direction.Substring(0, 1), f5.GetResult(Of Singl
e)(), f6.GetResult(Of Single)())  

    End Function  

p3 I use 1  

direction:  

0 = You Have Arrive  

1 = Recalculating Route, Please make a u-turn where safe  

2 = Please Proceed the Highlighted Route  

3 = Keep Left (unsure)  

4 = In (distToNxJunction) Turn Left  

5 = In (distToNxJunction) Turn Right  

6 = Keep Right (unsure)  

7 = In (distToNxJunction) Go Straight Ahead  

8 = In (distToNxJunction) Join the freeway  

9 = In (distToNxJunction) Exit Freeway  

return value set to 0 always  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL p3' />
				<Param name='float* direction' />
				<Param name='float* vehicl' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetClosestMajorVehicleNode' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2EABE3B06F58C1BE
// 0x04B5F15B
PATHFIND::GET_CLOSEST_MAJOR_VEHICLE_NODE(float x, float y, float z, Vector3* outPosition, float unknown1,
----------------------------------------------------------------------------------------------------
unknown2);

```

```

Get the closest vehicle node to a given position, unknown1 = 3.0, unknown2 = 0  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Vector3* outPosition' />
				<Param name='float unknown1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetClosestRoad' func='yes'>
			<Overload retVal='Any' descr='// 0x132F52BBA570FE92
// 0x567B0E11
PATHFIND::GET_CLOSEST_ROAD(float x, float y, float z, float p3, int p4, Vector3* p5, Vector3* p6, Any* p7,
----------------------------------------------------------------------------------------------------
* p8, float* p9, BOOL p10);

```

```

p1 seems to be always 1.0f in the scripts  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float p3' />
				<Param name='int p4' />
				<Param name='Vector3* p5' />
				<Param name='Vector3* p6' />
				<Param name='Any* p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetClosestVehicleNode' func='yes'>
			<Overload retVal='BOOL' descr='// 0x240A18690AE96513
// 0x6F5F1E6C
PATHFIND::GET_CLOSEST_VEHICLE_NODE(float x, float y, float z, Vector3* outPosition, int nodeType, float p
----------------------------------------------------------------------------------------------------
loat p6);

```

```

FYI: When falling through the map (or however you got under it) you will respawn when your player pe
d&apos;s height is &lt;= -200.0 meters (I think you all know this) and when in a vehicle you will actually r
espawn at the closest vehicle node.  

----------  

Vector3 nodePos;  

GET_CLOSEST_VEHICLE_NODE(x,y,z,&nodePos,...)  

p4 is either 0, 1 or 8. 1 means any path/road. 0 means node in the middle of the closest main (aspha
lt) road.  

p5, p6 are always the same:  

0x40400000 (3.0), 0  

p5 can also be 100.0 and p6 can be 2.5:  

PATHFIND::GET_CLOSEST_VEHICLE_NODE(a_0, &v_5, v_9, 100.0, 2.5)  

Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the sa
me coords.   

The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11,
 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.
   

Starting at 2, every fourth node is under the map, always same coords.  

Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).   

gtaforums.com/topic/843561-pathfind-node-types  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Vector3* outPosition' />
				<Param name='int nodeType' />
				<Param name='float p' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetClosestVehicleNodeWithHeading' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFF071FB798B803B0
// 0x8BD5759B
PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(float x, float y, float z, Vector3* outPosition, float* o
----------------------------------------------------------------------------------------------------
ading, int nodeType, float p6, int p7);

```

```

p5, p6 and p7 seems to be about the same as p4, p5 and p6 for GET_CLOSEST_VEHICLE_NODE. p6 and/or p7
 has something to do with finding a node on the same path/road and same direction(at least for this 
native, something to do with the heading maybe). Edit this when you find out more.  

p5 is either 1 or 12. 1 means any path/road. 12, 8, 0 means node in the middle of the closest main (
asphalt) road.  

p6 is always 3.0  

p7 is always 0.  

Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the sa
me coords.   

The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11,
 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.
   

Starting at 2, every fourth node is under the map, always same coords.  

Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).  

gtaforums.com/topic/843561-pathfind-node-types  

Example of usage, moving vehicle to closest path/road:  

Vector3 coords = ENTITY::GET_ENTITY_COORDS(playerVeh, true);  

Vector3 closestVehicleNodeCoords;   

float roadHeading;   

PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(coords.x, coords.y, coords.z, &closestVehicleNodeCoo
rds, &roadHeading, 1, 3, 0);   

ENTITY::SET_ENTITY_HEADING(playerVeh, roadHeading);  

ENTITY::SET_ENTITY_COORDS(playerVeh, closestVehicleNodeCoords.x, closestVehicleNodeCoords.y, closest
VehicleNodeCoords.z, 1, 0, 0, 1);  

VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(playerVeh);  

------------------------------------------------------------------  

C# Example (ins1de) : pastebin.com/fxtMWAHD  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Vector3* outPosition' />
				<Param name='float* o' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetIsSlowRoadFlag' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4F5070AA58F69279
// 0x56737A3C
PATHFIND::_GET_IS_SLOW_ROAD_FLAG(int nodeID);
----------------------------------------------------------------------------------------------------
```

p0 = VEHICLE_NODE_ID  

Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.  

Normal roads where plenty of Peds spawn will return false  

```'>
				<Param name='int nodeID' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNthClosestVehicleNode' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE50E52416CCF948B
// 0xF125BFCC
PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE(float x, float y, float z, int nthClosest, Vector3* outPosition, A
----------------------------------------------------------------------------------------------------
nknown1, Any unknown2, Any unknown3);

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int nthClosest' />
				<Param name='Vector3* outPosition' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNthClosestVehicleNodeFavourDirection' func='yes'>
			<Overload retVal='BOOL' descr='// 0x45905BE8654AE067
// 0x928A4DEC
PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION(float x, float y, float z, float desiredX, float 
----------------------------------------------------------------------------------------------------
redY, float desiredZ, int nthClosest, Vector3* outPosition, float* outHeading, int nodetype, Any
 p10, Any p11);

```

```

See gtaforums.com/topic/843561-pathfind-node-types for node type info. 0 = paved road only, 1 = any 
road, 3 = water  

p10 always equal 0x40400000  

p11 always equal 0  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float desiredX' />
				<Param name='float ' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNthClosestVehicleNodeId' func='yes'>
			<Overload retVal='int' descr='// 0x22D7275A79FE8215
// 0x3F358BEA
PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_ID(float x, float y, float z, int nth, int nodetype, float p5, floa
----------------------------------------------------------------------------------------------------
);

```

```

Returns the id.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int nth' />
				<Param name='int nodetype' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNthClosestVehicleNodeIdWithHeading' func='yes'>
			<Overload retVal='Any' descr='// 0x6448050E9C2A7207
// 0xC1AEB88D
PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3*
----------------------------------------------------------------------------------------------------
Position, float outHeading, Any p6, float p7, float p8);

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int nthClosest' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNthClosestVehicleNodeWithHeading' func='yes'>
			<Overload retVal='BOOL' descr='// 0x80CA6A8B6C094CC4
// 0x7349C856
PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING(float x, float y, float z, int nthClosest, Vector3* o
----------------------------------------------------------------------------------------------------
sition, float* heading, Any* unknown1, int unknown2, float unknown3, float unknown4);

```

```

Get the nth closest vehicle node and its heading. (unknown2 = 9, unknown3 = 3.0, unknown4 = 2.5)  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int nthClosest' />
				<Param name='Vector3* o' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRandomVehicleNode' func='yes'>
			<Overload retVal='BOOL' descr='// 0x93E0DB8440B73A7D
// 0xAD1476EA
PATHFIND::GET_RANDOM_VEHICLE_NODE(float x, float y, float z, float radius, BOOL p4, BOOL p5, BOOL p6, Vec
----------------------------------------------------------------------------------------------------
* outPosition, int* nodeId);

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetSafeCoordForPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB61C8E878A4199CA
// 0xB370270A
PATHFIND::GET_SAFE_COORD_FOR_PED(float x, float y, float z, BOOL onGround, Vector3* outPosition, int flag
----------------------------------------------------------------------------------------------------
```

```

When onGround == true outPosition is a position located on the nearest pavement.  

When a safe coord could not be found the result of a function is false and outPosition == Vector3.Ze
ro.  

In the scripts these flags are used: 0, 14, 12, 16, 20, 21, 28. 0 is most commonly used, then 16.   


16 works for me, 0 crashed the script.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL onGround' />
				<Param name='Vector3* outPosition' />
				<Param name='int flag' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetStreetNameAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0x2EB41072B4C1E4C0
// 0xDEBEEFCF
PATHFIND::GET_STREET_NAME_AT_COORD(float x, float y, float z, Hash* streetName, Hash* crossingRoad);
----------------------------------------------------------------------------------------------------
```

Determines the name of the street which is the closest to the given coordinates.  

x,y,z - the coordinates of the street  

streetName - returns a hash to the name of the street the coords are on  

crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road  


Note: the names are returned as hashes, the strings can be returned using the function UI::GET_STREE
T_NAME_FROM_HASH_KEY.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Hash* streetName' />
				<Param name='Hash* crossingRoad' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetSupportsGpsRouteFlag' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA2AE5C478B96E3B6
// 0xEE4B1219
PATHFIND::_GET_SUPPORTS_GPS_ROUTE_FLAG(int nodeID);
----------------------------------------------------------------------------------------------------
```

p0 = VEHICLE_NODE_ID  

Returns false for nodes that aren&apos;t used for GPS routes.  

Example:  

Nodes in Fort Zancudo and LSIA are false  

```'>
				<Param name='int nodeID' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleNodePosition' func='yes'>
			<Overload retVal='void' descr='// 0x703123E5E7D429C2
// 0xE38E252D
PATHFIND::GET_VEHICLE_NODE_POSITION(int nodeId, Vector3* outPosition);
----------------------------------------------------------------------------------------------------
```

Calling this with an invalid node id, will crash the game.  

Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure 
that the id is valid.  

Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSIT
ION().  

sfink: This native returns a pointer to a packed Vector3 struct in the RAX register, as do the follo
wing natives:  

AI::WAYPOINT_RECORDING_GET_COORD  

ENTITY::GET_ENTITY_MATRIX  

FIRE::GET_CLOSEST_FIRE_POS  

GAMEPLAY::FIND_SPAWN_POINT_IN_DIRECTION  

GAMEPLAY::GET_MODEL_DIMENSIONS  

GAMEPLAY::OVERRIDE_SAVE_HOUSE  

GAMEPLAY::_0x82FDE6A57EE4EE44  

GAMEPLAY::_0x8BDC7BFC57A81E76  

GAMEPLAY::_0x8D7A43EC6A5FEA45  

GAMEPLAY::_0xA4A0065E39C9F25C  

GAMEPLAY::_0xDFB4138EEFED7B81  

MOBILE::GET_MOBILE_PHONE_POSITION  

MOBILE::GET_MOBILE_PHONE_ROTATION  

NETWORK::NETWORK_GET_RESPAWN_RESULT  

OBJECT::_0x163F8B586BC95F2A  

PATHFIND::GET_CLOSEST_MAJOR_VEHICLE_NODE  

PATHFIND::GET_CLOSEST_ROAD  

PATHFIND::GET_CLOSEST_VEHICLE_NODE  

PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING  

PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE  

PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION  

PATHFIND::GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING  

PATHFIND::GET_RANDOM_VEHICLE_NODE  

PATHFIND::GET_SAFE_COORD_FOR_PED  

PATHFIND::GET_VEHICLE_NODE_POSITION  

PATHFIND::_0x16F46FB18C8009E4  

VEHICLE::_0xA4822F1CF23F4810  

VEHICLE::_0xDF7E3EEB29642C38  

WATER::TEST_PROBE_AGAINST_ALL_WATER  

WATER::TEST_PROBE_AGAINST_WATER  

WEAPON::GET_PED_LAST_WEAPON_IMPACT_COORD  

WORLDPROBE::_0xFF6BE494C7987F34  

WORLDPROBE::_GET_RAYCAST_RESULT  

```'>
				<Param name='int nodeId' />
				<Param name='Vector3* outPosition' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleNodeProperties' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0568566ACBB5DEDC
// 0xCC90110B
PATHFIND::GET_VEHICLE_NODE_PROPERTIES(float x, float y, float z, int* density, int* flags);
----------------------------------------------------------------------------------------------------
```

MulleDK19: Gets the density and flags of the closest node to the specified position.  

Density is a value between 0 and 15, indicating how busy the road is.  

Flags is a bit field.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='int* density' />
				<Param name='int* flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsNavmeshLoadedInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF813C7E63F9062A5
// 0x4C2BA99E
PATHFIND::IS_NAVMESH_LOADED_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2);
----------------------------------------------------------------------------------------------------
```

Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it&apos;s 
top left deepest corner to it&apos;s bottom right shallowest corner.  

If you can re-word this so it makes more sense, please do. I&apos;m horrible with words sometimes...  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPointOnRoad' func='yes'>
			<Overload retVal='BOOL' descr='// 0x125BF4ABFC536B09
// 0xCF198055
PATHFIND::IS_POINT_ON_ROAD(float x, float y, float z, Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Gets a value indicating whether the specified position is on a road.  

The vehicle parameter is not implemented (ignored).  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleNodeIdValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1EAF30FCFBF5AF74
// 0x57DFB1EF
PATHFIND::IS_VEHICLE_NODE_ID_VALID(int vehicleNodeId);
----------------------------------------------------------------------------------------------------
```

Returns true if the id is non zero.  

```'>
				<Param name='int vehicleNodeId' />
			</Overload>
		</KeyWord>
		<KeyWord name='LoadAllPathNodes' func='yes'>
			<Overload retVal='BOOL' descr='// 0x80E4A6EDDB0BE8D9
// 0xC66E28C3
PATHFIND::LOAD_ALL_PATH_NODES(BOOL keepInMemory);
----------------------------------------------------------------------------------------------------
```

Loads all path nodes.  

If keepInMemory is true, all path nodes will be loaded and be kept in memory; otherwise, all path no
des will be loaded, but unloaded as the game sees fit.  

- MulleDK19.  

August 29, 2017: This native has been removed in v1180.  

```'>
				<Param name='BOOL keepInMemory' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x01708e8dd3ff8c65' func='yes'>
			<Overload retVal='Any' descr='// 0x01708E8DD3FF8C65
PATHFIND::_0x01708E8DD3FF8C65(float p0, float p1, float p2, float p3, float p4, float p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x07fb139b592fa687' func='yes'>
			<Overload retVal='BOOL' descr='// 0x07FB139B592FA687
// 0x2CDA5012
PATHFIND::_0x07FB139B592FA687(float p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0b919e1fb47cc4e0' func='yes'>
			<Overload retVal='void' descr='// 0x0B919E1FB47CC4E0
// 0x3C5085E4
PATHFIND::_0x0B919E1FB47CC4E0(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x16f46fb18c8009e4' func='yes'>
			<Overload retVal='Any' descr='// 0x16F46FB18C8009E4
// 0xF6422F9A
PATHFIND::_0x16F46FB18C8009E4(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1fc289a0c3ff470f' func='yes'>
			<Overload retVal='Any' descr='// 0x1FC289A0C3FF470F
// 0x90DF7A4C
PATHFIND::_0x1FC289A0C3FF470F(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x228e5c6ad4d74bfd' func='yes'>
			<Overload retVal='void' descr='// 0x228E5C6AD4D74BFD
// 0xD6A3B458
PATHFIND::_0x228E5C6AD4D74BFD(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Probably the opposite of  0x80E4A6EDDB0BE8D9 / LOAD_ALL_PATH_NODES  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2801d0012266df07' func='yes'>
			<Overload retVal='void' descr='// 0x2801D0012266DF07
PATHFIND::_0x2801D0012266DF07(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x29c24bfbed8ab8fb' func='yes'>
			<Overload retVal='float' descr='// 0x29C24BFBED8AB8FB
// 0x3FE8C5A0
PATHFIND::_0x29C24BFBED8AB8FB(float p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x336511a34f2e5185' func='yes'>
			<Overload retVal='float' descr='// 0x336511A34F2E5185
// 0xA07C5B7D
PATHFIND::_0x336511A34F2E5185(float left, float right);
----------------------------------------------------------------------------------------------------
```

calculates two distances  

```'>
				<Param name='float left' />
				<Param name='float right' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3599d741c9ac6310' func='yes'>
			<Overload retVal='float' descr='// 0x3599D741C9AC6310
// 0x76751DD4
PATHFIND::_0x3599D741C9AC6310(float p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x705a844002b39dc0' func='yes'>
			<Overload retVal='Any' descr='// 0x705A844002B39DC0
PATHFIND::_0x705A844002B39DC0();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x869daacbbe9fa006' func='yes'>
			<Overload retVal='Any' descr='// 0x869DAACBBE9FA006
// 0x286F82CC
PATHFIND::_0x869DAACBBE9FA006();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8abe8608576d9ce3' func='yes'>
			<Overload retVal='float' descr='// 0x8ABE8608576D9CE3
// 0x3ED21C90
PATHFIND::_0x8ABE8608576D9CE3(float p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa0f8a7517a273c05' func='yes'>
			<Overload retVal='Any' descr='// 0xA0F8A7517A273C05
PATHFIND::_0xA0F8A7517A273C05(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaa76052dda9bfc3e' func='yes'>
			<Overload retVal='void' descr='// 0xAA76052DDA9BFC3E
// 0xD0F51299
PATHFIND::_0xAA76052DDA9BFC3E(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbbb45c3cf5c8aa85' func='yes'>
			<Overload retVal='Any' descr='// 0xBBB45C3CF5C8AA85
// 0x4B770634
PATHFIND::_0xBBB45C3CF5C8AA85();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd0bc1c6fb18ee154' func='yes'>
			<Overload retVal='void' descr='// 0xD0BC1C6FB18EE154
PATHFIND::_0xD0BC1C6FB18EE154(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd3a6a0ef48823a8c' func='yes'>
			<Overload retVal='Any' descr='// 0xD3A6A0EF48823A8C
PATHFIND::_0xD3A6A0EF48823A8C();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf3162836c28f9da5' func='yes'>
			<Overload retVal='Any' descr='// 0xF3162836C28F9DA5
PATHFIND::_0xF3162836C28F9DA5(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf7b79a50b905a30d' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF7B79A50B905A30D
// 0x86E80A17
PATHFIND::_0xF7B79A50B905A30D(float p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
```

Only did a quick disassembly, but this function seems to load all path nodes in the given area. Para
meters appear to be start x, start y, end x, end y.  

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveNavmeshBlockingObject' func='yes'>
			<Overload retVal='void' descr='// 0x46399A7895957C0E
// 0x098602B0
PATHFIND::REMOVE_NAVMESH_BLOCKING_OBJECT(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveNavmeshRequiredRegions' func='yes'>
			<Overload retVal='void' descr='// 0x916F0A3CDEC3445E
// 0x637BB680
PATHFIND::REMOVE_NAVMESH_REQUIRED_REGIONS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetGpsDisabledZone' func='yes'>
			<Overload retVal='void' descr='// 0xDC20483CD3DD5201
// 0x720B8073
PATHFIND::SET_GPS_DISABLED_ZONE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetIgnoreNoGpsFlag' func='yes'>
			<Overload retVal='void' descr='// 0x72751156E7678833
// 0xB72CF194
PATHFIND::SET_IGNORE_NO_GPS_FLAG(BOOL ignore);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL ignore' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPathsBackToOriginal' func='yes'>
			<Overload retVal='void' descr='// 0xE04B48F2CC926253
// 0x3F1ABDA4
PATHFIND::SET_PED_PATHS_BACK_TO_ORIGINAL(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPathsInArea' func='yes'>
			<Overload retVal='void' descr='// 0x34F060F4BF92E018
// 0x2148EA84
PATHFIND::SET_PED_PATHS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL unknown)
----------------------------------------------------------------------------------------------------
``'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='BOOL unknown' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRoadsBackToOriginal' func='yes'>
			<Overload retVal='void' descr='// 0x1EE7063B80FFC77C
// 0x86AC4A85
PATHFIND::SET_ROADS_BACK_TO_ORIGINAL(float p0, float p1, float p2, float p3, float p4, float p5);
----------------------------------------------------------------------------------------------------
```

missing a last parameter int p6  

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRoadsBackToOriginalInAngledArea' func='yes'>
			<Overload retVal='void' descr='// 0x0027501B9F3B407E
// 0x9DB5D209
PATHFIND::SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, flo
----------------------------------------------------------------------------------------------------
2, float p6);

```

```

bool p7 - always 1  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRoadsInAngledArea' func='yes'>
			<Overload retVal='void' descr='// 0x1A5AA1208AF5DB59
// 0xBD088F4B
PATHFIND::SET_ROADS_IN_ANGLED_AREA(float x1, float y1, float z1, float x2, float y2, float z2, float angl
----------------------------------------------------------------------------------------------------
OOL unknown1, BOOL unknown2, BOOL unknown3);

```

```

/* Corrected conflicting parameter names */  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='float angl' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRoadsInArea' func='yes'>
			<Overload retVal='void' descr='// 0xBF1A602B5BA52FEE
// 0xEBC7B918
PATHFIND::SET_ROADS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL unknown1, BO
----------------------------------------------------------------------------------------------------
nknown2);

```

```

/* Corrected conflicting parameter names */  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='BOOL unknown1' />
			</Overload>
		</KeyWord>
		<KeyWord name='UpdateNavmeshBlockingObject' func='yes'>
			<Overload retVal='void' descr='// 0x109E99373F290687
// 0x4E9776D0
PATHFIND::UPDATE_NAVMESH_BLOCKING_OBJECT(Any p0, float p1, float p2, float p3, float p4, float p5, float 
----------------------------------------------------------------------------------------------------
float p7, Any p8);

```'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float ' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddArmourToPed' func='yes'>
			<Overload retVal='void' descr='// 0x5BA652A0CD14DF2F
// 0xF686B26E
PED::ADD_ARMOUR_TO_PED(Ped ped, int amount);
----------------------------------------------------------------------------------------------------
```

Same as SET_PED_ARMOUR, but ADDS &apos;amount&apos; to the armor the Ped already has.  

```'>
				<Param name='Ped ped' />
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddRelationshipGroup' func='yes'>
			<Overload retVal='Any' descr='// 0xF372BC22FCB88606
// 0x8B635546
PED::ADD_RELATIONSHIP_GROUP(char* name, Hash* groupHash);
----------------------------------------------------------------------------------------------------
```

Can&apos;t select void. This function returns nothing. The hash of the created relationship group is outp
ut in the second parameter.  

```'>
				<Param name='char* name' />
				<Param name='Hash* groupHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddScenarioBlockingArea' func='yes'>
			<Overload retVal='int' descr='// 0x1B5C85C612E5256E
// 0xA38C0234
PED::ADD_SCENARIO_BLOCKING_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6, 
----------------------------------------------------------------------------------------------------
p7, BOOL p8, BOOL p9);

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='ApplyDamageToPed' func='yes'>
			<Overload retVal='void' descr='// 0x697157CED63F18D4
// 0x4DC27FCF
PED::APPLY_DAMAGE_TO_PED(Ped ped, int damageAmount, BOOL armorFirst);
----------------------------------------------------------------------------------------------------
```

damages a ped with the given amount  

----  

armorFirst means it will damage/lower the armor first before damaging the player.  

setting damageAmount to a negative amount will cause the player or the armor (depending on armorFirs
t) to be healed by damageAmount instead.  

```'>
				<Param name='Ped ped' />
				<Param name='int damageAmount' />
				<Param name='BOOL armorFirst' />
			</Overload>
		</KeyWord>
		<KeyWord name='ApplyPedBlood' func='yes'>
			<Overload retVal='void' descr='// 0x83F7E01C7B769A26
// 0x376CE3C0
PED::APPLY_PED_BLOOD(Ped ped, int boneIndex, float xRot, float yRot, float zRot, char* woundType);
----------------------------------------------------------------------------------------------------
```

Found one occurence in re_crashrescue.c4  

PED::APPLY_PED_BLOOD(l_4B, 3, 0.0, 0.0, 0.0, &quot;wound_sheet&quot;);  

```'>
				<Param name='Ped ped' />
				<Param name='int boneIndex' />
				<Param name='float xRot' />
				<Param name='float yRot' />
				<Param name='float zRot' />
				<Param name='char* woundType' />
			</Overload>
		</KeyWord>
		<KeyWord name='ApplyPedBloodByZone' func='yes'>
			<Overload retVal='void' descr='// 0x3311E47B91EDCBBC
// 0x8F3F3A9C
PED::APPLY_PED_BLOOD_BY_ZONE(Ped ped, Any p1, float p2, float p3, Any* p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='Any* p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='ApplyPedBloodDamageByZone' func='yes'>
			<Overload retVal='void' descr='// 0x816F6981C60BF53B
// 0x1E54DB12
PED::APPLY_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, Any p1, float p2, float p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='ApplyPedBloodSpecific' func='yes'>
			<Overload retVal='void' descr='// 0xEF0D582CBF2D9B0F
// 0xFC13CE80
PED::APPLY_PED_BLOOD_SPECIFIC(Ped ped, Any p1, float p2, float p3, float p4, float p5, Any p6, float
----------------------------------------------------------------------------------------------------
Any* p8);

```'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='ApplyPedDamageDecal' func='yes'>
			<Overload retVal='void' descr='// 0x397C38AA7B4A5F83
// 0x8A13A41F
PED::APPLY_PED_DAMAGE_DECAL(Ped ped, int p1, float p2, float p3, float p4, float p5, float p6, int p
----------------------------------------------------------------------------------------------------
OOL p8, char* p9);

```

```

APPLY_PED_DAMAGE_DECAL(ped, 1, 0.5f, 0.513f, 0f, 1f, unk, 0, 0, &quot;blushing&quot;);  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
				<Param name='int p' />
			</Overload>
		</KeyWord>
		<KeyWord name='ApplyPedDamagePack' func='yes'>
			<Overload retVal='void' descr='// 0x46DF918788CB093F
// 0x208D0CB8
PED::APPLY_PED_DAMAGE_PACK(Ped ped, char* damagePack, float damage, float mult);
----------------------------------------------------------------------------------------------------
```

Damage Packs:  

&quot;SCR_TrevorTreeBang&quot;  

&quot;HOSPITAL_0&quot;  

&quot;HOSPITAL_1&quot;  

&quot;HOSPITAL_2&quot;  

&quot;HOSPITAL_3&quot;  

&quot;HOSPITAL_4&quot;  

&quot;HOSPITAL_5&quot;  

&quot;HOSPITAL_6&quot;  

&quot;HOSPITAL_7&quot;  

&quot;HOSPITAL_8&quot;  

&quot;HOSPITAL_9&quot;  

&quot;SCR_Dumpster&quot;  

&quot;BigHitByVehicle&quot;  

&quot;SCR_Finale_Michael_Face&quot;  

&quot;SCR_Franklin_finb&quot;  

&quot;SCR_Finale_Michael&quot;  

&quot;SCR_Franklin_finb2&quot;  

&quot;Explosion_Med&quot;  

&quot;SCR_Torture&quot;  

&quot;SCR_TracySplash&quot;  

&quot;Skin_Melee_0&quot;  

Additional damage packs:  

gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227  

```'>
				<Param name='Ped ped' />
				<Param name='char* damagePack' />
				<Param name='float damage' />
				<Param name='float mult' />
			</Overload>
		</KeyWord>
		<KeyWord name='AttachSynchronizedSceneToEntity' func='yes'>
			<Overload retVal='void' descr='// 0x272E4723B56A3B96
// 0xE9BA6189
PED::ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY(int sceneID, Entity entity, int boneIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int sceneID' />
				<Param name='Entity entity' />
				<Param name='int boneIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanCreateRandomBikeRider' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEACEEDA81751915C
// 0x7018BE31
PED::CAN_CREATE_RANDOM_BIKE_RIDER();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='CanCreateRandomCops' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5EE2CAFF7F17770D
// 0xAA73DAD9
PED::CAN_CREATE_RANDOM_COPS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='CanCreateRandomDriver' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB8EB95E5B4E56978
// 0x99861609
PED::CAN_CREATE_RANDOM_DRIVER();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='CanCreateRandomPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3E8349C08E4B82E4
// 0xF9ABE88F
PED::CAN_CREATE_RANDOM_PED(BOOL unk);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL unk' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanKnockPedOffVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x51AC07A44D4F5B8A
// 0xC9D098B3
PED::CAN_KNOCK_PED_OFF_VEHICLE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanPedInCombatSeeTarget' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEAD42DE3610D0721
// 0xCCD525E1
PED::CAN_PED_IN_COMBAT_SEE_TARGET(Ped ped, Ped target);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Ped target' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanPedRagdoll' func='yes'>
			<Overload retVal='BOOL' descr='// 0x128F79EDCECE4FD5
// 0xC0EFB7A3
PED::CAN_PED_RAGDOLL(Ped ped);
----------------------------------------------------------------------------------------------------
```

Prevents the ped from going limp.  

[Example: Can prevent peds from falling when standing on moving vehicles.]  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanPedSeePed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6CD5A433374D4CFB
// 0x74A0F291
PED::_CAN_PED_SEE_PED(Ped ped1, Ped ped2);
----------------------------------------------------------------------------------------------------
```

Returns true if ped1 can see ped2 in their line of vision  

```'>
				<Param name='Ped ped1' />
				<Param name='Ped ped2' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearAllPedProps' func='yes'>
			<Overload retVal='void' descr='// 0xCD8A7537A9B52F06
// 0x81DF8B43
PED::CLEAR_ALL_PED_PROPS(Ped ped);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearFacialIdleAnimOverride' func='yes'>
			<Overload retVal='void' descr='// 0x726256CC1EEB182F
// 0x5244F4E2
PED::CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedAlternateMovementAnim' func='yes'>
			<Overload retVal='void' descr='// 0xD8D19675ED5FBDCE
// 0x7A7F5BC3
PED::CLEAR_PED_ALTERNATE_MOVEMENT_ANIM(Ped ped, int stance, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int stance' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedAlternateWalkAnim' func='yes'>
			<Overload retVal='void' descr='// 0x8844BBFCE30AA9E9
// 0x5736FB23
PED::CLEAR_PED_ALTERNATE_WALK_ANIM(Ped ped, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedBloodDamage' func='yes'>
			<Overload retVal='void' descr='// 0x8FE22675A5A45817
// 0xF7ADC960
PED::CLEAR_PED_BLOOD_DAMAGE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedBloodDamageByZone' func='yes'>
			<Overload retVal='void' descr='// 0x56E3B78C5408D9F4
// 0xF210BE69
PED::CLEAR_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, int p1);
----------------------------------------------------------------------------------------------------
```

Somehow related to changing ped&apos;s clothes.  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedDamageDecalByZone' func='yes'>
			<Overload retVal='void' descr='// 0x523C79AEEFCC4A2A
// 0x70AA5B7D
PED::CLEAR_PED_DAMAGE_DECAL_BY_ZONE(Ped ped, int p1, char* p2);
----------------------------------------------------------------------------------------------------
```

p1: from 0 to 5 in the b617d scripts.  

p2: &quot;blushing&quot; and &quot;ALL&quot; found in the b617d scripts.  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
				<Param name='char* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedDecorations' func='yes'>
			<Overload retVal='void' descr='// 0x0E5173C163976E38
// 0xD4496BF3
PED::CLEAR_PED_DECORATIONS(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedDriveByClipsetOverride' func='yes'>
			<Overload retVal='void' descr='// 0x4AFE3690D7E0B5AC
// 0xAEC9163B
PED::CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedFacialDecorations' func='yes'>
			<Overload retVal='void' descr='// 0xE3B27E70CEAB9F0C
// 0xEFD58EB9
PED::_CLEAR_PED_FACIAL_DECORATIONS(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedLastDamageBone' func='yes'>
			<Overload retVal='void' descr='// 0x8EF6B7AC68E2F01B
// 0x56CB715E
PED::CLEAR_PED_LAST_DAMAGE_BONE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedNonCreationArea' func='yes'>
			<Overload retVal='void' descr='// 0x2E05208086BA0651
// 0x6F7043A3
PED::CLEAR_PED_NON_CREATION_AREA();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedProp' func='yes'>
			<Overload retVal='void' descr='// 0x0943E5B8E078E76E
// 0x2D23D743
PED::CLEAR_PED_PROP(Ped ped, int propId);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int propId' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedWetness' func='yes'>
			<Overload retVal='void' descr='// 0x9C720776DAA43E7E
// 0x629F15BD
PED::CLEAR_PED_WETNESS(Ped ped);
----------------------------------------------------------------------------------------------------
```

It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.  


```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearRelationshipBetweenGroups' func='yes'>
			<Overload retVal='void' descr='// 0x5E29243FB56FC6D4
// 0x994B8C2D
PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(int relationship, Hash group1, Hash group2);
----------------------------------------------------------------------------------------------------
```

Clears the relationship between two groups. This should be called twice (once for each group).  

Relationship types:  

0 = Companion  

1 = Respect  

2 = Like  

3 = Neutral  

4 = Dislike  

5 = Hate  

255 = Pedestrians  

(Credits: Inco)  

Example:  

PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);  

PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);  

```'>
				<Param name='int relationship' />
				<Param name='Hash group1' />
				<Param name='Hash group2' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClonePed' func='yes'>
			<Overload retVal='Ped' descr='// 0xEF29A16337FACADB
// 0x8C8A8D6E
PED::CLONE_PED(Ped ped, float heading, BOOL isNetwork, BOOL thisScriptCheck);
----------------------------------------------------------------------------------------------------
```

thisScriptCheck - can be destroyed if it belongs to the calling script.  

Example of Cloning Your Player:  

CLONE_PED(PLAYER_PED_ID(), GET_ENTITY_HEADING(PLAYER_PED_ID()), 0, 1);  

```'>
				<Param name='Ped ped' />
				<Param name='float heading' />
				<Param name='BOOL isNetwork' />
				<Param name='BOOL thisScriptCheck' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClonePedToTarget' func='yes'>
			<Overload retVal='void' descr='// 0xE952D6431689AD9A
// 0xFC70EEC7
PED::CLONE_PED_TO_TARGET(Ped ped, Ped targetPed);
----------------------------------------------------------------------------------------------------
```

What exactly is the difference? What does this exactly do by chance?  

^ Copies ped&apos;s components and props to targetPed.  

---------------------------------------------------------------------------------  

| Internally has a 3rd param (bool) which is set to true by default |  

```

----------------------------------------------------------------------------------------------------

Old name: _ASSIGN_PLAYER_TO_PED'>
				<Param name='Ped ped' />
				<Param name='Ped targetPed' />
			</Overload>
		</KeyWord>
		<KeyWord name='_ASSIGN_PLAYER_TO_PED' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: ClonePedToTarget' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='CreateGroup' func='yes'>
			<Overload retVal='int' descr='// 0x90370EBE0FEE1A3D
// 0x8DC0368D
PED::CREATE_GROUP(int unused);
----------------------------------------------------------------------------------------------------
```

Creates a new ped group.  

Groups can contain up to 8 peds.  

The parameter is unused.  

Returns a handle to the created group, or 0 if a group couldn&apos;t be created.  

```'>
				<Param name='int unused' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateNmMessage' func='yes'>
			<Overload retVal='void' descr='// 0x418EF2A1BCE56685
// 0x1CFBFD4B
PED::CREATE_NM_MESSAGE(BOOL startImmediately, int messageId);
----------------------------------------------------------------------------------------------------
```

Creates a new NaturalMotion message.  

startImmediately: If set to true, the character will perform the message the moment it receives it b
y GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won&apos;t perform it yet. While it&apos;s a
 boolean value, if negative, the message will not be initialized.  

messageId: The ID of the NaturalMotion message.  

If a message already exists, this function does nothing. A message exists until the point it has bee
n successfully dispatched by GIVE_PED_NM_MESSAGE.  

```'>
				<Param name='BOOL startImmediately' />
				<Param name='int messageId' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreatePed' func='yes'>
			<Overload retVal='Ped' descr='// 0xD49F9B0955C367DE
// 0x0389EF71
PED::CREATE_PED(int pedType, Hash modelHash, float x, float y, float z, float heading, BOOL isNetwork
----------------------------------------------------------------------------------------------------
OL thisScriptCheck);

```

```

thisScriptCheck - can be destroyed if it belongs to the calling script.  

p7 - last parameter does not mean ped handle is returned  

maybe a quick view in disassembly will tell us what is actually does  

*Heading*: 0.0  

*Heading* is the Z axis spawn rotation of the ped 0-&gt;5th parameter.  

Ped Types:  

enum PedTypes  

{  

	PED_TYPE_PLAYER_0,// michael  

	PED_TYPE_PLAYER_1,// franklin  

	PED_TYPE_NETWORK_PLAYER,	// mp character  

	PED_TYPE_PLAYER_2,// trevor  

	PED_TYPE_CIVMALE,  

	PED_TYPE_CIVFEMALE,  

	PED_TYPE_COP,  

	PED_TYPE_GANG_ALBANIAN,  

	PED_TYPE_GANG_BIKER_1,  

	PED_TYPE_GANG_BIKER_2,  

	PED_TYPE_GANG_ITALIAN,  

	PED_TYPE_GANG_RUSSIAN,  

	PED_TYPE_GANG_RUSSIAN_2,  

	PED_TYPE_GANG_IRISH,  

	PED_TYPE_GANG_JAMAICAN,  

	PED_TYPE_GANG_AFRICAN_AMERICAN,  

	PED_TYPE_GANG_KOREAN,  

	PED_TYPE_GANG_CHINESE_JAPANESE,  

	PED_TYPE_GANG_PUERTO_RICAN,  

	PED_TYPE_DEALER,  

	PED_TYPE_MEDIC,  

	PED_TYPE_FIREMAN,  

	PED_TYPE_CRIMINAL,  

	PED_TYPE_BUM,  

	PED_TYPE_PROSTITUTE,  

	PED_TYPE_SPECIAL,  

	PED_TYPE_MISSION,  

	PED_TYPE_SWAT,  

	PED_TYPE_ANIMAL,  

	PED_TYPE_ARMY  

};  

```'>
				<Param name='int pedType' />
				<Param name='Hash modelHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float heading' />
				<Param name='BOOL isNetwork' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreatePedInsideVehicle' func='yes'>
			<Overload retVal='Ped' descr='// 0x7DD959874C1FD534
// 0x3000F092
PED::CREATE_PED_INSIDE_VEHICLE(Vehicle vehicle, int pedType, Hash modelHash, int seat, BOOL isNetwork
----------------------------------------------------------------------------------------------------
OL thisScriptCheck);

```

```

thisScriptCheck - can be destroyed if it belongs to the calling script.  

p5 - last parameter does not mean ped handle is returned  

maybe a quick view in disassembly will tell us what is actually does  

Ped Types:  

enum ePedType  

{  

	PED_TYPE_PLAYER_0 = 0,  

	PED_TYPE_PLAYER_1 = 1,  

	PED_TYPE_PLAYER_2 = 3,  

	PED_TYPE_CIVMALE = 4,  

	PED_TYPE_CIVFEMALE = 5,  

	PED_TYPE_COP = 6,  

	PED_TYPE_UNKNOWN_7 = 7,  

	PED_TYPE_UNKNOWN_12 = 12, // gang member?  

	PED_TYPE_UNKNOWN_19 = 19,  

	PED_TYPE_MEDIC = 20,  

	PED_TYPE_FIREMAN = 21,  

	PED_TYPE_UNKNOWN_22 = 22,  

	PED_TYPE_UNKNOWN_25 = 25,  

	PED_TYPE_UNKNOWN_26 = 26,  

	PED_TYPE_SWAT = 27,  

	PED_TYPE_ANIMAL = 28,  

	PED_TYPE_ARMY = 29  

};  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int pedType' />
				<Param name='Hash modelHash' />
				<Param name='int seat' />
				<Param name='BOOL isNetwork' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateRandomPed' func='yes'>
			<Overload retVal='Ped' descr='// 0xB4AC7D0CF06BFE8F
// 0x5A949543
PED::CREATE_RANDOM_PED(float posX, float posY, float posZ);
----------------------------------------------------------------------------------------------------
```

vb.net  

Dim ped_handle As Integer  

                    With Game.Player.Character  

                        Dim pos As Vector3 = .Position + .ForwardVector * 3  

                        ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X,
 pos.Y, pos.Z)  

                    End With  

Creates a Ped at the specified location, returns the Ped Handle.    

Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.  

```'>
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateRandomPedAsDriver' func='yes'>
			<Overload retVal='Ped' descr='// 0x9B62392B474F44A0
// 0xB927CE9A
PED::CREATE_RANDOM_PED_AS_DRIVER(Vehicle vehicle, BOOL returnHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL returnHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateSynchronizedScene' func='yes'>
			<Overload retVal='int' descr='// 0x8C18E0F9080ADD73
// 0xFFDDF8FA
PED::CREATE_SYNCHRONIZED_SCENE(float x, float y, float z, float roll, float pitch, float yaw, int p6)
----------------------------------------------------------------------------------------------------
``

```

p6 always 2 (but it doesnt seem to matter...)  

roll and pitch 0  

yaw to Ped.rotation  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float roll' />
				<Param name='float pitch' />
				<Param name='float yaw' />
				<Param name='int p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateSynchronizedScene_2' func='yes'>
			<Overload retVal='int' descr='// 0x62EC273D00187DCA
// 0xF3876894
PED::_CREATE_SYNCHRONIZED_SCENE_2(float x, float y, float z, float radius, Hash object);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Hash object' />
			</Overload>
		</KeyWord>
		<KeyWord name='DeletePed' func='yes'>
			<Overload retVal='void' descr='// 0x9614299DCB53E54B
// 0x13EFB9A0
PED::DELETE_PED(Ped* ped);
----------------------------------------------------------------------------------------------------
```

Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.  

```'>
				<Param name='Ped* ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='DetachSynchronizedScene' func='yes'>
			<Overload retVal='void' descr='// 0x6D38F1F04CBB37EA
// 0x52A1CAB2
PED::DETACH_SYNCHRONIZED_SCENE(int sceneID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int sceneID' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisposeSynchronizedScene' func='yes'>
			<Overload retVal='void' descr='// 0xCD9CC7E200A52A6F
// 0xBF7F9035
PED::_DISPOSE_SYNCHRONIZED_SCENE(int scene);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int scene' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesGroupExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7C6B0C22F9F40BBE
// 0x935C978D
PED::DOES_GROUP_EXIST(int groupId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int groupId' />
			</Overload>
		</KeyWord>
		<KeyWord name='ExplodePedHead' func='yes'>
			<Overload retVal='void' descr='// 0x2D05CED3A38D0F3A
// 0x05CC1380
PED::EXPLODE_PED_HEAD(Ped ped, Hash weaponHash);
----------------------------------------------------------------------------------------------------
```

Forces the ped to fall back and kills it.  

It doesn&apos;t really explode the ped&apos;s head but it kills the ped  

```'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='ForcePedMotionState' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF28965D04F570DCA
// 0x164DDEFF
PED::FORCE_PED_MOTION_STATE(Ped ped, Hash motionStateHash, BOOL p2, BOOL p3, BOOL p4);
----------------------------------------------------------------------------------------------------
```

Some motionstate hashes are  

0xec17e58 (standing idle), 0xbac0f10b (nothing?), 0x3f67c6af (aiming with pistol 2-h), 0x422d7a25 (s
tealth), 0xbd8817db, 0x916e828c  

and those for the strings  

&quot;motionstate_idle&quot;, &quot;motionstate_walk&quot;, &quot;motionstate_run&quot;, &quot;motionstate_actionmode_idle&quot;, and &quot;motio
nstate_actionmode_walk&quot;.  

Regarding p2, p3 and p4: Most common is 0, 0, 0); followed by 0, 1, 0); and 1, 1, 0); in the scripts
. p4 is very rarely something other than 0.  

 [31/03/2017] ins1de :  

        enum MotionState  

        {  

            StopRunning = -530524,  

            StopWalking = -668482597,  

            Idle = 247561816, // 1, 1, 0  

            Idl2 = -1871534317,  

            SkyDive =-1161760501, // 0, 1, 0  

            Stealth = 1110276645,  

            Sprint = -1115154469,  

            Swim = -1855028596,  

            Unknown1 = 1063765679,  

            Unknown2 = -633298724,  

        }  

```'>
				<Param name='Ped ped' />
				<Param name='Hash motionStateHash' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='ForcePedToOpenParachute' func='yes'>
			<Overload retVal='void' descr='// 0x16E42E800B472221
// 0xA819680B
PED::FORCE_PED_TO_OPEN_PARACHUTE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='FreezePedCameraRotation' func='yes'>
			<Overload retVal='void' descr='// 0xFF287323B0E2C69A
// 0x290421BE
PED::_FREEZE_PED_CAMERA_ROTATION(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetAnimInitialOffsetPosition' func='yes'>
			<Overload retVal='Vector3' descr='// 0xBE22B26DD764C040
// 0xC59D4268
PED::GET_ANIM_INITIAL_OFFSET_POSITION(char* animDict, char* animName, float x, float y, float z, 
----------------------------------------------------------------------------------------------------
t xRot, float yRot, float zRot, float p8, int p9);

```

```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='char* animDict' />
				<Param name='char* animName' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetAnimInitialOffsetRotation' func='yes'>
			<Overload retVal='Vector3' descr='// 0x4B805E6046EE9E47
// 0x5F7789E6
PED::GET_ANIM_INITIAL_OFFSET_ROTATION(char* animDict, char* animName, float x, float y, float z, 
----------------------------------------------------------------------------------------------------
t xRot, float yRot, float zRot, float p8, int p9);

```

```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='char* animDict' />
				<Param name='char* animName' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetClosestPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC33AB876A77F8164
// 0x8F6C1F55
PED::GET_CLOSEST_PED(float x, float y, float z, float radius, BOOL p4, BOOL p5, Ped* outPed, BOOL p7
----------------------------------------------------------------------------------------------------
OL p8, int pedType);

```

```

Gets the closest ped in a radius.  

Ped Types:  

Any ped = -1  

Player = 1  

Male = 4   

Female = 5   

Cop = 6  

Human = 26  

SWAT = 27   

Animal = 28  

Army = 29  

------------------  

P4 P5 P7 P8  

1  0  x  x  = return nearest walking Ped  

1  x  0  x  = return nearest walking Ped  

x  1  1  x  = return Ped you are using  

0  0  x  x  = no effect  

0  x  0  x  = no effect  

x = can be 1 or 0. Does not have any obvious changes.  

This function does not return ped who is:  

1. Standing still  

2. Driving  

3. Fleeing  

4. Attacking  

This function only work if the ped is:  

1. walking normally.  

2. waiting to cross a road.  

Note: PED::GET_PED_NEARBY_PEDS works for more peds.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
				<Param name='Ped* outPed' />
				<Param name='BOOL p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCombatFloat' func='yes'>
			<Overload retVal='float' descr='// 0x52DFF8A10508090A
// 0x511D7EF8
PED::GET_COMBAT_FLOAT(Ped ped, int p1);
----------------------------------------------------------------------------------------------------
```

p0: Ped Handle  

p1: int i | 0 &lt;= i &lt;= 27  

p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:  

&lt;BlindFireChance value=&quot;0.1&quot;/&gt;  

&lt;WeaponShootRateModifier value=&quot;1.0&quot;/&gt;  

&lt;TimeBetweenBurstsInCover value=&quot;1.25&quot;/&gt;  

&lt;BurstDurationInCover value=&quot;2.0&quot;/&gt;  

&lt;TimeBetweenPeeks value=&quot;10.0&quot;/&gt;  

&lt;WeaponAccuracy value=&quot;0.18&quot;/&gt;  

&lt;FightProficiency value=&quot;0.8&quot;/&gt;  

&lt;StrafeWhenMovingChance value=&quot;1.0&quot;/&gt;  

&lt;WalkWhenStrafingChance value=&quot;0.0&quot;/&gt;  

&lt;AttackWindowDistanceForCover value=&quot;55.0&quot;/&gt;  

&lt;TimeToInvalidateInjuredTarget value=&quot;9.0&quot;/&gt;  

&lt;TriggerChargeTime_Near value=&quot;4.0&quot;/&gt;  

&lt;TriggerChargeTime_Far value=&quot;10.0&quot;/&gt;  

-------------Confirmed by editing combatbehavior.meta:  

p1:  

0=BlindFireChance  

1=BurstDurationInCover  

3=TimeBetweenBurstsInCover  

4=TimeBetweenPeeks  

5=StrafeWhenMovingChance  

8=WalkWhenStrafingChance  

11=AttackWindowDistanceForCover  

12=TimeToInvalidateInjuredTarget  

16=OptimalCoverDistance  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetDeadPedPickupCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0xCD5003B097200F36
// 0x129F9DC1
PED::GET_DEAD_PED_PICKUP_COORDS(Ped ped, float p1, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetFirstParentIdForPedType' func='yes'>
			<Overload retVal='int' descr='// 0x68D353AB88B97E0C
// 0x211DEFEC
PED::_GET_FIRST_PARENT_ID_FOR_PED_TYPE(int type);
----------------------------------------------------------------------------------------------------
```

Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.  

Used when calling SET_PED_HEAD_BLEND_DATA.  

```'>
				<Param name='int type' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetGroupSize' func='yes'>
			<Overload retVal='void' descr='// 0x8DE69FE35CA09A45
// 0xF7E1A691
PED::GET_GROUP_SIZE(int groupID, Any* unknown, int* sizeInMembers);
----------------------------------------------------------------------------------------------------
```

p1 may be a BOOL representing whether or not the group even exists  

```'>
				<Param name='int groupID' />
				<Param name='Any* unknown' />
				<Param name='int* sizeInMembers' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetJackTarget' func='yes'>
			<Overload retVal='Ped' descr='// 0x5486A79D9FBD342D
// 0x1D196361
PED::GET_JACK_TARGET(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMeleeTargetForPed' func='yes'>
			<Overload retVal='Ped' descr='// 0x18A3E9EE1297FD39
// 0xAFEC26A4
PED::GET_MELEE_TARGET_FOR_PED(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMount' func='yes'>
			<Overload retVal='Ped' descr='// 0xE7E11B8DCBED1058
// 0xDD31EC4E
PED::GET_MOUNT(Ped ped);
----------------------------------------------------------------------------------------------------
```

Function just returns 0  

void __fastcall ped__get_mount(NativeContext *a1)  

{  

  NativeContext *v1; // rbx@1  

  v1 = a1;  

  GetAddressOfPedFromScriptHandle(a1-&gt;Args-&gt;Arg1);  

  v1-&gt;Returns-&gt;Item1= 0;  

}  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfPedDrawableVariations' func='yes'>
			<Overload retVal='int' descr='// 0x27561561732A7842
// 0x9754C27D
PED::GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(Ped ped, int componentId);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int componentId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfPedPropDrawableVariations' func='yes'>
			<Overload retVal='int' descr='// 0x5FAF9754E789FB47
// 0xC9780B95
PED::GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(Ped ped, int propId);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int propId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfPedPropTextureVariations' func='yes'>
			<Overload retVal='int' descr='// 0xA6E7F1CEB523E171
// 0x4892B882
PED::GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(Ped ped, int propId, int drawableId);
----------------------------------------------------------------------------------------------------
```

Need to check behavior when drawableId = -1  

- Doofy.Ass  

Why this function doesn&apos;t work and return nill value?  

GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(PLAYER.PLAYER_PED_ID(), 0, 5)  

tick: scripts/addins/menu_execute.lua:51: attempt to call field &apos;GET_NUMBER_OF_PED_PROP_TEXTURE_VARI
ATIONS&apos; (a nil value)  

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int propId' />
				<Param name='int drawableId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfPedTextureVariations' func='yes'>
			<Overload retVal='int' descr='// 0x8F7156A3142A6BAD
// 0x83D9FBE7
PED::GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(Ped ped, int componentId, int drawableId);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int componentId' />
				<Param name='int drawableId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumHairColors' func='yes'>
			<Overload retVal='int' descr='// 0xE5C0CF872C2AD150
PED::_GET_NUM_HAIR_COLORS();
----------------------------------------------------------------------------------------------------
```

Used for freemode (online) characters.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumHeadOverlayValues' func='yes'>
			<Overload retVal='int' descr='// 0xCF1CE768BB43480E
// 0xFF43C18D
PED::_GET_NUM_HEAD_OVERLAY_VALUES(int overlayID);
----------------------------------------------------------------------------------------------------
```

Used with freemode (online) characters.  

```'>
				<Param name='int overlayID' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumMakeupColors' func='yes'>
			<Overload retVal='int' descr='// 0xD1F7CA1535D22818
PED::_GET_NUM_MAKEUP_COLORS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumParentPedsOfType' func='yes'>
			<Overload retVal='int' descr='// 0x5EF37013A6539C9D
// 0x095D3BD8
PED::_GET_NUM_PARENT_PEDS_OF_TYPE(int type);
----------------------------------------------------------------------------------------------------
```

Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.  

```'>
				<Param name='int type' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedAccuracy' func='yes'>
			<Overload retVal='int' descr='// 0x37F4AD56ECBC0CD6
// 0x0A2A0AA0
PED::GET_PED_ACCURACY(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedAlertness' func='yes'>
			<Overload retVal='int' descr='// 0xF6AA118530443FD2
// 0xF83E4DAF
PED::GET_PED_ALERTNESS(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns the ped&apos;s alertness (0-3).  

Values :   

0 : Neutral  

1 : Heard something (gun shot, hit, etc)  

2 : Knows (the origin of the event)  

3 : Fully alerted (is facing the event?)  

If the Ped does not exist, returns -1.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedArmour' func='yes'>
			<Overload retVal='int' descr='// 0x9483AF821605B1D8
// 0x2CE311A7
PED::GET_PED_ARMOUR(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedAsGroupLeader' func='yes'>
			<Overload retVal='Ped' descr='// 0x5CCE68DBD5FE93EC
PED::_GET_PED_AS_GROUP_LEADER(int groupID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int groupID' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedAsGroupMember' func='yes'>
			<Overload retVal='Ped' descr='// 0x51455483CF23ED97
// 0x9AA3CC8C
PED::GET_PED_AS_GROUP_MEMBER(int groupID, int memberNumber);
----------------------------------------------------------------------------------------------------
```

from fm_mission_controller.c4 (variable names changed for clarity):  

int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());  

PED::GET_GROUP_SIZE(group, &unused, &groupSize);  

if (groupSize &gt;= 1) {  

. . . . for (int memberNumber = 0; memberNumber &lt; groupSize; memberNumber++) {  

. . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);  

. . . . . . . . //and so on  

```'>
				<Param name='int groupID' />
				<Param name='int memberNumber' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedBoneCoords' func='yes'>
			<Overload retVal='Vector3' descr='// 0x17C07FC640E86B4E
// 0x4579CAB1
PED::GET_PED_BONE_COORDS(Ped ped, int boneId, float offsetX, float offsetY, float offsetZ);
----------------------------------------------------------------------------------------------------
```

Gets the position of the specified bone of the specified ped.  

ped: The ped to get the position of a bone from.  

boneId: The ID of the bone to get the position from. This is NOT the index.  

offsetX: The X-component of the offset to add to the position relative to the bone&apos;s rotation.  

offsetY: The Y-component of the offset to add to the position relative to the bone&apos;s rotation.  

offsetZ: The Z-component of the offset to add to the position relative to the bone&apos;s rotation.  

```'>
				<Param name='Ped ped' />
				<Param name='int boneId' />
				<Param name='float offsetX' />
				<Param name='float offsetY' />
				<Param name='float offsetZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedBoneIndex' func='yes'>
			<Overload retVal='int' descr='// 0x3F428D08BE5AAE31
// 0x259C6BA2
PED::GET_PED_BONE_INDEX(Ped ped, int boneId);
----------------------------------------------------------------------------------------------------
```

Bone ID enum: pastebin.com/3pz17QGd  

```'>
				<Param name='Ped ped' />
				<Param name='int boneId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedCauseOfDeath' func='yes'>
			<Overload retVal='Hash' descr='// 0x16FFE42AB2D2DC59
// 0x63458C27
PED::GET_PED_CAUSE_OF_DEATH(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns the hash of the weapon/model/object that killed the ped.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedCombatMovement' func='yes'>
			<Overload retVal='int' descr='// 0xDEA92412FCAEB3F5
// 0xF3E7730E
PED::GET_PED_COMBAT_MOVEMENT(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedCombatRange' func='yes'>
			<Overload retVal='Any' descr='// 0xF9D9F7F2DB8E2FA0
// 0x9B9B7163
PED::GET_PED_COMBAT_RANGE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedConfigFlag' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7EE53118C892B513
// 0xABE98267
PED::GET_PED_CONFIG_FLAG(Ped ped, int flagId, BOOL p2);
----------------------------------------------------------------------------------------------------
```

p2 is always 1 in the scripts.  

if (GET_PED_CONFIG_FLAG(ped, 78, 1))  

= returns true if ped is aiming/shooting a gun  

```'>
				<Param name='Ped ped' />
				<Param name='int flagId' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedDecorationsState' func='yes'>
			<Overload retVal='Any' descr='// 0x71EAB450D86954A1
// 0x47187F7F
PED::GET_PED_DECORATIONS_STATE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedDefensiveAreaPosition' func='yes'>
			<Overload retVal='Vector3' descr='// 0x3C06B8786DD94CD1
// 0xCB65198D
PED::GET_PED_DEFENSIVE_AREA_POSITION(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedDrawableVariation' func='yes'>
			<Overload retVal='int' descr='// 0x67F3780DD425D4FC
// 0x29850FE2
PED::GET_PED_DRAWABLE_VARIATION(Ped ped, int componentId);
----------------------------------------------------------------------------------------------------
```

Ids  

1   

2   

3   

4   

5   

6   

7 - ------  

8 - Accessories 1  

9 - Accessories 2  

10  

11 - Auxiliary parts for torso  

```'>
				<Param name='Ped ped' />
				<Param name='int componentId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedEnveffScale' func='yes'>
			<Overload retVal='float' descr='// 0x9C14D30395A51A3C
// 0xA3421E39
PED::GET_PED_ENVEFF_SCALE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedExtractedDisplacement' func='yes'>
			<Overload retVal='Vector3' descr='// 0xE0AF41401ADF87E3
// 0x5231F901
PED::GET_PED_EXTRACTED_DISPLACEMENT(Ped ped, BOOL worldSpace);
----------------------------------------------------------------------------------------------------
```

Gets the offset the specified ped has moved since the previous tick.  

If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 
meter right and 5 meters forward, it&apos;ll return 1,5,0.  

If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1
 meter on the X axis and 5 meters on the Y axis, it&apos;ll return 1,5,0.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL worldSpace' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedFloodInvincibility' func='yes'>
			<Overload retVal='void' descr='// 0x2BC338A7B21F4608
// 0x31C31DAA
PED::GET_PED_FLOOD_INVINCIBILITY(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
```

hash collision???  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedGroupIndex' func='yes'>
			<Overload retVal='int' descr='// 0xF162E133B4E7A675
// 0x134E0785
PED::GET_PED_GROUP_INDEX(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns the group id of which the specified ped is a member of.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedHeadBlendData' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2746BD9D88C5C5D0
PED::_GET_PED_HEAD_BLEND_DATA(Ped ped, Any* headBlendData);
----------------------------------------------------------------------------------------------------
```

The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There 
are 4 bytes of padding after each field.  

(Edit) Console Hash: 0x44E1680C  

pass this struct in the second parameter   

typedef struct  

{  

        int shapeFirst, shapeSecond, shapeThird;   

        int skinFirst, skinSecond, skinThird;   

	float shapeMix, skinMix, thirdMix;  

} headBlendData;  

```'>
				<Param name='Ped ped' />
				<Param name='Any* headBlendData' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedHeadOverlayValue' func='yes'>
			<Overload retVal='int' descr='// 0xA60EF3B6461A4D43
PED::_GET_PED_HEAD_OVERLAY_VALUE(Ped ped, int overlayID);
----------------------------------------------------------------------------------------------------
```

Likely a char, if that overlay is not set, e.i. &quot;None&quot; option, returns 255;  

```'>
				<Param name='Ped ped' />
				<Param name='int overlayID' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedheadshotTxdString' func='yes'>
			<Overload retVal='char*' descr='// 0xDB4EACD4AD0A5D6B
// 0x76D28E96
PED::GET_PEDHEADSHOT_TXD_STRING(int handle);
----------------------------------------------------------------------------------------------------
```

gtaforums.com/topic/885580-ped-headshotmugshot-txd/  

```'>
				<Param name='int handle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedLastDamageBone' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD75960F6BD9EA49C
// 0xAB933841
PED::GET_PED_LAST_DAMAGE_BONE(Ped ped, int* outBone);
----------------------------------------------------------------------------------------------------
```

Pretty sure outBone is an int.  

```'>
				<Param name='Ped ped' />
				<Param name='int* outBone' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedMaxHealth' func='yes'>
			<Overload retVal='int' descr='// 0x4700A416E8324EF3
// 0xA45B6C8D
PED::GET_PED_MAX_HEALTH(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedMoney' func='yes'>
			<Overload retVal='int' descr='// 0x3F69145BBA87BAE7
// 0xEB3C4C7E
PED::GET_PED_MONEY(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedNearbyPeds' func='yes'>
			<Overload retVal='int' descr='// 0x23F8F5FC7E8C4A6B
// 0x4D3325F4
PED::GET_PED_NEARBY_PEDS(Ped ped, int* sizeAndPeds, int ignore);
----------------------------------------------------------------------------------------------------
```

sizeAndPeds - is a pointer to an array. The array is filled with peds found nearby the ped supplied 
to the first argument.  

ignore - ped type to ignore  

Return value is the number of peds found and added to the array passed.  

-----------------------------------  

To make this work in most menu bases at least in C++ do it like so,  

 Formatted Example: pastebin.com/D8an9wwp  

-----------------------------------  

Example: gtaforums.com/topic/789788-function-args-to-pedget-ped-nearby-peds/?p=1067386687  

Here&apos;s the right way to do it (console and pc):  

pastebin.com/SsFej963  

```'>
				<Param name='Ped ped' />
				<Param name='int* sizeAndPeds' />
				<Param name='int ignore' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedNearbyVehicles' func='yes'>
			<Overload retVal='int' descr='// 0xCFF869CBFA210D82
// 0xCB716F68
PED::GET_PED_NEARBY_VEHICLES(Ped ped, int* sizeAndVehs);
----------------------------------------------------------------------------------------------------
```

Returns size of array, passed into the second variable.  

See below for usage information.  

This function actually requires a struct, where the first value is the maximum number of elements to
 return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the st
ruct format.  

//Setup the array  

	const int numElements = 10;  

	const int arrSize = numElements * 2 + 2;  

	Any veh[arrSize];  

	//0 index is the size of the array  

	veh[0] = numElements;  

	int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);  

	if (veh != NULL)  

	{  

//Simple loop to go through results  

for (int i = 0; i &lt; count; i++)  

{  

	int offsettedID = i * 2 + 2;  

	//Make sure it exists  

	if (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))  

	{  

//Do something  

	}  

}  

	}    

Here&apos;s the right way to do it (console and pc):  

pastebin.com/SsFej963  

```'>
				<Param name='Ped ped' />
				<Param name='int* sizeAndVehs' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedPaletteVariation' func='yes'>
			<Overload retVal='int' descr='// 0xE3DD5F2A84B42281
// 0xEF1BC082
PED::GET_PED_PALETTE_VARIATION(Ped ped, int componentId);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int componentId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedParachuteLandingType' func='yes'>
			<Overload retVal='int' descr='// 0x8B9F1FC6AE8166C0
// 0x01F3B035
PED::GET_PED_PARACHUTE_LANDING_TYPE(Ped ped);
----------------------------------------------------------------------------------------------------
```

-1: no landing  

0: landing on both feet  

1: stumbling  

2: rolling  

3: ragdoll  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedParachuteState' func='yes'>
			<Overload retVal='int' descr='// 0x79CFD9827CC979B6
// 0x7D4BC475
PED::GET_PED_PARACHUTE_STATE(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns:  

-1: Normal  

0: Wearing parachute on back  

1: Parachute opening  

2: Parachute open  

3: Falling to doom (e.g. after exiting parachute)  

Normal means no parachute?  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedParachuteTintIndex' func='yes'>
			<Overload retVal='void' descr='// 0xEAF5F7E5AE7C6C9D
// 0xE9E7FAC5
PED::GET_PED_PARACHUTE_TINT_INDEX(Ped ped, int* outTintIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int* outTintIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedPropIndex' func='yes'>
			<Overload retVal='int' descr='// 0x898CC20EA75BACD8
// 0x746DDAC0
PED::GET_PED_PROP_INDEX(Ped ped, int componentId);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int componentId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedPropTextureIndex' func='yes'>
			<Overload retVal='int' descr='// 0xE131A28626F81AB2
// 0x922A6653
PED::GET_PED_PROP_TEXTURE_INDEX(Ped ped, int componentId);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int componentId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedRagdollBoneIndex' func='yes'>
			<Overload retVal='int' descr='// 0x2057EF813397A772
// 0x849F0716
PED::GET_PED_RAGDOLL_BONE_INDEX(Ped ped, int bone);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int bone' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedRelationshipGroupDefaultHash' func='yes'>
			<Overload retVal='Hash' descr='// 0x42FDD0F017B1E38E
// 0x714BD6E4
PED::GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedRelationshipGroupHash' func='yes'>
			<Overload retVal='Hash' descr='// 0x7DBDD04862D95F04
// 0x354F283C
PED::GET_PED_RELATIONSHIP_GROUP_HASH(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedResetFlag' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAF9E59B1B1FBF2A0
// 0x2FC10D11
PED::GET_PED_RESET_FLAG(Ped ped, int flagId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int flagId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedsJacker' func='yes'>
			<Overload retVal='Ped' descr='// 0x9B128DC36C1E04CF
// 0xDE1DBB59
PED::GET_PEDS_JACKER(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedSourceOfDeath' func='yes'>
			<Overload retVal='Entity' descr='// 0x93C8B64DEB84728C
// 0x84ADF9EB
PED::GET_PED_SOURCE_OF_DEATH(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns the Entity (Ped, Vehicle, or ?Object?) that killed the &apos;ped&apos;  

Is best to check if the Ped is dead before asking for its killer.  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_PED_KILLER'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_PED_KILLER' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetPedSourceOfDeath' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetPedStealthMovement' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7C2AC9CA66575FBF
// 0x40321B83
PED::GET_PED_STEALTH_MOVEMENT(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns whether the entity is in stealth mode  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedTextureVariation' func='yes'>
			<Overload retVal='int' descr='// 0x04A355E041E004E6
// 0xC0A8590A
PED::GET_PED_TEXTURE_VARIATION(Ped ped, int componentId);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int componentId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedType' func='yes'>
			<Overload retVal='int' descr='// 0xFF059E1E4C01E63C
// 0xB1460D43
PED::GET_PED_TYPE(Ped ped);
----------------------------------------------------------------------------------------------------
```

Ped Types: (ordered by return priority)  

Michael = 0  

Franklin = 1  

Trevor = 2  

Army = 29  

Animal = 28  

SWAT = 27  

LSFD = 21  

Paramedic = 20  

Cop = 6  

Male = 4  

Female = 5   

Human = 26  

Note/Exception  

hc_gunman : 4 // Mix male and female  

hc_hacker : 4 // Mix male and female  

mp_f_misty_01 : 4 // Female character  

s_f_y_ranger_01 : 5 // Ranger  

s_m_y_ranger_01 : 4 // Ranger  

s_m_y_uscg_01 : 6 // US Coast Guard  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerPedIsFollowing' func='yes'>
			<Overload retVal='Player' descr='// 0x6A3975DEA89F9A17
// 0xDE7442EE
PED::GET_PLAYER_PED_IS_FOLLOWING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRandomPedAtCoord' func='yes'>
			<Overload retVal='Ped' descr='// 0x876046A8E3A4B71C
// 0xDC8239EB
PED::GET_RANDOM_PED_AT_COORD(float x, float y, float z, float xRadius, float yRadius, float zRadius, 
----------------------------------------------------------------------------------------------------
pedType);

```

```

Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed.   

Ped Types:  

Any = -1  

Player = 1  

Male = 4   

Female = 5   

Cop = 6  

Human = 26  

SWAT = 27   

Animal = 28  

Army = 29  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float xRadius' />
				<Param name='float yRadius' />
				<Param name='float zRadius' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRelationshipBetweenGroups' func='yes'>
			<Overload retVal='int' descr='// 0x9E6B70061662AE5C
// 0x4E372FE2
PED::GET_RELATIONSHIP_BETWEEN_GROUPS(Hash group1, Hash group2);
----------------------------------------------------------------------------------------------------
```

Gets the relationship between two groups. This should be called twice (once for each group).  

Relationship types:  

0 = Companion  

1 = Respect  

2 = Like  

3 = Neutral  

4 = Dislike  

5 = Hate  

255 = Pedestrians  

Example:  

PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);  

PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);  

```'>
				<Param name='Hash group1' />
				<Param name='Hash group2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRelationshipBetweenPeds' func='yes'>
			<Overload retVal='int' descr='// 0xEBA5AD3A0EAF7121
// 0xE254C39C
PED::GET_RELATIONSHIP_BETWEEN_PEDS(Ped ped1, Ped ped2);
----------------------------------------------------------------------------------------------------
```

Gets the relationship between two peds. This should be called twice (once for each ped).  

Relationship types:  

0 = Companion  

1 = Respect  

2 = Like  

3 = Neutral  

4 = Dislike  

5 = Hate  

255 = Pedestrians  

(Credits: Inco)  

Example:  

PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);  

PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);  

```'>
				<Param name='Ped ped1' />
				<Param name='Ped ped2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetSeatPedIsTryingToEnter' func='yes'>
			<Overload retVal='int' descr='// 0x6F4C85ACD641BCD2
// 0xACF162E0
PED::GET_SEAT_PED_IS_TRYING_TO_ENTER(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetSynchronizedScenePhase' func='yes'>
			<Overload retVal='float' descr='// 0xE4A310B1D7FA73CC
// 0xB0B2C852
PED::GET_SYNCHRONIZED_SCENE_PHASE(int sceneID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int sceneID' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetSynchronizedSceneRate' func='yes'>
			<Overload retVal='float' descr='// 0xD80932D577274D40
// 0x89365F0D
PED::GET_SYNCHRONIZED_SCENE_RATE(int sceneID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int sceneID' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTattooZone' func='yes'>
			<Overload retVal='int' descr='// 0x9FD452BFBE7A7A8B
// 0x3543019E
PED::_GET_TATTOO_ZONE(Hash collection, Hash overlay);
----------------------------------------------------------------------------------------------------
```

Returns the zoneID for the overlay if it is a member of collection.  

enum TattooZoneData  

{  

	ZONE_TORSO = 0,  

	ZONE_HEAD = 1,  

	ZONE_LEFT_ARM = 2,  

	ZONE_RIGHT_ARM = 3,  

	ZONE_LEFT_LEG = 4,  

	ZONE_RIGHT_LEG = 5,  

	ZONE_UNKNOWN = 6,  

	ZONE_NONE = 7,  

};  

```'>
				<Param name='Hash collection' />
				<Param name='Hash overlay' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehiclePedIsIn' func='yes'>
			<Overload retVal='Vehicle' descr='// 0x9A9112A0FE9A4713
// 0xAFE92319
PED::GET_VEHICLE_PED_IS_IN(Ped ped, BOOL lastVehicle);
----------------------------------------------------------------------------------------------------
```

Gets the vehicle the specified Ped is/was in depending on bool value.  

[False = CurrentVehicle, True = LastVehicle]  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL lastVehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehiclePedIsTryingToEnter' func='yes'>
			<Overload retVal='Vehicle' descr='// 0x814FA8BE5449445D
// 0x99968B37
PED::GET_VEHICLE_PED_IS_TRYING_TO_ENTER(Ped ped);
----------------------------------------------------------------------------------------------------
```

Should be renamed GET_CAR_PED_IS_TRYING_TO_ENTER...  

Because this works only for cars, not for helis, planes,motorcycles or bicycles...  

From Calderon  

This is what R* named it, deal with it.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehiclePedIsUsing' func='yes'>
			<Overload retVal='Vehicle' descr='// 0x6094AD011A2EA87D
// 0x6DE3AADA
PED::GET_VEHICLE_PED_IS_USING(Ped ped);
----------------------------------------------------------------------------------------------------
```

Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit 
for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GivePedHelmet' func='yes'>
			<Overload retVal='void' descr='// 0x54C7C4A94367717E
// 0x1862A461
PED::GIVE_PED_HELMET(Ped ped, BOOL cannotRemove, int helmetFlag, int textureIndex);
----------------------------------------------------------------------------------------------------
```

PoliceMotorcycleHelmet	1024	  

RegularMotorcycleHelmet	4096	  

FiremanHelmet	16384	  

PilotHeadset	32768	  

PilotHelmet	65536  

--  

p2 is generally 4096 or 16384 in the scripts. p1 varies between 1 and 0.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL cannotRemove' />
				<Param name='int helmetFlag' />
				<Param name='int textureIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GivePedNmMessage' func='yes'>
			<Overload retVal='void' descr='// 0xB158DFCCC56E5C5B
// 0x737C3689
PED::GIVE_PED_NM_MESSAGE(Ped ped);
----------------------------------------------------------------------------------------------------
```

Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.  

If a message hasn&apos;t been created already, this function does nothing.  

If the Ped is not ragdolled with Euphoria enabled, this function does nothing.  

The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 400
0, 5000, 1, 1, 1, 0);  

Call order:  

SET_PED_TO_RAGDOLL  

CREATE_NM_MESSAGE  

GIVE_PED_NM_MESSAGE  

Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the followi
ng calls can be made:  

SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);  

CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is alr
eady doing some Euphoria stuff.  

GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.  

CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.  

GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.  

CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.  

GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasActionModeAssetLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE4B5F4BF2CB24E65
// 0xF7EB2BF1
PED::HAS_ACTION_MODE_ASSET_LOADED(char* asset);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* asset' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPedHeadBlendFinished' func='yes'>
			<Overload retVal='BOOL' descr='// 0x654CD0A825161131
// 0x2B1BD9C5
PED::HAS_PED_HEAD_BLEND_FINISHED(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPedReceivedEvent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8507BCB710FA6DC0
// 0xECD73DB0
PED::HAS_PED_RECEIVED_EVENT(Ped ped, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasStealthModeAssetLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE977FC5B08AF3441
// 0x39245667
PED::HAS_STEALTH_MODE_ASSET_LOADED(char* asset);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* asset' />
			</Overload>
		</KeyWord>
		<KeyWord name='HidePedBloodDamageByZone' func='yes'>
			<Overload retVal='void' descr='// 0x62AB793144DE75DC
// 0x0CB6C4ED
PED::HIDE_PED_BLOOD_DAMAGE_BY_ZONE(Ped ped, Any p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAnyPedNearPoint' func='yes'>
			<Overload retVal='BOOL' descr='// 0x083961498679DC9F
// 0xFBD9B050
PED::IS_ANY_PED_NEAR_POINT(float x, float y, float z, float radius);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAnyPedShootingInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA0D3D71EA1086C55
// 0x91833867
PED::IS_ANY_PED_SHOOTING_IN_AREA(float x1, float y1, float z1, float x2, float y2, float z2, BOOL p6
----------------------------------------------------------------------------------------------------
OL p7);

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsConversationPedDead' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE0A0AEC214B1FABA
// 0x1FA39EFE
PED::IS_CONVERSATION_PED_DEAD(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsCopPedInArea_3d' func='yes'>
			<Overload retVal='BOOL' descr='// 0x16EC4839969F9F5E
// 0xB98DB96B
PED::IS_COP_PED_IN_AREA_3D(float x1, float y1, float z1, float x2, float y2, float z2);
----------------------------------------------------------------------------------------------------
```

xyz - relative to the world origin.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedAimingFromCover' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3998B1276A3300E5
// 0xDEBAB2AF
PED::IS_PED_AIMING_FROM_COVER(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedAPlayer' func='yes'>
			<Overload retVal='BOOL' descr='// 0x12534C348C6CB68B
// 0x404794CA
PED::IS_PED_A_PLAYER(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That&apos;s it.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedBeingJacked' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9A497FE2DF198913
// 0xD45D605C
PED::IS_PED_BEING_JACKED(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedBeingStealthKilled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x863B23EFDE9C5DF2
// 0xD044C8AF
PED::IS_PED_BEING_STEALTH_KILLED(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedBeingStunned' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4FBACCE3B4138EE8
// 0x0A66CE30
PED::IS_PED_BEING_STUNNED(Ped ped, int p1);
----------------------------------------------------------------------------------------------------
```

p1 is always 0  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedBlushColorValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0x604E810189EE3A59
PED::_IS_PED_BLUSH_COLOR_VALID(int colorID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int colorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedClimbing' func='yes'>
			<Overload retVal='BOOL' descr='// 0x53E8CB4F48BFE623
// 0xBCE03D35
PED::IS_PED_CLIMBING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedComponentVariationValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE825F6B6CEA7671D
// 0x952ABD9A
PED::IS_PED_COMPONENT_VARIATION_VALID(Ped ped, int componentId, int drawableId, int textureId);
----------------------------------------------------------------------------------------------------
```

Checks if the component variation is valid, this works great for randomizing components using loops.
  

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int componentId' />
				<Param name='int drawableId' />
				<Param name='int textureId' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedDeadOrDying' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3317DEDB88C95038
// 0xCBDB7739
PED::IS_PED_DEAD_OR_DYING(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Seems to consistently return true if the ped is dead.  

p1 is always passed 1 in the scripts.  

I suggest to remove &quot;OR_DYING&quot; part, because it does not detect dying phase.  

That&apos;s what the devs call it, cry about it.  

lol  

that&apos;s a good meme right there.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedDiving' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5527B8246FEF9B11
// 0x7BC5BF3C
PED::IS_PED_DIVING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedDoingDriveby' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB2C086CC1BF8F2BF
// 0xAC3CEB9C
PED::IS_PED_DOING_DRIVEBY(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedDucking' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD125AE748725C6BC
// 0x9199C77D
PED::IS_PED_DUCKING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedEvasiveDiving' func='yes'>
			<Overload retVal='BOOL' descr='// 0x414641C26E105898
// 0xD82829DC
PED::IS_PED_EVASIVE_DIVING(Ped ped, Entity* evadingEntity);
----------------------------------------------------------------------------------------------------
```

Presumably returns the Entity that the Ped is currently diving out of the way of.  

var num3;  

    if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)  

        if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)  

```'>
				<Param name='Ped ped' />
				<Param name='Entity* evadingEntity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedFacingPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD71649DB0A545AA3
// 0x0B775838
PED::IS_PED_FACING_PED(Ped ped, Ped otherPed, float angle);
----------------------------------------------------------------------------------------------------
```

angle is ped&apos;s view cone  

```'>
				<Param name='Ped ped' />
				<Param name='Ped otherPed' />
				<Param name='float angle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedFalling' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFB92A102F1C4DFA3
// 0xABF77334
PED::IS_PED_FALLING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedFatallyInjured' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD839450756ED5A80
// 0xBADA0093
PED::IS_PED_FATALLY_INJURED(Ped ped);
----------------------------------------------------------------------------------------------------
```

Gets a value indicating whether this ped&apos;s health is below its fatally injured threshold. The defaul
t threshold is 100.  

If the handle is invalid, the function returns true.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedFleeing' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBBCCE00B381F8482
// 0x85D813C6
PED::IS_PED_FLEEING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedGettingIntoAVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBB062B2B5722478E
// 0x90E805AC
PED::IS_PED_GETTING_INTO_A_VEHICLE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedGoingIntoCover' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9F65DBC537E59AD5
// 0xA3589628
PED::IS_PED_GOING_INTO_COVER(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedGroupMember' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9BB01E3834671191
// 0x876D5363
PED::IS_PED_GROUP_MEMBER(Ped ped, int groupId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int groupId' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedHairColorValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE0D36E5D9E99CC21
PED::_IS_PED_HAIR_COLOR_VALID(int colorID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int colorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedHangingOnToVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1C86D8AEF8254B78
// 0x9678D4FF
PED::IS_PED_HANGING_ON_TO_VEHICLE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedheadshotReady' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7085228842B13A67
// 0x761CD02E
PED::IS_PEDHEADSHOT_READY(int handle);
----------------------------------------------------------------------------------------------------
```

gtaforums.com/topic/885580-ped-headshotmugshot-txd/  

```'>
				<Param name='int handle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedheadshotValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA0A9668F158129A2
// 0x0B1080C4
PED::IS_PEDHEADSHOT_VALID(int handle);
----------------------------------------------------------------------------------------------------
```

gtaforums.com/topic/885580-ped-headshotmugshot-txd/  

```'>
				<Param name='int handle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedHeadtrackingEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x813A0A7C9D2E831F
// 0x233C9ACF
PED::IS_PED_HEADTRACKING_ENTITY(Ped ped, Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedHeadtrackingPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5CD3CB88A7F8850D
// 0x2A5DF721
PED::IS_PED_HEADTRACKING_PED(Ped ped1, Ped ped2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped1' />
				<Param name='Ped ped2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedHuman' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB980061DA992779D
// 0x194BB7B0
PED::IS_PED_HUMAN(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns true/false if the ped is/isn&apos;t humanoid.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedHurt' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5983BB449D7FDB12
// 0x69DFA0AF
PED::IS_PED_HURT(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns whether the specified ped is hurt.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInAnyBoat' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2E0E1C2B4F6CB339
// 0x1118A947
PED::IS_PED_IN_ANY_BOAT(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInAnyHeli' func='yes'>
			<Overload retVal='BOOL' descr='// 0x298B91AE825E5705
// 0x7AB5523B
PED::IS_PED_IN_ANY_HELI(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInAnyPlane' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5FFF4CFC74D8FB80
// 0x51BBCE7E
PED::IS_PED_IN_ANY_PLANE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInAnyPoliceVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0BD04E29640C9C12
// 0x84FA790D
PED::IS_PED_IN_ANY_POLICE_VEHICLE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInAnySub' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFBFC01CCFB35D99E
// 0xE65F8059
PED::IS_PED_IN_ANY_SUB(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInAnyTaxi' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6E575D6A898AB852
// 0x16FD386C
PED::IS_PED_IN_ANY_TAXI(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInAnyTrain' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6F972C1AB75A1ED0
// 0x759EF63A
PED::IS_PED_IN_ANY_TRAIN(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInAnyVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x997ABD671D25CA0B
// 0x3B0171EE
PED::IS_PED_IN_ANY_VEHICLE(Ped ped, BOOL atGetIn);
----------------------------------------------------------------------------------------------------
```

Gets a value indicating whether the specified ped is in any vehicle.  

If &apos;atGetIn&apos; is false, the function will not return true until the ped is sitting in the vehicle and
 is about to close the door. If it&apos;s true, the function returns true the moment the ped starts to ge
t onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, t
he function will not return true until the ped has descended down into the submersible and gotten in
to the seat, while if it&apos;s true, it&apos;ll return true the moment the hatch has been opened and the ped 
is about to descend into the submersible.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL atGetIn' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInCombat' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4859F1FC66A6278E
// 0xFE027CB5
PED::IS_PED_IN_COMBAT(Ped ped, Ped target);
----------------------------------------------------------------------------------------------------
```

Checks to see if ped and target are in combat with eachother. Only goes one-way: if target is engage
d in combat with ped but ped has not yet reacted, the function will return false until ped starts fi
ghting back.  

p1 is usually 0 in the scripts because it gets the ped id during the task sequence. For instance: PE
D::IS_PED_IN_COMBAT(l_42E[4/*14*/], PLAYER::PLAYER_PED_ID()) // armenian2.ct4: 43794  

```'>
				<Param name='Ped ped' />
				<Param name='Ped target' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInCover' func='yes'>
			<Overload retVal='BOOL' descr='// 0x60DFD0691A170B88
// 0x972C5A8B
PED::IS_PED_IN_COVER(Ped ped, BOOL exceptUseWeapon);
----------------------------------------------------------------------------------------------------
```

p1 is nearly always 0 in the scripts.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL exceptUseWeapon' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInCoverFacingLeft' func='yes'>
			<Overload retVal='BOOL' descr='// 0x845333B3150583AB
// 0xB89DBB80
PED::IS_PED_IN_COVER_FACING_LEFT(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInFlyingVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9134873537FA419C
// 0xCA072485
PED::IS_PED_IN_FLYING_VEHICLE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInGroup' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5891CAC5D4ACFF74
// 0x836D9795
PED::IS_PED_IN_GROUP(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInjured' func='yes'>
			<Overload retVal='BOOL' descr='// 0x84A2DD9AC37C35C1
// 0x2530A087
PED::IS_PED_INJURED(Ped ped);
----------------------------------------------------------------------------------------------------
```

Gets a value indicating whether this ped&apos;s health is below its injured threshold.  

The default threshold is 100.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInMeleeCombat' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4E209B2C1EAD5159
// 0xFD7814A5
PED::IS_PED_IN_MELEE_COMBAT(Ped ped);
----------------------------------------------------------------------------------------------------
```

Notes: The function only returns true while the ped is:   

A.) Swinging a random melee attack (including pistol-whipping)  

B.) Reacting to being hit by a melee attack (including pistol-whipping)  

C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to do
dge+counter).   

You don&apos;t have to be holding the melee-targetting button to be in this stance; you stay in it by def
ault for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for t
he duration of the punch animation and then returns false again, even if you&apos;ve punched and made-ang
ry many peds  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInModel' func='yes'>
			<Overload retVal='BOOL' descr='// 0x796D90EFB19AA332
// 0xA6438D4B
PED::IS_PED_IN_MODEL(Ped ped, Hash modelHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInParachuteFreeFall' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7DCE8BDA0F1C1200
// 0xCD71F11B
PED::IS_PED_IN_PARACHUTE_FREE_FALL(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedInVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA3EE4A07279BB9DB
// 0x7DA6BC83
PED::IS_PED_IN_VEHICLE(Ped ped, Vehicle vehicle, BOOL atGetIn);
----------------------------------------------------------------------------------------------------
```

Gets a value indicating whether the specified ped is in the specified vehicle.  

If &apos;atGetIn&apos; is false, the function will not return true until the ped is sitting in the vehicle and
 is about to close the door. If it&apos;s true, the function returns true the moment the ped starts to ge
t onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, t
he function will not return true until the ped has descended down into the submersible and gotten in
to the seat, while if it&apos;s true, it&apos;ll return true the moment the hatch has been opened and the ped 
is about to descend into the submersible.  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='BOOL atGetIn' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedJacking' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4AE4FF911DFB61DA
// 0x3B321816
PED::IS_PED_JACKING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedJumping' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCEDABC5900A0BF97
// 0x07E5BC0E
PED::IS_PED_JUMPING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedJumpingOutOfVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x433DDFFE2044B636
// 0xB19215F6
PED::IS_PED_JUMPING_OUT_OF_VEHICLE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedLipstickColorValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0525A2C2562F3CD4
PED::_IS_PED_LIPSTICK_COLOR_VALID(int colorID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int colorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedMale' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6D9F5FAA7488BA46
// 0x90950455
PED::IS_PED_MALE(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns true/false if the ped is/isn&apos;t male.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedModel' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC9D55B1A358A5BF7
// 0x5F1DDFCB
PED::IS_PED_MODEL(Ped ped, Hash modelHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedOnAnyBike' func='yes'>
			<Overload retVal='BOOL' descr='// 0x94495889E22C6479
// 0x4D885B2E
PED::IS_PED_ON_ANY_BIKE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedOnFoot' func='yes'>
			<Overload retVal='BOOL' descr='// 0x01FEE67DB37F59B2
// 0xC60D0785
PED::IS_PED_ON_FOOT(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedOnMount' func='yes'>
			<Overload retVal='BOOL' descr='// 0x460BC76A0E10655E
// 0x43103006
PED::IS_PED_ON_MOUNT(Ped ped);
----------------------------------------------------------------------------------------------------
```

Same function call as PED::GET_MOUNT, aka just returns 0  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedOnSpecificVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEC5F66E459AF3BB2
// 0x63CB4603
PED::IS_PED_ON_SPECIFIC_VEHICLE(Ped ped, Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedOnVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x67722AEB798E5FAB
// 0xA1AE7CC7
PED::IS_PED_ON_VEHICLE(Ped ped);
----------------------------------------------------------------------------------------------------
```

Gets a value indicating whether the specified ped is on top of any vehicle.  

Return 1 when ped is on vehicle.  

Return 0 when ped is not on a vehicle.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedPerformingStealthKill' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFD4CCDBCC59941B7
// 0x9ADD7B21
PED::IS_PED_PERFORMING_STEALTH_KILL(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedPlantingBomb' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC70B5FAE151982D8
// 0x0EDAC574
PED::IS_PED_PLANTING_BOMB(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedProne' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD6A86331A537A7B9
// 0x02C2A6C3
PED::IS_PED_PRONE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedPropValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2B16A3BFF1FBCE49
// 0xC0E23671
PED::_IS_PED_PROP_VALID(Ped ped, int componentId, int drawableId, int TextureId);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int componentId' />
				<Param name='int drawableId' />
				<Param name='int TextureId' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedRagdoll' func='yes'>
			<Overload retVal='BOOL' descr='// 0x47E4E977581C5B55
// 0xC833BBE1
PED::IS_PED_RAGDOLL(Ped ped);
----------------------------------------------------------------------------------------------------
```

If the ped handle passed through the parenthesis is in a ragdoll state this will return true.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedReloading' func='yes'>
			<Overload retVal='BOOL' descr='// 0x24B100C68C645951
// 0x961E1745
PED::IS_PED_RELOADING(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns whether the specified ped is reloading.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedRespondingToEvent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x625B774D75C87068
// 0x7A877554
PED::IS_PED_RESPONDING_TO_EVENT(Ped ped, Any event);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any event' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedRunningMobilePhoneTask' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2AFE52F782F25775
// 0xFB2AFED1
PED::IS_PED_RUNNING_MOBILE_PHONE_TASK(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedRunningRagdollTask' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE3B6097CC25AA69E
// 0x44A153F2
PED::IS_PED_RUNNING_RAGDOLL_TASK(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedShooting' func='yes'>
			<Overload retVal='BOOL' descr='// 0x34616828CD07F1A1
// 0xE7C3405E
PED::IS_PED_SHOOTING(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns whether the specified ped is shooting.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedShootingInArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7E9DFE24AC1E58EF
// 0x741BF04F
PED::IS_PED_SHOOTING_IN_AREA(Ped ped, float x1, float y1, float z1, float x2, float y2, float z2, BO
----------------------------------------------------------------------------------------------------
7, BOOL p8);

```'>
				<Param name='Ped ped' />
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedSittingInAnyVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x826AA586EDB9FEF8
// 0x0EA9CA03
PED::IS_PED_SITTING_IN_ANY_VEHICLE(Ped ped);
----------------------------------------------------------------------------------------------------
```

Detect if ped is in any vehicle  

[True/False]  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedSittingInVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA808AA1D79230FC2
// 0xDDDE26FA
PED::IS_PED_SITTING_IN_VEHICLE(Ped ped, Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Detect if ped is sitting in the specified vehicle  

[True/False]  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedStandingInCover' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6A03BF943D767C93
PED::_IS_PED_STANDING_IN_COVER(Ped ped);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0xDD5D08A7  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedStopped' func='yes'>
			<Overload retVal='BOOL' descr='// 0x530944F6F4B8A214
// 0xA0DC0B87
PED::IS_PED_STOPPED(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns true if the ped doesn&apos;t do any movement. If the ped is being pushed forwards by using APPLY_
FORCE_TO_ENTITY for example, the function returns false.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedSwimming' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9DE327631295B4C2
// 0x7AB43DB8
PED::IS_PED_SWIMMING(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedSwimmingUnderWater' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC024869A53992F34
// 0x0E8D524F
PED::IS_PED_SWIMMING_UNDER_WATER(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedTracked' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4C5E1F087CD10BB7
// 0x7EB613D9
PED::IS_PED_TRACKED(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedTryingToEnterALockedVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x44D28D5DDFE5F68C
// 0x46828B4E
PED::IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedUsingActionMode' func='yes'>
			<Overload retVal='BOOL' descr='// 0x00E73468D085F745
// 0x5AE7EDA2
PED::IS_PED_USING_ACTION_MODE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedUsingAnyScenario' func='yes'>
			<Overload retVal='BOOL' descr='// 0x57AB4A3080F85143
// 0x195EF5B7
PED::IS_PED_USING_ANY_SCENARIO(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedUsingScenario' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1BF094736DD62C2E
// 0x0F65B0D4
PED::IS_PED_USING_SCENARIO(Ped ped, char* scenario);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='char* scenario' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedVaulting' func='yes'>
			<Overload retVal='BOOL' descr='// 0x117C70D1F5730B5E
// 0xC3169BDA
PED::IS_PED_VAULTING(Ped ped);
----------------------------------------------------------------------------------------------------
```

Definition of vaulting?  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedWearingHelmet' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF33BDFE19B309B19
// 0x0D680D49
PED::IS_PED_WEARING_HELMET(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns true if the ped passed through the parenthesis is wearing a helmet.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsScriptedScenarioPedUsingConditionalAnim' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6EC47A344923E1ED
// 0x3C30B447
PED::IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM(Ped ped, char* animDict, char* anim);
----------------------------------------------------------------------------------------------------
```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Ped ped' />
				<Param name='char* animDict' />
				<Param name='char* anim' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsSynchronizedSceneLooped' func='yes'>
			<Overload retVal='BOOL' descr='// 0x62522002E0C391BA
// 0x47D87A84
PED::IS_SYNCHRONIZED_SCENE_LOOPED(int sceneID);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int sceneID' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsSynchronizedSceneRunning' func='yes'>
			<Overload retVal='BOOL' descr='// 0x25D39B935A038A26
// 0x57A282F1
PED::IS_SYNCHRONIZED_SCENE_RUNNING(int sceneId);
----------------------------------------------------------------------------------------------------
```

Returns true if a synchronized scene is running  

```'>
				<Param name='int sceneId' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsTrackedPedVisible' func='yes'>
			<Overload retVal='BOOL' descr='// 0x91C8E617F64188AC
// 0x33248CC1
PED::IS_TRACKED_PED_VISIBLE(Ped ped);
----------------------------------------------------------------------------------------------------
```

returns whether or not a ped is visible within your FOV, not this check auto&apos;s to false after a cert
ain distance.  

Target needs to be tracked.. won&apos;t work otherwise.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='KnockOffPedProp' func='yes'>
			<Overload retVal='void' descr='// 0x6FD7816A36615F48
// 0x08D8B180
PED::KNOCK_OFF_PED_PROP(Ped ped, BOOL p1, BOOL p2, BOOL p3, BOOL p4);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='KnockPedOffVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x45BBCBA77C29A841
// 0xACDD0674
PED::KNOCK_PED_OFF_VEHICLE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x013e5cfc38cd5387' func='yes'>
			<Overload retVal='void' descr='// 0x013E5CFC38CD5387
PED::_0x013E5CFC38CD5387(Any p0, Any* p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x03ea03af85a85cb7' func='yes'>
			<Overload retVal='BOOL' descr='// 0x03EA03AF85A85CB7
// 0x18DD76A1
PED::_0x03EA03AF85A85CB7(Ped ped, BOOL p1, BOOL p2, BOOL p3, BOOL p4, BOOL p5, BOOL p6, BOOL p7, Any
----------------------------------------------------------------------------------------------------
;

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
				<Param name='BOOL p6' />
				<Param name='BOOL p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x06087579e7aa85a9' func='yes'>
			<Overload retVal='BOOL' descr='// 0x06087579E7AA85A9
// 0xD0567D41
PED::_0x06087579E7AA85A9(Any p0, Any p1, float p2, float p3, float p4, float p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x061cb768363d6424' func='yes'>
			<Overload retVal='void' descr='// 0x061CB768363D6424
// 0x7DA12905
PED::_0x061CB768363D6424(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0b3e35ac043707d9' func='yes'>
			<Overload retVal='void' descr='// 0x0B3E35AC043707D9
PED::_0x0B3E35AC043707D9(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0f62619393661d6e' func='yes'>
			<Overload retVal='void' descr='// 0x0F62619393661D6E
PED::_0x0F62619393661D6E(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x110f526ab784111f' func='yes'>
			<Overload retVal='void' descr='// 0x110F526AB784111F
// 0x3B882533
PED::_0x110F526AB784111F(Ped ped, float p1);
----------------------------------------------------------------------------------------------------
```

In agency_heist3b.c4, its like this 90% of the time:  

PED::_110F526AB784111F(ped, 0.099);  

PED::SET_PED_ENVEFF_SCALE(ped, 1.0);  

PED::_D69411AA0CEBF9E9(ped, 87, 81, 68);  

PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);  

and its like this 10% of the time:  

PED::_110F526AB784111F(ped, 0.2);  

PED::SET_PED_ENVEFF_SCALE(ped, 0.65);  

PED::_D69411AA0CEBF9E9(ped, 74, 69, 60);  

PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);  

```'>
				<Param name='Ped ped' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1216e0bfa72cc703' func='yes'>
			<Overload retVal='void' descr='// 0x1216E0BFA72CC703
// 0x7BD26837
PED::_0x1216E0BFA72CC703(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1280804f7cfd2d6c' func='yes'>
			<Overload retVal='void' descr='// 0x1280804F7CFD2D6C
// 0x7BCD8991
PED::_0x1280804F7CFD2D6C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x129466ed55140f8d' func='yes'>
			<Overload retVal='void' descr='// 0x129466ED55140F8D
// 0x37DBC2AD
PED::_0x129466ED55140F8D(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x14590ddbedb1ec85' func='yes'>
			<Overload retVal='BOOL' descr='// 0x14590DDBEDB1EC85
PED::_0x14590DDBEDB1EC85(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1461b28a06717d68' func='yes'>
			<Overload retVal='Any' descr='// 0x1461B28A06717D68
PED::_0x1461B28A06717D68(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x148b08c2d2acb884' func='yes'>
			<Overload retVal='void' descr='// 0x148B08C2D2ACB884
PED::_0x148B08C2D2ACB884(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1a330d297aac6bc1' func='yes'>
			<Overload retVal='void' descr='// 0x1A330D297AAC6BC1
// 0x77BB7CB8
PED::_0x1A330D297AAC6BC1(Ped ped, int p1);
----------------------------------------------------------------------------------------------------
```

Only appears in lamar1 script.  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1e77fa7a62ee6c4c' func='yes'>
			<Overload retVal='Any' descr='// 0x1E77FA7A62EE6C4C
PED::_0x1E77FA7A62EE6C4C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1e98817b311ae98a' func='yes'>
			<Overload retVal='int' descr='// 0x1E98817B311AE98A
PED::_0x1E98817B311AE98A(Ped ped);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0xDF6D5D54  

Name was _GET_PED_TIME_OF_DEATH  

-----------------------------------------------------------------  

There is no way this is the correct name. The only time this is called it&apos;s compared with the game t
imer and I used this to test something and noticed when I was killed by no matter what it was my &apos;Ti
me Of Death&apos; via this native was always 0, but my friends was some random big number like so, 147591
.  

Retreives [CPed + 15CC] (as of 944)  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_PED_TIME_OF_DEATH'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_PED_TIME_OF_DEATH' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: N_0x1e98817b311ae98a' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='N_0x2016c603d6b8987c' func='yes'>
			<Overload retVal='void' descr='// 0x2016C603D6B8987C
// 0xA6F2C057
PED::_0x2016C603D6B8987C(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2208438012482a1a' func='yes'>
			<Overload retVal='void' descr='// 0x2208438012482A1A
// 0x187B9070
PED::_0x2208438012482A1A(Ped ped, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Function.Call(Hash._0x2208438012482A1A, ped, 0, 0);  

This makes the ped have faster animations  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x25361a96e0f7e419' func='yes'>
			<Overload retVal='Any' descr='// 0x25361A96E0F7E419
// 0x58C0F6CF
PED::_0x25361A96E0F7E419(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x26af0e8e30bd2a2c' func='yes'>
			<Overload retVal='BOOL' descr='// 0x26AF0E8E30BD2A2C
PED::_0x26AF0E8E30BD2A2C(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2735233a786b1bef' func='yes'>
			<Overload retVal='void' descr='// 0x2735233A786B1BEF
// 0x373CC405
PED::_0x2735233A786B1BEF(Ped ped, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x280c7e3ac7f56e90' func='yes'>
			<Overload retVal='void' descr='// 0x280C7E3AC7F56E90
// 0x36A4AC65
PED::_0x280C7E3AC7F56E90(Any p0, Any* p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x288df530c92dad6f' func='yes'>
			<Overload retVal='void' descr='// 0x288DF530C92DAD6F
PED::_0x288DF530C92DAD6F(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2b5aa717a181fb4c' func='yes'>
			<Overload retVal='void' descr='// 0x2B5AA717A181FB4C
// 0x98E29ED0
PED::_0x2B5AA717A181FB4C(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2b694afcf64e6994' func='yes'>
			<Overload retVal='void' descr='// 0x2B694AFCF64E6994
PED::_0x2B694AFCF64E6994(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2df9038c90ad5264' func='yes'>
			<Overload retVal='void' descr='// 0x2DF9038C90AD5264
// 0x909A1D76
PED::_0x2DF9038C90AD5264(float p0, float p1, float p2, float p3, float p4, int interiorFlags, float 
----------------------------------------------------------------------------------------------------
e, int duration);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='int interiorFlags' />
				<Param name='float ' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2dfc81c9b9608549' func='yes'>
			<Overload retVal='Any' descr='// 0x2DFC81C9B9608549
PED::_0x2DFC81C9B9608549(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2f074c904d85129e' func='yes'>
			<Overload retVal='void' descr='// 0x2F074C904D85129E
PED::_0x2F074C904D85129E(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2f3c3d9f50681de4' func='yes'>
			<Overload retVal='void' descr='// 0x2F3C3D9F50681DE4
// 0xCC9D7F1A
PED::_0x2F3C3D9F50681DE4(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x336b3d200ab007cb' func='yes'>
			<Overload retVal='Any' descr='// 0x336B3D200AB007CB
// 0xFB18CB19
PED::_0x336B3D200AB007CB(Any p0, float p1, float p2, float p3, float p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x36b77bb84687c318' func='yes'>
			<Overload retVal='Any' descr='// 0x36B77BB84687C318
PED::_0x36B77BB84687C318(Ped ped, Any p1);
----------------------------------------------------------------------------------------------------
```

GET_TIME_SINCE_???  

```'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x36c6984c3ed0c911' func='yes'>
			<Overload retVal='void' descr='// 0x36C6984C3ED0C911
PED::_0x36C6984C3ED0C911(Any p0);
----------------------------------------------------------------------------------------------------
```

when player character is used plays remove scuba gear animation  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3795688a307e1eb6' func='yes'>
			<Overload retVal='Any' descr='// 0x3795688A307E1EB6
PED::_0x3795688A307E1EB6(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x39d55a620fcb6a3a' func='yes'>
			<Overload retVal='Any' descr='// 0x39D55A620FCB6A3A
// 0x45F3BDFB
PED::_0x39D55A620FCB6A3A(Ped ped, int slot, int drawableId, int textureId);
----------------------------------------------------------------------------------------------------
```

from extreme3.c4  

PED::_39D55A620FCB6A3A(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PE
D_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));  

p1 is probably componentId  

```'>
				<Param name='Ped ped' />
				<Param name='int slot' />
				<Param name='int drawableId' />
				<Param name='int textureId' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3c67506996001f5e' func='yes'>
			<Overload retVal='Any' descr='// 0x3C67506996001F5E
// 0x814A28F4
PED::_0x3C67506996001F5E();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3e802f11fbe27674' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3E802F11FBE27674
PED::_0x3E802F11FBE27674(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3e9679c1dfcf422c' func='yes'>
			<Overload retVal='void' descr='// 0x3E9679C1DFCF422C
PED::_0x3E9679C1DFCF422C(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3f7325574e41b44d' func='yes'>
			<Overload retVal='void' descr='// 0x3F7325574E41B44D
PED::_0x3F7325574E41B44D(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x412f1364fa066cfb' func='yes'>
			<Overload retVal='Any' descr='// 0x412F1364FA066CFB
PED::_0x412F1364FA066CFB(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x425aecf167663f48' func='yes'>
			<Overload retVal='void' descr='// 0x425AECF167663F48
// 0x5BC276AE
PED::_0x425AECF167663F48(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x451294e859ecc018' func='yes'>
			<Overload retVal='BOOL' descr='// 0x451294E859ECC018
// 0x8A3A3116
PED::_0x451294E859ECC018(int p0);
----------------------------------------------------------------------------------------------------
```

yoga.ysc  

if (PED::IS_PED_WEARING_HELMET(iParam0) && PED::_0x451294E859ECC018(iParam0) != -1)  

{  

	*uParam2 = PED::_0x451294E859ECC018(iParam0);  

	*uParam3 = PED::_0x9D728C1E12BF5518(iParam0);  

}  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x451d05012ccec234' func='yes'>
			<Overload retVal='Any' descr='// 0x451D05012CCEC234
PED::_0x451D05012CCEC234(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4668d80430d6c299' func='yes'>
			<Overload retVal='void' descr='// 0x4668D80430D6C299
// 0x894314A4
PED::_0x4668D80430D6C299(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x46b05bcae43856b0' func='yes'>
			<Overload retVal='BOOL' descr='// 0x46B05BCAE43856B0
// 0x79543043
PED::_0x46B05BCAE43856B0(Ped ped, int flag);
----------------------------------------------------------------------------------------------------
```

Checks if the specified unknown flag is set in the ped&apos;s model.  

The engine itself seems to exclusively check for flags 1 and 4 (Might be inlined code of the check t
hat checks for other flags).  

Game scripts exclusively check for flags 1 and 4.  

```'>
				<Param name='Ped ped' />
				<Param name='int flag' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4759cc730f947c81' func='yes'>
			<Overload retVal='void' descr='// 0x4759CC730F947C81
// 0x8C555ADD
PED::_0x4759CC730F947C81();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4852fc386e2e1bb5' func='yes'>
			<Overload retVal='void' descr='// 0x4852FC386E2E1BB5
PED::_0x4852FC386E2E1BB5(Any p0, Any* p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x49e50bdb8ba4dab2' func='yes'>
			<Overload retVal='void' descr='// 0x49E50BDB8BA4DAB2
// 0x397F06E3
PED::_0x49E50BDB8BA4DAB2(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4e90d746056e273d' func='yes'>
			<Overload retVal='void' descr='// 0x4E90D746056E273D
PED::_0x4E90D746056E273D(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x511f1a683387c7e2' func='yes'>
			<Overload retVal='Any' descr='// 0x511F1A683387C7E2
// 0x5B1B70AA
PED::_0x511F1A683387C7E2(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x52d59ab61ddc05dd' func='yes'>
			<Overload retVal='void' descr='// 0x52D59AB61DDC05DD
// 0x9A2180FF
PED::_0x52D59AB61DDC05DD(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5407b7288d0478b7' func='yes'>
			<Overload retVal='int' descr='// 0x5407B7288D0478B7
// 0xEF0B78E6
PED::_0x5407B7288D0478B7(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5615e0c5eb2bc6e2' func='yes'>
			<Overload retVal='void' descr='// 0x5615E0C5EB2BC6E2
PED::_0x5615E0C5EB2BC6E2(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x570389d1c3de3c6b' func='yes'>
			<Overload retVal='void' descr='// 0x570389D1C3DE3C6B
// 0x59C52BE6
PED::_0x570389D1C3DE3C6B(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x576594e8d64375e2' func='yes'>
			<Overload retVal='void' descr='// 0x576594E8D64375E2
// 0x1D87DDC1
PED::_0x576594E8D64375E2(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5a7f62fda59759bd' func='yes'>
			<Overload retVal='void' descr='// 0x5A7F62FDA59759BD
// 0xB48C0C04
PED::_0x5A7F62FDA59759BD();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5aab586ffec0fd96' func='yes'>
			<Overload retVal='void' descr='// 0x5AAB586FFEC0FD96
// 0x6435F67F
PED::_0x5AAB586FFEC0FD96(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5b6010b3cbc29095' func='yes'>
			<Overload retVal='void' descr='// 0x5B6010B3CBC29095
PED::_0x5B6010B3CBC29095(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5d517b27cf6ecd04' func='yes'>
			<Overload retVal='void' descr='// 0x5D517B27CF6ECD04
// 0x0DBB2FA7
PED::_0x5D517B27CF6ECD04(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x600048c60d5c2c51' func='yes'>
			<Overload retVal='void' descr='// 0x600048C60D5C2C51
// 0x0688DE64
PED::_0x600048C60D5C2C51(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x61767f73eaceed21' func='yes'>
			<Overload retVal='BOOL' descr='// 0x61767F73EACEED21
// 0x3993092B
PED::_0x61767F73EACEED21(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6585d955a68452a5' func='yes'>
			<Overload retVal='Any' descr='// 0x6585D955A68452A5
// 0xA993915F
PED::_0x6585D955A68452A5(Ped ped);
----------------------------------------------------------------------------------------------------
```

Something related to clearing the ped because always used with CLEAR_PED_WETNESS, CLEAR_PED_BLOOD_DA
MAGE and RESET_PED_VISIBLE_DAMAGE.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6647c5f6f5792496' func='yes'>
			<Overload retVal='void' descr='// 0x6647C5F6F5792496
// 0x0FDA62DE
PED::_0x6647C5F6F5792496(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x66680a92700f43df' func='yes'>
			<Overload retVal='BOOL' descr='// 0x66680A92700F43DF
// 0xC6517D52
PED::_0x66680A92700F43DF(Ped p0);
----------------------------------------------------------------------------------------------------
```

Normally returns true. Returns false briefly whilst getting into a plane. This is probably a check t
o see if the ped model and all its components/drawables are properly loaded yet.  

```'>
				<Param name='Ped p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x668fd40bcba5de48' func='yes'>
			<Overload retVal='Any' descr='// 0x668FD40BCBA5DE48
PED::_0x668FD40BCBA5DE48(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x68772db2b2526f9f' func='yes'>
			<Overload retVal='BOOL' descr='// 0x68772DB2B2526F9F
// 0x1A464167
PED::_0x68772DB2B2526F9F(Ped ped, float x, float y, float z, float range);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float range' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x687c0b594907d2e8' func='yes'>
			<Overload retVal='void' descr='// 0x687C0B594907D2E8
// 0x24A1284E
PED::_0x687C0B594907D2E8(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6b0e6172c9a4d902' func='yes'>
			<Overload retVal='void' descr='// 0x6B0E6172C9A4D902
// 0x30B98369
PED::_0x6B0E6172C9A4D902(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x711794453cfd692b' func='yes'>
			<Overload retVal='void' descr='// 0x711794453CFD692B
PED::_0x711794453CFD692B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x733c87d4ce22bea2' func='yes'>
			<Overload retVal='void' descr='// 0x733C87D4CE22BEA2
// 0x43709044
PED::_0x733C87D4CE22BEA2(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7350823473013c02' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7350823473013C02
// 0xF9FB4B71
PED::_0x7350823473013C02(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x75ba1cb3b7d40caf' func='yes'>
			<Overload retVal='void' descr='// 0x75BA1CB3B7D40CAF
// 0x9194DB71
PED::_0x75BA1CB3B7D40CAF(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x76bba2cee66d47e9' func='yes'>
			<Overload retVal='Any' descr='// 0x76BBA2CEE66D47E9
PED::_0x76BBA2CEE66D47E9(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x781de8fa214e87d2' func='yes'>
			<Overload retVal='void' descr='// 0x781DE8FA214E87D2
PED::_0x781DE8FA214E87D2(Ped ped, char* p1);
----------------------------------------------------------------------------------------------------
```

p1: &quot;MP_FEMALE_ACTION&quot; found multiple times in the b617d scripts.  

Console Hash: 0x83BAE814  

```'>
				<Param name='Ped ped' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x784002a632822099' func='yes'>
			<Overload retVal='BOOL' descr='// 0x784002A632822099
// 0x3B0CA391
PED::_0x784002A632822099(Ped ped);
----------------------------------------------------------------------------------------------------
```

Normally returns true. Returns false briefly whilst putting on a helmet after getting onto a motorbi
ke. Not sure what that&apos;s about.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x78c4e9961db3eb5b' func='yes'>
			<Overload retVal='void' descr='// 0x78C4E9961DB3EB5B
// 0xFC942D7C
PED::_0x78C4E9961DB3EB5B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7d7a2e43e74e2eb8' func='yes'>
			<Overload retVal='void' descr='// 0x7D7A2E43E74E2EB8
// 0x840D24D3
PED::_0x7D7A2E43E74E2EB8(Any p0);
----------------------------------------------------------------------------------------------------
```

i found this function just like VEHICLE::TRACK_VEHICLE_VISIBILITY   

example:  

PED::_0x7D7A2E43E74E2EB8(ped);// TRACK_PED_VISIBILITY  

if (PED::IS_TRACKED_PED_VISIBLE(ped))  

{  

}  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7f2f4f13ac5257ef' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7F2F4F13AC5257EF
// 0x72CF2514
PED::_0x7F2F4F13AC5257EF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x80054d7fcc70eec6' func='yes'>
			<Overload retVal='void' descr='// 0x80054D7FCC70EEC6
PED::_0x80054D7FCC70EEC6(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x81aa517fbba05d39' func='yes'>
			<Overload retVal='Any' descr='// 0x81AA517FBBA05D39
PED::_0x81AA517FBBA05D39(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x820e9892a77e97cd' func='yes'>
			<Overload retVal='void' descr='// 0x820E9892A77E97CD
PED::_0x820E9892A77E97CD(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x83a169eabcdb10a2' func='yes'>
			<Overload retVal='void' descr='// 0x83A169EABCDB10A2
PED::_0x83A169EABCDB10A2(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x876928dddfccc9cd' func='yes'>
			<Overload retVal='Any' descr='// 0x876928DDDFCCC9CD
// 0x05023F8F
PED::_0x876928DDDFCCC9CD();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x87ddeb611b329a9c' func='yes'>
			<Overload retVal='void' descr='// 0x87DDEB611B329A9C
PED::_0x87DDEB611B329A9C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8a24b067d175a7bd' func='yes'>
			<Overload retVal='Any' descr='// 0x8A24B067D175A7BD
PED::_0x8A24B067D175A7BD(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8c4f3bf23b6237db' func='yes'>
			<Overload retVal='Entity' descr='// 0x8C4F3BF23B6237DB
PED::_0x8C4F3BF23B6237DB(Ped ped, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x952f06beecd775cc' func='yes'>
			<Overload retVal='void' descr='// 0x952F06BEECD775CC
PED::_0x952F06BEECD775CC(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x953563ce563143af' func='yes'>
			<Overload retVal='Any' descr='// 0x953563CE563143AF
// 0x4DD03628
PED::_0x953563CE563143AF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9911f4a24485f653' func='yes'>
			<Overload retVal='void' descr='// 0x9911F4A24485F653
// 0x02A080C8
PED::_0x9911F4A24485F653(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9a77dfd295e29b09' func='yes'>
			<Overload retVal='void' descr='// 0x9A77DFD295E29B09
// 0xC08FE5F6
PED::_0x9A77DFD295E29B09(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9c6a6c19b6c0c496' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9C6A6C19B6C0C496
PED::_0x9C6A6C19B6C0C496(Ped p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9d728c1e12bf5518' func='yes'>
			<Overload retVal='Any' descr='// 0x9D728C1E12BF5518
// 0x74EB662D
PED::_0x9D728C1E12BF5518(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9dba107b4937f809' func='yes'>
			<Overload retVal='void' descr='// 0x9DBA107B4937F809
PED::_0x9DBA107B4937F809(Any p0, char* p1);
----------------------------------------------------------------------------------------------------
```

Found in the b617d scripts:  

PED::_9DBA107B4937F809(v_7, &quot;trevor_heist_cover_2h&quot;);  

```'>
				<Param name='Any p0' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9e30e91fb03a2caf' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9E30E91FB03A2CAF
PED::_0x9E30E91FB03A2CAF(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa21c118553bbdf02' func='yes'>
			<Overload retVal='void' descr='// 0xA21C118553BBDF02
// 0xC6F36292
PED::_0xA21C118553BBDF02(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa3a9299c4f2adb98' func='yes'>
			<Overload retVal='void' descr='// 0xA3A9299C4F2ADB98
// 0x033F43FA
PED::_0xA3A9299C4F2ADB98(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa3f3564a5b3646c0' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA3F3564A5B3646C0
// 0x97353375
PED::_0xA3F3564A5B3646C0(Ped ped);
----------------------------------------------------------------------------------------------------
```

Only called once in the scripts:  

if (sub_1abd() && (!PED::_A3F3564A5B3646C0(l_8C))) {  

    if (sub_52e3(&quot;RESNA_CELLR&quot;, 0)) {  

        PED::SET_PED_CAN_PLAY_GESTURE_ANIMS(l_8C, 1);  

        PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(l_8C, 1);  

        PED::SET_PED_CAN_PLAY_VISEME_ANIMS(l_8C, 1, 0);  

        l_184 += 1;  

    }  

}  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa52d5247a4227e14' func='yes'>
			<Overload retVal='void' descr='// 0xA52D5247A4227E14
// 0xB52BA5F5
PED::_0xA52D5247A4227E14(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa586fbeb32a53dbb' func='yes'>
			<Overload retVal='Any' descr='// 0xA586FBEB32A53DBB
// 0x0B60D2BA
PED::_0xA586FBEB32A53DBB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa635c11b8c44afc2' func='yes'>
			<Overload retVal='Any' descr='// 0xA635C11B8C44AFC2
// 0xF46B4DC8
PED::_0xA635C11B8C44AFC2();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa660faf550eb37e5' func='yes'>
			<Overload retVal='void' descr='// 0xA660FAF550EB37E5
PED::_0xA660FAF550EB37E5(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa9b61a329bfdcbea' func='yes'>
			<Overload retVal='void' descr='// 0xA9B61A329BFDCBEA
// 0x2276DE0D
PED::_0xA9B61A329BFDCBEA(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaaa6a3698a69e048' func='yes'>
			<Overload retVal='Any' descr='// 0xAAA6A3698A69E048
PED::_0xAAA6A3698A69E048(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xafc976fd0580c7b3' func='yes'>
			<Overload retVal='void' descr='// 0xAFC976FD0580C7B3
// 0x1572022A
PED::_0xAFC976FD0580C7B3(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaff4710e2a0a6c12' func='yes'>
			<Overload retVal='void' descr='// 0xAFF4710E2A0A6C12
PED::_0xAFF4710E2A0A6C12(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb282749d5e028163' func='yes'>
			<Overload retVal='void' descr='// 0xB282749D5E028163
PED::_0xB282749D5E028163(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb2aff10216defa2f' func='yes'>
			<Overload retVal='void' descr='// 0xB2AFF10216DEFA2F
// 0x4AAD0ECB
PED::_0xB2AFF10216DEFA2F(float x, float y, float z, float p3, float p4, float p5, float p6, int inte
----------------------------------------------------------------------------------------------------
Flags, float scale, int duration);

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
				<Param name='int inte' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb50eb4ccb29704ac' func='yes'>
			<Overload retVal='void' descr='// 0xB50EB4CCB29704AC
// 0x080275EE
PED::_0xB50EB4CCB29704AC(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb782f8238512bad5' func='yes'>
			<Overload retVal='void' descr='// 0xB782F8238512BAD5
// 0xBA699DDF
PED::_0xB782F8238512BAD5(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb8b52e498014f5b0' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB8B52E498014F5B0
PED::_0xB8B52E498014F5B0(Ped ped);
----------------------------------------------------------------------------------------------------
```

if (!$B8B52E498014F5B0(PLAYER::PLAYER_PED_ID())) {  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb9496ce47546db2c' func='yes'>
			<Overload retVal='Any' descr='// 0xB9496CE47546DB2C
PED::_0xB9496CE47546DB2C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba63d9fe45412247' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBA63D9FE45412247
PED::_0xBA63D9FE45412247(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba8805a1108a2515' func='yes'>
			<Overload retVal='Any' descr='// 0xBA8805A1108A2515
PED::_0xBA8805A1108A2515(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc1f6ebf9a3d55538' func='yes'>
			<Overload retVal='void' descr='// 0xC1F6EBF9A3D55538
// 0xEF9142DB
PED::_0xC1F6EBF9A3D55538(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc2ee020f5fb4db53' func='yes'>
			<Overload retVal='void' descr='// 0xC2EE020F5FB4DB53
// 0xB7CD0A49
PED::_0xC2EE020F5FB4DB53(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc56fbf2f228e1dac' func='yes'>
			<Overload retVal='Any' descr='// 0xC56FBF2F228E1DAC
PED::_0xC56FBF2F228E1DAC(Hash modelHash, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash modelHash' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc79196dcb36f6121' func='yes'>
			<Overload retVal='void' descr='// 0xC79196DCB36F6121
PED::_0xC79196DCB36F6121(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcb968b53fc7f916d' func='yes'>
			<Overload retVal='void' descr='// 0xCB968B53FC7F916D
// 0xC0F1BC91
PED::_0xCB968B53FC7F916D(Any p0, BOOL p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcc6e3b6bb69501f1' func='yes'>
			<Overload retVal='Any' descr='// 0xCC6E3B6BB69501F1
PED::_0xCC6E3B6BB69501F1(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcc9682b8951c5229' func='yes'>
			<Overload retVal='void' descr='// 0xCC9682B8951C5229
// 0x57E5B3F9
PED::_0xCC9682B8951C5229(Ped ped, int r, int g, int b, int p4);
----------------------------------------------------------------------------------------------------
```

p4 seems to vary from 0 to 3.  

```'>
				<Param name='Ped ped' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
				<Param name='int p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcd018c591f94cb43' func='yes'>
			<Overload retVal='void' descr='// 0xCD018C591F94CB43
PED::_0xCD018C591F94CB43(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xceda60a74219d064' func='yes'>
			<Overload retVal='void' descr='// 0xCEDA60A74219D064
PED::_0xCEDA60A74219D064(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd1871251f3b5acd7' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD1871251F3B5ACD7
PED::_0xD1871251F3B5ACD7(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd33daa36272177c4' func='yes'>
			<Overload retVal='void' descr='// 0xD33DAA36272177C4
// 0xA89A53F2
PED::_0xD33DAA36272177C4(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd69411aa0cebf9e9' func='yes'>
			<Overload retVal='void' descr='// 0xD69411AA0CEBF9E9
// 0x87A0C174
PED::_0xD69411AA0CEBF9E9(Ped ped, int p1, int p2, int p3);
----------------------------------------------------------------------------------------------------
```

Something related to the environmental effects natives.  

In the &quot;agency_heist3b&quot; script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET
_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
				<Param name='int p2' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd8c3be3ee94caf2d' func='yes'>
			<Overload retVal='void' descr='// 0xD8C3BE3EE94CAF2D
// 0x4BBE5E2C
PED::_0xD8C3BE3EE94CAF2D(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdcca191df9980fd7' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDCCA191DF9980FD7
// 0x139C0875
PED::_0xDCCA191DF9980FD7(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xded5af5a0ea4b297' func='yes'>
			<Overload retVal='void' descr='// 0xDED5AF5A0EA4B297
// 0x6D55B3B3
PED::_0xDED5AF5A0EA4B297(Ped driver, float p1);
----------------------------------------------------------------------------------------------------
```

Scripts use 0.2, 0.5 and 1.0.  

SET_DRIVER_*  

```'>
				<Param name='Ped driver' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe43a13c9e4cccbcf' func='yes'>
			<Overload retVal='void' descr='// 0xE43A13C9E4CCCBCF
// 0xFF1F6AEB
PED::_0xE43A13C9E4CCCBCF(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe4723db6e736ccff' func='yes'>
			<Overload retVal='void' descr='// 0xE4723DB6E736CCFF
// 0x4763B2C6
PED::_0xE4723DB6E736CCFF(Ped ped, Any p1, float p2, float p3, float p4, float p5, BOOL p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe6ca85e7259ce16b' func='yes'>
			<Overload retVal='void' descr='// 0xE6CA85E7259CE16B
PED::_0xE6CA85E7259CE16B(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe861d0b05c7662b8' func='yes'>
			<Overload retVal='void' descr='// 0xE861D0B05C7662B8
// 0x2F9550C2
PED::_0xE861D0B05C7662B8(Pickup p0, Any p1, Blip* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Pickup p0' />
				<Param name='Any p1' />
				<Param name='Blip* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe8a169e666cbc541' func='yes'>
			<Overload retVal='Any' descr='// 0xE8A169E666CBC541
// 0xAA39FD6C
PED::_0xE8A169E666CBC541();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe906ec930f5fe7c8' func='yes'>
			<Overload retVal='void' descr='// 0xE906EC930F5FE7C8
PED::_0xE906EC930F5FE7C8(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xea9960d07dadcf10' func='yes'>
			<Overload retVal='int' descr='// 0xEA9960D07DADCF10
PED::_0xEA9960D07DADCF10(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xebb376779a760aa8' func='yes'>
			<Overload retVal='Any' descr='// 0xEBB376779A760AA8
// 0x810158F8
PED::_0xEBB376779A760AA8();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xebd0edba5be957cf' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEBD0EDBA5BE957CF
// 0x9BE7C860
PED::_0xEBD0EDBA5BE957CF(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xec4b4b3b9908052a' func='yes'>
			<Overload retVal='void' descr='// 0xEC4B4B3B9908052A
// 0xF30658D2
PED::_0xEC4B4B3B9908052A(Ped ped, float unk);
----------------------------------------------------------------------------------------------------
```

SET_PED_*  

Has most likely to do with some shooting attributes as it sets the float which is in the same range 
as shootRate.  

```'>
				<Param name='Ped ped' />
				<Param name='float unk' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xec6935ebe0847b90' func='yes'>
			<Overload retVal='Any' descr='// 0xEC6935EBE0847B90
// 0x761F8F48
PED::_0xEC6935EBE0847B90(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xed3c76adfa6d07c4' func='yes'>
			<Overload retVal='void' descr='// 0xED3C76ADFA6D07C4
// 0xFB4000DC
PED::_0xED3C76ADFA6D07C4(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xed6d8e27a43b8cde' func='yes'>
			<Overload retVal='BOOL' descr='// 0xED6D8E27A43B8CDE
PED::_0xED6D8E27A43B8CDE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xeeed8fafec331a70' func='yes'>
			<Overload retVal='Any' descr='// 0xEEED8FAFEC331A70
// 0x7B4C3E6F
PED::_0xEEED8FAFEC331A70(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf033419d1b81fae8' func='yes'>
			<Overload retVal='Any' descr='// 0xF033419D1B81FAE8
PED::_0xF033419D1B81FAE8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf0daef2f545bee25' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF0DAEF2F545BEE25
// 0x10F2C023
PED::_0xF0DAEF2F545BEE25(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf1c03a5352243a30' func='yes'>
			<Overload retVal='void' descr='// 0xF1C03A5352243A30
// 0x4C684C81
PED::_0xF1C03A5352243A30(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf2385935bffd4d92' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF2385935BFFD4D92
// 0xFFF149FE
PED::_0xF2385935BFFD4D92(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf2bebcdfafdaa19e' func='yes'>
			<Overload retVal='void' descr='// 0xF2BEBCDFAFDAA19E
// 0x6CD58238
PED::_0xF2BEBCDFAFDAA19E(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

toggle was always 0 except in one instance (b678).  

The one time this is set to true seems to do with when you fail the mission.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf41b5d290c99a3d6' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF41B5D290C99A3D6
PED::_0xF41B5D290C99A3D6(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf445de8da80a1792' func='yes'>
			<Overload retVal='Any' descr='// 0xF445DE8DA80A1792
// 0x6B83ABDF
PED::_0xF445DE8DA80A1792();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf5846edb26a98a24' func='yes'>
			<Overload retVal='void' descr='// 0xF5846EDB26A98A24
// 0x7B0040A8
PED::_0xF5846EDB26A98A24(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf60165e1d2c5370b' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF60165E1D2C5370B
PED::_0xF60165E1D2C5370B(Ped ped, Any* p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf79f9def0aade61a' func='yes'>
			<Overload retVal='void' descr='// 0xF79F9DEF0AADE61A
// 0xFD103BA7
PED::_0xF79F9DEF0AADE61A(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf9acf4a08098ea25' func='yes'>
			<Overload retVal='void' descr='// 0xF9ACF4A08098EA25
// 0x141CC936
PED::_0xF9ACF4A08098EA25(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p1 was always 1 (true).  

Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its 
collision). If doing this for your player ped, you&apos;ll still be able to drive the vehicle.  

Actual name begins with &apos;S&apos;  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfcf37a457cb96dc0' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFCF37A457CB96DC0
// 0x45037B9B
PED::_0xFCF37A457CB96DC0(Any p0, float p1, float p2, float p3, float p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfe07ff6495d52e2a' func='yes'>
			<Overload retVal='Any' descr='// 0xFE07FF6495D52E2A
// 0x59DE73AC
PED::_0xFE07FF6495D52E2A(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfec9a3b1820f3331' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFEC9A3B1820F3331
PED::_0xFEC9A3B1820F3331(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfee4a5459472a9f8' func='yes'>
			<Overload retVal='void' descr='// 0xFEE4A5459472A9F8
// 0x492C9E46
PED::_0xFEE4A5459472A9F8();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xff4803bc019852d9' func='yes'>
			<Overload retVal='void' descr='// 0xFF4803BC019852D9
// 0xD41C9AED
PED::_0xFF4803BC019852D9(float p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayFacialAnim' func='yes'>
			<Overload retVal='void' descr='// 0xE1E65CA8AC9C00ED
// 0x1F6CCDDE
PED::PLAY_FACIAL_ANIM(Ped ped, char* animName, char* animDict);
----------------------------------------------------------------------------------------------------
```

Look at facials@gen_male@base and facials@gen_female@base for some common facial animations.   

!!!NOTE!!!  

Unlike most animation natives, the animation comes BEFORE the animation dictionary here. So you coul
d call e.g.   

PLAY_FACIAL_ANIM(ped, &quot;dead_1&quot;, &quot;facials@gen_male@base&quot;)  

```'>
				<Param name='Ped ped' />
				<Param name='char* animName' />
				<Param name='char* animDict' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterHatedTargetsAroundPed' func='yes'>
			<Overload retVal='void' descr='// 0x9222F300BF8354FE
// 0x7F87559E
PED::REGISTER_HATED_TARGETS_AROUND_PED(Ped ped, float radius);
----------------------------------------------------------------------------------------------------
```

Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and are
a to attack in).  

```'>
				<Param name='Ped ped' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterPedheadshot' func='yes'>
			<Overload retVal='int' descr='// 0x4462658788425076
// 0xFFE2667B
PED::REGISTER_PEDHEADSHOT(Ped ped);
----------------------------------------------------------------------------------------------------
```

gtaforums.com/topic/885580-ped-headshotmugshot-txd/  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='RegisterTarget' func='yes'>
			<Overload retVal='void' descr='// 0x2F25D9AEFA34FBA2
// 0x50A95442
PED::REGISTER_TARGET(Ped ped, Ped target);
----------------------------------------------------------------------------------------------------
```

PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.  

l_216 = RECSBRobber1  

```'>
				<Param name='Ped ped' />
				<Param name='Ped target' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveActionModeAsset' func='yes'>
			<Overload retVal='void' descr='// 0x13E940F88470FA51
// 0x3F480F92
PED::REMOVE_ACTION_MODE_ASSET(char* asset);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* asset' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveGroup' func='yes'>
			<Overload retVal='void' descr='// 0x8EB2F69076AF7053
// 0x48D72B88
PED::REMOVE_GROUP(int groupId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int groupId' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemovePedDefensiveArea' func='yes'>
			<Overload retVal='void' descr='// 0x74D4E028107450A9
// 0x34AAAFA5
PED::REMOVE_PED_DEFENSIVE_AREA(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Ped will no longer get angry when you stay near him.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemovePedElegantly' func='yes'>
			<Overload retVal='void' descr='// 0xAC6D445B994DF95E
// 0x4FFB8C6C
PED::REMOVE_PED_ELEGANTLY(Ped* ped);
----------------------------------------------------------------------------------------------------
```

Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immedia
tely. If not, it&apos;ll be marked as no longer needed. - very elegant..  

```'>
				<Param name='Ped* ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemovePedFromGroup' func='yes'>
			<Overload retVal='void' descr='// 0xED74007FFB146BC2
// 0x82697713
PED::REMOVE_PED_FROM_GROUP(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemovePedHelmet' func='yes'>
			<Overload retVal='void' descr='// 0xA7B2458D0AD6DED8
// 0x2086B1F0
PED::REMOVE_PED_HELMET(Ped ped, BOOL instantly);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL instantly' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemovePedPreferredCoverSet' func='yes'>
			<Overload retVal='void' descr='// 0xFDDB234CF74073D9
// 0xA0134498
PED::REMOVE_PED_PREFERRED_COVER_SET(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveRelationshipGroup' func='yes'>
			<Overload retVal='void' descr='// 0xB6BA2444AB393DA2
// 0x4A1DC59A
PED::REMOVE_RELATIONSHIP_GROUP(Hash groupHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash groupHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveScenarioBlockingArea' func='yes'>
			<Overload retVal='void' descr='// 0x31D16B74C6E29D66
// 0x4483EF06
PED::REMOVE_SCENARIO_BLOCKING_AREA(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveScenarioBlockingAreas' func='yes'>
			<Overload retVal='void' descr='// 0xD37401D78A929A49
// 0x4DDF845F
PED::REMOVE_SCENARIO_BLOCKING_AREAS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveStealthModeAsset' func='yes'>
			<Overload retVal='void' descr='// 0x9219857D21F0E842
// 0x8C0B243A
PED::REMOVE_STEALTH_MODE_ASSET(char* asset);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* asset' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestActionModeAsset' func='yes'>
			<Overload retVal='void' descr='// 0x290E2780BB7AA598
// 0x572BA553
PED::REQUEST_ACTION_MODE_ASSET(char* asset);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* asset' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestStealthModeAsset' func='yes'>
			<Overload retVal='void' descr='// 0x2A0A62FCDEE16D4F
// 0x280A004A
PED::REQUEST_STEALTH_MODE_ASSET(char* asset);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* asset' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetAiMeleeWeaponDamageModifier' func='yes'>
			<Overload retVal='void' descr='// 0x46E56A7CD1D63C3F
// 0x97886238
PED::RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ResetAiWeaponDamageModifier' func='yes'>
			<Overload retVal='void' descr='// 0xEA16670E7BA4743C
// 0x6E965420
PED::RESET_AI_WEAPON_DAMAGE_MODIFIER();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ResetGroupFormationDefaultSpacing' func='yes'>
			<Overload retVal='void' descr='// 0x63DAB4CCB3273205
// 0x267FCEAD
PED::RESET_GROUP_FORMATION_DEFAULT_SPACING(int groupHandle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int groupHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPedInVehicleContext' func='yes'>
			<Overload retVal='void' descr='// 0x22EF8FF8778030EB
// 0x3C94D88A
PED::RESET_PED_IN_VEHICLE_CONTEXT(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPedLastVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xBB8DE8CF6A8DD8BB
// 0x5E3B5942
PED::RESET_PED_LAST_VEHICLE(Ped ped);
----------------------------------------------------------------------------------------------------
```

Resets the value for the last vehicle driven by the Ped.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPedMovementClipset' func='yes'>
			<Overload retVal='void' descr='// 0xAA74EC0CB0AAEA2C
// 0xB83CEE93
PED::RESET_PED_MOVEMENT_CLIPSET(Ped ped, float p1);
----------------------------------------------------------------------------------------------------
```

If p1 is 0.0, I believe you are back to normal.   

If p1 is 1.0, it looks like you can only rotate the ped, not walk.  

Using the following code to reset back to normal  

PED::RESET_PED_MOVEMENT_CLIPSET(PLAYER::PLAYER_PED_ID(), 0.0);  

```'>
				<Param name='Ped ped' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPedRagdollBlockingFlags' func='yes'>
			<Overload retVal='void' descr='// 0xD86D101FCFD00A4B
// 0x77CBA290
PED::_RESET_PED_RAGDOLL_BLOCKING_FLAGS(Ped ped, int flags);
----------------------------------------------------------------------------------------------------
```

There seem to be 26 flags  

```'>
				<Param name='Ped ped' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPedRagdollTimer' func='yes'>
			<Overload retVal='void' descr='// 0x9FA4664CF62E47E8
// 0xF2865370
PED::RESET_PED_RAGDOLL_TIMER(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPedStrafeClipset' func='yes'>
			<Overload retVal='void' descr='// 0x20510814175EA477
// 0xF1967A12
PED::RESET_PED_STRAFE_CLIPSET(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPedVisibleDamage' func='yes'>
			<Overload retVal='Any' descr='// 0x3AC1F7B898F30C05
// 0xC4BC4841
PED::RESET_PED_VISIBLE_DAMAGE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPedWeaponMovementClipset' func='yes'>
			<Overload retVal='void' descr='// 0x97B0DB5B4AA74E77
// 0xC60C9ACD
PED::RESET_PED_WEAPON_MOVEMENT_CLIPSET(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResurrectPed' func='yes'>
			<Overload retVal='void' descr='// 0x71BC8E838B9C6035
// 0xA4B82097
PED::RESURRECT_PED(Ped ped);
----------------------------------------------------------------------------------------------------
```

This function will simply bring the dead person back to life.  

Try not to use it alone, since using this function alone, will make peds fall through ground in hell
(well for the most of the times).  

Instead, before calling this function, you may want to declare the position, where your Resurrected 
ped to be spawn at.(For instance, Around 2 floats of Player&apos;s current position.)   

Also, disabling any assigned task immediately helped in the number of scenarios, where If you want p
eds to perform certain decided tasks.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ReviveInjuredPed' func='yes'>
			<Overload retVal='void' descr='// 0x8D8ACD8388CD99CE
// 0x14D3E6E3
PED::REVIVE_INJURED_PED(Ped ped);
----------------------------------------------------------------------------------------------------
```

It will revive/cure the injured ped. The condition is ped must not be dead.  

Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the 
ground in pain(Maximum default health is 100).  

This function is well suited there.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAiMeleeWeaponDamageModifier' func='yes'>
			<Overload retVal='void' descr='// 0x66460DEDDD417254
// 0x0F9A401F
PED::SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER(float modifier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float modifier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAiWeaponDamageModifier' func='yes'>
			<Overload retVal='void' descr='// 0x1B1E2A40A65B8521
// 0x516E30EE
PED::SET_AI_WEAPON_DAMAGE_MODIFIER(float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBlockingOfNonTemporaryEvents' func='yes'>
			<Overload retVal='void' descr='// 0x9F8AA94D6D97DBF4
// 0xDFE34E4A
PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

works with AI::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all e
vents going on around him  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCanAttackFriendly' func='yes'>
			<Overload retVal='void' descr='// 0xB3B1CB349FF9C75D
// 0x47C60963
PED::SET_CAN_ATTACK_FRIENDLY(Ped ped, BOOL toggle, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Setting ped to true allows the ped to shoot &quot;friendlies&quot;.  

p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you
 set p2 back to false.  

p1 = false & p2 = false for unable to aim at.  

p1 = true & p2 = false for able to aim at.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCombatFloat' func='yes'>
			<Overload retVal='void' descr='// 0xFF41B4B141ED981C
// 0xD8B7637C
PED::SET_COMBAT_FLOAT(Ped ped, int combatType, float p2);
----------------------------------------------------------------------------------------------------
```

combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.  

```'>
				<Param name='Ped ped' />
				<Param name='int combatType' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCreateRandomCops' func='yes'>
			<Overload retVal='void' descr='// 0x102E68B2024D536D
// 0x23441648
PED::SET_CREATE_RANDOM_COPS(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCreateRandomCopsNotOnScenarios' func='yes'>
			<Overload retVal='void' descr='// 0x8A4986851C4EF6E7
// 0x82E548CC
PED::SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCreateRandomCopsOnScenarios' func='yes'>
			<Overload retVal='void' descr='// 0x444CB7D7DBE6973D
// 0xEDC31475
PED::SET_CREATE_RANDOM_COPS_ON_SCENARIOS(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDriverAbility' func='yes'>
			<Overload retVal='void' descr='// 0xB195FFA8042FC5C3
// 0xAAD4012C
PED::SET_DRIVER_ABILITY(Ped driver, float ability);
----------------------------------------------------------------------------------------------------
```

The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1
.0f, the function does nothing at all.  

```'>
				<Param name='Ped driver' />
				<Param name='float ability' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDriverAggressiveness' func='yes'>
			<Overload retVal='void' descr='// 0xA731F608CA104E3C
// 0x8B02A8FB
PED::SET_DRIVER_AGGRESSIVENESS(Ped driver, float aggressiveness);
----------------------------------------------------------------------------------------------------
```

range 0.0f - 1.0f  

```'>
				<Param name='Ped driver' />
				<Param name='float aggressiveness' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEnableBoundAnkles' func='yes'>
			<Overload retVal='void' descr='// 0xC52E0F855C58FC2E
// 0x9208D689
PED::SET_ENABLE_BOUND_ANKLES(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEnableHandcuffs' func='yes'>
			<Overload retVal='void' descr='// 0xDF1AF8B5D56542FA
// 0xAC9BBA23
PED::SET_ENABLE_HANDCUFFS(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

ped can not pull out a weapon when true  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEnablePedEnveffScale' func='yes'>
			<Overload retVal='void' descr='// 0xD2C5AA0C0E8D0F1E
// 0xC70F4A84
PED::SET_ENABLE_PED_ENVEFF_SCALE(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEnableScuba' func='yes'>
			<Overload retVal='void' descr='// 0xF99F62004024D506
// 0x7BF61471
PED::SET_ENABLE_SCUBA(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Enables diving motion when underwater.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetExclusivePhoneRelationships' func='yes'>
			<Overload retVal='Vehicle' descr='// 0xF92691AED837A5FC
// 0x56E0C163
PED::SET_EXCLUSIVE_PHONE_RELATIONSHIPS(Ped ped);
----------------------------------------------------------------------------------------------------
```

In appcamera.c4, Line 106:  

if (VEHICLE::IS_VEHICLE_DRIVEABLE(PED::SET_EXCLUSIVE_PHONE_RELATIONSHIPS(PLAYER::PLAYER_PED_ID()), 0
))  

So return type could be a vehicle?  

!Hash collision - gets the vehicle handle from ped which is about entering the vehicle!  

sfink: agreed, 100%  

Proper name is GET_VEHICLE_PED_IS_ENTERING  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFacialIdleAnimOverride' func='yes'>
			<Overload retVal='void' descr='// 0xFFC24B988B938B38
// 0x9BA19C13
PED::SET_FACIAL_IDLE_ANIM_OVERRIDE(Ped ped, char* animName, char* animDict);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='char* animName' />
				<Param name='char* animDict' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGroupFormation' func='yes'>
			<Overload retVal='void' descr='// 0xCE2F5FC3AF7E8C1E
// 0x08FAC739
PED::SET_GROUP_FORMATION(int groupId, int formationType);
----------------------------------------------------------------------------------------------------
```

0: Default  

1: Circle Around Leader  

2: Alternative Circle Around Leader  

3: Line, with Leader at center  

```'>
				<Param name='int groupId' />
				<Param name='int formationType' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGroupFormationSpacing' func='yes'>
			<Overload retVal='void' descr='// 0x1D9D45004C28C916
// 0xB1E086FF
PED::SET_GROUP_FORMATION_SPACING(int groupId, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int groupId' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGroupSeparationRange' func='yes'>
			<Overload retVal='void' descr='// 0x4102C7858CFEE4E4
// 0x7B820CD5
PED::SET_GROUP_SEPARATION_RANGE(int groupHandle, float separationRange);
----------------------------------------------------------------------------------------------------
```

Sets the range at which members will automatically leave the group.  

```'>
				<Param name='int groupHandle' />
				<Param name='float separationRange' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetIkTarget' func='yes'>
			<Overload retVal='void' descr='// 0xC32779C16FCEECD9
// 0x6FE5218C
PED::SET_IK_TARGET(Ped ped, int ikIndex, Entity entityLookAt, int boneLookAt, float offsetX, float o
----------------------------------------------------------------------------------------------------
tY, float offsetZ, Any p7, int blendInDuration, int blendOutDuration);

```

```

No other indices work...  

IK Index ---------  

1 = head  

3 = left arm  

4 = right arm  

------------------  

EntityLookAt can be null (0 handle)  

```'>
				<Param name='Ped ped' />
				<Param name='int ikIndex' />
				<Param name='Entity entityLookAt' />
				<Param name='int boneLookAt' />
				<Param name='float offsetX' />
				<Param name='float o' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAccuracy' func='yes'>
			<Overload retVal='Any' descr='// 0x7AEFB85C1D49DEB6
// 0x6C17122E
PED::SET_PED_ACCURACY(Ped ped, int accuracy);
----------------------------------------------------------------------------------------------------
```

accuracy = 0-100, 100 being perfectly accurate  

```'>
				<Param name='Ped ped' />
				<Param name='int accuracy' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAlertness' func='yes'>
			<Overload retVal='void' descr='// 0xDBA71115ED9941A6
// 0x2C32D9AE
PED::SET_PED_ALERTNESS(Ped ped, int value);
----------------------------------------------------------------------------------------------------
```

value ranges from 0 to 3.  

```'>
				<Param name='Ped ped' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAllowedToDuck' func='yes'>
			<Overload retVal='void' descr='// 0xDA1F1B7BE1A8766F
// 0xC4D122F8
PED::SET_PED_ALLOWED_TO_DUCK(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAllowVehiclesOverride' func='yes'>
			<Overload retVal='void' descr='// 0x3C028C636A414ED9
// 0x58A80BD5
PED::SET_PED_ALLOW_VEHICLES_OVERRIDE(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAlternateMovementAnim' func='yes'>
			<Overload retVal='void' descr='// 0x90A43CC281FFAB46
// 0xBA84FD8C
PED::SET_PED_ALTERNATE_MOVEMENT_ANIM(Ped ped, int stance, char* animDictionary, char* animationName,
----------------------------------------------------------------------------------------------------
at p4, BOOL p5);

```

```

stance:  

0 = idle  

1 = walk  

2 = running  

p5 = usually set to true  

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Ped ped' />
				<Param name='int stance' />
				<Param name='char* animDictionary' />
				<Param name='char* animationName' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAlternateWalkAnim' func='yes'>
			<Overload retVal='void' descr='// 0x6C60394CB4F75E9A
// 0x895E1D67
PED::SET_PED_ALTERNATE_WALK_ANIM(Ped ped, char* animDict, char* animName, float p3, BOOL p4);
----------------------------------------------------------------------------------------------------
```

Animations list : www.los-santos-multiplayer.com/dev.airdancer?cxt=anim  

```'>
				<Param name='Ped ped' />
				<Param name='char* animDict' />
				<Param name='char* animName' />
				<Param name='float p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAngledDefensiveArea' func='yes'>
			<Overload retVal='void' descr='// 0xC7F76DF27A5045A1
// 0x3EFBDD9B
PED::SET_PED_ANGLED_DEFENSIVE_AREA(Ped ped, float p1, float p2, float p3, float p4, float p5, float 
----------------------------------------------------------------------------------------------------
float p7, BOOL p8, BOOL p9);

```'>
				<Param name='Ped ped' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float ' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedArmour' func='yes'>
			<Overload retVal='void' descr='// 0xCEA04D83135264CC
// 0x4E3A0CC4
PED::SET_PED_ARMOUR(Ped ped, int amount);
----------------------------------------------------------------------------------------------------
```

Sets the armor of the specified ped.  

ped: The Ped to set the armor of.  

amount: A value between 0 and 100 indicating the value to set the Ped&apos;s armor to.  

```'>
				<Param name='Ped ped' />
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAsCop' func='yes'>
			<Overload retVal='void' descr='// 0xBB03C38DD3FB7FFD
// 0x84E7DE9F
PED::SET_PED_AS_COP(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisibl
e to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a c
op-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still
 shoot at you. Toggling ped as &quot;false&quot; has no effect; you must change p0&apos;s ped model to disable the 
effect.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAsEnemy' func='yes'>
			<Overload retVal='void' descr='// 0x02A0C9720B854BFA
// 0xAE620A1B
PED::SET_PED_AS_ENEMY(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAsGroupLeader' func='yes'>
			<Overload retVal='void' descr='// 0x2A7819605465FBCE
// 0x7265BEA2
PED::SET_PED_AS_GROUP_LEADER(Ped ped, int groupId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int groupId' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAsGroupMember' func='yes'>
			<Overload retVal='void' descr='// 0x9F3480FE65DB31B5
// 0x0EE13F92
PED::SET_PED_AS_GROUP_MEMBER(Ped ped, int groupId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int groupId' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedBlendFromParents' func='yes'>
			<Overload retVal='void' descr='// 0x137BBD05230DB22D
// 0x837BD370
PED::SET_PED_BLEND_FROM_PARENTS(Ped ped, Ped father, Ped mother, float fathersSide, float mothersSid
----------------------------------------------------------------------------------------------------
```'>
				<Param name='Ped ped' />
				<Param name='Ped father' />
				<Param name='Ped mother' />
				<Param name='float fathersSide' />
				<Param name='float mothersSid' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedBoundsOrientation' func='yes'>
			<Overload retVal='void' descr='// 0x4F5F651ACCC9C4CF
// 0xCFA20D68
PED::SET_PED_BOUNDS_ORIENTATION(Ped ped, float p1, float p2, float p3, float p4, float p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanArmIk' func='yes'>
			<Overload retVal='void' descr='// 0x6C3B4D6D13B4C841
// 0x343B4DE0
PED::SET_PED_CAN_ARM_IK(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanBeDraggedOut' func='yes'>
			<Overload retVal='void' descr='// 0xC1670E958EEE24E5
// 0xAA7F1131
PED::SET_PED_CAN_BE_DRAGGED_OUT(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanBeKnockedOffVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x7A6535691B477C48
// 0x8A251612
PED::SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(Ped ped, int state);
----------------------------------------------------------------------------------------------------
```

0 = can (bike)  

1 = can&apos;t (bike)  

2 = unk   

3 = unk  

```'>
				<Param name='Ped ped' />
				<Param name='int state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanBeShotInVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xC7EF1BA83230BA07
// 0x5DB7B3A9
PED::SET_PED_CAN_BE_SHOT_IN_VEHICLE(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanBeTargetedWhenInjured' func='yes'>
			<Overload retVal='void' descr='// 0x638C03B0F9878F57
// 0x6FD9A7CD
PED::SET_PED_CAN_BE_TARGETED_WHEN_INJURED(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanBeTargetedWithoutLos' func='yes'>
			<Overload retVal='void' descr='// 0x4328652AE5769C71
// 0x7FDDC0A6
PED::SET_PED_CAN_BE_TARGETED_WITHOUT_LOS(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanBeTargetted' func='yes'>
			<Overload retVal='void' descr='// 0x63F58F7C80513AAD
// 0x75C49F74
PED::SET_PED_CAN_BE_TARGETTED(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanBeTargettedByPlayer' func='yes'>
			<Overload retVal='void' descr='// 0x66B57B72E0836A76
// 0xD050F490
PED::SET_PED_CAN_BE_TARGETTED_BY_PLAYER(Ped ped, Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanBeTargettedByTeam' func='yes'>
			<Overload retVal='void' descr='// 0xBF1CA77833E58F2C
// 0xB103A8E1
PED::SET_PED_CAN_BE_TARGETTED_BY_TEAM(Ped ped, int team, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int team' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanCowerInCover' func='yes'>
			<Overload retVal='void' descr='// 0xCB7553CDCEF4A735
// 0x5194658B
PED::SET_PED_CAN_COWER_IN_COVER(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

It simply makes the said ped to cower behind cover object(wall, desk, car)  

Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from 
gunshot sounds or any other panic situations.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanEvasiveDive' func='yes'>
			<Overload retVal='void' descr='// 0x6B7A646C242A7059
// 0x542FEB4D
PED::SET_PED_CAN_EVASIVE_DIVE(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanHeadIk' func='yes'>
			<Overload retVal='void' descr='// 0xC11C18092C5530DC
// 0xD3B04476
PED::SET_PED_CAN_HEAD_IK(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanLegIk' func='yes'>
			<Overload retVal='void' descr='// 0x73518ECE2485412B
// 0x9955BC6F
PED::SET_PED_CAN_LEG_IK(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanPeekInCover' func='yes'>
			<Overload retVal='void' descr='// 0xC514825C507E3736
// 0xC1DAE216
PED::SET_PED_CAN_PEEK_IN_COVER(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanPlayAmbientAnims' func='yes'>
			<Overload retVal='void' descr='// 0x6373D1349925A70E
// 0xF8053081
PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanPlayAmbientBaseAnims' func='yes'>
			<Overload retVal='void' descr='// 0x0EB0585D15254740
// 0x5720A5DD
PED::SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanPlayGestureAnims' func='yes'>
			<Overload retVal='void' descr='// 0xBAF20C5432058024
// 0xE131E3B3
PED::SET_PED_CAN_PLAY_GESTURE_ANIMS(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanPlayInjuredAnims' func='yes'>
			<Overload retVal='void' descr='// 0x33A60D8BDD6E508C
// 0xADB2511A
PED::_SET_PED_CAN_PLAY_INJURED_ANIMS(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanPlayVisemeAnims' func='yes'>
			<Overload retVal='void' descr='// 0xF833DDBA3B104D43
// 0xA2FDAF27
PED::SET_PED_CAN_PLAY_VISEME_ANIMS(Ped ped, BOOL toggle, BOOL p2);
----------------------------------------------------------------------------------------------------
```

p2 usually 0  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanRagdoll' func='yes'>
			<Overload retVal='void' descr='// 0xB128377056A54E2A
// 0xCF1384C4
PED::SET_PED_CAN_RAGDOLL(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanRagdollFromPlayerImpact' func='yes'>
			<Overload retVal='void' descr='// 0xDF993EE5E90ABA25
// 0xE9BD733A
PED::SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanSmashGlass' func='yes'>
			<Overload retVal='void' descr='// 0x1CCE141467FF42A2
// 0x149C60A8
PED::SET_PED_CAN_SMASH_GLASS(Ped ped, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanSwitchWeapon' func='yes'>
			<Overload retVal='void' descr='// 0xED7F7EFE9FABF340
// 0xB5F8BA28
PED::SET_PED_CAN_SWITCH_WEAPON(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanTeleportToGroupLeader' func='yes'>
			<Overload retVal='void' descr='// 0x2E2F4240B3F24647
// 0xD0D8BDBC
PED::SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(Ped pedHandle, int groupHandle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

This only will teleport the ped to the group leader if the group leader teleports (sets coords).  

Only works in singleplayer  

```'>
				<Param name='Ped pedHandle' />
				<Param name='int groupHandle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanTorsoIk' func='yes'>
			<Overload retVal='void' descr='// 0xF2B7106D37947CE0
// 0x8E5D4EAB
PED::SET_PED_CAN_TORSO_IK(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCanUseAutoConversationLookat' func='yes'>
			<Overload retVal='void' descr='// 0xEC4686EC06434678
// 0x584C5178
PED::SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCapsule' func='yes'>
			<Overload retVal='void' descr='// 0x364DF566EC833DE2
// 0xB153E1B9
PED::SET_PED_CAPSULE(Ped ped, float value);
----------------------------------------------------------------------------------------------------
```

Overrides the ped&apos;s collision capsule radius for the current tick.  

Must be called every tick to be effective.  

Setting this to 0.001 will allow warping through some objects.  

```'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedClothProne' func='yes'>
			<Overload retVal='void' descr='// 0x82A3D6D9CC2CB8E3
// 0x89EEE07B
PED::SET_PED_CLOTH_PRONE(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCombatAbility' func='yes'>
			<Overload retVal='void' descr='// 0xC7622C0D36B2FDA8
// 0x6C23D329
PED::SET_PED_COMBAT_ABILITY(Ped ped, int p1);
----------------------------------------------------------------------------------------------------
```

100 would equal attack  

less then 50ish would mean run away  

Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the value
s also described in combatbehaviour.meta:  

0: CA_Poor  

1: CA_Average  

2: CA_Professional  

Tested this and got the same results as the first explanation here. Could not find any difference be
tween 0, 1 and 2.  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCombatAttributes' func='yes'>
			<Overload retVal='void' descr='// 0x9F7794730795E019
// 0x81D64248
PED::SET_PED_COMBAT_ATTRIBUTES(Ped ped, int attributeIndex, BOOL enabled);
----------------------------------------------------------------------------------------------------
```

These combat attributes seem to be the same as the BehaviourFlags from combatbehaviour.meta.  

So far, these are the equivalents found:  

enum CombatAttributes  

{  

	BF_CanUseCover = 0,  

	BF_CanUseVehicles = 1,  

	BF_CanDoDrivebys = 2,  

	BF_CanLeaveVehicle = 3,  

	BF_CanFightArmedPedsWhenNotArmed = 5,  

	BF_CanTauntInVehicle = 20,  

	BF_AlwaysFight = 46,  

	BF_IgnoreTrafficWhenDriving = 52,  

        BF_FreezeMovement = 292,  

        BF_PlayerCanUseFiringWeapons = 1424  

};  

8 = ?  

9 = ?  

13 = ?  

14 ?  

Research thread: gtaforums.com/topic/833391-researchguide-combat-behaviour-flags/  

```'>
				<Param name='Ped ped' />
				<Param name='int attributeIndex' />
				<Param name='BOOL enabled' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCombatMovement' func='yes'>
			<Overload retVal='void' descr='// 0x4D9CA1009AFBD057
// 0x12E62F9E
PED::SET_PED_COMBAT_MOVEMENT(Ped ped, int combatMovement);
----------------------------------------------------------------------------------------------------
```

0 - Stationary (Will just stand in place)  

1 - Defensive (Will try to find cover and very likely to blind fire)  

2 - Offensive (Will attempt to charge at enemy but take cover as well)  

3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)  

```'>
				<Param name='Ped ped' />
				<Param name='int combatMovement' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCombatRange' func='yes'>
			<Overload retVal='void' descr='// 0x3C606747B23E497B
// 0x8818A959
PED::SET_PED_COMBAT_RANGE(Ped ped, int p1);
----------------------------------------------------------------------------------------------------
```

Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the value
s also described as AttackRange in combatbehaviour.meta:  

0: CR_Near  

1: CR_Medium  

2: CR_Far  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedComponentVariation' func='yes'>
			<Overload retVal='void' descr='// 0x262B14F48D29DE80
// 0xD4F7B05C
PED::SET_PED_COMPONENT_VARIATION(Ped ped, int componentId, int drawableId, int textureId, int palett
----------------------------------------------------------------------------------------------------
;

```

```

paletteId/palletColor -  0 to 3.   

enum PedVariationData  

{  

	PED_VARIATION_FACE = 0,  

	PED_VARIATION_HEAD = 1,  

	PED_VARIATION_HAIR = 2,  

	PED_VARIATION_TORSO = 3,  

	PED_VARIATION_LEGS = 4,  

	PED_VARIATION_HANDS = 5,  

	PED_VARIATION_FEET = 6,  

	PED_VARIATION_EYES = 7,  

	PED_VARIATION_ACCESSORIES = 8,  

	PED_VARIATION_TASKS = 9,  

	PED_VARIATION_TEXTURES = 10,  

	PED_VARIATION_TORSO2 = 11  

};  

Usage:   

SET_PED_COMPONENT_VARIATION(playerPed, PED_VARIATION_FACE, GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(pla
yerPed, PED_VARIATION_FACE), GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(playerPed, PED_VARIATION_FACE, 0),
 2);  

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int componentId' />
				<Param name='int drawableId' />
				<Param name='int textureId' />
				<Param name='int palett' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedConfigFlag' func='yes'>
			<Overload retVal='void' descr='// 0x1913FE4CBF41C463
// 0x9CFBE10D
PED::SET_PED_CONFIG_FLAG(Ped ped, int flagId, BOOL value);
----------------------------------------------------------------------------------------------------
```

Research help : pastebin.com/fPL1cSwB  

New items added with underscore as first char  

-----------------------------------------------------------------------  

enum PedConfigFlags  

{  

	PED_FLAG_CAN_FLY_THRU_WINDSCREEN = 32,  

        PED_FLAG_DIES_BY_RAGDOLL = 33,  

	PED_FLAG_NO_COLLISION = 52,  

        _PED_FLAG_IS_SHOOTING = 58,  

        _PED_FLAG_IS_ON_GROUND = 60,  

	PED_FLAG_NO_COLLIDE = 62,  

	PED_FLAG_DEAD = 71,  

        PED_FLAG_IS_SNIPER_SCOPE_ACTIVE = 72,  

	PED_FLAG_SUPER_DEAD = 73,  

        _PED_FLAG_IS_IN_AIR = 76,  

	PED_FLAG_IS_AIMING = 78,  

	PED_FLAG_DRUNK = 100,  

        _PED_FLAG_IS_NOT_RAGDOLL_AND_NOT_PLAYING_ANIM = 104,  

        PED_FLAG_NO_PLAYER_MELEE = 122,  

	PED_FLAG_NM_MESSAGE_466 = 125,  

	PED_FLAG_INJURED_LIMP = 166,  

	PED_FLAG_INJURED_LIMP_2 = 170,  

	PED_FLAG_INJURED_DOWN = 187,  

	PED_FLAG_SHRINK = 223,  

        PED_FLAG_MELEE_COMBAT = 224,  

        _PED_FLAG_IS_ON_STAIRS = 253,  

        _PED_FLAG_HAS_ONE_LEG_ON_GROUND = 276,  

	PED_FLAG_NO_WRITHE = 281,  

	PED_FLAG_FREEZE = 292,  

	PED_FLAG_IS_STILL = 301,  

        PED_FLAG_NO_PED_MELEE = 314,  

        _PED_SWITCHING_WEAPON = 331,  

	PED_FLAG_ALPHA = 410,  

};  

(*) When flagId is set to 33 and the bool value to true, peds will die by starting ragdoll, so you s
hould set this flag to false when you resurrect a ped.  

When flagId is set to 62 and the boolvalue to false this happens: Ped is taken out of vehicle and ca
n&apos;t get back in when jacking their empty vehicle. If in a plane it falls from the sky and crashes. S
ometimes peds vehicle continue to drive the route without its driver who&apos;s running after.   

(*)  

JUMPING CHANGES  60,61,104 TO FALSE  

BEING ON WATER CHANGES 60,61 TO FALSE AND 65,66,168 TO TRUE  

FALLING CHANGES 60,61,104,276 TO FALSE AND TO 76 TRUE  

DYING CHANGES 60,61,104,276* TO FALSE AND (NONE) TO TRUE  

DYING MAKES 60,61,104 TO FALSE  

BEING IN A CAR CHANGES 60,79,104 TO FALSE AND 62 TO TRUE  

(*)Maximum value for flagId is 0x1AA (426) in b944.  

ID 0xF0 (240) appears to be a special flag which is handled different compared to the others IDs.  


```'>
				<Param name='Ped ped' />
				<Param name='int flagId' />
				<Param name='BOOL value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCoordsKeepVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x9AFEFF481A85AB2E
// 0xD66AE1D3
PED::SET_PED_COORDS_KEEP_VEHICLE(Ped ped, float posX, float posY, float posZ);
----------------------------------------------------------------------------------------------------
```

teleports ped to coords along with the vehicle ped is in  

```'>
				<Param name='Ped ped' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCoordsNoGang' func='yes'>
			<Overload retVal='void' descr='// 0x87052FE446E07247
// 0x9561AD98
PED::SET_PED_COORDS_NO_GANG(Ped ped, float posX, float posY, float posZ);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCowerHash' func='yes'>
			<Overload retVal='void' descr='// 0xA549131166868ED3
// 0x16F30DF4
PED::SET_PED_COWER_HASH(Ped ped, char* p1);
----------------------------------------------------------------------------------------------------
```

p1: Only &quot;CODE_HUMAN_STAND_COWER&quot; found in the b617d scripts.  

```'>
				<Param name='Ped ped' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDecoration' func='yes'>
			<Overload retVal='void' descr='// 0x5F5D1665E352A839
// 0x70559AC7
PED::_SET_PED_DECORATION(Ped ped, Hash collection, Hash overlay);
----------------------------------------------------------------------------------------------------
```

Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.  

collection - PedDecorationCollection filename hash  

overlay - Item name hash  

Example:  

Entry inside &quot;mpbeach_overlays.xml&quot; -  

&lt;Item&gt;  

  &lt;uvPos x=&quot;0.500000&quot; y=&quot;0.500000&quot; /&gt;  

  &lt;scale x=&quot;0.600000&quot; y=&quot;0.500000&quot; /&gt;  

  &lt;rotation value=&quot;0.000000&quot; /&gt;  

  &lt;nameHash&gt;FM_Hair_Fuzz&lt;/nameHash&gt;  

  &lt;txdHash&gt;mp_hair_fuzz&lt;/txdHash&gt;  

  &lt;txtHash&gt;mp_hair_fuzz&lt;/txtHash&gt;  

  &lt;zone&gt;ZONE_HEAD&lt;/zone&gt;  

  &lt;type&gt;TYPE_TATTOO&lt;/type&gt;  

  &lt;faction&gt;FM&lt;/faction&gt;  

  &lt;garment&gt;All&lt;/garment&gt;  

  &lt;gender&gt;GENDER_DONTCARE&lt;/gender&gt;  

  &lt;award /&gt;  

  &lt;awardLevel /&gt;  

&lt;/Item&gt;  

Code:  

PED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(&quot;mpbeach_overlays&quot;), GAMEPL
AY::GET_HASH_KEY(&quot;fm_hair_fuzz&quot;))  

```

----------------------------------------------------------------------------------------------------

Old name: _APPLY_PED_OVERLAY'>
				<Param name='Ped ped' />
				<Param name='Hash collection' />
				<Param name='Hash overlay' />
			</Overload>
		</KeyWord>
		<KeyWord name='_APPLY_PED_OVERLAY' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetPedDecoration' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetPedDefaultComponentVariation' func='yes'>
			<Overload retVal='void' descr='// 0x45EEE61580806D63
// 0xC866A984
PED::SET_PED_DEFAULT_COMPONENT_VARIATION(Ped ped);
----------------------------------------------------------------------------------------------------
```

Sets Ped Default Clothes  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDefensiveAreaAttachedToPed' func='yes'>
			<Overload retVal='void' descr='// 0x4EF47FE21698A8B6
// 0x74BDA7CE
PED::SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED(Ped ped, Ped attachPed, float p2, float p3, float p4, fl
----------------------------------------------------------------------------------------------------
p5, float p6, float p7, float p8, BOOL p9, BOOL p10);

```'>
				<Param name='Ped ped' />
				<Param name='Ped attachPed' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDefensiveAreaDirection' func='yes'>
			<Overload retVal='void' descr='// 0x413C6C763A4AFFAD
// 0xB66B0C9A
PED::SET_PED_DEFENSIVE_AREA_DIRECTION(Ped ped, float p1, float p2, float p3, BOOL p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDefensiveSphereAttachedToPed' func='yes'>
			<Overload retVal='void' descr='// 0xF9B8F91AAD3B953E
// 0x40638BDC
PED::SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED(Ped ped, Ped target, float xOffset, float yOffset, flo
----------------------------------------------------------------------------------------------------
Offset, float radius, BOOL p6);

```'>
				<Param name='Ped ped' />
				<Param name='Ped target' />
				<Param name='float xOffset' />
				<Param name='float yOffset' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDensityMultiplierThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x95E3D6257B166CF2
// 0x039C82BB
PED::SET_PED_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier);
----------------------------------------------------------------------------------------------------
```

• Usage  

→ Use this native inside a looped function.  

→ Values:  

→ 0.0 = no peds on streets  

→ 1.0 = normal peds on streets  

```'>
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDesiredHeading' func='yes'>
			<Overload retVal='void' descr='// 0xAA5A7ECE2AA8FE70
// 0x961458F9
PED::SET_PED_DESIRED_HEADING(Ped ped, float heading);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float heading' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDiesInSinkingVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xD718A22995E2B4BC
// 0x8D4D9ABB
PED::SET_PED_DIES_IN_SINKING_VEHICLE(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDiesInstantlyInWater' func='yes'>
			<Overload retVal='void' descr='// 0xEEB64139BA29A7CF
// 0xFE2554FC
PED::SET_PED_DIES_INSTANTLY_IN_WATER(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDiesInVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x2A30922C90C9B42C
// 0x6FE1E440
PED::SET_PED_DIES_IN_VEHICLE(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDiesInWater' func='yes'>
			<Overload retVal='void' descr='// 0x56CEF0AC79073BDE
// 0x604C872B
PED::SET_PED_DIES_IN_WATER(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDiesWhenInjured' func='yes'>
			<Overload retVal='Any' descr='// 0x5BA7919BED300023
// 0xE94E24D4
PED::SET_PED_DIES_WHEN_INJURED(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDriveByClipsetOverride' func='yes'>
			<Overload retVal='void' descr='// 0xED34AB6C5CB36520
// 0xD4C73595
PED::SET_PED_DRIVE_BY_CLIPSET_OVERRIDE(Ped ped, char* clipset);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='char* clipset' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDucking' func='yes'>
			<Overload retVal='void' descr='// 0x030983CA930B692D
// 0xB90353D7
PED::SET_PED_DUCKING(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V.
 It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedEnableWeaponBlocking' func='yes'>
			<Overload retVal='Any' descr='// 0x97A790315D3831FD
// 0x4CAD1A4A
PED::SET_PED_ENABLE_WEAPON_BLOCKING(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedEnveffScale' func='yes'>
			<Overload retVal='void' descr='// 0xBF29516833893561
// 0xFC1CFC27
PED::SET_PED_ENVEFF_SCALE(Ped ped, float value);
----------------------------------------------------------------------------------------------------
```

Values look to be between 0.0 and 1.0  

From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0  

You are correct, just looked in IDA it breaks from the function if it&apos;s less than 0.0f or greater th
an 1.0f.  

```'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedEyeColor' func='yes'>
			<Overload retVal='void' descr='// 0x50B56988B170AFDF
PED::_SET_PED_EYE_COLOR(Ped ped, int index);
----------------------------------------------------------------------------------------------------
```

Used for freemode (online) characters.  

For some reason, the scripts use a rounded float for the index.  

```'>
				<Param name='Ped ped' />
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedFaceFeature' func='yes'>
			<Overload retVal='void' descr='// 0x71A5C1DBA060049E
PED::_SET_PED_FACE_FEATURE(Ped ped, int index, float scale);
----------------------------------------------------------------------------------------------------
```

Sets the various freemode face features, e.g. nose length, chin shape. Scale ranges from -1.0 to 1.0
.  

Index can be 0   

Edit:----&gt;Thanks to the first user.  

    Enum Face_Feature  

        Nose_Width  

        Nose_Peak_Hight  

        Nose_Peak_Lenght  

        Nose_Bone_High  

        Nose_Peak_Lowering  

        Nose_Bone_Twist  

        EyeBrown_High  

        EyeBrown_Forward  

        Cheeks_Bone_High  

        Cheeks_Bone_Width  

        Cheeks_Width  

        Eyes_Openning  

        Lips_Thickness  

        Jaw_Bone_Width &apos;Bone size to sides  

        Jaw_Bone_Back_Lenght &apos;Bone size to back  

        Chimp_Bone_Lowering &apos;Go Down  

        Chimp_Bone_Lenght &apos;Go forward  

        Chimp_Bone_Width  

        Chimp_Hole  

        Neck_Thikness  

    End Enum  

Example in VB.Net  

Public Shared Sub SET_PED_FACE_FEATURE(FreemodePed As Ped, Index As Face_Feature, Scale As Single)  


Native.Function.Call(Native.Hash._SET_PED_FACE_FEATURE, FreemodePed, Index, Scale)  

End Sub  

```'>
				<Param name='Ped ped' />
				<Param name='int index' />
				<Param name='float scale' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedFacialDecoration' func='yes'>
			<Overload retVal='void' descr='// 0x5619BFA07CFD7833
PED::_SET_PED_FACIAL_DECORATION(Ped ped, Hash collection, Hash overlay);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0x8CD3E487  

```'>
				<Param name='Ped ped' />
				<Param name='Hash collection' />
				<Param name='Hash overlay' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedFiringPattern' func='yes'>
			<Overload retVal='void' descr='// 0x9AC577F5A12AD8A9
// 0xB4629D66
PED::SET_PED_FIRING_PATTERN(Ped ped, Hash patternHash);
----------------------------------------------------------------------------------------------------
```

FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )  

FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )  

FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )  

FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )  

FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )  

FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )  

FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )  

FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )  

FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )  

FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )  

FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )  

FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )  

FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )  

FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )  

FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )  

FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )  

if anyone is interested firing pattern info: pastebin.com/Px036isB  

```'>
				<Param name='Ped ped' />
				<Param name='Hash patternHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedFleeAttributes' func='yes'>
			<Overload retVal='void' descr='// 0x70A2D1137C8ED7C9
// 0xA717A875
PED::SET_PED_FLEE_ATTRIBUTES(Ped ped, int attributes, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Bool probably has something to do with vehicles, maybe if the ped can use vehicle to flee?  

Values used as attributes are those in sequence of powers of two, 1, 2, 4, 8, 16, 32, 64.... 65536. 
 

jedijosh920: Setting attribute &quot;2&quot; to true will make the ped steal a vehicle.  

```'>
				<Param name='Ped ped' />
				<Param name='int attributes' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedGeneratesDeadBodyEvents' func='yes'>
			<Overload retVal='void' descr='// 0x7FB17BA2E7DECA5B
// 0xE9B97A2B
PED::SET_PED_GENERATES_DEAD_BODY_EVENTS(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedGestureGroup' func='yes'>
			<Overload retVal='void' descr='// 0xDDF803377F94AAA8
// 0x170DA109
PED::SET_PED_GESTURE_GROUP(Ped ped, char* animGroupGesture);
----------------------------------------------------------------------------------------------------
```

From the scripts:  

PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),  

&quot;ANIM_GROUP_GESTURE_MISS_FRA0&quot;);  

PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),  

&quot;ANIM_GROUP_GESTURE_MISS_DocksSetup1&quot;);  

```'>
				<Param name='Ped ped' />
				<Param name='char* animGroupGesture' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedGetOutUpsideDownVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xBC0ED94165A48BC2
// 0x89AD49FF
PED::SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedGravity' func='yes'>
			<Overload retVal='void' descr='// 0x9FF447B6B6AD960A
// 0x3CA16652
PED::SET_PED_GRAVITY(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

enable or disable the gravity of a ped  

Examples:  

PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);  

PED::SET_PED_GRAVITY(Local_289[iVar0 /*20*/], 0x00000001);  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedGroupMemberPassengerIndex' func='yes'>
			<Overload retVal='void' descr='// 0x0BDDB8D9EC6BCF3C
// 0x2AB3670B
PED::SET_PED_GROUP_MEMBER_PASSENGER_INDEX(Ped ped, int index);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedHairColor' func='yes'>
			<Overload retVal='void' descr='// 0x4CFFC65454C93A49
PED::_SET_PED_HAIR_COLOR(Ped ped, int colorID, int highlightColorID);
----------------------------------------------------------------------------------------------------
```

Used for freemode (online) characters.  

```'>
				<Param name='Ped ped' />
				<Param name='int colorID' />
				<Param name='int highlightColorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedHeadBlendData' func='yes'>
			<Overload retVal='void' descr='// 0x9414E18B9434C2FE
// 0x60746B88
PED::SET_PED_HEAD_BLEND_DATA(Ped ped, int shapeFirstID, int shapeSecondID, int shapeThirdID, int ski
----------------------------------------------------------------------------------------------------
stID, int skinSecondID, int skinThirdID, float shapeMix, float skinMix, float thirdMix, BOOL isP
arent);

```

```

The &quot;shape&quot; parameters control the shape of the ped&apos;s face. The &quot;skin&quot; parameters control the skin t
one. ShapeMix and skinMix control how much the first and second IDs contribute,(typically mother and
 father.) ThirdMix overrides the others in favor of the third IDs. IsParent is set for &quot;children&quot; of
 the player character&apos;s grandparents during old-gen character creation. It has unknown effect otherw
ise.  

The IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.  

!!!Can someone add working example for this???  

try this:  

headBlendData headData;  

_GET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), &headData);  

SET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), headData.shapeFirst, headData.shapeSecond, headData.shapeTh
ird, headData.skinFirst, headData.skinSecond  

	, headData.skinThird, headData.shapeMix, headData.skinMix, headData.skinThird, 0);  

For more info please refer to this topic.   

gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained  

```'>
				<Param name='Ped ped' />
				<Param name='int shapeFirstID' />
				<Param name='int shapeSecondID' />
				<Param name='int shapeThirdID' />
				<Param name='int ski' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedHeadOverlay' func='yes'>
			<Overload retVal='void' descr='// 0x48F44967FA05CC1E
// 0xD28DBA90
PED::SET_PED_HEAD_OVERLAY(Ped ped, int overlayID, int index, float opacity);
----------------------------------------------------------------------------------------------------
```

OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity fro
m 0.0 to 1.0.   

overlayID       Part                  Index, to disable  

0               Blemishes             0 - 23, 255  

1               Facial Hair           0 - 28, 255  

2               Eyebrows              0 - 33, 255  

3               Ageing                0 - 14, 255  

4               Makeup                0 - 74, 255  

5               Blush                 0 - 6, 255  

6               Complexion            0 - 11, 255  

7               Sun Damage            0 - 10, 255  

8               Lipstick              0 - 9, 255  

9               Moles/Freckles        0 - 17, 255  

10              Chest Hair            0 - 16, 255  

11              Body Blemishes        0 - 11, 255  

12              Add Body Blemishes    0 - 1, 255  

```'>
				<Param name='Ped ped' />
				<Param name='int overlayID' />
				<Param name='int index' />
				<Param name='float opacity' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedHeadOverlayColor' func='yes'>
			<Overload retVal='void' descr='// 0x497BF74A7B9CB952
PED::_SET_PED_HEAD_OVERLAY_COLOR(Ped ped, int overlayID, int colorType, int colorID, int secondColor
----------------------------------------------------------------------------------------------------
```

```

Used for freemode (online) characters.  

ColorType is 1 for eyebrows, beards, and chest hair; 2 for blush and lipstick; and 0 otherwise, thou
gh not called in those cases.  

Called after SET_PED_HEAD_OVERLAY().  

```'>
				<Param name='Ped ped' />
				<Param name='int overlayID' />
				<Param name='int colorType' />
				<Param name='int colorID' />
				<Param name='int secondColor' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedHearingRange' func='yes'>
			<Overload retVal='void' descr='// 0x33A8F7F7D5F7F33C
// 0xB32087E0
PED::SET_PED_HEARING_RANGE(Ped ped, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedHelmet' func='yes'>
			<Overload retVal='void' descr='// 0x560A43136EB58105
// 0xED366E53
PED::SET_PED_HELMET(Ped ped, BOOL canWearHelmet);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL canWearHelmet' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedHelmetFlag' func='yes'>
			<Overload retVal='void' descr='// 0xC0E78D5C2CE3EB25
// 0x12677780
PED::SET_PED_HELMET_FLAG(Ped ped, int helmetFlag);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int helmetFlag' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedHelmetPropIndex' func='yes'>
			<Overload retVal='void' descr='// 0x26D83693ED99291C
// 0xA316D13F
PED::SET_PED_HELMET_PROP_INDEX(Ped ped, int propIndex);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int propIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedHelmetTextureIndex' func='yes'>
			<Overload retVal='void' descr='// 0xF1550C4BD22582E2
// 0x5F6C3328
PED::SET_PED_HELMET_TEXTURE_INDEX(Ped ped, int textureIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int textureIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedIdRange' func='yes'>
			<Overload retVal='void' descr='// 0xF107E836A70DCE05
// 0xEF3B4ED9
PED::SET_PED_ID_RANGE(Ped ped, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedIntoVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xF75B0D629E1C063D
// 0x07500C79
PED::SET_PED_INTO_VEHICLE(Ped ped, Vehicle vehicle, int seatIndex);
----------------------------------------------------------------------------------------------------
```

Ped: The ped to warp.  

vehicle: The vehicle to warp the ped into.  

Seat_Index: [-1 is driver seat, -2 first free passenger seat]  

Moreinfo of Seat Index  

DriverSeat = -1  

Passenger = 0  

Left Rear = 1  

RightRear = 2  

```'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='int seatIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedInVehicleContext' func='yes'>
			<Overload retVal='void' descr='// 0x530071295899A8C6
// 0x27F25C0E
PED::SET_PED_IN_VEHICLE_CONTEXT(Ped ped, Hash context);
----------------------------------------------------------------------------------------------------
```

PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, GAMEPLAY::GET_HASH_KEY(&quot;MINI_PROSTITUTE_LOW_PASSENGER&quot;));  

PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, GAMEPLAY::GET_HASH_KEY(&quot;MINI_PROSTITUTE_LOW_RESTRICTED_PASSEN
GER&quot;));  

PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, GAMEPLAY::GET_HASH_KEY(&quot;MISS_FAMILY1_JIMMY_SIT&quot;));  

PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, GAMEPLAY::GET_HASH_KEY(&quot;MISS_FAMILY1_JIMMY_SIT_REAR&quot;));  

PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, GAMEPLAY::GET_HASH_KEY(&quot;MISS_FAMILY2_JIMMY_BICYCLE&quot;));  

PED::SET_PED_IN_VEHICLE_CONTEXT(num3, GAMEPLAY::GET_HASH_KEY(&quot;MISSFBI2_MICHAEL_DRIVEBY&quot;));  

PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(&quot;MISS_ARMENIAN3_FRAN
KLIN_TENSE&quot;));  

PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(&quot;MISSFBI5_TREVOR_DRI
VING&quot;));  

```'>
				<Param name='Ped ped' />
				<Param name='Hash context' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedKeepTask' func='yes'>
			<Overload retVal='void' descr='// 0x971D38760FBC02EF
// 0xA7EC79CE
PED::SET_PED_KEEP_TASK(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedLegIkMode' func='yes'>
			<Overload retVal='void' descr='// 0xC396F5B86FF9FEBD
// 0xFDDB042E
PED::SET_PED_LEG_IK_MODE(Ped ped, int mode);
----------------------------------------------------------------------------------------------------
```

&quot;IK&quot; stands for &quot;Inverse kinematics.&quot; I assume this has something to do with how the ped uses his le
gs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or someti
mes 1  

```'>
				<Param name='Ped ped' />
				<Param name='int mode' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedLodMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0xDC2C5C242AAC342B
// 0x1D2B5C70
PED::SET_PED_LOD_MULTIPLIER(Ped ped, float multiplier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMaxHealth' func='yes'>
			<Overload retVal='void' descr='// 0xF5F6378C4F3419D3
// 0x5533F60B
PED::SET_PED_MAX_HEALTH(Ped ped, int value);
----------------------------------------------------------------------------------------------------
```

sets the maximum health of a ped  

I think it&apos;s never been used in any script  

```'>
				<Param name='Ped ped' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMaxMoveBlendRatio' func='yes'>
			<Overload retVal='void' descr='// 0x433083750C5E064A
// 0xEAD0269A
PED::SET_PED_MAX_MOVE_BLEND_RATIO(Ped ped, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMaxTimeInWater' func='yes'>
			<Overload retVal='void' descr='// 0x43C851690662113D
// 0xFE0A106B
PED::SET_PED_MAX_TIME_IN_WATER(Ped ped, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMaxTimeUnderwater' func='yes'>
			<Overload retVal='void' descr='// 0x6BA428C528D9E522
// 0x082EF240
PED::SET_PED_MAX_TIME_UNDERWATER(Ped ped, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMinGroundTimeForStungun' func='yes'>
			<Overload retVal='void' descr='// 0xFA0675AB151073FA
// 0x2F0D0973
PED::SET_PED_MIN_GROUND_TIME_FOR_STUNGUN(Ped ped, int ms);
----------------------------------------------------------------------------------------------------
```

Ped will stay on the ground after being stunned for at lest ms time. (in milliseconds)  

```'>
				<Param name='Ped ped' />
				<Param name='int ms' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMinMoveBlendRatio' func='yes'>
			<Overload retVal='void' descr='// 0x01A898D26E2333DD
// 0x383EC364
PED::SET_PED_MIN_MOVE_BLEND_RATIO(Ped ped, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedModelIsSuppressed' func='yes'>
			<Overload retVal='void' descr='// 0xE163A4BCE4DE6F11
// 0x7820CA43
PED::SET_PED_MODEL_IS_SUPPRESSED(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMoney' func='yes'>
			<Overload retVal='void' descr='// 0xA9C8960E8684C1B5
// 0x40D90BF2
PED::SET_PED_MONEY(Ped ped, int amount);
----------------------------------------------------------------------------------------------------
```

Maximum possible amount of money on MP is 2000. ~JX  

-----------------------------------------------------------------------------  

Maximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an 
unsigned short (uint16_t) value.  

```'>
				<Param name='Ped ped' />
				<Param name='int amount' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMotionBlur' func='yes'>
			<Overload retVal='void' descr='// 0x0A986918B102B448
// 0xA211A128
PED::SET_PED_MOTION_BLUR(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMoveAnimsBlendOut' func='yes'>
			<Overload retVal='void' descr='// 0x9E8C908F41584ECD
// 0x20E01957
PED::SET_PED_MOVE_ANIMS_BLEND_OUT(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMovementClipset' func='yes'>
			<Overload retVal='void' descr='// 0xAF8A94EDE7712BEF
// 0xA817CDEB
PED::SET_PED_MOVEMENT_CLIPSET(Ped ped, char* clipSet, float p2);
----------------------------------------------------------------------------------------------------
```

p2 is usually 1.0f  

EDIT 12/24/16:   

p2 does absolutely nothing no matter what the value is.   

EDIT 08/16/17:  

p2 is the time for a smooth changing to the new clipset.  

List of movement clipsets:  

Thanks to elsewhat for list.  

 &quot;ANIM_GROUP_MOVE_BALLISTIC&quot;  

 &quot;ANIM_GROUP_MOVE_LEMAR_ALLEY&quot;  

 &quot;clipset@move@trash_fast_turn&quot;  

 &quot;FEMALE_FAST_RUNNER&quot;  

 &quot;missfbi4prepp1_garbageman&quot;  

 &quot;move_characters@franklin@fire&quot;  

 &quot;move_characters@Jimmy@slow@&quot;  

 &quot;move_characters@michael@fire&quot;  

 &quot;move_f@flee@a&quot;  

 &quot;move_f@scared&quot;  

 &quot;move_f@sexy@a&quot;  

 &quot;move_heist_lester&quot;  

 &quot;move_injured_generic&quot;  

 &quot;move_lester_CaneUp&quot;  

 &quot;move_m@bag&quot;  

 &quot;MOVE_M@BAIL_BOND_NOT_TAZERED&quot;  

 &quot;MOVE_M@BAIL_BOND_TAZERED&quot;  

 &quot;move_m@brave&quot;  

 &quot;move_m@casual@d&quot;  

 &quot;move_m@drunk@moderatedrunk&quot;  

 &quot;MOVE_M@DRUNK@MODERATEDRUNK&quot;  

 &quot;MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP&quot;  

 &quot;MOVE_M@DRUNK@SLIGHTLYDRUNK&quot;  

 &quot;MOVE_M@DRUNK@VERYDRUNK&quot;  

 &quot;move_m@fire&quot;  

 &quot;move_m@gangster@var_e&quot;  

 &quot;move_m@gangster@var_f&quot;  

 &quot;move_m@gangster@var_i&quot;  

 &quot;move_m@JOG@&quot;  

 &quot;MOVE_M@PRISON_GAURD&quot;  

 &quot;MOVE_P_M_ONE&quot;  

 &quot;MOVE_P_M_ONE_BRIEFCASE&quot;  

 &quot;move_p_m_zero_janitor&quot;  

 &quot;move_p_m_zero_slow&quot;  

 &quot;move_ped_bucket&quot;  

 &quot;move_ped_crouched&quot;  

 &quot;move_ped_mop&quot;  

 &quot;MOVE_M@FEMME@&quot;  

 &quot;MOVE_F@FEMME@&quot;  

 &quot;MOVE_M@GANGSTER@NG&quot;  

 &quot;MOVE_F@GANGSTER@NG&quot;  

 &quot;MOVE_M@POSH@&quot;  

 &quot;MOVE_F@POSH@&quot;  

 &quot;MOVE_M@TOUGH_GUY@&quot;  

 &quot;MOVE_F@TOUGH_GUY@&quot;  

~ NotCrunchyTaco  

```'>
				<Param name='Ped ped' />
				<Param name='char* clipSet' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedMoveRateOverride' func='yes'>
			<Overload retVal='void' descr='// 0x085BF80FA50A39D1
// 0x900008C6
PED::SET_PED_MOVE_RATE_OVERRIDE(Ped ped, float value);
----------------------------------------------------------------------------------------------------
```

Min: 0.00  

Max: 10.00  

Can be used in combo with fast run cheat.  

When value is set to 10.00:  

Sprinting without fast run cheat: 66 m/s  

Sprinting with fast run cheat: 77 m/s  

Does not need to be looped!  

Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, b
ut the max set to 1.15f not 10.0f.  

```'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedNameDebug' func='yes'>
			<Overload retVal='void' descr='// 0x98EFA132A4117BE1
// 0x20D6273E
PED::SET_PED_NAME_DEBUG(Ped ped, char* name);
----------------------------------------------------------------------------------------------------
```

NOTE: Debugging functions are not present in the retail version of the game.  

*untested but char *name could also be a hash for a localized string  

```'>
				<Param name='Ped ped' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedNeverLeavesGroup' func='yes'>
			<Overload retVal='void' descr='// 0x3DBFC55D5C9BB447
// 0x0E038813
PED::SET_PED_NEVER_LEAVES_GROUP(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedNonCreationArea' func='yes'>
			<Overload retVal='void' descr='// 0xEE01041D559983EA
// 0x7A97283F
PED::SET_PED_NON_CREATION_AREA(float x1, float y1, float z1, float x2, float y2, float z2);
----------------------------------------------------------------------------------------------------
```

The distance between these points, is the diagonal of a box (remember it&apos;s 3D).  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedParachuteTintIndex' func='yes'>
			<Overload retVal='void' descr='// 0x333FC8DB079B7186
// 0x5AEFEC3A
PED::SET_PED_PARACHUTE_TINT_INDEX(Ped ped, int tintIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='int tintIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPinnedDown' func='yes'>
			<Overload retVal='Any' descr='// 0xAAD6D1ACF08F4612
// 0xCC78999D
PED::SET_PED_PINNED_DOWN(Ped ped, BOOL pinned, int p2);
----------------------------------------------------------------------------------------------------
```

p2 could be time. Only example in the decompiled scripts uses it as -1.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL pinned' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPlaysHeadOnHornAnimWhenDiesInVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x94D94BF1A75AED3D
// 0x7C563CD2
PED::SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Points to the same function as for example GET_RANDOM_VEHICLE_MODEL_IN_MEMORY and it does absolutely
 nothing.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPreferredCoverSet' func='yes'>
			<Overload retVal='void' descr='// 0x8421EB4DA7E391B9
// 0xF3B7EFBF
PED::SET_PED_PREFERRED_COVER_SET(Ped ped, Any itemSet);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any itemSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPrimaryLookat' func='yes'>
			<Overload retVal='void' descr='// 0xCD17B554996A8D9E
// 0x6DEF6F1C
PED::SET_PED_PRIMARY_LOOKAT(Ped ped, Ped lookAt);
----------------------------------------------------------------------------------------------------
```

This is only called once in the scripts.  

sub_1CD9(&l_49, 0, getElem(3, &l_34, 4), &quot;MICHAEL&quot;, 0, 1);  

                    sub_1CA8(&quot;WORLD_HUMAN_SMOKING&quot;, 2);  

                    PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());  

```'>
				<Param name='Ped ped' />
				<Param name='Ped lookAt' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPropIndex' func='yes'>
			<Overload retVal='void' descr='// 0x93376B65A266EB5F
// 0x0829F2E2
PED::SET_PED_PROP_INDEX(Ped ped, int componentId, int drawableId, int TextureId, BOOL attach);
----------------------------------------------------------------------------------------------------
```

ComponentId can be set to various things based on what category you&apos;re wanting to set  

enum PedPropsData  

{  

	PED_PROP_HATS = 0,  

	PED_PROP_GLASSES = 1,  

	PED_PROP_EARS = 2,  

	PED_PROP_WATCHES = 3,  

};  

Usage: SET_PED_PROP_INDEX(playerPed, PED_PROP_HATS, GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(playe
rPed, PED_PROP_HATS), GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(playerPed, PED_PROP_HATS, 0), TRUE);
  

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='int componentId' />
				<Param name='int drawableId' />
				<Param name='int TextureId' />
				<Param name='BOOL attach' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedRagdollBlockingFlags' func='yes'>
			<Overload retVal='void' descr='// 0x26695EC767728D84
// 0x9C8F830D
PED::_SET_PED_RAGDOLL_BLOCKING_FLAGS(Ped ped, int flags);
----------------------------------------------------------------------------------------------------
```

Works for both player and peds, but some flags don&apos;t seem to work for the player (1, for example)  


1 - Blocks ragdolling when shot.  

2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.  

4 - Blocks ragdolling when set on fire.  

-----------------------------------------------------------------------  

There seem to be 26 flags  

```'>
				<Param name='Ped ped' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedRagdollForceFall' func='yes'>
			<Overload retVal='Any' descr='// 0x01F6594B923B9251
// 0x20A5BDE0
PED::SET_PED_RAGDOLL_FORCE_FALL(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedRagdollOnCollision' func='yes'>
			<Overload retVal='void' descr='// 0xF0A4F1BBF4FA7497
// 0x2654A0F4
PED::SET_PED_RAGDOLL_ON_COLLISION(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player
 you will sometimes trip on the sidewalk.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedRandomComponentVariation' func='yes'>
			<Overload retVal='void' descr='// 0xC8A9481A01E63C28
// 0x4111BA46
PED::SET_PED_RANDOM_COMPONENT_VARIATION(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p1 is always false in R* scripts.  

Quick disassembly seems to indicate that p1 is unused.  

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedRandomProps' func='yes'>
			<Overload retVal='void' descr='// 0xC44AA05345C992C6
// 0xE3318E0E
PED::SET_PED_RANDOM_PROPS(Ped ped);
----------------------------------------------------------------------------------------------------
```

List of component/props ID  

gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedRelationshipGroupDefaultHash' func='yes'>
			<Overload retVal='void' descr='// 0xADB3F206518799E8
// 0x423B7BA2
PED::SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(Ped ped, Hash hash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash hash' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedRelationshipGroupHash' func='yes'>
			<Overload retVal='void' descr='// 0xC80A74AC829DDD92
// 0x79F8C18C
PED::SET_PED_RELATIONSHIP_GROUP_HASH(Ped ped, Hash hash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash hash' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedReserveParachuteTintIndex' func='yes'>
			<Overload retVal='void' descr='// 0xE88DA0751C22A2AD
// 0x177EFC79
PED::SET_PED_RESERVE_PARACHUTE_TINT_INDEX(Ped ped, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedResetFlag' func='yes'>
			<Overload retVal='void' descr='// 0xC1E8A365BF3B29F2
// 0xCFF6FF66
PED::SET_PED_RESET_FLAG(Ped ped, int flagId, BOOL doReset);
----------------------------------------------------------------------------------------------------
```

PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);  

```'>
				<Param name='Ped ped' />
				<Param name='int flagId' />
				<Param name='BOOL doReset' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedSeeingRange' func='yes'>
			<Overload retVal='void' descr='// 0xF29CF591C4BF6CEE
// 0x4BD72FE8
PED::SET_PED_SEEING_RANGE(Ped ped, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedShootRate' func='yes'>
			<Overload retVal='void' descr='// 0x614DA022990752DC
// 0xFB301746
PED::SET_PED_SHOOT_RATE(Ped ped, int shootRate);
----------------------------------------------------------------------------------------------------
```

shootRate 0-1000  

```'>
				<Param name='Ped ped' />
				<Param name='int shootRate' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedShootsAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0x96A05E4FB321B1BA
// 0xFD64EAE5
PED::SET_PED_SHOOTS_AT_COORD(Ped ped, float x, float y, float z, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedSphereDefensiveArea' func='yes'>
			<Overload retVal='void' descr='// 0x9D3151A373974804
// 0xBD96D8E8
PED::SET_PED_SPHERE_DEFENSIVE_AREA(Ped ped, float x, float y, float z, float radius, BOOL p5, BOOL p
----------------------------------------------------------------------------------------------------
```'>
				<Param name='Ped ped' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='BOOL p5' />
				<Param name='BOOL p' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedStayInVehicleWhenJacked' func='yes'>
			<Overload retVal='void' descr='// 0xEDF4079F9D54C9A1
// 0xB014A09C
PED::SET_PED_STAY_IN_VEHICLE_WHEN_JACKED(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedStealthMovement' func='yes'>
			<Overload retVal='void' descr='// 0x88CBB5CEB96B7BD2
// 0x67E28E1D
PED::SET_PED_STEALTH_MOVEMENT(Ped ped, BOOL p1, char* action);
----------------------------------------------------------------------------------------------------
```

p1 is usually 0 in the scripts. action is either 0 or a pointer to &quot;DEFAULT_ACTION&quot;.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
				<Param name='char* action' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedSteersAroundObjects' func='yes'>
			<Overload retVal='void' descr='// 0x1509C089ADC208BF
// 0x3BD9B0A6
PED::SET_PED_STEERS_AROUND_OBJECTS(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedSteersAroundPeds' func='yes'>
			<Overload retVal='void' descr='// 0x46F2193B3AD1D891
// 0x797CAE4F
PED::SET_PED_STEERS_AROUND_PEDS(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedSteersAroundVehicles' func='yes'>
			<Overload retVal='void' descr='// 0xEB6FB9D48DDE23EC
// 0x533C0651
PED::SET_PED_STEERS_AROUND_VEHICLES(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedStrafeClipset' func='yes'>
			<Overload retVal='void' descr='// 0x29A28F3F8CF6D854
// 0x0BACF010
PED::SET_PED_STRAFE_CLIPSET(Ped ped, char* clipSet);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='char* clipSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedSuffersCriticalHits' func='yes'>
			<Overload retVal='void' descr='// 0xEBD76F2359F190AC
// 0x6F6FC7E6
PED::SET_PED_SUFFERS_CRITICAL_HITS(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

ped cannot be headshot if this is set to false  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedSweat' func='yes'>
			<Overload retVal='void' descr='// 0x27B0405F59637D1F
// 0x76A1DB9F
PED::SET_PED_SWEAT(Ped ped, float sweat);
----------------------------------------------------------------------------------------------------
```

Sweat is set to 100.0 or 0.0 in the decompiled scripts.  

```'>
				<Param name='Ped ped' />
				<Param name='float sweat' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedTargetLossResponse' func='yes'>
			<Overload retVal='void' descr='// 0x0703B9079823DA4A
// 0xCFA613FF
PED::SET_PED_TARGET_LOSS_RESPONSE(Ped ped, int responseType);
----------------------------------------------------------------------------------------------------
```

Only 1 and 2 appear in the scripts. combatbehaviour.meta seems to only have TLR_SearchForTarget for 
all peds, but we don&apos;t know if that&apos;s 1 or 2.  

```'>
				<Param name='Ped ped' />
				<Param name='int responseType' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedToInformRespectedFriends' func='yes'>
			<Overload retVal='void' descr='// 0x112942C6E708F70B
// 0xD78AC46C
PED::SET_PED_TO_INFORM_RESPECTED_FRIENDS(Ped ped, float radius, int maxFriends);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float radius' />
				<Param name='int maxFriends' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedToLoadCover' func='yes'>
			<Overload retVal='void' descr='// 0x332B562EEDA62399
// 0xCF94BA97
PED::SET_PED_TO_LOAD_COVER(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedToRagdoll' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAE99FB955581844A
// 0x83CB5052
PED::SET_PED_TO_RAGDOLL(Ped ped, int time1, int time2, int ragdollType, BOOL p4, BOOL p5, BOOL p6);
----------------------------------------------------------------------------------------------------
`

```

time1- Time Ped is in ragdoll mode(ms)  

time2- Unknown time, in milliseconds  

ragdollType-  

0 : Normal ragdoll  

1 : Falls with stiff legs/body  

2 : Narrow leg stumble(may not fall)  

3 : Wide leg stumble(may not fall)  

p4, p5, p6- No idea. In R*&apos;s scripts they are usually either &quot;true, true, false&quot; or &quot;false, false, f
alse&quot;.  

EDIT 3/11/16: unclear what &apos;mircoseconds&apos; mean-- a microsecond is 1000x a ms, so time2 must be 1000x
 time1?  more testing needed.  -sob  

Edit Mar 21, 2017: removed part about time2 being the microseconds version of time1. this just isn&apos;t
 correct. time2 is in milliseconds, and time1 and time2 don&apos;t seem to be connected in any way.  

```'>
				<Param name='Ped ped' />
				<Param name='int time1' />
				<Param name='int time2' />
				<Param name='int ragdollType' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedToRagdollWithFall' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD76632D99E4966C8
// 0xFA12E286
PED::SET_PED_TO_RAGDOLL_WITH_FALL(Ped ped, int time, int p2, int ragdollType, float x, float y, floa
----------------------------------------------------------------------------------------------------
float p7, float p8, float p9, float p10, float p11, float p12, float p13);

```

```

Return variable is never used in R*&apos;s scripts.  

Not sure what p2 does. It seems like it would be a time judging by it&apos;s usage in R*&apos;s scripts, but d
idn&apos;t seem to affect anything in my testings.  

x, y, and z are coordinates, most likely to where the ped will fall.  

p7 is probably the force of the fall, but untested, so I left the variable name the same.  

p8 to p13 are always 0f in R*&apos;s scripts.  

(Simplified) Example of the usage of the function from R*&apos;s scripts:  

ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0
f, 0f, 0f, 0f, 0f, 0f);  

```'>
				<Param name='Ped ped' />
				<Param name='int time' />
				<Param name='int p2' />
				<Param name='int ragdollType' />
				<Param name='float x' />
				<Param name='float y' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedUsingActionMode' func='yes'>
			<Overload retVal='void' descr='// 0xD75ACCF5E0FB5367
// 0x8802F696
PED::SET_PED_USING_ACTION_MODE(Ped ped, BOOL p1, Any p2, char* action);
----------------------------------------------------------------------------------------------------
```

p2 is usually -1 in the scripts. action is either 0 or &quot;DEFAULT_ACTION&quot;.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
				<Param name='Any p2' />
				<Param name='char* action' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedVisualFieldCenterAngle' func='yes'>
			<Overload retVal='void' descr='// 0x3B6405E8AB34A907
// 0xE57202A1
PED::SET_PED_VISUAL_FIELD_CENTER_ANGLE(Ped ped, float angle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float angle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedVisualFieldMaxAngle' func='yes'>
			<Overload retVal='void' descr='// 0x70793BDCA1E854D4
// 0x0CEA0F9A
PED::SET_PED_VISUAL_FIELD_MAX_ANGLE(Ped ped, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedVisualFieldMaxElevationAngle' func='yes'>
			<Overload retVal='void' descr='// 0x78D0B67629D75856
// 0x39D9102F
PED::SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE(Ped ped, float angle);
----------------------------------------------------------------------------------------------------
```

This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would l
et the ped see enemies directly above of them.  

```'>
				<Param name='Ped ped' />
				<Param name='float angle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedVisualFieldMinAngle' func='yes'>
			<Overload retVal='void' descr='// 0x2DB492222FB21E26
// 0x72E2E18B
PED::SET_PED_VISUAL_FIELD_MIN_ANGLE(Ped ped, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedVisualFieldMinElevationAngle' func='yes'>
			<Overload retVal='void' descr='// 0x7A276EB2C224D70F
// 0x5CC2F1B8
PED::SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE(Ped ped, float angle);
----------------------------------------------------------------------------------------------------
```

This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle v
alue should be negative.  

```'>
				<Param name='Ped ped' />
				<Param name='float angle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedVisualFieldPeripheralRange' func='yes'>
			<Overload retVal='void' descr='// 0x9C74B0BC831B753A
// 0xFDF2F7C2
PED::SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE(Ped ped, float range);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float range' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedWeaponMovementClipset' func='yes'>
			<Overload retVal='void' descr='// 0x2622E35B77D3ACA2
// 0xF8BE54DC
PED::SET_PED_WEAPON_MOVEMENT_CLIPSET(Ped ped, char* clipSet);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='char* clipSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedWetnessEnabledThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xB5485E4907B53019
// 0xBDE749F7
PED::SET_PED_WETNESS_ENABLED_THIS_FRAME(Ped ped);
----------------------------------------------------------------------------------------------------
```

combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the h
eight specified in the other function  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedWetnessHeight' func='yes'>
			<Overload retVal='void' descr='// 0x44CB6447D2571AA0
// 0x7B33289A
PED::SET_PED_WETNESS_HEIGHT(Ped ped, float height);
----------------------------------------------------------------------------------------------------
```

It adds the wetness level to the player clothing/outfit. As if player just got out from water surfac
e.  

```'>
				<Param name='Ped ped' />
				<Param name='float height' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRelationshipBetweenGroups' func='yes'>
			<Overload retVal='void' descr='// 0xBF25EB89375A37AD
// 0xD4A215BA
PED::SET_RELATIONSHIP_BETWEEN_GROUPS(int relationship, Hash group1, Hash group2);
----------------------------------------------------------------------------------------------------
```

Sets the relationship between two groups. This should be called twice (once for each group).  

Relationship types:  

0 = Companion  

1 = Respect  

2 = Like  

3 = Neutral  

4 = Dislike  

5 = Hate  

255 = Pedestrians  

Example:  

PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);  

PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);  

```'>
				<Param name='int relationship' />
				<Param name='Hash group1' />
				<Param name='Hash group2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScenarioPedDensityMultiplierThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x7A556143A1C03898
// 0x2909ABF0
PED::SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME(float p0, float p1);
----------------------------------------------------------------------------------------------------
```

p0 and p1 are always the same  

```'>
				<Param name='float p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScenarioPedsSpawnInSphereArea' func='yes'>
			<Overload retVal='void' descr='// 0x28157D43CF600981
// 0x80EAD297
PED::SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA(float x, float y, float z, float range, int p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float range' />
				<Param name='int p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScenarioPedsToBeReturnedByNextCommand' func='yes'>
			<Overload retVal='void' descr='// 0x14F19A8782C8071E
// 0x85615FD0
PED::SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND(BOOL value);
----------------------------------------------------------------------------------------------------
```

Sets a value indicating whether scenario peds should be returned by the next call to a command that 
returns peds. Eg. GET_CLOSEST_PED.  

```'>
				<Param name='BOOL value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScriptedAnimSeatOffset' func='yes'>
			<Overload retVal='void' descr='// 0x5917BBA32D06C230
// 0x7CEFFA45
PED::SET_SCRIPTED_ANIM_SEAT_OFFSET(Ped ped, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScriptedConversionCoordThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x5086C7843552CF85
// 0x25EA2AA5
PED::SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME(float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSynchronizedSceneLooped' func='yes'>
			<Overload retVal='void' descr='// 0xD9A897A4C6C2974F
// 0x32ED9F82
PED::SET_SYNCHRONIZED_SCENE_LOOPED(int sceneID, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int sceneID' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSynchronizedSceneOcclusionPortal' func='yes'>
			<Overload retVal='void' descr='// 0x394B9CD12435C981
// 0x2DE48DA1
PED::_SET_SYNCHRONIZED_SCENE_OCCLUSION_PORTAL(Any sceneID, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any sceneID' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSynchronizedSceneOrigin' func='yes'>
			<Overload retVal='void' descr='// 0x6ACF6B7225801CD7
// 0x2EC2A0B2
PED::SET_SYNCHRONIZED_SCENE_ORIGIN(int sceneID, float x, float y, float z, float roll, float pitch, 
----------------------------------------------------------------------------------------------------
t yaw, BOOL p7);

```'>
				<Param name='int sceneID' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float roll' />
				<Param name='float pitch' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSynchronizedScenePhase' func='yes'>
			<Overload retVal='void' descr='// 0x734292F4F0ABF6D0
// 0xF5AB0D98
PED::SET_SYNCHRONIZED_SCENE_PHASE(int sceneID, float phase);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int sceneID' />
				<Param name='float phase' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSynchronizedSceneRate' func='yes'>
			<Overload retVal='void' descr='// 0xB6C49F8A5E295A5D
// 0xF10112FD
PED::SET_SYNCHRONIZED_SCENE_RATE(int sceneID, float rate);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int sceneID' />
				<Param name='float rate' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTimeExclusiveDisplayTexture' func='yes'>
			<Overload retVal='void' descr='// 0xFD325494792302D7
// 0x7F67671D
PED::SET_TIME_EXCLUSIVE_DISPLAY_TEXTURE(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Hash collision. Please change back to _0x_  

```'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopAnyPedModelBeingSuppressed' func='yes'>
			<Overload retVal='void' descr='// 0xB47BD05FA66B40CF
// 0x5AD7DC55
PED::STOP_ANY_PED_MODEL_BEING_SUPPRESSED();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='StopPedWeaponFiringWhenDropped' func='yes'>
			<Overload retVal='void' descr='// 0xC158D28142A34608
// 0x4AC3421E
PED::STOP_PED_WEAPON_FIRING_WHEN_DROPPED(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='UnregisterPedheadshot' func='yes'>
			<Overload retVal='void' descr='// 0x96B1361D9B24C2FF
// 0x0879AE45
PED::UNREGISTER_PEDHEADSHOT(int handle);
----------------------------------------------------------------------------------------------------
```

gtaforums.com/topic/885580-ped-headshotmugshot-txd/  

```'>
				<Param name='int handle' />
			</Overload>
		</KeyWord>
		<KeyWord name='UpdatePedHeadBlendData' func='yes'>
			<Overload retVal='void' descr='// 0x723538F61C647C5A
// 0x5CB76219
PED::UPDATE_PED_HEAD_BLEND_DATA(Ped ped, float shapeMix, float skinMix, float thirdMix);
----------------------------------------------------------------------------------------------------
```

See SET_PED_HEAD_BLEND_DATA().  

```'>
				<Param name='Ped ped' />
				<Param name='float shapeMix' />
				<Param name='float skinMix' />
				<Param name='float thirdMix' />
			</Overload>
		</KeyWord>
		<KeyWord name='WasPedKilledByStealth' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF9800AA1A771B000
// 0x2EA4B54E
PED::WAS_PED_KILLED_BY_STEALTH(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='WasPedKilledByTakedown' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7F08E26039C7347C
// 0xBDD3CE69
PED::WAS_PED_KILLED_BY_TAKEDOWN(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='WasPedSkeletonUpdated' func='yes'>
			<Overload retVal='BOOL' descr='// 0x11B499C1E0FF8559
// 0xF7E2FBAD
PED::WAS_PED_SKELETON_UPDATED(Ped ped);
----------------------------------------------------------------------------------------------------
```

Despite this function&apos;s name, it simply returns whether the specified handle is a Ped.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ActivatePhysics' func='yes'>
			<Overload retVal='void' descr='// 0x710311ADF0E20730
// 0x031711B8
PHYSICS::ACTIVATE_PHYSICS(Entity entity);
----------------------------------------------------------------------------------------------------
```

seems to be frequently used with the NETWORK::NET_TO_x natives, particularly with vehicles. It is of
ten the only ROPE:: native in a script.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddRope' func='yes'>
			<Overload retVal='Object' descr='// 0xE832D760399EB220
// 0xA592EC74
PHYSICS::ADD_ROPE(float x, float y, float z, float rotX, float rotY, float rotZ, float length, int rop
----------------------------------------------------------------------------------------------------
e, float maxLength, float minLength, float p10, BOOL p11, BOOL p12, BOOL rigid, float p14, BOOL 
breakWhenShot, Any* unkPtr);

```

```

Creates a rope at the specific position, that extends in the specified direction when not attached t
o any entities.  

__  

Add_Rope(pos.x,pos.y,pos.z,0.0,0.0,0.0,20.0,4,20.0,1.0,0.0,false,false,false,5.0,false,NULL)  

When attached, Position&lt;vector&gt; does not matter  

When attached, Angle&lt;vector&gt; does not matter  

Rope Type:  

4 and bellow is a thick rope  

5 and up are small metal wires  

0 crashes the game  

Max_length - Rope is forced to this length, generally best to keep this the same as your rope length
.  

Rigid - If max length is zero, and this is set to false the rope will become rigid (it will force a 
specific distance, what ever length is, between the objects).  

breakable - Whether or not shooting the rope will break it.  

unkPtr - unknown ptr, always 0 in orig scripts  

__  

Lengths can be calculated like so:  

float distance = abs(x1 - x2) + abs(y1 - y2) + abs(z1 - z2); // Rope length  

NOTES:  

Rope does NOT interact with anything you attach it to, in some cases it make interact with the world
 AFTER it breaks (seems to occur if you set the type to -1).  

Rope will sometimes contract and fall to the ground like you&apos;d expect it to, but since it doesn&apos;t in
teract with the world the effect is just jaring.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float rotX' />
				<Param name='float rotY' />
				<Param name='float rotZ' />
				<Param name='float length' />
				<Param name='int rop' />
			</Overload>
		</KeyWord>
		<KeyWord name='ApplyImpulseToCloth' func='yes'>
			<Overload retVal='void' descr='// 0xE37F721824571784
// 0xA2A5C9FE
PHYSICS::APPLY_IMPULSE_TO_CLOTH(float posX, float posY, float posZ, float vecX, float vecY, float vecZ, 
----------------------------------------------------------------------------------------------------
t impulse);

```'>
				<Param name='float posX' />
				<Param name='float posY' />
				<Param name='float posZ' />
				<Param name='float vecX' />
				<Param name='float vecY' />
				<Param name='float vecZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='AttachEntitiesToRope' func='yes'>
			<Overload retVal='void' descr='// 0x3D95EC8B6D940AC3
// 0x7508668F
PHYSICS::ATTACH_ENTITIES_TO_ROPE(Object rope, Entity ent1, Entity ent2, float ent1_x, float ent1_y, floa
----------------------------------------------------------------------------------------------------
t1_z, float ent2_x, float ent2_y, float ent2_z, float length, BOOL p10, BOOL p11, char* boneName
1, char* boneName2);

```

```

Attaches entity 1 to entity 2.  

```'>
				<Param name='Object rope' />
				<Param name='Entity ent1' />
				<Param name='Entity ent2' />
				<Param name='float ent1_x' />
				<Param name='float ent1_y' />
			</Overload>
		</KeyWord>
		<KeyWord name='AttachRopeToEntity' func='yes'>
			<Overload retVal='void' descr='// 0x4B490A6832559A65
// 0xB25D9536
PHYSICS::ATTACH_ROPE_TO_ENTITY(Object rope, Entity entity, float x, float y, float z, BOOL p5);
----------------------------------------------------------------------------------------------------
```

The position supplied can be anywhere, and the entity should anchor relative to that point from it&apos;s
 origin.  

```'>
				<Param name='Object rope' />
				<Param name='Entity entity' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='BreakEntityGlass' func='yes'>
			<Overload retVal='void' descr='// 0x2E648D16F6E308F3
// 0xD0E0402F
PHYSICS::BREAK_ENTITY_GLASS(Any p0, float p1, float p2, float p3, float p4, float p5, float p6, float p7
----------------------------------------------------------------------------------------------------
oat p8, Any p9, BOOL p10);

```'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
				<Param name='float p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteChildRope' func='yes'>
			<Overload retVal='Any' descr='// 0xAA5D6B1888E4DB20
// 0xB19B4706
PHYSICS::DELETE_CHILD_ROPE(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteRope' func='yes'>
			<Overload retVal='void' descr='// 0x52B4829281364649
// 0x748D72AF
PHYSICS::DELETE_ROPE(Object* rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object* rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='DetachRopeFromEntity' func='yes'>
			<Overload retVal='void' descr='// 0xBCF3026912A8647D
// 0x3E720BEE
PHYSICS::DETACH_ROPE_FROM_ENTITY(Object rope, Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesRopeExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFD5448BE3111ED96
// 0x66E4A3AC
PHYSICS::DOES_ROPE_EXIST(Object* rope);
----------------------------------------------------------------------------------------------------
```

Ptr is correct  

```'>
				<Param name='Object* rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCgoffset' func='yes'>
			<Overload retVal='Vector3' descr='// 0x8214A4B5A7A33612
// 0x49A11F0D
PHYSICS::GET_CGOFFSET(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRopeLastVertexCoord' func='yes'>
			<Overload retVal='Any' descr='// 0x21BB0FBD3E217C2D
// 0x91F6848B
PHYSICS::GET_ROPE_LAST_VERTEX_COORD(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRopeLength' func='yes'>
			<Overload retVal='float' descr='// 0x73040398DFF9A4A6
// 0xFD309DC8
PHYSICS::_GET_ROPE_LENGTH(Object rope);
----------------------------------------------------------------------------------------------------
```

Get a rope&apos;s length.  Can be modified with ROPE_FORCE_LENGTH  

```'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRopeVertexCoord' func='yes'>
			<Overload retVal='Any' descr='// 0xEA61CA8E80F09E4D
// 0x84374452
PHYSICS::GET_ROPE_VERTEX_COORD(Object rope, int vertex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
				<Param name='int vertex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRopeVertexCount' func='yes'>
			<Overload retVal='int' descr='// 0x3655F544CD30F0B5
// 0x5131CD2C
PHYSICS::GET_ROPE_VERTEX_COUNT(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='LoadRopeData' func='yes'>
			<Overload retVal='Any' descr='// 0xCBB203C04D1ABD27
// 0x9E8F1644
PHYSICS::LOAD_ROPE_DATA(Object rope, char* rope_preset);
----------------------------------------------------------------------------------------------------
```

Rope presets can be found in the gamefiles. One example is &quot;ropeFamily3&quot;, it is NOT a hash but rathe
r a string.  

```'>
				<Param name='Object rope' />
				<Param name='char* rope_preset' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0c112765300c7e1e' func='yes'>
			<Overload retVal='Any' descr='// 0x0C112765300C7E1E
PHYSICS::_0x0C112765300C7E1E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x15f944730c832252' func='yes'>
			<Overload retVal='void' descr='// 0x15F944730C832252
PHYSICS::_0x15F944730C832252(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x271c9d3aca5d6409' func='yes'>
			<Overload retVal='BOOL' descr='// 0x271C9D3ACA5D6409
PHYSICS::_0x271C9D3ACA5D6409(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x36ccb9be67b970fd' func='yes'>
			<Overload retVal='void' descr='// 0x36CCB9BE67B970FD
// 0xC67D5CF6
PHYSICS::_0x36CCB9BE67B970FD(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x84de3b5fb3e666f0' func='yes'>
			<Overload retVal='BOOL' descr='// 0x84DE3B5FB3E666F0
// 0x7A18BB9C
PHYSICS::_0x84DE3B5FB3E666F0(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9ebd751e5787baf2' func='yes'>
			<Overload retVal='void' descr='// 0x9EBD751E5787BAF2
PHYSICS::_0x9EBD751E5787BAF2(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb1b6216ca2e7b55e' func='yes'>
			<Overload retVal='void' descr='// 0xB1B6216CA2E7B55E
// 0x7C6F7668
PHYSICS::_0xB1B6216CA2E7B55E(Any p0, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb743f735c03d7810' func='yes'>
			<Overload retVal='void' descr='// 0xB743F735C03D7810
// 0x686672DD
PHYSICS::_0xB743F735C03D7810(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbc0ce682d4d05650' func='yes'>
			<Overload retVal='void' descr='// 0xBC0CE682D4D05650
// 0x106BA127
PHYSICS::_0xBC0CE682D4D05650(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any
----------------------------------------------------------------------------------------------------
Any p10, Any p11, Any p12, Any p13);

```

```

Most likely ROPE_ATTACH_*  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcc6e963682533882' func='yes'>
			<Overload retVal='void' descr='// 0xCC6E963682533882
PHYSICS::_0xCC6E963682533882(Any p0);
----------------------------------------------------------------------------------------------------
```

RESET_*  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdc57a637a20006ed' func='yes'>
			<Overload retVal='void' descr='// 0xDC57A637A20006ED
// 0x80DB77A7
PHYSICS::_0xDC57A637A20006ED(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='PinRopeVertex' func='yes'>
			<Overload retVal='void' descr='// 0x2B320CF14146B69A
// 0xAE1D101B
PHYSICS::PIN_ROPE_VERTEX(Object rope, int vertex, float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
				<Param name='int vertex' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='RopeAreTexturesLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF2D0E6A75CC05597
// 0x5FDC1047
PHYSICS::ROPE_ARE_TEXTURES_LOADED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='RopeConvertToSimple' func='yes'>
			<Overload retVal='void' descr='// 0x5389D48EFA2F079A
// 0x43E92628
PHYSICS::ROPE_CONVERT_TO_SIMPLE(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='RopeDrawShadowEnabled' func='yes'>
			<Overload retVal='void' descr='// 0xF159A63806BB5BA8
// 0x51523B8C
PHYSICS::ROPE_DRAW_SHADOW_ENABLED(Object* rope, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object* rope' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='RopeForceLength' func='yes'>
			<Overload retVal='Any' descr='// 0xD009F759A723DB1B
// 0xABF3130F
PHYSICS::ROPE_FORCE_LENGTH(Object rope, float length);
----------------------------------------------------------------------------------------------------
```

Forces a rope to a certain length.  

```'>
				<Param name='Object rope' />
				<Param name='float length' />
			</Overload>
		</KeyWord>
		<KeyWord name='RopeLoadTextures' func='yes'>
			<Overload retVal='Any' descr='// 0x9B9039DBF2D258C1
// 0xBA97CE91
PHYSICS::ROPE_LOAD_TEXTURES();
----------------------------------------------------------------------------------------------------
```

Loads rope textures for all ropes in the current scene.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='RopeResetLength' func='yes'>
			<Overload retVal='void' descr='// 0xC16DE94D9BEA14A0
// 0xC8A423A3
PHYSICS::ROPE_RESET_LENGTH(Object rope, float length);
----------------------------------------------------------------------------------------------------
```

Reset a rope to a certain length.  

```'>
				<Param name='Object rope' />
				<Param name='float length' />
			</Overload>
		</KeyWord>
		<KeyWord name='RopeSetUpdatePinverts' func='yes'>
			<Overload retVal='void' descr='// 0xC8D667EE52114ABA
// 0xEAF291A0
PHYSICS::ROPE_SET_UPDATE_PINVERTS(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='RopeUnloadTextures' func='yes'>
			<Overload retVal='Any' descr='// 0x6CE36C35C1AC8163
// 0x584463E0
PHYSICS::ROPE_UNLOAD_TEXTURES();
----------------------------------------------------------------------------------------------------
```

Unloads rope textures for all ropes in the current scene.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetCgAtBoundcenter' func='yes'>
			<Overload retVal='void' descr='// 0xBE520D9761FF811F
// 0xA5B55421
PHYSICS::SET_CG_AT_BOUNDCENTER(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCgoffset' func='yes'>
			<Overload retVal='void' descr='// 0xD8FA3908D7B86904
// 0x59910AB2
PHYSICS::SET_CGOFFSET(Object rope, float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDamping' func='yes'>
			<Overload retVal='void' descr='// 0xEEA3B200A6FEB65B
// 0xCFB37773
PHYSICS::SET_DAMPING(Object rope, int vertex, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
				<Param name='int vertex' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDisableBreaking' func='yes'>
			<Overload retVal='Any' descr='// 0x5CEC1A84620E7D5B
// 0xEE77C326
PHYSICS::SET_DISABLE_BREAKING(Object rope, BOOL enabled);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
				<Param name='BOOL enabled' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDisableFragDamage' func='yes'>
			<Overload retVal='void' descr='// 0x01BA3AED21C16CFB
// 0x97269DC8
PHYSICS::SET_DISABLE_FRAG_DAMAGE(Object object, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

sometimes used used with NET_TO_OBJ  

hash collision last 2 words  

```'>
				<Param name='Object object' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartRopeUnwindingFront' func='yes'>
			<Overload retVal='void' descr='// 0x538D1179EC1AA9A9
// 0xFC0DB4C3
PHYSICS::START_ROPE_UNWINDING_FRONT(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartRopeWinding' func='yes'>
			<Overload retVal='void' descr='// 0x1461C72C889E343E
// 0x5187BED3
PHYSICS::START_ROPE_WINDING(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopRopeUnwindingFront' func='yes'>
			<Overload retVal='void' descr='// 0xFFF3A50779EFBBB3
// 0x2EEDB18F
PHYSICS::STOP_ROPE_UNWINDING_FRONT(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopRopeWinding' func='yes'>
			<Overload retVal='void' descr='// 0xCB2D4AB84A19AA7C
// 0x46826B53
PHYSICS::STOP_ROPE_WINDING(Object rope);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
			</Overload>
		</KeyWord>
		<KeyWord name='UnpinRopeVertex' func='yes'>
			<Overload retVal='Any' descr='// 0x4B5AE2EEE4A8F180
// 0xB30B552F
PHYSICS::UNPIN_ROPE_VERTEX(Object rope, int vertex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object rope' />
				<Param name='int vertex' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArePlayerFlashingStarsAboutToDrop' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAFAF86043E5874E9
// 0xE13A71C7
PLAYER::ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='ArePlayerStarsGreyedOut' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0A6EB355EE14A2DB
// 0x5E72AB72
PLAYER::ARE_PLAYER_STARS_GREYED_OUT(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='AssistedMovementCloseRoute' func='yes'>
			<Overload retVal='void' descr='// 0xAEBF081FFC0A0E5E
// 0xF23277F3
PLAYER::ASSISTED_MOVEMENT_CLOSE_ROUTE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='AssistedMovementFlushRoute' func='yes'>
			<Overload retVal='void' descr='// 0x8621390F0CDCFE1F
// 0xD04568B9
PLAYER::ASSISTED_MOVEMENT_FLUSH_ROUTE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='CanPedHearPlayer' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF297383AA91DCA29
// 0x1C70B2EB
PLAYER::CAN_PED_HEAR_PLAYER(Player player, Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanPlayerStartMission' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDE7465A27D403C06
// 0x39E3CB3F
PLAYER::CAN_PLAYER_START_MISSION(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='ChangePlayerPed' func='yes'>
			<Overload retVal='void' descr='// 0x048189FAC643DEEE
// 0xBE515485
PLAYER::CHANGE_PLAYER_PED(Player Player, Ped ped, BOOL b2, BOOL b3);
----------------------------------------------------------------------------------------------------
```

b2 and/or b3 maybe got something to do with keeping values from the last ped. Both of them set to 1 
works great. &lt;br/&gt;&lt;br/&gt;Examples from the decompiled scripts:&lt;br/&gt;&lt;br/&gt;PLAYER::CHANGE_PLAYER_PED(PLAY
ER::PLAYER_ID(), l_5C0[4/*14*/], 0, 1);&lt;br/&gt;PLAYER::CHANGE_PLAYER_PED(PLAYER::PLAYER_ID(), a_0[a_0._
f7/*1*/], a_2, 0);&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;===========================================================&lt;br/&gt;The
 only way I ever got this to work in GTA Online once is by setting both to 0, 0. However, when you s
witch from your online character to whomever, your character will start walking away &apos;as if you left
 the game.&apos; If from there you attempt to call this native once more to switch back to you online ped
. You will freeze or if you try changing to another ped. I&apos;ve tried all posibilities so far.&lt;br/&gt;1, 
1 (Freeze), 0, 0(Works Once), 1, 0 & 0, 1 (Freeze). Note of course trying to call this on another on
line player will crash. Anyone have any idea if implementing a blr within the xex itself on a possib
le check if it would prevent this freezing?&lt;br/&gt;====================================================
=======  

```'>
				<Param name='Player Player' />
				<Param name='Ped ped' />
				<Param name='BOOL b2' />
				<Param name='BOOL b3' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPlayerHasDamagedAtLeastOneNonAnimalPed' func='yes'>
			<Overload retVal='void' descr='// 0x4AACB96203D11A31
// 0x7E3BFBC5
PLAYER::CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPlayerHasDamagedAtLeastOnePed' func='yes'>
			<Overload retVal='void' descr='// 0xF0B67A4DE6AB5F98
// 0x1D31CBBD
PLAYER::CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPlayerParachuteModelOverride' func='yes'>
			<Overload retVal='void' descr='// 0x8753997EB5F6EE3F
// 0x6FF034BB
PLAYER::CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPlayerParachutePackModelOverride' func='yes'>
			<Overload retVal='void' descr='// 0x10C54E4389C12B42
// 0xBB62AAC5
PLAYER::CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPlayerParachuteVariationOverride' func='yes'>
			<Overload retVal='void' descr='// 0x0F4CC924CF8C7B21
// 0xFD60F5AB
PLAYER::CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPlayerWantedLevel' func='yes'>
			<Overload retVal='void' descr='// 0xB302540597885499
// 0x54EA5BCC
PLAYER::CLEAR_PLAYER_WANTED_LEVEL(Player player);
----------------------------------------------------------------------------------------------------
```

This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);  

PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it&apos;s 
worth first checking if the wanted level needs to be cleared before clearing. However, this is mostl
y about good code practice and can important in other situations. The difference in time in this exa
mple is negligible.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisablePlayerFiring' func='yes'>
			<Overload retVal='void' descr='// 0x5E6CC07646BBEAB8
// 0x30CB28CB
PLAYER::DISABLE_PLAYER_FIRING(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Inhibits the player from using any method of combat including melee and firearms.  

NOTE: Only disables the firing for one frame  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisablePlayerVehicleRewards' func='yes'>
			<Overload retVal='void' descr='// 0xC142BE3BB9CE125F
// 0x8C6E611D
PLAYER::DISABLE_PLAYER_VEHICLE_REWARDS(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisplaySystemSigninUi' func='yes'>
			<Overload retVal='void' descr='// 0x94DD7888C10A979E
// 0x4264CED2
PLAYER::DISPLAY_SYSTEM_SIGNIN_UI(BOOL unk);
----------------------------------------------------------------------------------------------------
```

Purpose of the BOOL currently unknown.  

Both, true and false, work  

```'>
				<Param name='BOOL unk' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableSpecialAbility' func='yes'>
			<Overload retVal='void' descr='// 0x181EC197DAEFE121
// 0xC86C1B4E
PLAYER::ENABLE_SPECIAL_ABILITY(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ExpandWorldLimits' func='yes'>
			<Overload retVal='void' descr='// 0x5006D96C995A5827
PLAYER::_EXPAND_WORLD_LIMITS(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Will change world AABB so that given point will be inside of the world limits.  

Example:  

You want world limits to be -9000&lt;X&lt;10000 -11000&lt;Y&lt;12000 and leave Z limits as is.  

You should call this function two times:  

_EXPAND_WORLD_LIMITS(-9000.0,-11000.0,30.0)  

_EXPAND_WORLD_LIMITS(10000.0,12000.0,30.0)  

Appears only 3 times in the scripts, more specifically in michael1.ysc  

Console hash: 0x64ddb07d  

-  

This can be used to prevent dying if you are &quot;out of the world&quot;  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='ForceCleanup' func='yes'>
			<Overload retVal='void' descr='// 0xBC8983F38F78ED51
// 0xFDAAEA2B
PLAYER::FORCE_CLEANUP(int cleanupFlags);
----------------------------------------------------------------------------------------------------
```

used with 1,2,8,64,128 in the scripts  

```'>
				<Param name='int cleanupFlags' />
			</Overload>
		</KeyWord>
		<KeyWord name='ForceCleanupForAllThreadsWithThisName' func='yes'>
			<Overload retVal='void' descr='// 0x4C68DDDDF0097317
// 0x04256C73
PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME(char* name, int cleanupFlags);
----------------------------------------------------------------------------------------------------
```

PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME(&quot;pb_prostitute&quot;, 1); // Found in decompilation 
 

```'>
				<Param name='char* name' />
				<Param name='int cleanupFlags' />
			</Overload>
		</KeyWord>
		<KeyWord name='ForceCleanupForThreadWithThisId' func='yes'>
			<Overload retVal='void' descr='// 0xF745B37630DF176B
// 0x882D3EB3
PLAYER::FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID(int id, int cleanupFlags);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int id' />
				<Param name='int cleanupFlags' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetAchievementProgression' func='yes'>
			<Overload retVal='int' descr='// 0x1C186837D0619335
PLAYER::_GET_ACHIEVEMENT_PROGRESSION(int achId);
----------------------------------------------------------------------------------------------------
```

p0 = int (?)  

Dr. Underscore (1/6/18):  

This gets the progression of an achievement. Returns 0 if the achievement cannot be progressed.  

```'>
				<Param name='int achId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCauseOfMostRecentForceCleanup' func='yes'>
			<Overload retVal='int' descr='// 0x9A41CF4674A12272
// 0x39AA9FC8
PLAYER::GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityPlayerIsFreeAimingAt' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2975C866E6713290
// 0x8866D9D0
PLAYER::GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(Player player, Entity* entity);
----------------------------------------------------------------------------------------------------
```

Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle
 of the target to the *entity that you pass it.  

Returns false if no entity found.  

```'>
				<Param name='Player player' />
				<Param name='Entity* entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMaxWantedLevel' func='yes'>
			<Overload retVal='int' descr='// 0x462E0DB9B137DC5F
// 0x457F1E44
PLAYER::GET_MAX_WANTED_LEVEL();
----------------------------------------------------------------------------------------------------
```

Gets the maximum wanted level the player can get.  

Ranges from 0 to 5.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfPlayers' func='yes'>
			<Overload retVal='int' descr='// 0x407C7F91DDB46C16
// 0x4C1B8867
PLAYER::GET_NUMBER_OF_PLAYERS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerCurrentStealthNoise' func='yes'>
			<Overload retVal='float' descr='// 0x2F395D61F3A1F877
// 0xC3B02362
PLAYER::GET_PLAYER_CURRENT_STEALTH_NOISE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerGroup' func='yes'>
			<Overload retVal='int' descr='// 0x0D127585F77030AF
// 0xA5EDCDE8
PLAYER::GET_PLAYER_GROUP(Player player);
----------------------------------------------------------------------------------------------------
```

Returns the group ID the player is member of.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerHasReserveParachute' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5DDFE2FF727F3CA3
// 0x30DA1DA1
PLAYER::GET_PLAYER_HAS_RESERVE_PARACHUTE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerIndex' func='yes'>
			<Overload retVal='Player' descr='// 0xA5EDC40EF369B48D
// 0x309BBDC1
PLAYER::GET_PLAYER_INDEX();
----------------------------------------------------------------------------------------------------
```

Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerInvincible' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB721981B2B939E07
// 0x680C90EE
PLAYER::GET_PLAYER_INVINCIBLE(Player player);
----------------------------------------------------------------------------------------------------
```

Returns the Player&apos;s Invincible status.  

This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status
. To always get the correct result, use this:  

	bool IsPlayerInvincible(Player player)  

	{  

auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player));	  

if (addr)  

{  

	DWORD flag = *(DWORD *)(addr + 0x188);  

	return ((flag & (1 &lt;&lt; 8)) != 0) || ((flag & (1 &lt;&lt; 9)) != 0);  

}  

return false;  

	}  

============================================================  

This has bothered me for too long, whoever may come across this, where did anyone ever come up with 
this made up hash? 0x733A643B5B0C53C1 I&apos;ve looked all over old hash list, and this nativedb I can no
t find that PC hash anywhere. What native name is it now or was it?  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerMaxArmour' func='yes'>
			<Overload retVal='int' descr='// 0x92659B4CE1863CB3
// 0x02A50657
PLAYER::GET_PLAYER_MAX_ARMOUR(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerName' func='yes'>
			<Overload retVal='char*' descr='// 0x6D0DE6A7B5DA71F8
// 0x406B4B20
PLAYER::GET_PLAYER_NAME(Player player);
----------------------------------------------------------------------------------------------------
```

Returns the players name  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerParachutePackTintIndex' func='yes'>
			<Overload retVal='void' descr='// 0x6E9C742F340CE5A2
// 0x4E418E13
PLAYER::GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(Player player, int* tintIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='int* tintIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerParachuteSmokeTrailColor' func='yes'>
			<Overload retVal='void' descr='// 0xEF56DBABD3CD4887
// 0xF66E5CDD
PLAYER::GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(Player player, int* r, int* g, int* b);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='int* r' />
				<Param name='int* g' />
				<Param name='int* b' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerParachuteTintIndex' func='yes'>
			<Overload retVal='void' descr='// 0x75D3F7A1B0D9B145
// 0x432B0509
PLAYER::GET_PLAYER_PARACHUTE_TINT_INDEX(Player player, int* tintIndex);
----------------------------------------------------------------------------------------------------
```

Tints:  

None = -1,  

Rainbow = 0,  

Red = 1,  

SeasideStripes = 2,  

WidowMaker = 3,  

Patriot = 4,  

Blue = 5,  

Black = 6,  

Hornet = 7,  

AirFocce = 8,  

Desert = 9,  

Shadow = 10,  

HighAltitude = 11,  

Airbone = 12,  

Sunrise = 13,  

```'>
				<Param name='Player player' />
				<Param name='int* tintIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerPed' func='yes'>
			<Overload retVal='Ped' descr='// 0x43A66C31C68491C0
// 0x6E31E993
PLAYER::GET_PLAYER_PED(Player playerId);
----------------------------------------------------------------------------------------------------
```

returns the players ped used in many functions  

```'>
				<Param name='Player playerId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerPedScriptIndex' func='yes'>
			<Overload retVal='Ped' descr='// 0x50FAC3A3E030A6E1
// 0x6AC64990
PLAYER::GET_PLAYER_PED_SCRIPT_INDEX(Player Player);
----------------------------------------------------------------------------------------------------
```

Does the same like PLAYER::GET_PLAYER_PED&lt;br/&gt;  

```'>
				<Param name='Player Player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerReserveParachuteTintIndex' func='yes'>
			<Overload retVal='void' descr='// 0xD5A016BC3C09CF40
// 0x77B8EF01
PLAYER::GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(Player player, int* index);
----------------------------------------------------------------------------------------------------
```

Tints:  

None = -1,  

Rainbow = 0,  

Red = 1,  

SeasideStripes = 2,  

WidowMaker = 3,  

Patriot = 4,  

Blue = 5,  

Black = 6,  

Hornet = 7,  

AirFocce = 8,  

Desert = 9,  

Shadow = 10,  

HighAltitude = 11,  

Airbone = 12,  

Sunrise = 13,  

```'>
				<Param name='Player player' />
				<Param name='int* index' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerRgbColour' func='yes'>
			<Overload retVal='void' descr='// 0xE902EF951DCE178F
// 0x6EF43BBB
PLAYER::GET_PLAYER_RGB_COLOUR(Player Player, int* r, int* g, int* b);
----------------------------------------------------------------------------------------------------
```

Returns RGB color of the player  

```'>
				<Param name='Player Player' />
				<Param name='int* r' />
				<Param name='int* g' />
				<Param name='int* b' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayersLastVehicle' func='yes'>
			<Overload retVal='Vehicle' descr='// 0xB6997A7EB3F5C8C0
// 0xE2757AC1
PLAYER::GET_PLAYERS_LAST_VEHICLE();
----------------------------------------------------------------------------------------------------
```

Alternative: GET_VEHICLE_PED_IS_IN(PLAYER_PED_ID(), 1);  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerSprintStaminaRemaining' func='yes'>
			<Overload retVal='float' descr='// 0x3F9F16F8E65A7ED7
// 0x47017C90
PLAYER::GET_PLAYER_SPRINT_STAMINA_REMAINING(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerSprintTimeRemaining' func='yes'>
			<Overload retVal='float' descr='// 0x1885BC9B108B4C99
// 0x40E80543
PLAYER::GET_PLAYER_SPRINT_TIME_REMAINING(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerTargetEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x13EDE1A5DBF797C9
// 0xF6AAA2D7
PLAYER::GET_PLAYER_TARGET_ENTITY(Player player, Entity* entity);
----------------------------------------------------------------------------------------------------
```

Assigns the handle of locked-on melee target to *entity that you pass it.  

Returns false if no entity found.  

```'>
				<Param name='Player player' />
				<Param name='Entity* entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerTeam' func='yes'>
			<Overload retVal='int' descr='// 0x37039302F4E0A008
// 0x9873E404
PLAYER::GET_PLAYER_TEAM(Player player);
----------------------------------------------------------------------------------------------------
```

Gets the player&apos;s team.  

Does nothing in singleplayer.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerUnderwaterTimeRemaining' func='yes'>
			<Overload retVal='float' descr='// 0xA1FCF8E6AF40B731
// 0x1317125A
PLAYER::GET_PLAYER_UNDERWATER_TIME_REMAINING(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerWantedCentrePosition' func='yes'>
			<Overload retVal='Vector3' descr='// 0x0C92BA89F1AF26F8
// 0x821F2D2C
PLAYER::GET_PLAYER_WANTED_CENTRE_POSITION(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerWantedLevel' func='yes'>
			<Overload retVal='int' descr='// 0xE28E54788CE8F12D
// 0xBDCDD163
PLAYER::GET_PLAYER_WANTED_LEVEL(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTimeSinceLastArrest' func='yes'>
			<Overload retVal='int' descr='// 0x5063F92F07C2A316
// 0x62824EF4
PLAYER::GET_TIME_SINCE_LAST_ARREST();
----------------------------------------------------------------------------------------------------
```

Returns the time since the character was arrested in (ms) milliseconds.  

example  

var time = Function.call&lt;int&gt;(Hash.GET_TIME_SINCE_LAST_ARREST();  

UI.DrawSubtitle(time.ToString());  

if player has not been arrested, the int returned will be -1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetTimeSinceLastDeath' func='yes'>
			<Overload retVal='int' descr='// 0xC7034807558DDFCA
// 0x24BC5AC0
PLAYER::GET_TIME_SINCE_LAST_DEATH();
----------------------------------------------------------------------------------------------------
```

Returns the time since the character died in (ms) milliseconds.  

example  

var time = Function.call&lt;int&gt;(Hash.GET_TIME_SINCE_LAST_DEATH();  

UI.DrawSubtitle(time.ToString());  

if player has not died, the int returned will be -1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetTimeSincePlayerDroveAgainstTraffic' func='yes'>
			<Overload retVal='int' descr='// 0xDB89591E290D9182
// 0x9F27D00E
PLAYER::GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTimeSincePlayerDroveOnPavement' func='yes'>
			<Overload retVal='int' descr='// 0xD559D2BE9E37853B
// 0x8836E732
PLAYER::GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTimeSincePlayerHitPed' func='yes'>
			<Overload retVal='int' descr='// 0xE36A25322DC35F42
// 0xB6209195
PLAYER::GET_TIME_SINCE_PLAYER_HIT_PED(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTimeSincePlayerHitVehicle' func='yes'>
			<Overload retVal='int' descr='// 0x5D35ECF3A81A0EE0
// 0x6E9B8B9E
PLAYER::GET_TIME_SINCE_PLAYER_HIT_VEHICLE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWantedLevelRadius' func='yes'>
			<Overload retVal='Any' descr='// 0x085DEB493BE80812
// 0x1CF7D7DA
PLAYER::GET_WANTED_LEVEL_RADIUS(Player player);
----------------------------------------------------------------------------------------------------
```

Remnant from GTA IV. Does nothing in GTA V.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWantedLevelThreshold' func='yes'>
			<Overload retVal='int' descr='// 0xFDD179EAF45B556C
// 0xD9783F6B
PLAYER::GET_WANTED_LEVEL_THRESHOLD(int wantedLevel);
----------------------------------------------------------------------------------------------------
```

Drft  

```'>
				<Param name='int wantedLevel' />
			</Overload>
		</KeyWord>
		<KeyWord name='GiveAchievementToPlayer' func='yes'>
			<Overload retVal='Any' descr='// 0xBEC7076D64130195
// 0x822BC992
PLAYER::GIVE_ACHIEVEMENT_TO_PLAYER(int achId);
----------------------------------------------------------------------------------------------------
```

Achievements from 0-57  

more achievements came with update 1.29 (freemode events update), I&apos;d say that they now go to 60, bu
t I&apos;ll need to check.  

```'>
				<Param name='int achId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GivePlayerRagdollControl' func='yes'>
			<Overload retVal='void' descr='// 0x3C49C870E66F0A28
// 0xC7B4D7AC
PLAYER::GIVE_PLAYER_RAGDOLL_CONTROL(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasAchievementBeenPassed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x867365E111A3B6EB
// 0x136A5BE9
PLAYER::HAS_ACHIEVEMENT_BEEN_PASSED(int achievement);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int achievement' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasForceCleanupOccurred' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC968670BFACE42D9
// 0x4B37333C
PLAYER::HAS_FORCE_CLEANUP_OCCURRED(int cleanupFlags);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int cleanupFlags' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPlayerBeenSpottedInStolenVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD705740BB0A1CF4C
// 0x4A01B76A
PLAYER::HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPlayerDamagedAtLeastOneNonAnimalPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE4B90F367BD81752
// 0xA3707DFC
PLAYER::HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPlayerDamagedAtLeastOnePed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x20CE80B0C2BF4ACC
// 0x14F52453
PLAYER::HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPlayerLeftTheWorld' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD55DDFB47991A294
// 0xFEA40B6C
PLAYER::HAS_PLAYER_LEFT_THE_WORLD(Player player);
----------------------------------------------------------------------------------------------------
```

Gets the player&apos;s info and calls a function that checks the player&apos;s ped position.  

Here&apos;s the decompiled function that checks the position: pastebin.com/ZdHG2E7n  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPlayerTeleportFinished' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE23D5873C2394C61
PLAYER::_HAS_PLAYER_TELEPORT_FINISHED(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IntToParticipantindex' func='yes'>
			<Overload retVal='int' descr='// 0x9EC6603812C24710
// 0x98F3B274
PLAYER::INT_TO_PARTICIPANTINDEX(int value);
----------------------------------------------------------------------------------------------------
```

Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  

--------------------------------------------------------  

if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))  

```'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='IntToPlayerindex' func='yes'>
			<Overload retVal='Player' descr='// 0x41BD2A6B006AF756
// 0x98DD98F1
PLAYER::INT_TO_PLAYERINDEX(int value);
----------------------------------------------------------------------------------------------------
```

Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  

```'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerBeingArrested' func='yes'>
			<Overload retVal='BOOL' descr='// 0x388A47C51ABDAC8E
// 0x7F6A60D3
PLAYER::IS_PLAYER_BEING_ARRESTED(Player player, BOOL atArresting);
----------------------------------------------------------------------------------------------------
```

Return true while player is being arrested / busted.  

If atArresting is set to 1, this function will return 1 when player is being arrested (while player 
is putting his hand up, but still have control)  

If atArresting is set to 0, this function will return 1 only when the busted screen is shown.  

```'>
				<Param name='Player player' />
				<Param name='BOOL atArresting' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerCamControlDisabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7C814D2FB49F40C0
PLAYER::_IS_PLAYER_CAM_CONTROL_DISABLED();
----------------------------------------------------------------------------------------------------
```

Returns true when the player is not able to control the cam i.e. when running a benchmark test, swit
ching the player or viewing a cutscene.  

Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems p
romising.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerClimbing' func='yes'>
			<Overload retVal='BOOL' descr='// 0x95E8F73DC65EFB9C
// 0x4A9E9AE0
PLAYER::IS_PLAYER_CLIMBING(Player player);
----------------------------------------------------------------------------------------------------
```

Returns TRUE if the player (&apos;s ped) is climbing at the moment.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerControlOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0x49C32D60007AFA47
// 0x618857F2
PLAYER::IS_PLAYER_CONTROL_ON(Player player);
----------------------------------------------------------------------------------------------------
```

Can the player control himself, used to disable controls for player for things like a cutscene.  

---  

You can&apos;t disable controls with this, use SET_PLAYER_CONTROL(...) for this.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerDead' func='yes'>
			<Overload retVal='BOOL' descr='// 0x424D4687FA1E5652
// 0x140CA5A8
PLAYER::IS_PLAYER_DEAD(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerFreeAiming' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2E397FD2ECD37C87
// 0x1DEC67B7
PLAYER::IS_PLAYER_FREE_AIMING(Player player);
----------------------------------------------------------------------------------------------------
```

Gets a value indicating whether the specified player is currently aiming freely.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerFreeAimingAtEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3C06B5C839B38F7B
// 0x7D80EEAA
PLAYER::IS_PLAYER_FREE_AIMING_AT_ENTITY(Player player, Entity entity);
----------------------------------------------------------------------------------------------------
```

Gets a value indicating whether the specified player is currently aiming freely at the specified ent
ity.  

```'>
				<Param name='Player player' />
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerFreeForAmbientTask' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDCCFD3F106C36AB4
// 0x85C7E232
PLAYER::IS_PLAYER_FREE_FOR_AMBIENT_TASK(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerLoggingInNp' func='yes'>
			<Overload retVal='BOOL' descr='// 0x74556E1420867ECA
// 0x8F72FAD0
PLAYER::IS_PLAYER_LOGGING_IN_NP();
----------------------------------------------------------------------------------------------------
```

this function is hard-coded to always return 0.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerOnline' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF25D331DC2627BBC
// 0x9FAB6729
PLAYER::IS_PLAYER_ONLINE();
----------------------------------------------------------------------------------------------------
```

Returns TRUE if the game is in online mode and FALSE if in offline mode.  

This is an alias for NETWORK_IS_SIGNED_ONLINE.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerPlaying' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5E9564D8246B909A
// 0xE15D777F
PLAYER::IS_PLAYER_PLAYING(Player player);
----------------------------------------------------------------------------------------------------
```

Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrest
ed.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerPressingHorn' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFA1E2BF8B10598F9
// 0xED1D1662
PLAYER::IS_PLAYER_PRESSING_HORN(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerReadyForCutscene' func='yes'>
			<Overload retVal='BOOL' descr='// 0x908CBECC2CAA3690
// 0xBB77E9CD
PLAYER::IS_PLAYER_READY_FOR_CUTSCENE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerRidingTrain' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4EC12697209F2196
// 0x9765E71D
PLAYER::IS_PLAYER_RIDING_TRAIN(Player player);
----------------------------------------------------------------------------------------------------
```

Returns true if the player is riding a train.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerScriptControlOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8A876A65283DD7D7
// 0x61B00A84
PLAYER::IS_PLAYER_SCRIPT_CONTROL_ON(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerTargettingAnything' func='yes'>
			<Overload retVal='BOOL' descr='// 0x78CFE51896B6B8A4
// 0x456DB50D
PLAYER::IS_PLAYER_TARGETTING_ANYTHING(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerTargettingEntity' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7912F7FC4F6264B6
// 0xF3240B77
PLAYER::IS_PLAYER_TARGETTING_ENTITY(Player player, Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerTeleportActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x02B15662D7F8886F
// 0x3A11D118
PLAYER::IS_PLAYER_TELEPORT_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerWantedLevelGreater' func='yes'>
			<Overload retVal='BOOL' descr='// 0x238DB2A2C23EE9EF
// 0x589A2661
PLAYER::IS_PLAYER_WANTED_LEVEL_GREATER(Player player, int wantedLevel);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='int wantedLevel' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsSpecialAbilityActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3E5F7FC85D854E15
// 0x1B17E334
PLAYER::IS_SPECIAL_ABILITY_ACTIVE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsSpecialAbilityEnabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB1D200FE26AEF3CB
// 0xC01238CC
PLAYER::IS_SPECIAL_ABILITY_ENABLED(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsSpecialAbilityMeterFull' func='yes'>
			<Overload retVal='BOOL' descr='// 0x05A1FE504B7F2587
// 0x2E19D7F6
PLAYER::IS_SPECIAL_ABILITY_METER_FULL(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsSpecialAbilityUnlocked' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC6017F6A6CDFA694
// 0xC9C75E82
PLAYER::IS_SPECIAL_ABILITY_UNLOCKED(Hash playerModel);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash playerModel' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsSystemUiBeingDisplayed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5D511E3867C87139
// 0xE495B6DA
PLAYER::IS_SYSTEM_UI_BEING_DISPLAYED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkPlayerIdToInt' func='yes'>
			<Overload retVal='int' descr='// 0xEE68096F9F37341E
// 0x8DD5B838
PLAYER::NETWORK_PLAYER_ID_TO_INT();
----------------------------------------------------------------------------------------------------
```

Does exactly the same thing as PLAYER_ID()  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0032a6dba562c518' func='yes'>
			<Overload retVal='void' descr='// 0x0032A6DBA562C518
// 0x47CAB814
PLAYER::_0x0032A6DBA562C518();
----------------------------------------------------------------------------------------------------
```

2 matches in 1 script   

Used in multiplayer scripts?  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x17f7471eaca78290' func='yes'>
			<Overload retVal='void' descr='// 0x17F7471EACA78290
PLAYER::_0x17F7471EACA78290(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2382ab11450ae7ba' func='yes'>
			<Overload retVal='void' descr='// 0x2382AB11450AE7BA
PLAYER::_0x2382AB11450AE7BA(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2f41a3bae005e5fa' func='yes'>
			<Overload retVal='void' descr='// 0x2F41A3BAE005E5FA
PLAYER::_0x2F41A3BAE005E5FA(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2f7ceb6520288061' func='yes'>
			<Overload retVal='void' descr='// 0x2F7CEB6520288061
// 0x2849D4B2
PLAYER::_0x2F7CEB6520288061(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Used with radios:  

void sub_cf383(auto _a0) {  

    if ((a_0)==1) {  

        if (GAMEPLAY::IS_BIT_SET((g_240005._f1), 3)) {  

            PLAYER::_2F7CEB6520288061(0);  

            AUDIO::SET_AUDIO_FLAG(&quot;AllowRadioDuringSwitch&quot;, 0);  

            AUDIO::SET_MOBILE_PHONE_RADIO_STATE(0);  

            AUDIO::SET_AUDIO_FLAG(&quot;MobileRadioInGame&quot;, 0);  

        }  

        sub_cf3f6(1);  

    } else {   

        if (GAMEPLAY::IS_BIT_SET((g_240005._f1), 3)) {  

            PLAYER::_2F7CEB6520288061(1);  

            AUDIO::SET_AUDIO_FLAG(&quot;AllowRadioDuringSwitch&quot;, 1);  

            AUDIO::SET_MOBILE_PHONE_RADIO_STATE(1);  

            AUDIO::SET_AUDIO_FLAG(&quot;MobileRadioInGame&quot;, 1);  

        }  

        sub_cf3f6(0);  

    }  

}  

SET_PLAYER_S*  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x31e90b8873a4cd3b' func='yes'>
			<Overload retVal='void' descr='// 0x31E90B8873A4CD3B
PLAYER::_0x31E90B8873A4CD3B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x36f1b38855f2a8df' func='yes'>
			<Overload retVal='void' descr='// 0x36F1B38855F2A8DF
// 0x3A7E5FB6
PLAYER::_0x36F1B38855F2A8DF(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x38d28da81e4e9bf9' func='yes'>
			<Overload retVal='BOOL' descr='// 0x38D28DA81E4E9BF9
// 0x013B4F72
PLAYER::_0x38D28DA81E4E9BF9(Player player);
----------------------------------------------------------------------------------------------------
```

Returns true if an unk value is greater than 0.0f  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4669b3ed80f24b4e' func='yes'>
			<Overload retVal='Any' descr='// 0x4669B3ED80F24B4E
// 0xB9FB142F
PLAYER::_0x4669B3ED80F24B4E(Player player);
----------------------------------------------------------------------------------------------------
```

This has been found in use in the decompiled files.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5501b7a5cdb79d37' func='yes'>
			<Overload retVal='void' descr='// 0x5501B7A5CDB79D37
PLAYER::_0x5501B7A5CDB79D37(Player p0);
----------------------------------------------------------------------------------------------------
```

DISABLE_*  

p0 seems to be Player or int  

Dr. Underscore (1/6/18):  

p0 is Player.  

Called after/near _DISABLE_FIRST_PERSON_CAMERA_THIS_FRAME quite often, but not always.  

Also called near DISABLE_CONTROL_ACTION.  

```'>
				<Param name='Player p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x55fcc0c390620314' func='yes'>
			<Overload retVal='void' descr='// 0x55FCC0C390620314
PLAYER::_0x55FCC0C390620314(Player player1, Player player2, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Order of player1 and player2 are not interchangable, it was called for both orders.  

```'>
				<Param name='Player player1' />
				<Param name='Player player2' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x56105e599cab0efa' func='yes'>
			<Overload retVal='Player' descr='// 0x56105E599CAB0EFA
PLAYER::_0x56105E599CAB0EFA(int* p0);
----------------------------------------------------------------------------------------------------
```

GET_PLAYER_*  

Seems to do something with network (?)  

PLAYER::_56105E599CAB0EFA(NETWORK::NETWORK_GET_PLAYER_INDEX_FROM_PED(ped))  

```'>
				<Param name='int* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5702b917b99db1cd' func='yes'>
			<Overload retVal='void' descr='// 0x5702B917B99DB1CD
PLAYER::_0x5702B917B99DB1CD(int p0);
----------------------------------------------------------------------------------------------------
```

Jenkins hash: 0x772DA539  

p0 looks like Player or int (found in &quot;am_pi_menu&quot;)  

Dr. Underscore (1/6/18):  

It isn&apos;t Player, it is an int.  

Only two references anywhere, both in am_pi_menu.  

One uses globals, the other one uses a helper function that is passing in the outValue of &quot;STATS::ST
AT_GET_INT&quot;; I have no clue what is being passed in for the stat hash.  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5dc40a8869c22141' func='yes'>
			<Overload retVal='void' descr='// 0x5DC40A8869C22141
PLAYER::_0x5DC40A8869C22141(BOOL p0, ScrHandle p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='ScrHandle p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5fc472c501ccadb3' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5FC472C501CCADB3
// 0x46E7E31D
PLAYER::_0x5FC472C501CCADB3(Player player);
----------------------------------------------------------------------------------------------------
```

Appears once in &quot;re_dealgonewrong&quot;  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x65faee425de637b0' func='yes'>
			<Overload retVal='BOOL' descr='// 0x65FAEE425DE637B0
PLAYER::_0x65FAEE425DE637B0(Player p0);
----------------------------------------------------------------------------------------------------
```

IS_PLAYER_*  

```'>
				<Param name='Player p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x690a61a6d13583f6' func='yes'>
			<Overload retVal='BOOL' descr='// 0x690A61A6D13583F6
// 0x1D371529
PLAYER::_0x690A61A6D13583F6(Ped p0);
----------------------------------------------------------------------------------------------------
```

p0 seems to be Ped  

Dr. Underscore (1/6/18):  

Has to do something with vehicles and teams. (same teams don&apos;t jack each other out of vehicles?)  

```'>
				<Param name='Ped p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6bc97f4f4bb3c04b' func='yes'>
			<Overload retVal='void' descr='// 0x6BC97F4F4BB3C04B
PLAYER::_0x6BC97F4F4BB3C04B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6e4361ff3e8cd7ca' func='yes'>
			<Overload retVal='Any' descr='// 0x6E4361FF3E8CD7CA
PLAYER::_0x6E4361FF3E8CD7CA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7e07c78925d5fd96' func='yes'>
			<Overload retVal='Any' descr='// 0x7E07C78925D5FD96
PLAYER::_0x7E07C78925D5FD96(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x821fdc827d6f4090' func='yes'>
			<Overload retVal='void' descr='// 0x821FDC827D6F4090
PLAYER::_0x821FDC827D6F4090(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8bc515bae4aaf8ff' func='yes'>
			<Overload retVal='Any' descr='// 0x8BC515BAE4AAF8FF
PLAYER::_0x8BC515BAE4AAF8FF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8d768602adef2245' func='yes'>
			<Overload retVal='void' descr='// 0x8D768602ADEF2245
PLAYER::_0x8D768602ADEF2245(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9edd76e87d5d51ba' func='yes'>
			<Overload retVal='void' descr='// 0x9EDD76E87D5D51BA
// 0xE30A64DC
PLAYER::_0x9EDD76E87D5D51BA(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa0d3e4f7aafb7e78' func='yes'>
			<Overload retVal='Any' descr='// 0xA0D3E4F7AAFB7E78
PLAYER::_0xA0D3E4F7AAFB7E78(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xad73ce5a09e42d12' func='yes'>
			<Overload retVal='Any' descr='// 0xAD73CE5A09E42D12
// 0x85725848
PLAYER::_0xAD73CE5A09E42D12(Player player);
----------------------------------------------------------------------------------------------------
```

This has been found in use in the decompiled files.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb214d570ead7f81a' func='yes'>
			<Overload retVal='void' descr='// 0xB214D570EAD7F81A
PLAYER::_0xB214D570EAD7F81A(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb45eff719d8427a6' func='yes'>
			<Overload retVal='void' descr='// 0xB45EFF719D8427A6
// 0xBF6993C7
PLAYER::_0xB45EFF719D8427A6(float p0);
----------------------------------------------------------------------------------------------------
```

PLAYER::0xBF6993C7(rPtr((&l_122) + 71)); // Found in decompilation  

***  

In &quot;am_hold_up.ysc&quot; used once:  

l_8d._f47 = GAMEPLAY::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);  

PLAYER::_B45EFF719D8427A6((l_8d._f47));  

```'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb885852c39cc265d' func='yes'>
			<Overload retVal='void' descr='// 0xB885852C39CC265D
PLAYER::_0xB885852C39CC265D();
----------------------------------------------------------------------------------------------------
```

Old Gen: 0x47D6004E  

Disables something. Used only once in R* scripts (freemode.ysc).  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb9cf1f793a9f1bf1' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB9CF1F793A9F1BF1
PLAYER::_0xB9CF1F793A9F1BF1();
----------------------------------------------------------------------------------------------------
```

Seem to return bool  

Dr. Underscore (1/6/18):  

It does return bool.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbc0753c9ca14b506' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBC0753C9CA14B506
// 0x9DF75B2A
PLAYER::_0xBC0753C9CA14B506(Player player, int p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

var num3 = PLAYER::GET_PLAYER_PED(l_2171); // proof l_2171 is a player  

var num17 = PLAYER::0x9DF75B2A(l_2171, 100, 0); // l_2171  

.ysc:  

    if (PLAYER::GET_PLAYER_WANTED_LEVEL(l_6EF) &lt; v_4) { // l_6EF is a player  

        PLAYER::SET_PLAYER_WANTED_LEVEL(l_6EF, v_4, 0); // l_6EF  

        PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(l_6EF, 0); // l_6EF  

    } else {   

        PLAYER::_4669B3ED80F24B4E(l_6EF); // l_6EF  

        UI::_BA8D65C1C65702E5(1);  

        a_0 = 1;  

    }  

        if (l_4B24[l_6F2/*156*/]._f8C != PLAYER::_BC0753C9CA14B506(l_6EF, 100, 0)) { // l_6EF  

            l_4B24[l_6F2/*156*/]._f8C = PLAYER::_BC0753C9CA14B506(l_6EF, 100, 0); // l_6EF  

        }  

Both was taken from fm_mission_controller  

GET_PLAYER_*  

```'>
				<Param name='Player player' />
				<Param name='int p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbc9490ca15aea8fb' func='yes'>
			<Overload retVal='void' descr='// 0xBC9490CA15AEA8FB
// 0x6B34A160
PLAYER::_0xBC9490CA15AEA8FB(Player player);
----------------------------------------------------------------------------------------------------
```

Seems to only appear in scripts used in Singleplayer.  

AI_PHONE_ARGS is a hash collision!!!  

Always used like this in scripts  

PLAYER::_BC9490CA15AEA8FB(PLAYER::PLAYER_ID());  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbcfde9ede4cf27dc' func='yes'>
			<Overload retVal='void' descr='// 0xBCFDE9EDE4CF27DC
PLAYER::_0xBCFDE9EDE4CF27DC(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc3376f42b1faccc6' func='yes'>
			<Overload retVal='void' descr='// 0xC3376F42B1FACCC6
// 0x02DF7AF4
PLAYER::_0xC3376F42B1FACCC6(Player player);
----------------------------------------------------------------------------------------------------
```

- This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME  

hash collision  

0xc3376f42b1faccc6, 0xd5d0d2853191399c, // set_areas_generator_orientation  

```

----------------------------------------------------------------------------------------------------

Old name: SET_AREAS_GENERATOR_ORIENTATION'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SET_AREAS_GENERATOR_ORIENTATION' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: N_0xc3376f42b1faccc6' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='N_0xc388a0f065f5bc34' func='yes'>
			<Overload retVal='void' descr='// 0xC388A0F065F5BC34
PLAYER::_0xC388A0F065F5BC34(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc9a763d8fe87436a' func='yes'>
			<Overload retVal='void' descr='// 0xC9A763D8FE87436A
// 0x4136829A
PLAYER::_0xC9A763D8FE87436A(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcac57395b151135f' func='yes'>
			<Overload retVal='void' descr='// 0xCAC57395B151135F
// 0x00563E0D
PLAYER::_0xCAC57395B151135F(Player player, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Found in &quot;director_mode&quot;, &quot;fm_bj_race_controler&quot;, &quot;fm_deathmatch_controler&quot;, &quot;fm_impromptu_dm_contro
ler&quot;, &quot;fm_race_controler&quot;, &quot;gb_deathmatch&quot;.  

```'>
				<Param name='Player player' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcb645e85e97ea48b' func='yes'>
			<Overload retVal='Any' descr='// 0xCB645E85E97EA48B
PLAYER::_0xCB645E85E97EA48B();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd2b315b6689d537d' func='yes'>
			<Overload retVal='void' descr='// 0xD2B315B6689D537D
// 0xA25D767E
PLAYER::_0xD2B315B6689D537D(Player player, BOOL p1);
----------------------------------------------------------------------------------------------------
```

1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;  

```'>
				<Param name='Player player' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd821056b9acf8052' func='yes'>
			<Overload retVal='void' descr='// 0xD821056B9ACF8052
PLAYER::_0xD821056B9ACF8052(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdc64d2c53493ed12' func='yes'>
			<Overload retVal='void' descr='// 0xDC64D2C53493ED12
// 0xD15C4B1C
PLAYER::_0xDC64D2C53493ED12(Player player);
----------------------------------------------------------------------------------------------------
```

Has something to do with police.  

```'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdd2620b7b9d16ff1' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDD2620B7B9D16FF1
// 0x8CB53C9F
PLAYER::_0xDD2620B7B9D16FF1(Player player, float p1);
----------------------------------------------------------------------------------------------------
```

2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.  

```'>
				<Param name='Player player' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xde45d1a1ef45ee61' func='yes'>
			<Overload retVal='void' descr='// 0xDE45D1A1EF45EE61
// 0x274631FE
PLAYER::_0xDE45D1A1EF45EE61(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

```

----------------------------------------------------------------------------------------------------

Old name: SET_HUD_ANIM_STOP_LEVEL'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SET_HUD_ANIM_STOP_LEVEL' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: N_0xde45d1a1ef45ee61' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='N_0xefd79fa81dfba9cb' func='yes'>
			<Overload retVal='void' descr='// 0xEFD79FA81DFBA9CB
PLAYER::_0xEFD79FA81DFBA9CB(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf10b44fd479d69f3' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF10B44FD479D69F3
// 0x1E359CC8
PLAYER::_0xF10B44FD479D69F3(Player player, int p1);
----------------------------------------------------------------------------------------------------
```

Only 1 occurrence. p1 was 2.  

```'>
				<Param name='Player player' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfac75988a7d078d3' func='yes'>
			<Overload retVal='void' descr='// 0xFAC75988A7D078D3
PLAYER::_0xFAC75988A7D078D3(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xff300c7649724a0b' func='yes'>
			<Overload retVal='void' descr='// 0xFF300C7649724A0B
// 0xAD8383FA
PLAYER::_0xFF300C7649724A0B(Player player, BOOL p1);
----------------------------------------------------------------------------------------------------
```

gets byte at offset 0x862 in the specified players data (ped data + 0xbd0) and stores the bool p1 in
 it.  

lwz       r3, 0xBD0(r3) ;r3 is player data  

lbz       r4, 0x862(r3) ;r4 is now the byte  

insrwi    r4, r31, 1,28 ;stores p1 as a bit in place 28 idk  

stb       r4, 0x862(r3) ; puts the newly modified one back in  

SET_PLAYER_*  

```'>
				<Param name='Player player' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xffee8fa29ab9a18e' func='yes'>
			<Overload retVal='void' descr='// 0xFFEE8FA29AB9A18E
// 0x5D0FE25B
PLAYER::_0xFFEE8FA29AB9A18E(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayerAttachVirtualBound' func='yes'>
			<Overload retVal='void' descr='// 0xED51733DC73AED51
// 0xECD12E60
PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(float p0, float p1, float p2, float p3, float p4, float p5, float p
----------------------------------------------------------------------------------------------------
loat p7);

```

```

Only 1 match. ob_sofa_michael.  

PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1
.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;  

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlayerDetachVirtualBound' func='yes'>
			<Overload retVal='void' descr='// 0x1DD5897E2FA6E7C9
// 0x96100EA4
PLAYER::PLAYER_DETACH_VIRTUAL_BOUND();
----------------------------------------------------------------------------------------------------
```

1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='PlayerId' func='yes'>
			<Overload retVal='Player' descr='// 0x4F8644AF03D0E0D6
// 0x8AEA886C
PLAYER::PLAYER_ID();
----------------------------------------------------------------------------------------------------
```

This returns YOUR &apos;identity&apos; as a Player type.  

Always returns 0 in story mode.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='PlayerPedId' func='yes'>
			<Overload retVal='Ped' descr='// 0xD80958FC74E988A6
// 0xFA92E226
PLAYER::PLAYER_PED_ID();
----------------------------------------------------------------------------------------------------
```

Returns current player ped  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='RemovePlayerHelmet' func='yes'>
			<Overload retVal='Any' descr='// 0xF3AC26D3CC576528
// 0x6255F3B4
PLAYER::REMOVE_PLAYER_HELMET(Player player, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='ReportCrime' func='yes'>
			<Overload retVal='void' descr='// 0xE9B09589827545E7
// 0xD8EB3A44
PLAYER::REPORT_CRIME(Player player, int crimeType, int wantedLvlThresh);
----------------------------------------------------------------------------------------------------
```

PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));  

From am_armybase.ysc.c4:  

PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));  

-----  

This was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilat
ion of the function, see here: pastebin.com/09qSMsN7   

-----  

crimeType:  

1: Firearms possession  

2: Person running a red light (&quot;5-0-5&quot;)  

3: Reckless driver  

4: Speeding vehicle (a &quot;5-10&quot;)  

5: Traffic violation (a &quot;5-0-5&quot;)  

6: Motorcycle rider without a helmet  

7: Vehicle theft (a &quot;5-0-3&quot;)  

8: Grand Theft Auto  

9: ???  

10: ???  

11: Assault on a civilian (a &quot;2-40&quot;)  

12: Assault on an officer  

13: Assault with a deadly weapon (a &quot;2-45&quot;)  

14: Officer shot (a &quot;2-45&quot;)  

15: Pedestrian struck by a vehicle  

16: Officer struck by a vehicle  

17: Helicopter down (an &quot;AC&quot;?)  

18: Civilian on fire (a &quot;2-40&quot;)  

19: Officer set on fire (a &quot;10-99&quot;)  

20: Car on fire  

21: Air unit down (an &quot;AC&quot;?)  

22: An explosion (a &quot;9-96&quot;)  

23: A stabbing (a &quot;2-45&quot;) (also something else I couldn&apos;t understand)  

24: Officer stabbed (also something else I couldn&apos;t understand)  

25: Attack on a vehicle (&quot;MDV&quot;?)  

26: Damage to property  

27: Suspect threatening officer with a firearm  

28: Shots fired  

29: ???  

30: ???  

31: ???  

32: ???  

33: ???  

34: A &quot;2-45&quot;  

35: ???  

36: A &quot;9-25&quot;  

37: ???  

38: ???  

39: ???  

40: ???  

41: ???  

42: ???  

43: Possible disturbance  

44: Civilian in need of assistance  

45: ???  

46: ???  

```'>
				<Param name='Player player' />
				<Param name='int crimeType' />
				<Param name='int wantedLvlThresh' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPlayerArrestState' func='yes'>
			<Overload retVal='void' descr='// 0x2D03E13C460760D6
// 0x453C7CAB
PLAYER::RESET_PLAYER_ARREST_STATE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPlayerInputGait' func='yes'>
			<Overload retVal='void' descr='// 0x19531C47A2ABD691
// 0x4A701EE1
PLAYER::RESET_PLAYER_INPUT_GAIT(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetPlayerStamina' func='yes'>
			<Overload retVal='void' descr='// 0xA6F312FCCE9C1DFE
// 0xC0445A9C
PLAYER::RESET_PLAYER_STAMINA(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetWantedLevelDifficulty' func='yes'>
			<Overload retVal='void' descr='// 0xB9D0DD990DC141DD
// 0xA64C378D
PLAYER::RESET_WANTED_LEVEL_DIFFICULTY(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='RestorePlayerStamina' func='yes'>
			<Overload retVal='void' descr='// 0xA352C1B864CAFD33
// 0x62A93608
PLAYER::RESTORE_PLAYER_STAMINA(Player player, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAchievementProgression' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC2AFFFDABBDC2C5C
PLAYER::_SET_ACHIEVEMENT_PROGRESSION(int achId, int progression);
----------------------------------------------------------------------------------------------------
```

This seems to be related to Steam achievements.  

p0 and p1 are int (?)  

------  

Can&apos;t say anything about the Steam version but it is hardcoded to always return false in the retail 
version.  

Dr. Underscore (1/6/18):  

This has to do with achievement progression. If this achievement has progression, it will set the pr
ogression of it to this value.  

Only tested on un-achieved achievements, Steamworks probably just rejects it if it has already been 
achieved.  

Steamworks also seems to not like reversing achievement progression.  

```'>
				<Param name='int achId' />
				<Param name='int progression' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAirDragMultiplierForPlayersVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xCA7DC8329F0A1E9E
// 0xF20F72E5
PLAYER::SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE(Player player, float multiplier);
----------------------------------------------------------------------------------------------------
```

This can be between 1.0f - 14.9f   

You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greate
r than or equal to 15.0 hence why it&apos;s 14.9 max default.  

On PC the multiplier can be between 0.0f and 50.0f (inclusive).  

```'>
				<Param name='Player player' />
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAllRandomPedsFlee' func='yes'>
			<Overload retVal='void' descr='// 0x056E0FE8534C2949
// 0x49EAE968
PLAYER::SET_ALL_RANDOM_PEDS_FLEE(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAllRandomPedsFleeThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x471D2FF42A94B4F2
// 0xBF974891
PLAYER::SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAutoGiveParachuteWhenEnterPlane' func='yes'>
			<Overload retVal='void' descr='// 0x9F343285A00B4BB6
// 0xA97C2059
PLAYER::SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDisableAmbientMeleeMove' func='yes'>
			<Overload retVal='void' descr='// 0x2E8AABFA40A84F8C
// 0xCCD937E7
PLAYER::SET_DISABLE_AMBIENT_MELEE_MOVE(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDispatchCopsForPlayer' func='yes'>
			<Overload retVal='void' descr='// 0xDB172424876553F4
// 0x48A18913
PLAYER::SET_DISPATCH_COPS_FOR_PLAYER(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetEveryoneIgnorePlayer' func='yes'>
			<Overload retVal='void' descr='// 0x8EEDA153AD141BA4
// 0xC915285E
PLAYER::SET_EVERYONE_IGNORE_PLAYER(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetIgnoreLowPriorityShockingEvents' func='yes'>
			<Overload retVal='void' descr='// 0x596976B02B6B5700
// 0xA3D675ED
PLAYER::SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMaxWantedLevel' func='yes'>
			<Overload retVal='void' descr='// 0xAA5F02DB48D704B9
// 0x665A06F5
PLAYER::SET_MAX_WANTED_LEVEL(int maxWantedLevel);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int maxWantedLevel' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerCanBeHassledByGangs' func='yes'>
			<Overload retVal='void' descr='// 0xD5E460AD7020A246
// 0x71B305BB
PLAYER::SET_PLAYER_CAN_BE_HASSLED_BY_GANGS(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Sets whether this player can be hassled by gangs.  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerCanDoDriveBy' func='yes'>
			<Overload retVal='void' descr='// 0x6E8834B52EC20C77
// 0xF4D99685
PLAYER::SET_PLAYER_CAN_DO_DRIVE_BY(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Set whether this player should be able to do drive-bys.  

&quot;A drive-by is when a ped is aiming/shooting from vehicle. This includes middle finger taunts. By se
tting this value to false I confirm the player is unable to do all that. Tested on tick.&quot;  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerCanLeaveParachuteSmokeTrail' func='yes'>
			<Overload retVal='void' descr='// 0xF401B182DBA8AF53
// 0x832DEB7A
PLAYER::SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL(Player player, BOOL enabled);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL enabled' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerCanUseCover' func='yes'>
			<Overload retVal='Any' descr='// 0xD465A8599DFF6814
// 0x13CAFAFA
PLAYER::SET_PLAYER_CAN_USE_COVER(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Sets whether this player can take cover.  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerClothLockCounter' func='yes'>
			<Overload retVal='void' descr='// 0x14D913B777DFF5DA
// 0x8D9FD4D1
PLAYER::SET_PLAYER_CLOTH_LOCK_COUNTER(int value);
----------------------------------------------------------------------------------------------------
```

6 matches across 4 scripts. 5 occurrences were 240. The other was 255.  

```'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerClothPackageIndex' func='yes'>
			<Overload retVal='void' descr='// 0x9F7BBA2EA6372500
// 0xB8209F16
PLAYER::SET_PLAYER_CLOTH_PACKAGE_INDEX(int index);
----------------------------------------------------------------------------------------------------
```

Every occurrence was either 0 or 2.  

```'>
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerClothPinFrames' func='yes'>
			<Overload retVal='void' descr='// 0x749FADDF97DFE930
// 0xF7A0F00F
PLAYER::SET_PLAYER_CLOTH_PIN_FRAMES(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Every occurrence of p1 I found was true.1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0
.463.1;  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerControl' func='yes'>
			<Overload retVal='void' descr='// 0x8D32347D6D4C40A2
// 0xD17AFCD8
PLAYER::SET_PLAYER_CONTROL(Player player, BOOL toggle, int flags);
----------------------------------------------------------------------------------------------------
```

Flags used in the scripts: 0,4,16,24,32,56,60,64,128,134,256,260,384,512,640,768,896,900,952,1024,12
80,2048,2560  

Note to people who needs this with camera mods, etc.:   

Flags(0, 4, 16, 24, 32, 56, 60, 64, 128, 134, 512, 640, 1024, 2048, 2560)  

- Disables camera rotation as well.  

Flags(256, 260, 384, 768, 896, 900, 952, 1280)  

[ translation: cameraRotation = flags & (1 &lt;&lt; 8) - sfink]  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerForcedAim' func='yes'>
			<Overload retVal='void' descr='// 0x0FEE4F80AC44A726
// 0x94E42E2E
PLAYER::SET_PLAYER_FORCED_AIM(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerForcedZoom' func='yes'>
			<Overload retVal='void' descr='// 0x75E7D505F2B15902
// 0xB0C576CB
PLAYER::SET_PLAYER_FORCED_ZOOM(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerForceSkipAimIntro' func='yes'>
			<Overload retVal='void' descr='// 0x7651BC64AE59E128
// 0x374F42F0
PLAYER::SET_PLAYER_FORCE_SKIP_AIM_INTRO(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerHasReserveParachute' func='yes'>
			<Overload retVal='void' descr='// 0x7DDAB28D31FAC363
// 0xA3E4798E
PLAYER::SET_PLAYER_HAS_RESERVE_PARACHUTE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerHealthRechargeMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0x5DB660B38DD98A31
// 0x45514731
PLAYER::SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER(Player player, float regenRate);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='float regenRate' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerInvincible' func='yes'>
			<Overload retVal='void' descr='// 0x239528EACDC3E7DE
// 0xDFB9A2A2
PLAYER::SET_PLAYER_INVINCIBLE(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Simply sets you as invincible (Health will not deplete).  

Use 0x733A643B5B0C53C1 instead if you want Ragdoll enabled, which is equal to:  

*(DWORD *)(playerPedAddress + 0x188) |= (1 &lt;&lt; 9);  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerLockon' func='yes'>
			<Overload retVal='void' descr='// 0x5C8B2F450EE4328E
// 0x0B270E0F
PLAYER::SET_PLAYER_LOCKON(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Example from fm_mission_controler.ysc.c4:  

PLAYER::SET_PLAYER_LOCKON(PLAYER::PLAYER_ID(), 1);  

All other decompiled scripts using this seem to be using the player id as the first parameter, so I 
feel the need to confirm it as so.  

No need to confirm it says PLAYER_ID() so it uses PLAYER_ID() lol.  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerLockonRangeOverride' func='yes'>
			<Overload retVal='void' descr='// 0x29961D490E5814FD
// 0x74D42C03
PLAYER::SET_PLAYER_LOCKON_RANGE_OVERRIDE(Player player, float range);
----------------------------------------------------------------------------------------------------
```

Affects the range of auto aim target.  

```'>
				<Param name='Player player' />
				<Param name='float range' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerMaxArmour' func='yes'>
			<Overload retVal='void' descr='// 0x77DFCCF5948B8C71
// 0xC6C3C53B
PLAYER::SET_PLAYER_MAX_ARMOUR(Player player, int value);
----------------------------------------------------------------------------------------------------
```

Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PL
AYER_ID(), 100); // main_persistent.ct4  

```'>
				<Param name='Player player' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerMayNotEnterAnyVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x1DE37BBF9E9CC14A
// 0xAF7AFCC4
PLAYER::SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerMayOnlyEnterThisVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x8026FF78F208978A
// 0xA454DD29
PLAYER::SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE(Player player, Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerMeleeWeaponDamageModifier' func='yes'>
			<Overload retVal='void' descr='// 0x4A3DC7ECCC321032
// 0x362E69AD
PLAYER::SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER(Player player, float modifier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='float modifier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerMeleeWeaponDefenseModifier' func='yes'>
			<Overload retVal='void' descr='// 0xAE540335B4ABC4E2
// 0x9F3D577F
PLAYER::SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER(Player player, float modifier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='float modifier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerModel' func='yes'>
			<Overload retVal='void' descr='// 0x00A1CADD00108836
// 0x774A4C54
PLAYER::SET_PLAYER_MODEL(Player player, Hash model);
----------------------------------------------------------------------------------------------------
```

Make sure to request the model first and wait until it has loaded.  

```'>
				<Param name='Player player' />
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerNoiseMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0xDB89EF50FF25FCE9
// 0x15786DD1
PLAYER::SET_PLAYER_NOISE_MULTIPLIER(Player player, float multiplier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerParachuteModelOverride' func='yes'>
			<Overload retVal='void' descr='// 0x977DB4641F6FC3DB
// 0x5D382498
PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(Player player, Hash model);
----------------------------------------------------------------------------------------------------
```

example:  

PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x73268708);  

```'>
				<Param name='Player player' />
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerParachutePackModelOverride' func='yes'>
			<Overload retVal='void' descr='// 0xDC80A4C2F18A2B64
// 0xA877FF5E
PLAYER::SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(Player player, Hash model);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerParachutePackTintIndex' func='yes'>
			<Overload retVal='void' descr='// 0x93B0FB27C9A04060
// 0xD79D5D1B
PLAYER::SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(Player player, int tintIndex);
----------------------------------------------------------------------------------------------------
```

tints 0  

1   

2   

3   

4  

```'>
				<Param name='Player player' />
				<Param name='int tintIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerParachuteSmokeTrailColor' func='yes'>
			<Overload retVal='void' descr='// 0x8217FD371A4625CF
// 0x14FE9264
PLAYER::SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(Player player, int r, int g, int b);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerParachuteTintIndex' func='yes'>
			<Overload retVal='void' descr='// 0xA3D0E54541D9A5E5
// 0x8EA12EDB
PLAYER::SET_PLAYER_PARACHUTE_TINT_INDEX(Player player, int tintIndex);
----------------------------------------------------------------------------------------------------
```

Tints:  

None = -1,  

Rainbow = 0,  

Red = 1,  

SeasideStripes = 2,  

WidowMaker = 3,  

Patriot = 4,  

Blue = 5,  

Black = 6,  

Hornet = 7,  

AirFocce = 8,  

Desert = 9,  

Shadow = 10,  

HighAltitude = 11,  

Airbone = 12,  

Sunrise = 13,  

```'>
				<Param name='Player player' />
				<Param name='int tintIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerParachuteVariationOverride' func='yes'>
			<Overload retVal='void' descr='// 0xD9284A8C0D48352C
// 0x9254249D
PLAYER::SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(Player player, int p1, Any p2, Any p3, BOOL p4);
----------------------------------------------------------------------------------------------------
```

p1 was always 5.  

p4 was always false.  

```'>
				<Param name='Player player' />
				<Param name='int p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerReserveParachuteTintIndex' func='yes'>
			<Overload retVal='void' descr='// 0xAF04C87F5DC1DF38
// 0x70689638
PLAYER::SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(Player player, int index);
----------------------------------------------------------------------------------------------------
```

Tints:  

None = -1,  

Rainbow = 0,  

Red = 1,  

SeasideStripes = 2,  

WidowMaker = 3,  

Patriot = 4,  

Blue = 5,  

Black = 6,  

Hornet = 7,  

AirFocce = 8,  

Desert = 9,  

Shadow = 10,  

HighAltitude = 11,  

Airbone = 12,  

Sunrise = 13,  

```'>
				<Param name='Player player' />
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerResetFlagPreferRearSeats' func='yes'>
			<Overload retVal='void' descr='// 0x11D5F725F0E780E0
// 0x725C6174
PLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(Player player, int flags);
----------------------------------------------------------------------------------------------------
```

example:  

flags: 0-6  

PLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(PLAYER::PLAYER_ID(), 6);  

wouldnt the flag be the seatIndex?  

```'>
				<Param name='Player player' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerSimulateAiming' func='yes'>
			<Overload retVal='void' descr='// 0xC54C95DA968EC5B5
// 0xF1E0CAFC
PLAYER::SET_PLAYER_SIMULATE_AIMING(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerSneakingNoiseMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0xB2C1A29588A9F47C
// 0x8D2D89C4
PLAYER::SET_PLAYER_SNEAKING_NOISE_MULTIPLIER(Player player, float multiplier);
----------------------------------------------------------------------------------------------------
```

Values around 1.0f to 2.0f used in game scripts.  

```'>
				<Param name='Player player' />
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerSprint' func='yes'>
			<Overload retVal='void' descr='// 0xA01B8075D8B92DF4
// 0x7DD7900C
PLAYER::SET_PLAYER_SPRINT(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

77  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerStealthPerceptionModifier' func='yes'>
			<Overload retVal='void' descr='// 0x4E9021C1FCDD507A
// 0x3D26105F
PLAYER::SET_PLAYER_STEALTH_PERCEPTION_MODIFIER(Player player, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerTargetingMode' func='yes'>
			<Overload retVal='void' descr='// 0xB1906895227793F3
// 0x61CAE253
PLAYER::SET_PLAYER_TARGETING_MODE(int targetMode);
----------------------------------------------------------------------------------------------------
```

Sets your targeting mode.  

0 = Traditional GTA  

1 = Assisted Aiming  

2 = Free Aim  

Even tho gtaforums nor Alexander B supports this, if you&apos;re online in freemode already it&apos;s nice to 
have this since retail or otherwise you have to go to SP to change it.  

```'>
				<Param name='int targetMode' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerTeam' func='yes'>
			<Overload retVal='void' descr='// 0x0299FA38396A4940
// 0x725ADCF2
PLAYER::SET_PLAYER_TEAM(Player player, int team);
----------------------------------------------------------------------------------------------------
```

Set player team on deathmatch and last team standing..  

```'>
				<Param name='Player player' />
				<Param name='int team' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerVehicleDamageModifier' func='yes'>
			<Overload retVal='void' descr='// 0xA50E117CDDF82F0C
// 0x823ECA63
PLAYER::SET_PLAYER_VEHICLE_DAMAGE_MODIFIER(Player player, float damageAmount);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='float damageAmount' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerVehicleDefenseModifier' func='yes'>
			<Overload retVal='void' descr='// 0x4C60E6EFDAFF2462
// 0xA16626C7
PLAYER::SET_PLAYER_VEHICLE_DEFENSE_MODIFIER(Player player, float modifier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='float modifier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerWantedCentrePosition' func='yes'>
			<Overload retVal='void' descr='// 0x520E541A97A13354
// 0xF261633A
PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(Player player, float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

# Predominant call signatures  

PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLA
YER_PED_ID(), 1));  

# Parameter value ranges  

P0: PLAYER::PLAYER_ID()  

P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)  

P2: Not set by any call  

```'>
				<Param name='Player player' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerWantedLevel' func='yes'>
			<Overload retVal='void' descr='// 0x39FF19C64EF7DA5B
// 0xB7A0914B
PLAYER::SET_PLAYER_WANTED_LEVEL(Player player, int wantedLevel, BOOL disableNoMission);
----------------------------------------------------------------------------------------------------
```

Call SET_PLAYER_WANTED_LEVEL_NOW for immediate effect  

wantedLevel is an integer value representing 0 to 5 stars even though the game supports the 6th want
ed level but no police will appear since no definitions are present for it in the game files  

disableNoMission-  Disables When Off Mission- appears to always be false  

```'>
				<Param name='Player player' />
				<Param name='int wantedLevel' />
				<Param name='BOOL disableNoMission' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerWantedLevelNoDrop' func='yes'>
			<Overload retVal='void' descr='// 0x340E61DE7F471565
// 0xED6F44F5
PLAYER::SET_PLAYER_WANTED_LEVEL_NO_DROP(Player player, int wantedLevel, BOOL p2);
----------------------------------------------------------------------------------------------------
```

p2 is always false in R* scripts  

```'>
				<Param name='Player player' />
				<Param name='int wantedLevel' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerWantedLevelNow' func='yes'>
			<Overload retVal='void' descr='// 0xE0A7D1E497FFCD6F
// 0xAF3AFD83
PLAYER::SET_PLAYER_WANTED_LEVEL_NOW(Player player, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Forces any pending wanted level to be applied to the specified player immediately.  

Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.
  

Second parameter is unknown (always false).  

```'>
				<Param name='Player player' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerWeaponDamageModifier' func='yes'>
			<Overload retVal='void' descr='// 0xCE07B9F7817AADA3
// 0xB02C2F39
PLAYER::SET_PLAYER_WEAPON_DAMAGE_MODIFIER(Player player, float damageAmount);
----------------------------------------------------------------------------------------------------
```

This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown.
   

Based on tests, it is unlikely to be a multiplier.  

```'>
				<Param name='Player player' />
				<Param name='float damageAmount' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerWeaponDefenseModifier' func='yes'>
			<Overload retVal='void' descr='// 0x2D83BC011CA14A3C
// 0xAE446344
PLAYER::SET_PLAYER_WEAPON_DEFENSE_MODIFIER(Player player, ScrHandle modifier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
				<Param name='ScrHandle modifier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPoliceIgnorePlayer' func='yes'>
			<Overload retVal='void' descr='// 0x32C62AA929C2DA6A
// 0xE6DE71B7
PLAYER::SET_POLICE_IGNORE_PLAYER(Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

The player will be ignored by the police if toggle is set to true  

```'>
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPoliceRadarBlips' func='yes'>
			<Overload retVal='void' descr='// 0x43286D561B72B8BF
// 0x8E114B10
PLAYER::SET_POLICE_RADAR_BLIPS(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

If toggle is set to false:  

The police won&apos;t be shown on the (mini)map  

		If toggle is set to true:  

The police will be shown on the (mini)map  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRunSprintMultiplierForPlayer' func='yes'>
			<Overload retVal='void' descr='// 0x6DB47AA77FD94E09
// 0x825423C2
PLAYER::SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER(Player player, float multiplier);
----------------------------------------------------------------------------------------------------
```

Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multipli
er will not take effect, this can be edited in memory however.  

Just call it one time, it is not required to be called once every tick.  

Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for 
both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal 
to 1.5 hence why it&apos;s 1.49 max default.  

It is not possible to &quot;decrease&quot; speed. Anything below 1 will be ignored.  

```'>
				<Param name='Player player' />
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSpecialAbilityMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0xA49C426ED0CA4AB7
// 0xFF1BC556
PLAYER::SET_SPECIAL_ABILITY_MULTIPLIER(float multiplier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSwimMultiplierForPlayer' func='yes'>
			<Overload retVal='void' descr='// 0xA91C6F0FF7D16A13
// 0xB986FF47
PLAYER::SET_SWIM_MULTIPLIER_FOR_PLAYER(Player player, float multiplier);
----------------------------------------------------------------------------------------------------
```

Swim speed multiplier.  

Multiplier goes up to 1.49  

Just call it one time, it is not required to be called once every tick. - Note copied from below nat
ive.  

Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for 
both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or 
equal to 1.5 hence why it&apos;s 1.49 max default.  

```'>
				<Param name='Player player' />
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWantedLevelDifficulty' func='yes'>
			<Overload retVal='void' descr='// 0x9B0BB33B04405E7A
// 0xB552626C
PLAYER::SET_WANTED_LEVEL_DIFFICULTY(Player player, float difficulty);
----------------------------------------------------------------------------------------------------
```

Max value is 1.0  

```'>
				<Param name='Player player' />
				<Param name='float difficulty' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWantedLevelMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0x020E5F00CDA207BA
// 0x1359292F
PLAYER::SET_WANTED_LEVEL_MULTIPLIER(float multiplier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SimulatePlayerInputGait' func='yes'>
			<Overload retVal='void' descr='// 0x477D5D63E63ECA5D
// 0x0D77CC34
PLAYER::SIMULATE_PLAYER_INPUT_GAIT(Player control, float amount, int gaitType, float speed, BOOL p4, BO
----------------------------------------------------------------------------------------------------
5);

```

```

This is to make the player walk without accepting input from INPUT.  

gaitType is in increments of 100s. 2000, 500, 300, 200, etc.  

p4 is always 1 and p5 is always 0.  

C# Example :  

Function.Call(Hash.SIMULATE_PLAYER_INPUT_GAIT, Game.Player, 1.0f, 100, 1.0f, 1, 0); //Player will go
 forward for 100ms  

```'>
				<Param name='Player control' />
				<Param name='float amount' />
				<Param name='int gaitType' />
				<Param name='float speed' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityChargeAbsolute' func='yes'>
			<Overload retVal='void' descr='// 0xB7B0870EB531D08D
// 0x72429998
PLAYER::SPECIAL_ABILITY_CHARGE_ABSOLUTE(Player player, int p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

p1 appears as 5, 10, 15, 25, or 30. p2 is always true.  

```'>
				<Param name='Player player' />
				<Param name='int p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityChargeContinuous' func='yes'>
			<Overload retVal='void' descr='// 0xED481732DFF7E997
// 0x5FEE98A2
PLAYER::SPECIAL_ABILITY_CHARGE_CONTINUOUS(Player player, Ped p2);
----------------------------------------------------------------------------------------------------
```

p1 appears to always be 1 (only comes up twice)  

```'>
				<Param name='Player player' />
				<Param name='Ped p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityChargeLarge' func='yes'>
			<Overload retVal='void' descr='// 0xF733F45FA4497D93
// 0xF440C04D
PLAYER::SPECIAL_ABILITY_CHARGE_LARGE(Player player, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

2 matches. p1 was always true.  

```'>
				<Param name='Player player' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityChargeMedium' func='yes'>
			<Overload retVal='void' descr='// 0xF113E3AA9BC54613
// 0xAB55D8F3
PLAYER::SPECIAL_ABILITY_CHARGE_MEDIUM(Player player, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Only 1 match. Both p1 & p2 were true.  

```'>
				<Param name='Player player' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityChargeNormalized' func='yes'>
			<Overload retVal='void' descr='// 0xA0696A65F009EE18
// 0x8C7E68C1
PLAYER::SPECIAL_ABILITY_CHARGE_NORMALIZED(Player player, float normalizedValue, BOOL p2);
----------------------------------------------------------------------------------------------------
```

normalizedValue is from 0.0 - 1.0  

p2 is always 1  

```

----------------------------------------------------------------------------------------------------

Old name: RESET_SPECIAL_ABILITY_CONTROLS_CINEMATIC'>
				<Param name='Player player' />
				<Param name='float normalizedValue' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='RESET_SPECIAL_ABILITY_CONTROLS_CINEMATIC' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SpecialAbilityChargeNormalized' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityChargeSmall' func='yes'>
			<Overload retVal='void' descr='// 0x2E7B9B683481687D
// 0x6F463F56
PLAYER::SPECIAL_ABILITY_CHARGE_SMALL(Player player, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Every occurrence of p1 & p2 were both true.  

```'>
				<Param name='Player player' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityDeactivate' func='yes'>
			<Overload retVal='void' descr='// 0xD6A953C6D1492057
// 0x80C2AB09
PLAYER::SPECIAL_ABILITY_DEACTIVATE(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityDeactivateFast' func='yes'>
			<Overload retVal='void' descr='// 0x9CB5CE07A3968D5A
// 0x0751908A
PLAYER::SPECIAL_ABILITY_DEACTIVATE_FAST(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityDepleteMeter' func='yes'>
			<Overload retVal='void' descr='// 0x1D506DBBBC51E64B
// 0x9F80F6DF
PLAYER::SPECIAL_ABILITY_DEPLETE_METER(Player player, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p1 was always true.  

```'>
				<Param name='Player player' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityFillMeter' func='yes'>
			<Overload retVal='void' descr='// 0x3DACA8DDC6FD4980
// 0xB71589DA
PLAYER::SPECIAL_ABILITY_FILL_METER(Player player, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Also known as _RECHARGE_SPECIAL_ABILITY  

```'>
				<Param name='Player player' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityLock' func='yes'>
			<Overload retVal='void' descr='// 0x6A09D0D590A47D13
// 0x1B7BB388
PLAYER::SPECIAL_ABILITY_LOCK(Hash playerModel);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash playerModel' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityReset' func='yes'>
			<Overload retVal='void' descr='// 0x375F0E738F861A94
// 0xA7D8BCD3
PLAYER::SPECIAL_ABILITY_RESET(Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='SpecialAbilityUnlock' func='yes'>
			<Overload retVal='void' descr='// 0xF145F3BE2EFA9A3B
// 0x1FDB2919
PLAYER::SPECIAL_ABILITY_UNLOCK(Hash playerModel);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash playerModel' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartFiringAmnesty' func='yes'>
			<Overload retVal='void' descr='// 0xBF9BD71691857E48
// 0x5F8A22A6
PLAYER::START_FIRING_AMNESTY(int duration);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int duration' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartPlayerTeleport' func='yes'>
			<Overload retVal='void' descr='// 0xAD15F075A4DA0FDE
// 0xC552E06C
PLAYER::START_PLAYER_TELEPORT(Player player, float x, float y, float z, float heading, BOOL p5, BOOL p6
----------------------------------------------------------------------------------------------------
OL p7);

```'>
				<Param name='Player player' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float heading' />
				<Param name='BOOL p5' />
				<Param name='BOOL p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopPlayerTeleport' func='yes'>
			<Overload retVal='void' descr='// 0xC449EDED9D73009C
// 0x86AB8DBB
PLAYER::STOP_PLAYER_TELEPORT();
----------------------------------------------------------------------------------------------------
```

Disables the player&apos;s teleportation  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='SwitchCrimeType' func='yes'>
			<Overload retVal='void' descr='// 0x9A987297ED8BD838
// 0x59B5C2A2
PLAYER::_SWITCH_CRIME_TYPE(Player player, int p1);
----------------------------------------------------------------------------------------------------
```

This was previously named as &quot;RESERVE_ENTITY_EXPLODES_ON_HIGH_EXPLOSION_COMBO&quot;  

which is obviously incorrect.  

Seems to only appear in scripts used in Singleplayer. p1 ranges from 2 - 46.  

I assume this switches the crime type  

```'>
				<Param name='Player player' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsRecording' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1897CA71995A90B4
RECORDING::_IS_RECORDING();
----------------------------------------------------------------------------------------------------
```

Checks if you&apos;re recording, returns TRUE when you start recording (F1) or turn on action replay (F2)
  

mov al, cs:g_bIsRecordingGameplay // byte_141DD0CD0 in b944  

retn  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x13b350b8ad0eee10' func='yes'>
			<Overload retVal='void' descr='// 0x13B350B8AD0EEE10
RECORDING::_0x13B350B8AD0EEE10();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x208784099002bc30' func='yes'>
			<Overload retVal='void' descr='// 0x208784099002BC30
RECORDING::_0x208784099002BC30(char* missionNameLabel, Any p1);
----------------------------------------------------------------------------------------------------
```

-This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -  


first one seems to be a string of a mission name, second one seems to be a bool/toggle  

p1 was always 0.  

```'>
				<Param name='char* missionNameLabel' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x293220da1b46cebc' func='yes'>
			<Overload retVal='void' descr='// 0x293220DA1B46CEBC
RECORDING::_0x293220DA1B46CEBC(float p0, float p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x33d47e85b476abcd' func='yes'>
			<Overload retVal='BOOL' descr='// 0x33D47E85B476ABCD
RECORDING::_0x33D47E85B476ABCD(BOOL* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4282e08174868be3' func='yes'>
			<Overload retVal='Any' descr='// 0x4282E08174868BE3
RECORDING::_0x4282E08174868BE3();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x48621c9fca3ebd28' func='yes'>
			<Overload retVal='void' descr='// 0x48621C9FCA3EBD28
RECORDING::_0x48621C9FCA3EBD28(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x644546ec5287471b' func='yes'>
			<Overload retVal='BOOL' descr='// 0x644546EC5287471B
RECORDING::_0x644546EC5287471B();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x66972397e0757e7a' func='yes'>
			<Overload retVal='void' descr='// 0x66972397E0757E7A
RECORDING::_0x66972397E0757E7A(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x81cbae94390f9f89' func='yes'>
			<Overload retVal='void' descr='// 0x81CBAE94390F9F89
RECORDING::_0x81CBAE94390F9F89();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaf66dcee6609b148' func='yes'>
			<Overload retVal='void' descr='// 0xAF66DCEE6609B148
RECORDING::_0xAF66DCEE6609B148();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdf4b952f7d381b95' func='yes'>
			<Overload retVal='Any' descr='// 0xDF4B952F7D381B95
RECORDING::_0xDF4B952F7D381B95();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xeb2d525b57f42b40' func='yes'>
			<Overload retVal='void' descr='// 0xEB2D525B57F42B40
RECORDING::_0xEB2D525B57F42B40();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf854439efbb3b583' func='yes'>
			<Overload retVal='void' descr='// 0xF854439EFBB3B583
RECORDING::_0xF854439EFBB3B583();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='StartRecording' func='yes'>
			<Overload retVal='void' descr='// 0xC3AC2FFF9612AC81
RECORDING::_START_RECORDING(int mode);
----------------------------------------------------------------------------------------------------
```

Starts recording a replay.  

If mode is 0, turns on action replay.  

If mode is 1, starts recording.  

If already recording a replay, does nothing.  

```'>
				<Param name='int mode' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopRecordingAndDiscardClip' func='yes'>
			<Overload retVal='void' descr='// 0x88BB3507ED41A240
RECORDING::_STOP_RECORDING_AND_DISCARD_CLIP();
----------------------------------------------------------------------------------------------------
```

Stops recording and discards the recorded clip.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='StopRecordingAndSaveClip' func='yes'>
			<Overload retVal='void' descr='// 0x071A5197D6AFC8B3
RECORDING::_STOP_RECORDING_AND_SAVE_CLIP();
----------------------------------------------------------------------------------------------------
```

Stops recording and saves the recorded clip.  

```

----------------------------------------------------------------------------------------------------

Old name: _STOP_RECORDING'>
			</Overload>
		</KeyWord>
		<KeyWord name='_STOP_RECORDING' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: StopRecordingAndSaveClip' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='ActivateRockstarEditor' func='yes'>
			<Overload retVal='void' descr='// 0x49DA8145672B2725
RENDERING::_ACTIVATE_ROCKSTAR_EDITOR();
----------------------------------------------------------------------------------------------------
```

Show Rockstar Editor Menu  

by I&apos;m Not MentaL  

----------  

&quot;new_editor&quot; menu  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsInteriorRenderingDisabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x95AB8B5C992C7B58
RENDERING::_IS_INTERIOR_RENDERING_DISABLED();
----------------------------------------------------------------------------------------------------
```

Returns a bool if interior rendering is disabled, if yes, all &quot;normal&quot; rendered interiors are invisi
ble  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5ad3932daeb1e5d3' func='yes'>
			<Overload retVal='void' descr='// 0x5AD3932DAEB1E5D3
RENDERING::_0x5AD3932DAEB1E5D3();
----------------------------------------------------------------------------------------------------
```

Disables some other rendering (internal)  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7e2bd3ef6c205f09' func='yes'>
			<Overload retVal='void' descr='// 0x7E2BD3EF6C205F09
RENDERING::_0x7E2BD3EF6C205F09(char* p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Something to do with phone cameras.  

startup.c4:  

void sub_2a3d() {  

    UNK2::_7E2BD3EF6C205F09(&quot;No_Filter&quot;, 1);  

    UNK2::_7E2BD3EF6C205F09(&quot;phone_cam1&quot;, 1);  

    UNK2::_7E2BD3EF6C205F09(&quot;phone_cam2&quot;, 1);  

    UNK2::_7E2BD3EF6C205F09(&quot;phone_cam3&quot;, 1);  

    UNK2::_7E2BD3EF6C205F09(&quot;phone_cam4&quot;, 1);  

    UNK2::_7E2BD3EF6C205F09(&quot;phone_cam5&quot;, 1);  

    UNK2::_7E2BD3EF6C205F09(&quot;phone_cam6&quot;, 1);  

    UNK2::_7E2BD3EF6C205F09(&quot;phone_cam7&quot;, 1);  

    UNK2::_7E2BD3EF6C205F09(&quot;phone_cam9&quot;, 1);  

    UNK2::_7E2BD3EF6C205F09(&quot;phone_cam12&quot;, 0);  

}  

```'>
				<Param name='char* p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe058175f8eafe79a' func='yes'>
			<Overload retVal='void' descr='// 0xE058175F8EAFE79A
RENDERING::_0xE058175F8EAFE79A(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetEditorValues' func='yes'>
			<Overload retVal='void' descr='// 0x3353D13F09307691
RENDERING::_RESET_EDITOR_VALUES();
----------------------------------------------------------------------------------------------------
```

Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='BeginEnumeratingThreads' func='yes'>
			<Overload retVal='void' descr='// 0xDADFADA5A20143A8
// 0xBB4E2F66
SCRIPT::_BEGIN_ENUMERATING_THREADS();
----------------------------------------------------------------------------------------------------
```

MulleDK19: Starts a new enumeration of the current threads.  

Call this first, then _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION (0x30B4FA1C82DD4B9F)  

see _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION (0x30B4FA1C82DD4B9F) for an example  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='DoesScriptExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFC04745FBE67C19A
// 0xDEAB87AB
SCRIPT::DOES_SCRIPT_EXIST(char* scriptName);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/yLNWicUi  

```'>
				<Param name='char* scriptName' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesScriptWithNameHashExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF86AA3C56BA31381
SCRIPT::_DOES_SCRIPT_WITH_NAME_HASH_EXIST(Hash scriptHash);
----------------------------------------------------------------------------------------------------
```

formerly _IS_STREAMED_SCRIPT_RUNNING  

Jenkins hash: 0x19EAE282  

```'>
				<Param name='Hash scriptHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEventAtIndex' func='yes'>
			<Overload retVal='int' descr='// 0xD8F66A3A60C62153
// 0xB49C1442
SCRIPT::GET_EVENT_AT_INDEX(int eventGroup, int eventIndex);
----------------------------------------------------------------------------------------------------
```

eventGroup: 0 = CEventGroupScriptAI, 1 = CEventGroupScriptNetwork  

```'>
				<Param name='int eventGroup' />
				<Param name='int eventIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEventData' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2902843FCD2B2D79
// 0x4280F92F
SCRIPT::GET_EVENT_DATA(int eventGroup, int eventIndex, int* argStruct, int argStructSize);
----------------------------------------------------------------------------------------------------
```

eventGroup: 0 = CEventGroupScriptAI, 1 = CEventGroupScriptNetwork  

```'>
				<Param name='int eventGroup' />
				<Param name='int eventIndex' />
				<Param name='int* argStruct' />
				<Param name='int argStructSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEventExists' func='yes'>
			<Overload retVal='BOOL' descr='// 0x936E6168A9BCEDB5
// 0xA1B447B5
SCRIPT::GET_EVENT_EXISTS(int eventGroup, int eventIndex);
----------------------------------------------------------------------------------------------------
```

eventGroup: 0 = CEventGroupScriptAI, 1 = CEventGroupScriptNetwork  

```'>
				<Param name='int eventGroup' />
				<Param name='int eventIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHashOfThisScriptName' func='yes'>
			<Overload retVal='Hash' descr='// 0x8A1C8B1738FFE87E
// 0x2BEE1F45
SCRIPT::GET_HASH_OF_THIS_SCRIPT_NAME();
----------------------------------------------------------------------------------------------------
## Return value

----------------------------------------------------------------------------------------------------

Old name: _GET_THIS_SCRIPT_HASH'>
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_THIS_SCRIPT_HASH' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetHashOfThisScriptName' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetIdOfNextThreadInEnumeration' func='yes'>
			<Overload retVal='int' descr='// 0x30B4FA1C82DD4B9F
// 0x1E28B28F
SCRIPT::_GET_ID_OF_NEXT_THREAD_IN_ENUMERATION();
----------------------------------------------------------------------------------------------------
```

MulleDK19: Gets the ID of the next active thread.  

First call _BEGIN_ENUMERATE_THREADS (0xDADFADA5A20143A8).  

Any subsequent call to this function will then return the ID of the next active thread.  

If the function returns 0, the end of the enumeration has been reached.  

-----------------------------------------------------------------------  

Here&apos;s an example:  

	std::vector&lt;int&gt; vecCurrentThreads;  

	void update_current_threads_list()  

	{  

vecCurrentThreads.clear();  

_BEGIN_ENUMERATING_THREADS();  

int id = _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION();  

while (id != 0)  

{  

	id = _GET_ID_OF_NEXT_THREAD_IN_ENUMERATION();  

	vecCurrentThreads.push_back(id);  

}  

	}  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetIdOfThisThread' func='yes'>
			<Overload retVal='int' descr='// 0xC30338E8088E2E21
// 0xDE524830
SCRIPT::GET_ID_OF_THIS_THREAD();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNameOfThread' func='yes'>
			<Overload retVal='char*' descr='// 0x05A42BA9FC8DA96B
// 0xBE7ACD89
SCRIPT::_GET_NAME_OF_THREAD(int threadId);
----------------------------------------------------------------------------------------------------
```

The reversed code looks like this (Sasuke78200)  

//  

char g_szScriptName[64];  

char* _0xBE7ACD89(int a_iThreadID)  

{  

	scrThread* l_pThread;  

	// Get the script thread  

	l_pThread = GetThreadByID(a_iThreadID);	  

	if(l_pThread == 0 || l_pThread-&gt;m_iThreadState == 2)  

	{  

strncpy(g_szScriptName, &quot;&quot;, 64);  

	}  

	else  

	{  

strncpy(g_szScriptName, l_pThread-&gt;m_szScriptName, 64);  

	}	  

	return g_szScriptName;  

}  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_THREAD_NAME'>
				<Param name='int threadId' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_THREAD_NAME' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetNameOfThread' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetNoLoadingScreen' func='yes'>
			<Overload retVal='BOOL' descr='// 0x18C1270EA7F199BC
SCRIPT::_GET_NO_LOADING_SCREEN();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfEvents' func='yes'>
			<Overload retVal='int' descr='// 0x5F92A689A06620AA
// 0xA3525D60
SCRIPT::GET_NUMBER_OF_EVENTS(int eventGroup);
----------------------------------------------------------------------------------------------------
```

eventGroup: 0 = CEventGroupScriptAI, 1 = CEventGroupScriptNetwork  

```'>
				<Param name='int eventGroup' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfInstancesOfScriptWithNameHash' func='yes'>
			<Overload retVal='int' descr='// 0x2C83A9DA6BFFC4F9
// 0x029D3841
SCRIPT::_GET_NUMBER_OF_INSTANCES_OF_SCRIPT_WITH_NAME_HASH(Hash scriptHash);
----------------------------------------------------------------------------------------------------
```

Gets the number of instances of the specified script is currently running.  

Actually returns numInstances - 1.  

if (scriptPtr)  

    v3 = GetNumberOfInstancesOfScript(scriptPtr) - 1;  

return v3;  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT'>
				<Param name='Hash scriptHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_NUMBER_OF_INSTANCES_OF_STREAMED_SCRIPT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetNumberOfInstancesOfScriptWithNameHash' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetThisScriptName' func='yes'>
			<Overload retVal='char*' descr='// 0x442E0A7EDE4A738A
// 0xA40FD5D9
SCRIPT::GET_THIS_SCRIPT_NAME();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='HasScriptLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE6CC9F3BA0FB9EF1
// 0x5D67F751
SCRIPT::HAS_SCRIPT_LOADED(char* scriptName);
----------------------------------------------------------------------------------------------------
```

Returns if a script has been loaded into the game. Used to see if a script was loaded after requesti
ng.  

For a full list, see here: pastebin.com/yLNWicUi  

```'>
				<Param name='char* scriptName' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasScriptWithNameHashLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5F0F0C783EB16C04
// 0x06674818
SCRIPT::HAS_SCRIPT_WITH_NAME_HASH_LOADED(Hash scriptHash);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _HAS_STREAMED_SCRIPT_LOADED'>
				<Param name='Hash scriptHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='_HAS_STREAMED_SCRIPT_LOADED' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: HasScriptWithNameHashLoaded' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='IsThreadActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x46E9AE36D8FA6417
// 0x78D7A5A0
SCRIPT::IS_THREAD_ACTIVE(int threadId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int threadId' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa40cc53df8e50837' func='yes'>
			<Overload retVal='void' descr='// 0xA40CC53DF8E50837
SCRIPT::_0xA40CC53DF8E50837(BOOL p0, Any args, int argCount, int bit);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
				<Param name='Any args' />
				<Param name='int argCount' />
				<Param name='int bit' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb1577667c3708f9b' func='yes'>
			<Overload retVal='void' descr='// 0xB1577667C3708F9B
// 0xB03BCCDF
SCRIPT::_0xB1577667C3708F9B();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='RequestScript' func='yes'>
			<Overload retVal='void' descr='// 0x6EB5F71AA68F2E8E
// 0xE26B2666
SCRIPT::REQUEST_SCRIPT(char* scriptName);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/yLNWicUi  

```'>
				<Param name='char* scriptName' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestScriptWithNameHash' func='yes'>
			<Overload retVal='void' descr='// 0xD62A67D26D9653E6
// 0x1C68D9DC
SCRIPT::REQUEST_SCRIPT_WITH_NAME_HASH(Hash scriptHash);
----------------------------------------------------------------------------------------------------
```

formerly _REQUEST_STREAMED_SCRIPT  

```

----------------------------------------------------------------------------------------------------

Old name: _REQUEST_STREAMED_SCRIPT'>
				<Param name='Hash scriptHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='_REQUEST_STREAMED_SCRIPT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: RequestScriptWithNameHash' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetNoLoadingScreen' func='yes'>
			<Overload retVal='void' descr='// 0x5262CC1995D07E09
// 0xC8055034
SCRIPT::SET_NO_LOADING_SCREEN(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScriptAsNoLongerNeeded' func='yes'>
			<Overload retVal='void' descr='// 0xC90D2DCACD56184C
// 0x6FCB7795
SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(char* scriptName);
----------------------------------------------------------------------------------------------------
```

For a full list, see here: pastebin.com/yLNWicUi  

```'>
				<Param name='char* scriptName' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScriptWithNameHashAsNoLongerNeeded' func='yes'>
			<Overload retVal='void' descr='// 0xC5BC038960E9DB27
// 0x96C26F66
SCRIPT::SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED(Hash scriptHash);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _SET_STREAMED_SCRIPT_AS_NO_LONGER_NEEDED'>
				<Param name='Hash scriptHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_STREAMED_SCRIPT_AS_NO_LONGER_NEEDED' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetScriptWithNameHashAsNoLongerNeeded' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='ShutdownLoadingScreen' func='yes'>
			<Overload retVal='void' descr='// 0x078EBE9809CCD637
// 0xA2826D17
SCRIPT::SHUTDOWN_LOADING_SCREEN();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='TerminateThisThread' func='yes'>
			<Overload retVal='void' descr='// 0x1090044AD1DA76FA
// 0x3CD9CBB7
SCRIPT::TERMINATE_THIS_THREAD();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='TerminateThread' func='yes'>
			<Overload retVal='void' descr='// 0xC8B189ED9138BCD4
// 0x253FD520
SCRIPT::TERMINATE_THREAD(int threadId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int threadId' />
			</Overload>
		</KeyWord>
		<KeyWord name='TriggerScriptEvent' func='yes'>
			<Overload retVal='void' descr='// 0x5AE99C571D5BBE5D
// 0x54763B35
SCRIPT::TRIGGER_SCRIPT_EVENT(int eventGroup, int* args, int argCount, int bit);
----------------------------------------------------------------------------------------------------
```

yis  

eventGroup: 0 = CEventGroupScriptAI, 1 = CEventGroupScriptNetwork  

^^ I&apos;m assuming it&apos;s like the rest with this parameter.  

```'>
				<Param name='int eventGroup' />
				<Param name='int* args' />
				<Param name='int argCount' />
				<Param name='int bit' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetShapeTestResult' func='yes'>
			<Overload retVal='int' descr='// 0x3D87450E15D98694
// 0xF3C2875A
SHAPETEST::GET_SHAPE_TEST_RESULT(int rayHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, Enti
----------------------------------------------------------------------------------------------------
entityHit);

```

```

Parameters:  

rayHandle - Ray Handle from a casted ray, as returned by CAST_RAY_POINT_TO_POINT  

hit - Where to store whether or not it hit anything. False is when the ray reached its destination. 
 

endCoords - Where to store the world-coords of where the ray was stopped (by hitting its desired max
 range or by colliding with an entity/the map)  

surfaceNormal - Where to store the surface-normal coords (NOT relative to the game world) of where t
he entity was hit by the ray  

entityHit - Where to store the handle of the entity hit by the ray  

Returns:  

Result? Some type of enum.  

NOTE: To get the offset-coords of where the ray hit relative to the entity that it hit (which is NOT
 the same as surfaceNormal), you can use these two natives:  

Vector3 offset = ENTITY::GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(entityHit, endCoords.x, endCoords
.y, endCoords.z);  

Vector3 entitySpotCoords = ENTITY::GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(entityHit, offset.x, offse
t.y, offset.z);  

Use ENTITY::GET_ENTITY_TYPE(entityHit) to quickly distinguish what type of entity you hit (ped/vehic
le/object - 1/2/3)  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_RAYCAST_RESULT'>
				<Param name='int rayHandle' />
				<Param name='BOOL* hit' />
				<Param name='Vector3* endCoords' />
				<Param name='Vector3* surfaceNormal' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_RAYCAST_RESULT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetShapeTestResult' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetShapeTestResultEx' func='yes'>
			<Overload retVal='int' descr='// 0x65287525D951F6BE
// 0x4301E10C
SHAPETEST::_GET_SHAPE_TEST_RESULT_EX(int rayHandle, BOOL* hit, Vector3* endCoords, Vector3* surfaceNormal, 
----------------------------------------------------------------------------------------------------
* materialHash, Entity* entityHit);

```

```

behaves exactly the same way as GET_SHAPE_TEST_RESULT except it has one extra parameter (_materialHa
sh).  

Quick disassembly seems to indicate that the unknown is a hash. EDIT: Seems to be the hash of the hi
t material or surface type.  

found a materialFX.dat list of them but not sure if it has to do with this native yet.  

materials (full list): pastebin.com/gyHjsYBK  

```'>
				<Param name='int rayHandle' />
				<Param name='BOOL* hit' />
				<Param name='Vector3* endCoords' />
				<Param name='Vector3* surfaceNormal' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShapeTestResultEntity' func='yes'>
			<Overload retVal='void' descr='// 0x2B3334BCA57CD799
// 0xEC2AAF06
SHAPETEST::_SHAPE_TEST_RESULT_ENTITY(Entity entityHit);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entityHit' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartShapeTestBound' func='yes'>
			<Overload retVal='int' descr='// 0x37181417CE7C8900
// 0x13BC46C0
SHAPETEST::START_SHAPE_TEST_BOUND(Entity entity, int flags1, int flags2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='int flags1' />
				<Param name='int flags2' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartShapeTestBoundingBox' func='yes'>
			<Overload retVal='int' descr='// 0x052837721A854EC7
// 0xCEEAD94B
SHAPETEST::START_SHAPE_TEST_BOUNDING_BOX(Entity entity, int flags1, int flags2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
				<Param name='int flags1' />
				<Param name='int flags2' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartShapeTestBox' func='yes'>
			<Overload retVal='int' descr='// 0xFE466162C4401D18
// 0x249BC876
SHAPETEST::START_SHAPE_TEST_BOX(float x, float y, float z, float x1, float y2, float z2, float rotX, float 
----------------------------------------------------------------------------------------------------
, float rotZ, Any p9, Any p10, Any entity, Any p12);

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float x1' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='float rotX' />
				<Param name='float ' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartShapeTestCapsule' func='yes'>
			<Overload retVal='int' descr='// 0x28579D1B8F8AAC80
// 0x591EA833
SHAPETEST::START_SHAPE_TEST_CAPSULE(float x1, float y1, float z1, float x2, float y2, float z2, float radiu
----------------------------------------------------------------------------------------------------
nt flags, Entity entity, int p9);

```

```

Raycast from point to point, where the ray has a radius.   

flags:  

vehicles=10  

peds =12  

Iterating through flags yields many ped / vehicle/ object combinations  

p9 = 7, but no idea what it does  

Entity is an entity to ignore  

```

----------------------------------------------------------------------------------------------------

Old name: _CAST_3D_RAY_POINT_TO_POINT'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='float radiu' />
			</Overload>
		</KeyWord>
		<KeyWord name='_CAST_3D_RAY_POINT_TO_POINT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: StartShapeTestCapsule' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='StartShapeTestCapsule_2' func='yes'>
			<Overload retVal='int' descr='// 0xE6AC6C45FBE83004
// 0x4559460A
SHAPETEST::_START_SHAPE_TEST_CAPSULE_2(float x1, float y1, float z1, float x2, float y2, float z2, float ra
----------------------------------------------------------------------------------------------------
, int flags, Entity entity, Any p9);

```

```

Performs the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded param
eters.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='float ra' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartShapeTestLosProbe' func='yes'>
			<Overload retVal='int' descr='// 0x7EE9F5D83DD4F90E
// 0xEFAF4BA6
SHAPETEST::START_SHAPE_TEST_LOS_PROBE(float x1, float y1, float z1, float x2, float y2, float z2, int flags
----------------------------------------------------------------------------------------------------
tity ent, int p8);

```

```

Returns a ray (?) going from x1, y1, z1 to x2, y2, z2.  

entity = 0 most of the time.  

p8 = 7 most of the time.  

Result of this function is passed to WORLDPROBE::_GET_RAYCAST_RESULT as a first argument.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartShapeTestRay' func='yes'>
			<Overload retVal='int' descr='// 0x377906D8A31E5586
// 0x8251485D
SHAPETEST::_START_SHAPE_TEST_RAY(float x1, float y1, float z1, float x2, float y2, float z2, int flags, Ent
----------------------------------------------------------------------------------------------------
entity, int p8);

```

```

Not sure how or why this differs from 0x7EE9F5D83DD4F90E, but it does.  

This function casts a ray from Point1 to Point2 and returns it&apos;s ray handle.  A simple ray cast will
 &apos;shoot&apos; a line from point A to point B, and return whether or not the ray reached it&apos;s destination 
or if it hit anything and if it did hit anything, will return the handle of what it hit (entity hand
le) and coordinates of where the ray reached.  

You can use _GET_RAYCAST_RESULT to get the result of the raycast  

Entity is an entity to ignore, such as the player.  

Flags are intersection bit flags.  They tell the ray what to care about and what not to care about w
hen casting. Passing -1 will intersect with everything, presumably.  

Flags:  

1: Intersect with map  

2: Intersect with vehicles (used to be mission entities?) (includes train)  

4: Intersect with peds? (same as 8)  

8: Intersect with peds? (same as 4)  

16: Intersect with objects  

32: Water?  

64: Unknown  

128: Unknown  

256: Intersect with vegetation (plants, coral. trees not included)  

NOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not registe
r for far away entites. The range seems to be about 30 metres.  

```

----------------------------------------------------------------------------------------------------

Old name: _CAST_RAY_POINT_TO_POINT'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='_CAST_RAY_POINT_TO_POINT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: StartShapeTestRay' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='StartShapeTestSurroundingCoords' func='yes'>
			<Overload retVal='int' descr='// 0xFF6BE494C7987F34
SHAPETEST::_START_SHAPE_TEST_SURROUNDING_COORDS(Vector3* pVec1, Vector3* pVec2, int flag, Entity entity, in
----------------------------------------------------------------------------------------------------
ag2);

```

```

it returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.  

In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2
 set to 7  

```'>
				<Param name='Vector3* pVec1' />
				<Param name='Vector3* pVec2' />
				<Param name='int flag' />
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTotalScInboxIds' func='yes'>
			<Overload retVal='int' descr='// 0x03A93FF1A2CA0864
// 0x6BE5DF29
SOCIALCLUB::_GET_TOTAL_SC_INBOX_IDS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsScInboxValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0x93028F1DB42BFD08
// 0xD1ED1D48
SOCIALCLUB::_IS_SC_INBOX_VALID(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x07c61676e5bb52cd' func='yes'>
			<Overload retVal='Any' descr='// 0x07C61676E5BB52CD
SOCIALCLUB::_0x07C61676E5BB52CD(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x07dbd622d9533857' func='yes'>
			<Overload retVal='Any' descr='// 0x07DBD622D9533857
SOCIALCLUB::_0x07DBD622D9533857(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0f73393bac7e6730' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0F73393BAC7E6730
SOCIALCLUB::_0x0F73393BAC7E6730(Any* p0, int* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='int* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x116fb94dc4b79f17' func='yes'>
			<Overload retVal='void' descr='// 0x116FB94DC4B79F17
// 0xAF3C081B
SOCIALCLUB::_0x116FB94DC4B79F17(char* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x16da8172459434aa' func='yes'>
			<Overload retVal='Any' descr='// 0x16DA8172459434AA
SOCIALCLUB::_0x16DA8172459434AA();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x19853b5b17d77bca' func='yes'>
			<Overload retVal='BOOL' descr='// 0x19853B5B17D77BCA
// 0xD26CCA46
SOCIALCLUB::_0x19853B5B17D77BCA(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1989c6e6f67e76a8' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1989C6E6F67E76A8
SOCIALCLUB::_0x1989C6E6F67E76A8(Any* p0, Any* p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1d4446a62d35b0d0' func='yes'>
			<Overload retVal='Any' descr='// 0x1D4446A62D35B0D0
SOCIALCLUB::_0x1D4446A62D35B0D0(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1f1e9682483697c7' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1F1E9682483697C7
// 0x90C74343
SOCIALCLUB::_0x1F1E9682483697C7(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x225798743970412b' func='yes'>
			<Overload retVal='BOOL' descr='// 0x225798743970412B
SOCIALCLUB::_0x225798743970412B(int* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x287f1f75d2803595' func='yes'>
			<Overload retVal='BOOL' descr='// 0x287F1F75D2803595
// 0x3ACE6D6B
SOCIALCLUB::_0x287F1F75D2803595(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2e89990ddff670c3' func='yes'>
			<Overload retVal='Any' descr='// 0x2E89990DDFF670C3
SOCIALCLUB::_0x2E89990DDFF670C3(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3001bef2feca3680' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3001BEF2FECA3680
// 0x4D4C37B3
SOCIALCLUB::_0x3001BEF2FECA3680();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x418dc16fae452c1c' func='yes'>
			<Overload retVal='BOOL' descr='// 0x418DC16FAE452C1C
SOCIALCLUB::_0x418DC16FAE452C1C(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x44aca259d67651db' func='yes'>
			<Overload retVal='void' descr='// 0x44ACA259D67651DB
SOCIALCLUB::_0x44ACA259D67651DB(Any* p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4737980e8a283806' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4737980E8A283806
SOCIALCLUB::_0x4737980E8A283806(int p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x487912fd248efddf' func='yes'>
			<Overload retVal='BOOL' descr='// 0x487912FD248EFDDF
// 0x579B4510
SOCIALCLUB::_0x487912FD248EFDDF(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4a7d6e727f941747' func='yes'>
			<Overload retVal='Any' descr='// 0x4A7D6E727F941747
// 0x8E7AEEB7
SOCIALCLUB::_0x4A7D6E727F941747(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5c4ebffa98bdb41c' func='yes'>
			<Overload retVal='Any' descr='// 0x5C4EBFFA98BDB41C
SOCIALCLUB::_0x5C4EBFFA98BDB41C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x675721c9f644d161' func='yes'>
			<Overload retVal='void' descr='// 0x675721C9F644D161
// 0x486867E6
SOCIALCLUB::_0x675721C9F644D161();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x699e4a5c8c893a18' func='yes'>
			<Overload retVal='BOOL' descr='// 0x699E4A5C8C893A18
// 0xCE7D50A8
SOCIALCLUB::_0x699E4A5C8C893A18(int p0, char* p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='char* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6afd2cd753feef83' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6AFD2CD753FEEF83
// 0x628F489B
SOCIALCLUB::_0x6AFD2CD753FEEF83(char* playerName);
----------------------------------------------------------------------------------------------------
```

I put the argument as &apos;playerName&apos; as when it&apos;s called in freemode.c TU27 X360 scripts. It&apos;s given a
 var that has GET_PLAYER_NAME stored in it via StringCopy.  

```'>
				<Param name='char* playerName' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6bfb12ce158e3dd4' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6BFB12CE158E3DD4
// 0x24D84334
SOCIALCLUB::_0x6BFB12CE158E3DD4(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x700569dba175a77c' func='yes'>
			<Overload retVal='Any' descr='// 0x700569DBA175A77C
SOCIALCLUB::_0x700569DBA175A77C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7db18ca8cad5b098' func='yes'>
			<Overload retVal='Any' descr='// 0x7DB18CA8CAD5B098
SOCIALCLUB::_0x7DB18CA8CAD5B098();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8147fff6a718e1ad' func='yes'>
			<Overload retVal='Any' descr='// 0x8147FFF6A718E1AD
SOCIALCLUB::_0x8147FFF6A718E1AD(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8416fe4e4629d7d7' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8416FE4E4629D7D7
// 0xDF45B2A7
SOCIALCLUB::_0x8416FE4E4629D7D7(char* p0);
----------------------------------------------------------------------------------------------------
```

sfink: from scripts:  

func_720(socialclub::_0x8416FE4E4629D7D7(&quot;bIgnoreCheaterOverride&quot;));  

func_719(socialclub::_0x8416FE4E4629D7D7(&quot;bIgnoreBadSportOverride&quot;));  

```'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x85535acf97fc0969' func='yes'>
			<Overload retVal='Any' descr='// 0x85535ACF97FC0969
// 0x09497F31
SOCIALCLUB::_0x85535ACF97FC0969(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x87e0052f08bd64e6' func='yes'>
			<Overload retVal='BOOL' descr='// 0x87E0052F08BD64E6
// 0xAB3346B5
SOCIALCLUB::_0x87E0052F08BD64E6(Any p0, int* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='int* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8cc469ab4d349b7c' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8CC469AB4D349B7C
// 0xE778B2A7
SOCIALCLUB::_0x8CC469AB4D349B7C(int p0, char* p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='char* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9237e334f6e43156' func='yes'>
			<Overload retVal='Any' descr='// 0x9237E334F6E43156
// 0x65D84665
SOCIALCLUB::_0x9237E334F6E43156(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x92da6e70ef249bd1' func='yes'>
			<Overload retVal='BOOL' descr='// 0x92DA6E70EF249BD1
// 0xAED95A6F
SOCIALCLUB::_0x92DA6E70EF249BD1(char* p0, int* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='int* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x930de22f07b1cce3' func='yes'>
			<Overload retVal='int' descr='// 0x930DE22F07B1CCE3
// 0x4D8A6521
SOCIALCLUB::_0x930DE22F07B1CCE3(Any p0);
----------------------------------------------------------------------------------------------------
```

Unknown.  

Seems to return either 0, 1, or -1.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa68d3d229f4f3b06' func='yes'>
			<Overload retVal='void' descr='// 0xA68D3D229F4F3B06
// 0x75324674
SOCIALCLUB::_0xA68D3D229F4F3B06(char* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbc1cc91205ec8d6e' func='yes'>
			<Overload retVal='Any' descr='// 0xBC1CC91205EC8D6E
// 0x6C5738AB
SOCIALCLUB::_0xBC1CC91205EC8D6E();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbfa0a56a817c6c7d' func='yes'>
			<Overload retVal='void' descr='// 0xBFA0A56A817C6C7D
// 0x2FB9F53C
SOCIALCLUB::_0xBFA0A56A817C6C7D(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd0ee05fe193646ea' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD0EE05FE193646EA
SOCIALCLUB::_0xD0EE05FE193646EA(Any* p0, Any* p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd302e99edf0449cf' func='yes'>
			<Overload retVal='Any' descr='// 0xD302E99EDF0449CF
SOCIALCLUB::_0xD302E99EDF0449CF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd8122c407663b995' func='yes'>
			<Overload retVal='Any' descr='// 0xD8122C407663B995
// 0x1C65B038
SOCIALCLUB::_0xD8122C407663B995();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xda024bdbd600f44a' func='yes'>
			<Overload retVal='void' descr='// 0xDA024BDBD600F44A
// 0x0B9A3512
SOCIALCLUB::_0xDA024BDBD600F44A(int* networkHandle);
----------------------------------------------------------------------------------------------------
```

In scripts it&apos;s used with a var, that is used elsewhere in a check regarding if the given networkHan
dle is valid.  

```'>
				<Param name='int* networkHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdf649c4e9afdd788' func='yes'>
			<Overload retVal='Any' descr='// 0xDF649C4E9AFDD788
// 0x468668F0
SOCIALCLUB::_0xDF649C4E9AFDD788();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xeb2bf817463dfa28' func='yes'>
			<Overload retVal='Any' descr='// 0xEB2BF817463DFA28
SOCIALCLUB::_0xEB2BF817463DFA28(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf22ca0fd74b80e7a' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF22CA0FD74B80E7A
// 0xF379DCE4
SOCIALCLUB::_0xF22CA0FD74B80E7A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf6baaaf762e1bf40' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF6BAAAF762E1BF40
// 0x7AA36406
SOCIALCLUB::_0xF6BAAAF762E1BF40(char* p0, int* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='int* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfe4c1d0d3b9cc17e' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFE4C1D0D3B9CC17E
// 0x8A023024
SOCIALCLUB::_0xFE4C1D0D3B9CC17E(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xff8f3a92b75ed67a' func='yes'>
			<Overload retVal='Any' descr='// 0xFF8F3A92B75ED67A
// 0xC96456BA
SOCIALCLUB::_0xFF8F3A92B75ED67A();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='ScEmailMessageClearRecipList' func='yes'>
			<Overload retVal='void' descr='// 0x55DF6DB45179236E
// 0xD094F11A
SOCIALCLUB::SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ScEmailMessagePushGamerToRecipList' func='yes'>
			<Overload retVal='void' descr='// 0x2330C12A7A605D16
// 0x9A703A2B
SOCIALCLUB::SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST(Player* player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Player* player' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScGetCheckStringStatus' func='yes'>
			<Overload retVal='int' descr='// 0x82E4A58BABC15AE7
// 0xA796D7A7
SOCIALCLUB::_SC_GET_CHECK_STRING_STATUS(int taskHandle);
----------------------------------------------------------------------------------------------------
```

Returns the status of a _SC_START_CHECK_STRING_TASK task.  

Possible return values:  

0: not a profane string  

1: a profane string  

3: server error occurred  

```'>
				<Param name='int taskHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScGetNickname' func='yes'>
			<Overload retVal='Entity' descr='// 0x198D161F458ECC7F
SOCIALCLUB::_SC_GET_NICKNAME();
----------------------------------------------------------------------------------------------------
```

Returns the nickname of the logged-in Rockstar Social Club account.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='ScHasCheckStringTaskCompleted' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1753344C770358AE
// 0xFFED3676
SOCIALCLUB::_SC_HAS_CHECK_STRING_TASK_COMPLETED(int taskHandle);
----------------------------------------------------------------------------------------------------
```

Returns whether or not a task started with _SC_START_CHECK_STRING_TASK has completed.  

```'>
				<Param name='int taskHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScInboxGetEmails' func='yes'>
			<Overload retVal='void' descr='// 0x040ADDCBAFA1018A
SOCIALCLUB::_SC_INBOX_GET_EMAILS(int offset, int limit);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int offset' />
				<Param name='int limit' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScInboxMessageGetDataBool' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFFE5C16F402D851D
SOCIALCLUB::_SC_INBOX_MESSAGE_GET_DATA_BOOL(int p0, char* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScInboxMessageGetDataInt' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA00EFE4082C4056E
// 0x88068C7C
SOCIALCLUB::SC_INBOX_MESSAGE_GET_DATA_INT(int p0, char* context, int* out);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='char* context' />
				<Param name='int* out' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScInboxMessageGetDataString' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7572EF42FC6A9B6D
// 0x15607620
SOCIALCLUB::SC_INBOX_MESSAGE_GET_DATA_STRING(int p0, char* context, char* out);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='char* context' />
				<Param name='char* out' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScInboxMessageGetString' func='yes'>
			<Overload retVal='char*' descr='// 0xF3E31D16CBDCB304
// 0x2C959AF9
SOCIALCLUB::_SC_INBOX_MESSAGE_GET_STRING(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScInboxMessageGetUgcdata' func='yes'>
			<Overload retVal='BOOL' descr='// 0x69D82604A1A5A254
// 0x88CA3BFC
SOCIALCLUB::SC_INBOX_MESSAGE_GET_UGCDATA(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScInboxMessageInit' func='yes'>
			<Overload retVal='Hash' descr='// 0xBB8EA16ECBC976C4
// 0x5ECF955D
SOCIALCLUB::_SC_INBOX_MESSAGE_INIT(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScInboxMessagePop' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2C015348CF19CA1D
// 0x19EE0CCB
SOCIALCLUB::_SC_INBOX_MESSAGE_POP(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScInboxMessagePush' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9A2C8064B6C1E41A
// 0xEBE420A4
SOCIALCLUB::_SC_INBOX_MESSAGE_PUSH(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ScStartCheckStringTask' func='yes'>
			<Overload retVal='BOOL' descr='// 0x75632C5ECD7ED843
// 0xDF084A6B
SOCIALCLUB::_SC_START_CHECK_STRING_TASK(char* string, int* taskHandle);
----------------------------------------------------------------------------------------------------
```

Starts a task to check an entered string for profanity on the ROS/Social Club services.  

See also: 1753344C770358AE, 82E4A58BABC15AE7.  

```'>
				<Param name='char* string' />
				<Param name='int* taskHandle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNgstatBoolHash' func='yes'>
			<Overload retVal='Hash' descr='// 0xBA52FF538ED2BC71
STATS::_GET_NGSTAT_BOOL_HASH(int index, BOOL spStat, BOOL charStat, int character, char* section);
----------------------------------------------------------------------------------------------------
```

Needs more research. Gets the stat name of a masked bool?  

p4 - Usually &quot;_NGPSTAT_BOOL&quot; or &quot;_NGTATPSTAT_BOOL&quot;. There may be more that I missed.  

```'>
				<Param name='int index' />
				<Param name='BOOL spStat' />
				<Param name='BOOL charStat' />
				<Param name='int character' />
				<Param name='char* section' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNgstatIntHash' func='yes'>
			<Overload retVal='Hash' descr='// 0x2B4CDCA6F07FF3DA
STATS::_GET_NGSTAT_INT_HASH(int index, BOOL spStat, BOOL charStat, int character, char* section);
----------------------------------------------------------------------------------------------------
```

Needs more research. Gets the stat name of a masked int?  

p4 - Usually one of the following (there may be more that I missed):  

-----&gt; &quot;_APAPSTAT_INT&quot;  

-----&gt; &quot;_LRPSTAT_INT&quot;  

-----&gt; &quot;_NGPSTAT_INT&quot;  

-----&gt; &quot;_MP_APAPSTAT_INT&quot;  

-----&gt; &quot;_MP_LRPSTAT_INT&quot;  

```'>
				<Param name='int index' />
				<Param name='BOOL spStat' />
				<Param name='BOOL charStat' />
				<Param name='int character' />
				<Param name='char* section' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPstatBoolHash' func='yes'>
			<Overload retVal='Hash' descr='// 0x80C75307B1C42837
// 0xB5BF87B2
STATS::_GET_PSTAT_BOOL_HASH(int index, BOOL spStat, BOOL charStat, int character);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int index' />
				<Param name='BOOL spStat' />
				<Param name='BOOL charStat' />
				<Param name='int character' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPstatIntHash' func='yes'>
			<Overload retVal='Hash' descr='// 0x61E111E323419E07
// 0x1F938864
STATS::_GET_PSTAT_INT_HASH(int index, BOOL spStat, BOOL charStat, int character);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int index' />
				<Param name='BOOL spStat' />
				<Param name='BOOL charStat' />
				<Param name='int character' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTupstatBoolHash' func='yes'>
			<Overload retVal='Hash' descr='// 0xC4BB08EE7907471E
// 0x3F8E893B
STATS::_GET_TUPSTAT_BOOL_HASH(int index, BOOL spStat, BOOL charStat, int character);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int index' />
				<Param name='BOOL spStat' />
				<Param name='BOOL charStat' />
				<Param name='int character' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTupstatIntHash' func='yes'>
			<Overload retVal='Hash' descr='// 0xD16C2AD6B8E32854
// 0xFB93C5A2
STATS::_GET_TUPSTAT_INT_HASH(int index, BOOL spStat, BOOL charStat, int character);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int index' />
				<Param name='BOOL spStat' />
				<Param name='BOOL charStat' />
				<Param name='int character' />
			</Overload>
		</KeyWord>
		<KeyWord name='Leaderboards2ReadByHandle' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC30713A383BFBF0E
// 0x6B553408
STATS::LEADERBOARDS2_READ_BY_HANDLE(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='Leaderboards2ReadByRadius' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5CE587FB5A42C8C4
// 0xC5B7E685
STATS::LEADERBOARDS2_READ_BY_RADIUS(Any* p0, Any p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='Leaderboards2ReadByRank' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBA2C7DB0C129449A
// 0x1B03F59F
STATS::LEADERBOARDS2_READ_BY_RANK(Any* p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='Leaderboards2ReadByRow' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA9CDB1E3F0A49883
// 0xCA931F34
STATS::LEADERBOARDS2_READ_BY_ROW(Any* p0, Any* p1, Any p2, Any* p3, Any p4, Any* p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any* p3' />
				<Param name='Any p4' />
				<Param name='Any* p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='Leaderboards2ReadByScoreFloat' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE662C8B759D08F3C
// 0xC678B29F
STATS::LEADERBOARDS2_READ_BY_SCORE_FLOAT(Any* p0, float p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='float p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='Leaderboards2ReadByScoreInt' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7EEC7E4F6984A16A
// 0xAC020C18
STATS::LEADERBOARDS2_READ_BY_SCORE_INT(Any* p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='Leaderboards2ReadFriendsByRow' func='yes'>
			<Overload retVal='BOOL' descr='// 0x918B101666F9CB83
// 0xBD91B136
STATS::LEADERBOARDS2_READ_FRIENDS_BY_ROW(Any* p0, Any* p1, Any p2, BOOL p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='BOOL p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='Leaderboards2WriteData' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAE2206545888AE49
// 0x5F9DF634
STATS::LEADERBOARDS2_WRITE_DATA(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsCacheDataRow' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB9BB18E2C40142ED
// 0x44F7D82B
STATS::LEADERBOARDS_CACHE_DATA_ROW(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsClearCacheData' func='yes'>
			<Overload retVal='void' descr='// 0xD4B02A6B476E1FDC
// 0x87F498C1
STATS::LEADERBOARDS_CLEAR_CACHE_DATA();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsDeaths' func='yes'>
			<Overload retVal='void' descr='// 0x428EAF89E24F6C36
// 0xEE292B91
STATS::_LEADERBOARDS_DEATHS(Hash statName, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsGetCacheDataRow' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9120E8DBA3D69273
// 0xA11289EC
STATS::LEADERBOARDS_GET_CACHE_DATA_ROW(Any p0, Any p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsGetCacheExists' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9C51349BE6CDFE2C
// 0xFC8A71F3
STATS::LEADERBOARDS_GET_CACHE_EXISTS(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsGetCacheTime' func='yes'>
			<Overload retVal='Any' descr='// 0xF04C1C27DA35F6C8
// 0xEDF02302
STATS::LEADERBOARDS_GET_CACHE_TIME(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsGetColumnId' func='yes'>
			<Overload retVal='Any' descr='// 0xC4B5467A1886EA7E
// 0x3821A334
STATS::LEADERBOARDS_GET_COLUMN_ID(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsGetColumnType' func='yes'>
			<Overload retVal='Any' descr='// 0xBF4FEF46DB7894D3
// 0x6F2820F4
STATS::LEADERBOARDS_GET_COLUMN_TYPE(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsGetNumberOfColumns' func='yes'>
			<Overload retVal='Any' descr='// 0x117B45156D7EFF2E
// 0x0A56EE34
STATS::LEADERBOARDS_GET_NUMBER_OF_COLUMNS(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsReadClear' func='yes'>
			<Overload retVal='Any' descr='// 0x7CCE5C737A665701
// 0x7090012F
STATS::LEADERBOARDS_READ_CLEAR(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsReadClearAll' func='yes'>
			<Overload retVal='Any' descr='// 0xA34CB6E6F0DF4A0B
// 0x233E058A
STATS::LEADERBOARDS_READ_CLEAR_ALL();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsReadPending' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAC392C8483342AC2
// 0xEEB8BF5C
STATS::LEADERBOARDS_READ_PENDING(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='LeaderboardsReadSuccessful' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2FB19228983E832C
// 0x3AC5B2F1
STATS::LEADERBOARDS_READ_SUCCESSFUL(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x015b03ee1c43e6ec' func='yes'>
			<Overload retVal='void' descr='// 0x015B03EE1C43E6EC
STATS::_0x015B03EE1C43E6EC(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x03c2eebb04b3fb72' func='yes'>
			<Overload retVal='void' descr='// 0x03C2EEBB04B3FB72
STATS::_0x03C2EEBB04B3FB72(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x047cbed6f6f8b63c' func='yes'>
			<Overload retVal='void' descr='// 0x047CBED6F6F8B63C
// 0xA063CABD
STATS::_0x047CBED6F6F8B63C();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x04d90ba8207ada2d' func='yes'>
			<Overload retVal='void' descr='// 0x04D90BA8207ADA2D
STATS::_0x04D90BA8207ADA2D(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x06eaf70ae066441e' func='yes'>
			<Overload retVal='void' descr='// 0x06EAF70AE066441E
STATS::_0x06EAF70AE066441E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x098760c7461724cd' func='yes'>
			<Overload retVal='void' descr='// 0x098760C7461724CD
// 0x896CDF8D
STATS::_0x098760C7461724CD();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0a50d2604e05cb94' func='yes'>
			<Overload retVal='void' descr='// 0x0A50D2604E05CB94
STATS::_0x0A50D2604E05CB94(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0a9c7f36e5d7b683' func='yes'>
			<Overload retVal='void' descr='// 0x0A9C7F36E5D7B683
STATS::_0x0A9C7F36E5D7B683(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0b565b0aae56a0e8' func='yes'>
			<Overload retVal='void' descr='// 0x0B565B0AAE56A0E8
STATS::_0x0B565B0AAE56A0E8(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0b8b7f74bf061c6d' func='yes'>
			<Overload retVal='Any' descr='// 0x0B8B7F74BF061C6D
STATS::_0x0B8B7F74BF061C6D();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0bca1d2c47b0d269' func='yes'>
			<Overload retVal='void' descr='// 0x0BCA1D2C47B0D269
// 0x7524E27B
STATS::_0x0BCA1D2C47B0D269(Any p0, Any p1, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0d01d20616fc73fb' func='yes'>
			<Overload retVal='void' descr='// 0x0D01D20616FC73FB
// 0x2180AE13
STATS::_0x0D01D20616FC73FB(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0eacdf8487d5155a' func='yes'>
			<Overload retVal='void' descr='// 0x0EACDF8487D5155A
STATS::_0x0EACDF8487D5155A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x11ff1c80276097ed' func='yes'>
			<Overload retVal='void' descr='// 0x11FF1C80276097ED
// 0x4AC39C6C
STATS::_0x11FF1C80276097ED(char* p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x121fb4dddc2d5291' func='yes'>
			<Overload retVal='void' descr='// 0x121FB4DDDC2D5291
// 0x413539BC
STATS::_0x121FB4DDDC2D5291(Any p0, Any p1, Any p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x14e0b2d1ad1044e0' func='yes'>
			<Overload retVal='void' descr='// 0x14E0B2D1AD1044E0
// 0xDDD1F1F3
STATS::_0x14E0B2D1AD1044E0(Any* p0, Any* p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x14eda9ee27bd1626' func='yes'>
			<Overload retVal='void' descr='// 0x14EDA9EE27BD1626
STATS::_0x14EDA9EE27BD1626(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x164c5ff663790845' func='yes'>
			<Overload retVal='void' descr='// 0x164C5FF663790845
STATS::_0x164C5FF663790845(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1a7ce7cd3e653485' func='yes'>
			<Overload retVal='void' descr='// 0x1A7CE7CD3E653485
STATS::_0x1A7CE7CD3E653485(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1a8ea222f9c67dbb' func='yes'>
			<Overload retVal='Any' descr='// 0x1A8EA222F9C67DBB
STATS::_0x1A8EA222F9C67DBB(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1cae5d2e3f9a07f0' func='yes'>
			<Overload retVal='void' descr='// 0x1CAE5D2E3F9A07F0
// 0x6602CED6
STATS::_0x1CAE5D2E3F9A07F0(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x203b381133817079' func='yes'>
			<Overload retVal='void' descr='// 0x203B381133817079
STATS::_0x203B381133817079(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2605663bd4f23b5d' func='yes'>
			<Overload retVal='void' descr='// 0x2605663BD4F23B5D
STATS::_0x2605663BD4F23B5D(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x26d7399b9587fe89' func='yes'>
			<Overload retVal='void' descr='// 0x26D7399B9587FE89
// 0x343B27E2
STATS::_0x26D7399B9587FE89(int p0);
----------------------------------------------------------------------------------------------------
```

STATS::0x343B27E2(0);  

STATS::0x343B27E2(1);  

STATS::0x343B27E2(2);  

STATS::0x343B27E2(3);  

STATS::0x343B27E2(4);  

STATS::0x343B27E2(5);  

STATS::0x343B27E2(6);  

STATS::0x343B27E2(7);  

Identical in ingamehud & maintransition.  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x27aa1c973cacfe63' func='yes'>
			<Overload retVal='void' descr='// 0x27AA1C973CACFE63
STATS::_0x27AA1C973CACFE63(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any
----------------------------------------------------------------------------------------------------
;

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x282b6739644f4347' func='yes'>
			<Overload retVal='void' descr='// 0x282B6739644F4347
STATS::_0x282B6739644F4347(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x28ecb8ac2f607db2' func='yes'>
			<Overload retVal='void' descr='// 0x28ECB8AC2F607DB2
STATS::_0x28ECB8AC2F607DB2(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2b69f5074c894811' func='yes'>
			<Overload retVal='void' descr='// 0x2B69F5074C894811
// 0x62073DF7
STATS::_0x2B69F5074C894811(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2cd90358f67d0aa8' func='yes'>
			<Overload retVal='void' descr='// 0x2CD90358F67D0AA8
STATS::_0x2CD90358F67D0AA8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2e65248609523599' func='yes'>
			<Overload retVal='void' descr='// 0x2E65248609523599
// 0x1C5CCC3A
STATS::_0x2E65248609523599(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x30a6614c1f7799b8' func='yes'>
			<Overload retVal='void' descr='// 0x30A6614C1F7799B8
// 0x3E69E7C3
STATS::_0x30A6614C1F7799B8(Any p0, float p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3270f67eed31fbc1' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3270F67EED31FBC1
STATS::_0x3270F67EED31FBC1(Any p0, Any* p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x32cac93c9de73d32' func='yes'>
			<Overload retVal='Any' descr='// 0x32CAC93C9DE73D32
STATS::_0x32CAC93C9DE73D32();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x33d72899e24c3365' func='yes'>
			<Overload retVal='Any' descr='// 0x33D72899E24C3365
STATS::_0x33D72899E24C3365(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x34770b9ce0e03b91' func='yes'>
			<Overload retVal='BOOL' descr='// 0x34770B9CE0E03B91
// 0x766A74FE
STATS::_0x34770B9CE0E03B91(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x38491439b6ba7f7d' func='yes'>
			<Overload retVal='float' descr='// 0x38491439B6BA7F7D
// 0x509A286F
STATS::_0x38491439B6BA7F7D(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x38baaa5dd4c9d19f' func='yes'>
			<Overload retVal='void' descr='// 0x38BAAA5DD4C9D19F
// 0x726FAE66
STATS::_0x38BAAA5DD4C9D19F(int value);
----------------------------------------------------------------------------------------------------
```

Sets profile setting 934  

```'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3de3aa516fb126a4' func='yes'>
			<Overload retVal='void' descr='// 0x3DE3AA516FB126A4
STATS::_0x3DE3AA516FB126A4(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3ebeac6c3f81f6bd' func='yes'>
			<Overload retVal='void' descr='// 0x3EBEAC6C3F81F6BD
STATS::_0x3EBEAC6C3F81F6BD(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x419615486bbf1956' func='yes'>
			<Overload retVal='void' descr='// 0x419615486BBF1956
STATS::_0x419615486BBF1956(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x44919cc079bb60bf' func='yes'>
			<Overload retVal='void' descr='// 0x44919CC079BB60BF
STATS::_0x44919CC079BB60BF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x46326e13da4e0546' func='yes'>
			<Overload retVal='void' descr='// 0x46326E13DA4E0546
STATS::_0x46326E13DA4E0546(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x47b32f5611e6e483' func='yes'>
			<Overload retVal='void' descr='// 0x47B32F5611E6E483
STATS::_0x47B32F5611E6E483(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4c89fe2bdeb3f169' func='yes'>
			<Overload retVal='Any' descr='// 0x4C89FE2BDEB3F169
STATS::_0x4C89FE2BDEB3F169();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4fef53183c3c6414' func='yes'>
			<Overload retVal='Any' descr='// 0x4FEF53183C3C6414
STATS::_0x4FEF53183C3C6414();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5009dfd741329729' func='yes'>
			<Overload retVal='void' descr='// 0x5009DFD741329729
// 0x61ECC465
STATS::_0x5009DFD741329729(char* p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x501478855a6074ce' func='yes'>
			<Overload retVal='void' descr='// 0x501478855A6074CE
STATS::_0x501478855A6074CE(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x516fc96eb88eefe5' func='yes'>
			<Overload retVal='void' descr='// 0x516FC96EB88EEFE5
STATS::_0x516FC96EB88EEFE5(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x53cae13e9b426993' func='yes'>
			<Overload retVal='void' descr='// 0x53CAE13E9B426993
STATS::_0x53CAE13E9B426993(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x55384438fc55ad8e' func='yes'>
			<Overload retVal='void' descr='// 0x55384438FC55AD8E
// 0xF03895A4
STATS::_0x55384438FC55AD8E(int value);
----------------------------------------------------------------------------------------------------
```

Sets profile setting 935  

```'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x55a8becaf28a4eb7' func='yes'>
			<Overload retVal='Any' descr='// 0x55A8BECAF28A4EB7
STATS::_0x55A8BECAF28A4EB7();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x567384dfa67029e6' func='yes'>
			<Overload retVal='Any' descr='// 0x567384DFA67029E6
STATS::_0x567384DFA67029E6();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5688585e6d563cd8' func='yes'>
			<Overload retVal='void' descr='// 0x5688585E6D563CD8
// 0xC62406A6
STATS::_0x5688585E6D563CD8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x58a651cd201d89ad' func='yes'>
			<Overload retVal='Any' descr='// 0x58A651CD201D89AD
// 0xCE7CB520
STATS::_0x58A651CD201D89AD(Any p0);
----------------------------------------------------------------------------------------------------
```

LEADERBOARDS_GET_CACHE_???  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5a556b229a169402' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5A556B229A169402
// 0x46F21343
STATS::_0x5A556B229A169402();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5bd5f255321c4aaf' func='yes'>
			<Overload retVal='Any' descr='// 0x5BD5F255321C4AAF
STATS::_0x5BD5F255321C4AAF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5da3a8de8cb6226f' func='yes'>
			<Overload retVal='void' descr='// 0x5DA3A8DE8CB6226F
// 0x9E2B9522
STATS::_0x5DA3A8DE8CB6226F(int time);
----------------------------------------------------------------------------------------------------
```

longest time being ilde?  

```'>
				<Param name='int time' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5ead2bf6484852e4' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5EAD2BF6484852E4
// 0x23D70C39
STATS::_0x5EAD2BF6484852E4();
----------------------------------------------------------------------------------------------------
```

example from completionpercentage_controller.ysc.c4  

if (STATS::_5EAD2BF6484852E4()) {  

            GAMEPLAY::SET_BIT(g_17b95._f20df._ff10, 15);  

            STATS::_11FF1C80276097ED(0xe9ec4dd1, 200, 0);  

        }  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5ff2c33b13a02a11' func='yes'>
			<Overload retVal='void' descr='// 0x5FF2C33B13A02A11
STATS::_0x5FF2C33B13A02A11(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x60eedc12af66e846' func='yes'>
			<Overload retVal='void' descr='// 0x60EEDC12AF66E846
STATS::_0x60EEDC12AF66E846(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x629526aba383bcaa' func='yes'>
			<Overload retVal='void' descr='// 0x629526ABA383BCAA
STATS::_0x629526ABA383BCAA();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6483c25849031c4f' func='yes'>
			<Overload retVal='void' descr='// 0x6483C25849031C4F
// 0x2FFD2FA5
STATS::_0x6483C25849031C4F(Any p0, Any p1, Any p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6551b1f7f6cd46ea' func='yes'>
			<Overload retVal='void' descr='// 0x6551B1F7F6CD46EA
STATS::_0x6551B1F7F6CD46EA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x678f86d8fc040bdb' func='yes'>
			<Overload retVal='void' descr='// 0x678F86D8FC040BDB
STATS::_0x678F86D8FC040BDB(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6a60e43998228229' func='yes'>
			<Overload retVal='void' descr='// 0x6A60E43998228229
STATS::_0x6A60E43998228229(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6bc0acd0673acebe' func='yes'>
			<Overload retVal='void' descr='// 0x6BC0ACD0673ACEBE
STATS::_0x6BC0ACD0673ACEBE(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6bccf9948492fd85' func='yes'>
			<Overload retVal='void' descr='// 0x6BCCF9948492FD85
STATS::_0x6BCCF9948492FD85(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6dee77aff8c21bd1' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6DEE77AFF8C21BD1
// 0x489E27E7
STATS::_0x6DEE77AFF8C21BD1(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6e0a5253375c4584' func='yes'>
			<Overload retVal='Any' descr='// 0x6E0A5253375C4584
STATS::_0x6E0A5253375C4584();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6f361b8889a792a3' func='yes'>
			<Overload retVal='void' descr='// 0x6F361B8889A792A3
// 0x3B4EF322
STATS::_0x6F361B8889A792A3();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7033eefd9b28088e' func='yes'>
			<Overload retVal='void' descr='// 0x7033EEFD9B28088E
STATS::_0x7033EEFD9B28088E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x71862b1d855f32e1' func='yes'>
			<Overload retVal='void' descr='// 0x71862B1D855F32E1
// 0xAC2C7C63
STATS::_0x71862B1D855F32E1(Any* p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x71b008056e5692d6' func='yes'>
			<Overload retVal='void' descr='// 0x71B008056E5692D6
// 0xF2DB6A82
STATS::_0x71B008056E5692D6();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x723c1ce13fbfdb67' func='yes'>
			<Overload retVal='void' descr='// 0x723C1CE13FBFDB67
// 0x4C39CF10
STATS::_0x723C1CE13FBFDB67(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x73001e34f85137f8' func='yes'>
			<Overload retVal='void' descr='// 0x73001E34F85137F8
STATS::_0x73001E34F85137F8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x792271ab35c356a4' func='yes'>
			<Overload retVal='void' descr='// 0x792271AB35C356A4
STATS::_0x792271AB35C356A4(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x79ab33f0fbfac40c' func='yes'>
			<Overload retVal='void' descr='// 0x79AB33F0FBFAC40C
// 0x8D5C7B37
STATS::_0x79AB33F0FBFAC40C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7b18da61f6bae9d5' func='yes'>
			<Overload retVal='void' descr='// 0x7B18DA61F6BAE9D5
STATS::_0x7B18DA61F6BAE9D5(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7d36291161859389' func='yes'>
			<Overload retVal='void' descr='// 0x7D36291161859389
STATS::_0x7D36291161859389(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7d8ba05688ad64c7' func='yes'>
			<Overload retVal='void' descr='// 0x7D8BA05688AD64C7
STATS::_0x7D8BA05688AD64C7(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7e6946f68a38b74f' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7E6946F68A38B74F
// 0x22804C20
STATS::_0x7E6946F68A38B74F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7eec2a316c250073' func='yes'>
			<Overload retVal='void' descr='// 0x7EEC2A316C250073
// 0x30558CFD
STATS::_0x7EEC2A316C250073(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
```

_PLAYSTATS_ROB_ARMOURD_TRUCK  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7f2c4cdf2e82df4c' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7F2C4CDF2E82DF4C
// 0x0BF0F4B2
STATS::_0x7F2C4CDF2E82DF4C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x848b66100ee33b05' func='yes'>
			<Overload retVal='void' descr='// 0x848B66100EE33B05
STATS::_0x848B66100EE33B05(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x84a810b375e69c0e' func='yes'>
			<Overload retVal='Any' descr='// 0x84A810B375E69C0E
STATS::_0x84A810B375E69C0E();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x84dfc579c2fc214c' func='yes'>
			<Overload retVal='void' descr='// 0x84DFC579C2FC214C
STATS::_0x84DFC579C2FC214C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x88087ee1f28024ae' func='yes'>
			<Overload retVal='void' descr='// 0x88087EE1F28024AE
STATS::_0x88087EE1F28024AE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x88578f6ec36b4a3a' func='yes'>
			<Overload retVal='Any' descr='// 0x88578F6EC36B4A3A
// 0x6B90E730
STATS::_0x88578F6EC36B4A3A(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x886913bbeaca68c1' func='yes'>
			<Overload retVal='Any' descr='// 0x886913BBEACA68C1
// 0xE3F0D62D
STATS::_0x886913BBEACA68C1(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8989cbd7b4e82534' func='yes'>
			<Overload retVal='void' descr='// 0x8989CBD7B4E82534
STATS::_0x8989CBD7B4E82534(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8a800daccc0da55d' func='yes'>
			<Overload retVal='void' descr='// 0x8A800DACCC0DA55D
STATS::_0x8A800DACCC0DA55D();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8b9cdbd6c566c38c' func='yes'>
			<Overload retVal='Any' descr='// 0x8B9CDBD6C566C38C
STATS::_0x8B9CDBD6C566C38C();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8c9d11605e59d955' func='yes'>
			<Overload retVal='void' descr='// 0x8C9D11605E59D955
STATS::_0x8C9D11605E59D955(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8d8adb562f09a245' func='yes'>
			<Overload retVal='void' descr='// 0x8D8ADB562F09A245
STATS::_0x8D8ADB562F09A245(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8ec74ceb042e7cff' func='yes'>
			<Overload retVal='void' descr='// 0x8EC74CEB042E7CFF
// 0x88AE9667
STATS::_0x8EC74CEB042E7CFF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x90d0622866e80445' func='yes'>
			<Overload retVal='void' descr='// 0x90D0622866E80445
// 0x66FEB701
STATS::_0x90D0622866E80445(int p0, char* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x928dbfb892638ef3' func='yes'>
			<Overload retVal='void' descr='// 0x928DBFB892638EF3
STATS::_0x928DBFB892638EF3();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x930f504203f561c9' func='yes'>
			<Overload retVal='void' descr='// 0x930F504203F561C9
STATS::_0x930F504203F561C9(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x94f12abf9c79e339' func='yes'>
			<Overload retVal='int' descr='// 0x94F12ABF9C79E339
// 0xCA160BCC
STATS::_0x94F12ABF9C79E339(int p0);
----------------------------------------------------------------------------------------------------
```

Needs more research. Possibly used to calculate the &quot;mask&quot; when calling &quot;STAT_SET_MASKED_INT&quot;?  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x96e6d5150dbf1c09' func='yes'>
			<Overload retVal='void' descr='// 0x96E6D5150DBF1C09
STATS::_0x96E6D5150DBF1C09(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x98e2bc1ca26287c3' func='yes'>
			<Overload retVal='void' descr='// 0x98E2BC1CA26287C3
STATS::_0x98E2BC1CA26287C3();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9a62ec95ae10e011' func='yes'>
			<Overload retVal='Any' descr='// 0x9A62EC95AE10E011
STATS::_0x9A62EC95AE10E011();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9b4bd21d69b1e609' func='yes'>
			<Overload retVal='void' descr='// 0x9B4BD21D69B1E609
STATS::_0x9B4BD21D69B1E609();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9ec8858184cd253a' func='yes'>
			<Overload retVal='Any' descr='// 0x9EC8858184CD253A
STATS::_0x9EC8858184CD253A();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa071e0ed98f91286' func='yes'>
			<Overload retVal='void' descr='// 0xA071E0ED98F91286
// 0x1A66945F
STATS::_0xA071E0ED98F91286(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa0f93d5465b3094d' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA0F93D5465B3094D
// 0xC977D6E2
STATS::_0xA0F93D5465B3094D(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa31fd15197b192bd' func='yes'>
			<Overload retVal='Any' descr='// 0xA31FD15197B192BD
// 0x1789437B
STATS::_0xA31FD15197B192BD();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa3c53804bdb68ed2' func='yes'>
			<Overload retVal='void' descr='// 0xA3C53804BDB68ED2
STATS::_0xA3C53804BDB68ED2(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa5c80d8e768a9e66' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA5C80D8E768A9E66
STATS::_0xA5C80D8E768A9E66(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa6f54bb2ffca35ea' func='yes'>
			<Overload retVal='void' descr='// 0xA6F54BB2FFCA35EA
STATS::_0xA6F54BB2FFCA35EA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa736cf7fb7c5bff4' func='yes'>
			<Overload retVal='void' descr='// 0xA736CF7FB7C5BFF4
// 0x31002201
STATS::_0xA736CF7FB7C5BFF4(Any* p0, Any* p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa761d4ac6115623d' func='yes'>
			<Overload retVal='Any' descr='// 0xA761D4AC6115623D
STATS::_0xA761D4AC6115623D();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa78b8fa58200da56' func='yes'>
			<Overload retVal='void' descr='// 0xA78B8FA58200DA56
// 0xE3247582
STATS::_0xA78B8FA58200DA56(int p0);
----------------------------------------------------------------------------------------------------
```

STATS::0xE3247582(0);  

STATS::0xE3247582(1);  

STATS::0xE3247582(2);  

STATS::0xE3247582(3);  

STATS::0xE3247582(4);  

STATS::0xE3247582(5);  

STATS::0xE3247582(6);  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa8733668d1047b51' func='yes'>
			<Overload retVal='void' descr='// 0xA8733668D1047B51
// 0x395D18B1
STATS::_0xA8733668D1047B51(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa943fd1722e11efd' func='yes'>
			<Overload retVal='Any' descr='// 0xA943FD1722E11EFD
STATS::_0xA943FD1722E11EFD();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaa525dff66bb82f5' func='yes'>
			<Overload retVal='void' descr='// 0xAA525DFF66BB82F5
STATS::_0xAA525DFF66BB82F5(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaddd1c754e2e2914' func='yes'>
			<Overload retVal='void' descr='// 0xADDD1C754E2E2914
// 0x06CE3692
STATS::_0xADDD1C754E2E2914(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any
----------------------------------------------------------------------------------------------------
;

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaff47709f1d5dcce' func='yes'>
			<Overload retVal='Any' descr='// 0xAFF47709F1D5DCCE
STATS::_0xAFF47709F1D5DCCE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb1d2bb1e1631f5b1' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB1D2BB1E1631F5B1
// 0x02F283CE
STATS::_0xB1D2BB1E1631F5B1();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb3da2606774a8e2d' func='yes'>
			<Overload retVal='Any' descr='// 0xB3DA2606774A8E2D
STATS::_0xB3DA2606774A8E2D();
----------------------------------------------------------------------------------------------------
```

This function is hard-coded to always return 1.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb475f27c6a994d65' func='yes'>
			<Overload retVal='void' descr='// 0xB475F27C6A994D65
// 0xC7DE5C30
STATS::_0xB475F27C6A994D65();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb7257ba2550ea10a' func='yes'>
			<Overload retVal='void' descr='// 0xB7257BA2550EA10A
STATS::_0xB7257BA2550EA10A(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba9749cc94c1fd85' func='yes'>
			<Overload retVal='Any' descr='// 0xBA9749CC94C1FD85
STATS::_0xBA9749CC94C1FD85();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbaa2f0490e146be8' func='yes'>
			<Overload retVal='void' descr='// 0xBAA2F0490E146BE8
STATS::_0xBAA2F0490E146BE8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbe3db208333d9844' func='yes'>
			<Overload retVal='Any' descr='// 0xBE3DB208333D9844
STATS::_0xBE3DB208333D9844();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbe509b0a3693de8b' func='yes'>
			<Overload retVal='void' descr='// 0xBE509B0A3693DE8B
STATS::_0xBE509B0A3693DE8B(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbed9f5693f34ed17' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBED9F5693F34ED17
// 0xC4110917
STATS::_0xBED9F5693F34ED17(Hash statName, int p1, float* outValue);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
				<Param name='int p1' />
				<Param name='float* outValue' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbf371cd2b64212fd' func='yes'>
			<Overload retVal='void' descr='// 0xBF371CD2B64212FD
STATS::_0xBF371CD2B64212FD(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbfafdb5faaa5c5ab' func='yes'>
			<Overload retVal='void' descr='// 0xBFAFDB5FAAA5C5AB
STATS::_0xBFAFDB5FAAA5C5AB(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc0e0d686ddfc6eae' func='yes'>
			<Overload retVal='Any' descr='// 0xC0E0D686DDFC6EAE
// 0x099FCC86
STATS::_0xC0E0D686DDFC6EAE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc141b8917e0017ec' func='yes'>
			<Overload retVal='void' descr='// 0xC141B8917E0017EC
// 0x0AD43306
STATS::_0xC141B8917E0017EC();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc38dc1e90d22547c' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC38DC1E90D22547C
// 0x9BEC3401
STATS::_0xC38DC1E90D22547C(Any* p0, Any* p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc5be134ec7ba96a0' func='yes'>
			<Overload retVal='void' descr='// 0xC5BE134EC7BA96A0
// 0xC960E161
STATS::_0xC5BE134EC7BA96A0(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc6e0e2616a7576bb' func='yes'>
			<Overload retVal='Any' descr='// 0xC6E0E2616A7576BB
STATS::_0xC6E0E2616A7576BB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc70ddce56d0d3a99' func='yes'>
			<Overload retVal='Any' descr='// 0xC70DDCE56D0D3A99
// 0x54E775E0
STATS::_0xC70DDCE56D0D3A99();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc729991a9065376e' func='yes'>
			<Overload retVal='void' descr='// 0xC729991A9065376E
STATS::_0xC729991A9065376E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc847b43f369ac0b5' func='yes'>
			<Overload retVal='void' descr='// 0xC847B43F369AC0B5
STATS::_0xC847B43F369AC0B5();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc980e62e33df1d5c' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC980E62E33DF1D5C
// 0x62C19A3D
STATS::_0xC980E62E33DF1D5C(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcb00196b31c39eb1' func='yes'>
			<Overload retVal='void' descr='// 0xCB00196B31C39EB1
// 0x759E0EC9
STATS::_0xCB00196B31C39EB1(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcc25a4553dfbf9ea' func='yes'>
			<Overload retVal='void' descr='// 0xCC25A4553DFBF9EA
STATS::_0xCC25A4553DFBF9EA(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xce5aa445aba8dee0' func='yes'>
			<Overload retVal='Any' descr='// 0xCE5AA445ABA8DEE0
STATS::_0xCE5AA445ABA8DEE0(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcea553e35c2246e1' func='yes'>
			<Overload retVal='void' descr='// 0xCEA553E35C2246E1
STATS::_0xCEA553E35C2246E1(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd1032e482629049e' func='yes'>
			<Overload retVal='void' descr='// 0xD1032E482629049E
STATS::_0xD1032E482629049E(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd1a1ee3b4fa8e760' func='yes'>
			<Overload retVal='void' descr='// 0xD1A1EE3B4FA8E760
STATS::_0xD1A1EE3B4FA8E760(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd1c9b92bdd3f151d' func='yes'>
			<Overload retVal='void' descr='// 0xD1C9B92BDD3F151D
STATS::_0xD1C9B92BDD3F151D(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd558bec0bba7e8d2' func='yes'>
			<Overload retVal='void' descr='// 0xD558BEC0BBA7E8D2
STATS::_0xD558BEC0BBA7E8D2(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd6781e42755531f7' func='yes'>
			<Overload retVal='void' descr='// 0xD6781E42755531F7
STATS::_0xD6781E42755531F7(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdac073c7901f9e15' func='yes'>
			<Overload retVal='void' descr='// 0xDAC073C7901F9E15
STATS::_0xDAC073C7901F9E15(Any p0);
----------------------------------------------------------------------------------------------------
```

Set profile setting 866  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdaf80797fc534bec' func='yes'>
			<Overload retVal='void' descr='// 0xDAF80797FC534BEC
STATS::_0xDAF80797FC534BEC(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdeaaf77eb3687e97' func='yes'>
			<Overload retVal='Any' descr='// 0xDEAAF77EB3687E97
STATS::_0xDEAAF77EB3687E97(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe3261d791eb44acb' func='yes'>
			<Overload retVal='void' descr='// 0xE3261D791EB44ACB
STATS::_0xE3261D791EB44ACB(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe496a53ba5f50a56' func='yes'>
			<Overload retVal='Any' descr='// 0xE496A53BA5F50A56
// 0xCE6B62B5
STATS::_0xE496A53BA5F50A56(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe8853fbce7d8d0d6' func='yes'>
			<Overload retVal='Any' descr='// 0xE8853FBCE7D8D0D6
STATS::_0xE8853FBCE7D8D0D6();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe95c8a1875a02ca4' func='yes'>
			<Overload retVal='void' descr='// 0xE95C8A1875A02CA4
// 0x79716890
STATS::_0xE95C8A1875A02CA4(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xecb41ac6ab754401' func='yes'>
			<Overload retVal='BOOL' descr='// 0xECB41AC6AB754401
// 0xED7000C8
STATS::_0xECB41AC6AB754401();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xedbf6c9b0d2c65c8' func='yes'>
			<Overload retVal='void' descr='// 0xEDBF6C9B0D2C65C8
STATS::_0xEDBF6C9B0D2C65C8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf06a6f41cb445443' func='yes'>
			<Overload retVal='void' descr='// 0xF06A6F41CB445443
STATS::_0xF06A6F41CB445443(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf11f01d98113536a' func='yes'>
			<Overload retVal='Any' descr='// 0xF11F01D98113536A
STATS::_0xF11F01D98113536A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf1a1803d3476f215' func='yes'>
			<Overload retVal='void' descr='// 0xF1A1803D3476F215
// 0xA3DAC790
STATS::_0xF1A1803D3476F215(int value);
----------------------------------------------------------------------------------------------------
```

Sets profile setting 933  

```'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf1ae5dcdbfca2721' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF1AE5DCDBFCA2721
STATS::_0xF1AE5DCDBFCA2721(Any* p0, Any* p1, Any* p2);
----------------------------------------------------------------------------------------------------
```

LEADERBOARDS2_READ_BY_???  

```'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf434a10ba01c37d0' func='yes'>
			<Overload retVal='void' descr='// 0xF434A10BA01C37D0
// 0xCE7A2411
STATS::_0xF434A10BA01C37D0(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf4d8e7ac2a27758c' func='yes'>
			<Overload retVal='int' descr='// 0xF4D8E7AC2A27758C
// 0xDFC25D66
STATS::_0xF4D8E7AC2A27758C(int p0);
----------------------------------------------------------------------------------------------------
```

Needs more research. Possibly used to calculate the &quot;mask&quot; when calling &quot;STAT_SET_BOOL_MASKED&quot;?  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf4ff020a08bc8863' func='yes'>
			<Overload retVal='void' descr='// 0xF4FF020A08BC8863
STATS::_0xF4FF020A08BC8863(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf534d94dfa2ead26' func='yes'>
			<Overload retVal='void' descr='// 0xF534D94DFA2EAD26
STATS::_0xF534D94DFA2EAD26(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf5bb8dac426a52c0' func='yes'>
			<Overload retVal='void' descr='// 0xF5BB8DAC426A52C0
STATS::_0xF5BB8DAC426A52C0(Any* p0, Any* p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf6792800ac95350d' func='yes'>
			<Overload retVal='void' descr='// 0xF6792800AC95350D
STATS::_0xF6792800AC95350D(Any p0);
----------------------------------------------------------------------------------------------------
```

Set profile setting 501  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf8c54a461c3e11dc' func='yes'>
			<Overload retVal='void' descr='// 0xF8C54A461C3E11DC
// 0x04181752
STATS::_0xF8C54A461C3E11DC(Any* p0, Any* p1, Any* p2, Any* p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf9f2922717b819ec' func='yes'>
			<Overload retVal='Any' descr='// 0xF9F2922717B819EC
STATS::_0xF9F2922717B819EC();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfcc228e07217fcac' func='yes'>
			<Overload retVal='void' descr='// 0xFCC228E07217FCAC
STATS::_0xFCC228E07217FCAC(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsAmbientMissionCrateCreated' func='yes'>
			<Overload retVal='void' descr='// 0xAFC7E5E075A96F46
STATS::_PLAYSTATS_AMBIENT_MISSION_CRATE_CREATED(float p0, float p1, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsAwardXp' func='yes'>
			<Overload retVal='void' descr='// 0x46F917F6B4128FE4
// 0x8770017B
STATS::PLAYSTATS_AWARD_XP(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsCheatApplied' func='yes'>
			<Overload retVal='void' descr='// 0x6058665D72302D3F
// 0x345166F3
STATS::PLAYSTATS_CHEAT_APPLIED(char* cheat);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* cheat' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsClothChange' func='yes'>
			<Overload retVal='void' descr='// 0x34B973047A2268B9
// 0x3AFF9E58
STATS::PLAYSTATS_CLOTH_CHANGE(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsFriendActivity' func='yes'>
			<Overload retVal='void' descr='// 0x0F71DE29AB2258F1
// 0xD1FA1BDB
STATS::PLAYSTATS_FRIEND_ACTIVITY(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsMatchStarted' func='yes'>
			<Overload retVal='void' descr='// 0xBC80E22DED931E3D
// 0x2BDE85C1
STATS::PLAYSTATS_MATCH_STARTED(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsMissionCheckpoint' func='yes'>
			<Overload retVal='void' descr='// 0xC900596A63978C1D
// 0xCDC52280
STATS::PLAYSTATS_MISSION_CHECKPOINT(Any* p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsMissionOver' func='yes'>
			<Overload retVal='void' descr='// 0x7C4BB33A8CED7324
// 0x5B90B5FF
STATS::PLAYSTATS_MISSION_OVER(Any* p0, Any p1, Any p2, BOOL p3, BOOL p4, BOOL p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsMissionStarted' func='yes'>
			<Overload retVal='void' descr='// 0xC19A2925C34D2231
// 0x3AAB699C
STATS::PLAYSTATS_MISSION_STARTED(Any* p0, Any p1, Any p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsNpcInvite' func='yes'>
			<Overload retVal='void' descr='// 0x93054C88E6AA7C44
// 0x598C06F3
STATS::PLAYSTATS_NPC_INVITE(Any* p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsOddjobDone' func='yes'>
			<Overload retVal='void' descr='// 0x69DEA3E9DB727B4C
// 0xFE14A8EA
STATS::PLAYSTATS_ODDJOB_DONE(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsPropChange' func='yes'>
			<Overload retVal='void' descr='// 0xBA739D6D5A05D6E7
// 0x25740A1D
STATS::PLAYSTATS_PROP_CHANGE(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsRaceCheckpoint' func='yes'>
			<Overload retVal='void' descr='// 0x9C375C315099DDE4
// 0x580D5508
STATS::PLAYSTATS_RACE_CHECKPOINT(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsRankUp' func='yes'>
			<Overload retVal='void' descr='// 0xC7F2DE41D102BFB4
// 0x56AFB9F5
STATS::PLAYSTATS_RANK_UP(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsShopItem' func='yes'>
			<Overload retVal='void' descr='// 0x176852ACAAC173D1
// 0xA4746384
STATS::PLAYSTATS_SHOP_ITEM(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='PlaystatsWebsiteVisited' func='yes'>
			<Overload retVal='void' descr='// 0xDDF24D535060F811
// 0x37D152BB
STATS::PLAYSTATS_WEBSITE_VISITED(Hash scaleformHash, int p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash scaleformHash' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatClearSlotForReload' func='yes'>
			<Overload retVal='Any' descr='// 0xEB0A72181D4AA4AD
// 0x84BDD475
STATS::STAT_CLEAR_SLOT_FOR_RELOAD(int statSlot);
----------------------------------------------------------------------------------------------------
```

Please change to &quot;void&quot;!  

---------------------------------  

Example:  

for (v_2 = 0; v_2 &lt;= 4; v_2 += 1) {  

    STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);  

}  

```'>
				<Param name='int statSlot' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatDeleteSlot' func='yes'>
			<Overload retVal='Any' descr='// 0x49A49BED12794D70
// 0x2F171B94
STATS::STAT_DELETE_SLOT(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetBool' func='yes'>
			<Overload retVal='BOOL' descr='// 0x11B5E6D2AE73F48E
// 0x28A3DD2B
STATS::STAT_GET_BOOL(Hash statHash, BOOL* outValue, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statHash' />
				<Param name='BOOL* outValue' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetBoolMasked' func='yes'>
			<Overload retVal='BOOL' descr='// 0x10FE3F1B79F9B071
// 0x6ACE1B7D
STATS::STAT_GET_BOOL_MASKED(Hash statName, int mask, int p2);
----------------------------------------------------------------------------------------------------
```

p2 - Default value? Seems to be -1 most of the time.  

```'>
				<Param name='Hash statName' />
				<Param name='int mask' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetDate' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8B0FACEFC36C824B
// 0xD762D16C
STATS::STAT_GET_DATE(Hash statHash, Any* p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statHash' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetFloat' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD7AE6C9C9C6AC54C
// 0xFCBDA612
STATS::STAT_GET_FLOAT(Hash statHash, float* outValue, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statHash' />
				<Param name='float* outValue' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetInt' func='yes'>
			<Overload retVal='BOOL' descr='// 0x767FBC2AC802EF3D
// 0x1C6FE43E
STATS::STAT_GET_INT(Hash statHash, int* outValue, int p2);
----------------------------------------------------------------------------------------------------
```

p2 appears to always be -1  

```'>
				<Param name='Hash statHash' />
				<Param name='int* outValue' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetLicensePlate' func='yes'>
			<Overload retVal='char*' descr='// 0x5473D4195058B2E4
// 0x1544B29F
STATS::STAT_GET_LICENSE_PLATE(Hash statName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetMaskedInt' func='yes'>
			<Overload retVal='BOOL' descr='// 0x655185A06D9EEAAB
// 0xE9D9B70F
STATS::STAT_GET_MASKED_INT(Any p0, Any* p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetNumberOfDays' func='yes'>
			<Overload retVal='int' descr='// 0xE0E854F5280FB769
// 0xFD66A429
STATS::STAT_GET_NUMBER_OF_DAYS(Hash statName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetNumberOfHours' func='yes'>
			<Overload retVal='int' descr='// 0xF2D4B2FE415AAFC3
// 0x9B431236
STATS::STAT_GET_NUMBER_OF_HOURS(Hash statName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetNumberOfMinutes' func='yes'>
			<Overload retVal='int' descr='// 0x7583B4BE4C5A41B5
// 0x347B4436
STATS::STAT_GET_NUMBER_OF_MINUTES(Hash statName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetNumberOfSeconds' func='yes'>
			<Overload retVal='int' descr='// 0x2CE056FF3723F00B
// 0x2C1D6C31
STATS::STAT_GET_NUMBER_OF_SECONDS(Hash statName);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetPos' func='yes'>
			<Overload retVal='BOOL' descr='// 0x350F82CCB186AA1B
// 0xC846ECCE
STATS::STAT_GET_POS(Any p0, Any* p1, Any* p2, Any* p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
				<Param name='Any* p2' />
				<Param name='Any* p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetString' func='yes'>
			<Overload retVal='char*' descr='// 0xE50384ACC2C3DB74
// 0x10CE4BDE
STATS::STAT_GET_STRING(Hash statHash, int p1);
----------------------------------------------------------------------------------------------------
```

p1 is always -1 in the script files  

```'>
				<Param name='Hash statHash' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatGetUserId' func='yes'>
			<Overload retVal='char*' descr='// 0x2365C388E393BBE2
// 0xE2E8B6BA
STATS::STAT_GET_USER_ID(Any p0);
----------------------------------------------------------------------------------------------------
```

Needs more research. Seems to return &quot;STAT_UNKNOWN&quot; if no such user id exists.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatIncrement' func='yes'>
			<Overload retVal='void' descr='// 0x9B5A68C6489E9909
// 0xDFC5F71E
STATS::STAT_INCREMENT(Hash statName, float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatLoad' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA651443F437B1CE6
// 0x9E5629F4
STATS::STAT_LOAD(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatLoadPending' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA1750FFAFA181661
// 0x4E9AC983
STATS::STAT_LOAD_PENDING(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSave' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE07BCA305B82D2FD
// 0xE10A7CA4
STATS::STAT_SAVE(int p0, BOOL p1, int p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='BOOL p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSavePending' func='yes'>
			<Overload retVal='Any' descr='// 0x7D3A583856F2C5AC
// 0xC3FD3822
STATS::STAT_SAVE_PENDING();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='StatSavePendingOrRequested' func='yes'>
			<Overload retVal='Any' descr='// 0xBBB6AD006F1BBEA3
// 0xA3407CA3
STATS::STAT_SAVE_PENDING_OR_REQUESTED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetBool' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4B33C4243DE0C432
// 0x55D79DFB
STATS::STAT_SET_BOOL(Hash statName, BOOL value, BOOL save);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
				<Param name='BOOL value' />
				<Param name='BOOL save' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetBoolMasked' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5BC62EC1937B9E5B
// 0x7842C4D6
STATS::STAT_SET_BOOL_MASKED(Hash statName, BOOL value, int mask, BOOL save);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
				<Param name='BOOL value' />
				<Param name='int mask' />
				<Param name='BOOL save' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetCurrentPosixTime' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC2F84B7F9C4D0C61
// 0xA286F015
STATS::STAT_SET_CURRENT_POSIX_TIME(Hash statName, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p1 always true.  

```'>
				<Param name='Hash statName' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetDate' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2C29BFB64F4FCBE4
// 0x36BE807B
STATS::STAT_SET_DATE(Hash statName, Any* value, int numFields, BOOL save);
----------------------------------------------------------------------------------------------------
```

&apos;value&apos; is a structure to a structure, &apos;numFields&apos; is how many fields there are in said structure (u
sually 7).  

The structure looks like this:  

int year  

int month  

int day  

int hour  

int minute  

int second  

int millisecond  

The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.  

```'>
				<Param name='Hash statName' />
				<Param name='Any* value' />
				<Param name='int numFields' />
				<Param name='BOOL save' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetFloat' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4851997F37FE9B3C
// 0x6CEA96F2
STATS::STAT_SET_FLOAT(Hash statName, float value, BOOL save);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
				<Param name='float value' />
				<Param name='BOOL save' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetGxtLabel' func='yes'>
			<Overload retVal='BOOL' descr='// 0x17695002FD8B2AE0
// 0xC1224AA7
STATS::STAT_SET_GXT_LABEL(Hash statName, char* value, BOOL save);
----------------------------------------------------------------------------------------------------
```

The following values have been found in the decompiled scripts:  

&quot;RC_ABI1&quot;  

&quot;RC_ABI2&quot;  

&quot;RC_BA1&quot;  

&quot;RC_BA2&quot;  

&quot;RC_BA3&quot;  

&quot;RC_BA3A&quot;  

&quot;RC_BA3C&quot;  

&quot;RC_BA4&quot;  

&quot;RC_DRE1&quot;  

&quot;RC_EPS1&quot;  

&quot;RC_EPS2&quot;  

&quot;RC_EPS3&quot;  

&quot;RC_EPS4&quot;  

&quot;RC_EPS5&quot;  

&quot;RC_EPS6&quot;  

&quot;RC_EPS7&quot;  

&quot;RC_EPS8&quot;  

&quot;RC_EXT1&quot;  

&quot;RC_EXT2&quot;  

&quot;RC_EXT3&quot;  

&quot;RC_EXT4&quot;  

&quot;RC_FAN1&quot;  

&quot;RC_FAN2&quot;  

&quot;RC_FAN3&quot;  

&quot;RC_HAO1&quot;  

&quot;RC_HUN1&quot;  

&quot;RC_HUN2&quot;  

&quot;RC_JOS1&quot;  

&quot;RC_JOS2&quot;  

&quot;RC_JOS3&quot;  

&quot;RC_JOS4&quot;  

&quot;RC_MAU1&quot;  

&quot;RC_MIN1&quot;  

&quot;RC_MIN2&quot;  

&quot;RC_MIN3&quot;  

&quot;RC_MRS1&quot;  

&quot;RC_MRS2&quot;  

&quot;RC_NI1&quot;  

&quot;RC_NI1A&quot;  

&quot;RC_NI1B&quot;  

&quot;RC_NI1C&quot;  

&quot;RC_NI1D&quot;  

&quot;RC_NI2&quot;  

&quot;RC_NI3&quot;  

&quot;RC_OME1&quot;  

&quot;RC_OME2&quot;  

&quot;RC_PA1&quot;  

&quot;RC_PA2&quot;  

&quot;RC_PA3&quot;  

&quot;RC_PA3A&quot;  

&quot;RC_PA3B&quot;  

&quot;RC_PA4&quot;  

&quot;RC_RAM1&quot;  

&quot;RC_RAM2&quot;  

&quot;RC_RAM3&quot;  

&quot;RC_RAM4&quot;  

&quot;RC_RAM5&quot;  

&quot;RC_SAS1&quot;  

&quot;RC_TON1&quot;  

&quot;RC_TON2&quot;  

&quot;RC_TON3&quot;  

&quot;RC_TON4&quot;  

&quot;RC_TON5&quot;  

```'>
				<Param name='Hash statName' />
				<Param name='char* value' />
				<Param name='BOOL save' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetInt' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB3271D7AB655B441
// 0xC9CC1C5C
STATS::STAT_SET_INT(Hash statName, int value, BOOL save);
----------------------------------------------------------------------------------------------------
```

Add Cash example:  

for (int i = 0; i &lt; 3; i++)  

{  

char statNameFull[32];  

sprintf_s(statNameFull, &quot;SP%d_TOTAL_CASH&quot;, i);  

Hash hash = GAMEPLAY::GET_HASH_KEY(statNameFull);  

int val;  

STATS::STAT_GET_INT(hash, &val, -1);  

val += 1000000;  

STATS::STAT_SET_INT(hash, val, 1);  

}  

```'>
				<Param name='Hash statName' />
				<Param name='int value' />
				<Param name='BOOL save' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetLicensePlate' func='yes'>
			<Overload retVal='BOOL' descr='// 0x69FF13266D7296DA
// 0x3507D253
STATS::STAT_SET_LICENSE_PLATE(Hash statName, char* str);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
				<Param name='char* str' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetMaskedInt' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7BBB1B54583ED410
// 0x2CBAA739
STATS::STAT_SET_MASKED_INT(Hash statName, Any p1, Any p2, int p3, BOOL save);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='int p3' />
				<Param name='BOOL save' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetPos' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDB283FDE680FE72E
// 0x1192C9A3
STATS::STAT_SET_POS(Hash statName, float x, float y, float z, BOOL save);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL save' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetProfileSetting' func='yes'>
			<Overload retVal='void' descr='// 0x68F01422BE1D838F
// 0x24DD4929
STATS::_STAT_SET_PROFILE_SETTING(int profileSetting, int value);
----------------------------------------------------------------------------------------------------
```

Does not take effect immediately, unfortunately.  

profileSetting seems to only be 936, 937 and 938 in scripts  

gtaforums.com/topic/799843-stats-profile-settings/  

```'>
				<Param name='int profileSetting' />
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetString' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA87B2335D12531D7
// 0xB1EF2E21
STATS::STAT_SET_STRING(Hash statName, char* value, BOOL save);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
				<Param name='char* value' />
				<Param name='BOOL save' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSetUserId' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8CDDF1E452BABE11
// 0xDBE78ED7
STATS::STAT_SET_USER_ID(Hash statName, char* value, BOOL save);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash statName' />
				<Param name='char* value' />
				<Param name='BOOL save' />
			</Overload>
		</KeyWord>
		<KeyWord name='StatSlotIsLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0D0A9F0E7BD91E3C
// 0x7A299C13
STATS::STAT_SLOT_IS_LOADED(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='BeginSrl' func='yes'>
			<Overload retVal='void' descr='// 0x9BADDC94EF83B823
// 0x24F49427
STREAMING::BEGIN_SRL();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearFocus' func='yes'>
			<Overload retVal='void' descr='// 0x31B73D1EA9F01DA2
// 0x34D91E7A
STREAMING::CLEAR_FOCUS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='ClearHdArea' func='yes'>
			<Overload retVal='void' descr='// 0xCE58B1CFB9290813
// 0x7CAC6FA0
STREAMING::CLEAR_HD_AREA();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='DestroyPlayerInPauseMenu' func='yes'>
			<Overload retVal='Any' descr='// 0x5B74EA8CFD5E3E7E
// 0x90F64284
STREAMING::DESTROY_PLAYER_IN_PAUSE_MENU();
----------------------------------------------------------------------------------------------------
```

Hash collision  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='DoesAnimDictExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2DA49C3B79856961
// 0xCD31C872
STREAMING::DOES_ANIM_DICT_EXIST(char* animDict);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* animDict' />
			</Overload>
		</KeyWord>
		<KeyWord name='EndSrl' func='yes'>
			<Overload retVal='void' descr='// 0x0A41540E63C9EE17
// 0x1977C56A
STREAMING::END_SRL();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='FormatFocusHeading' func='yes'>
			<Overload retVal='Any' descr='// 0x219C7B8D53E429FD
// 0x10B6AB36
STREAMING::FORMAT_FOCUS_HEADING(float x, float y, float z, float rad, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float rad' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetIdealPlayerSwitchType' func='yes'>
			<Overload retVal='int' descr='// 0xB5D7B26B45720E05
// 0xD5A450F1
STREAMING::GET_IDEAL_PLAYER_SWITCH_TYPE(float x1, float y1, float z1, float x2, float y2, float z2);
----------------------------------------------------------------------------------------------------
```

x1, y1, z1 -- Coords of your ped model  

x2, y2, z2 -- Coords of the ped you want to switch to  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfStreamingRequests' func='yes'>
			<Overload retVal='int' descr='// 0x4060057271CEBC89
// 0xC2EE9A02
STREAMING::GET_NUMBER_OF_STREAMING_REQUESTS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerShortSwitchState' func='yes'>
			<Overload retVal='int' descr='// 0x20F898A5D9782800
// 0x9B7BA38F
STREAMING::GET_PLAYER_SHORT_SWITCH_STATE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerSwitchState' func='yes'>
			<Overload retVal='int' descr='// 0x470555300D10B2A5
// 0x39A0E1F2
STREAMING::GET_PLAYER_SWITCH_STATE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPlayerSwitchType' func='yes'>
			<Overload retVal='int' descr='// 0xB3C94A90D9FC9E62
// 0x280DC015
STREAMING::GET_PLAYER_SWITCH_TYPE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='HasAnimDictLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD031A9162D01088C
// 0x05E6763C
STREAMING::HAS_ANIM_DICT_LOADED(char* animDict);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* animDict' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasAnimSetLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC4EA073D86FB29B0
// 0x4FFF397D
STREAMING::HAS_ANIM_SET_LOADED(char* animSet);
----------------------------------------------------------------------------------------------------
```

Gets whether the specified animation set has finished loading. An animation set provides movement an
imations for a ped. See SET_PED_MOVEMENT_CLIPSET.  

Animation set and clip set are synonymous.  

```'>
				<Param name='char* animSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasClipSetLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x318234F4F3738AF3
// 0x230D5455
STREAMING::HAS_CLIP_SET_LOADED(char* clipSet);
----------------------------------------------------------------------------------------------------
```

Alias for HAS_ANIM_SET_LOADED.  

```'>
				<Param name='char* clipSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasCollisionForModelLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x22CCA434E368F03A
// 0x41A094F8
STREAMING::HAS_COLLISION_FOR_MODEL_LOADED(Hash model);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasModelLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x98A4EB5D89A0C952
// 0x62BFDB37
STREAMING::HAS_MODEL_LOADED(Hash model);
----------------------------------------------------------------------------------------------------
```

Checks if the specified model has loaded into memory.  

```'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasNamedPtfxAssetLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8702416E512EC454
// 0x9ACC6446
STREAMING::HAS_NAMED_PTFX_ASSET_LOADED(char* assetName);
----------------------------------------------------------------------------------------------------
```

assetName = For example &quot;core&quot;  

```'>
				<Param name='char* assetName' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPtfxAssetLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCA7D9B86ECA7481B
// 0x3EFF96BE
STREAMING::HAS_PTFX_ASSET_LOADED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsEntityFocus' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2DDFF3FB9075D747
// 0xB456D707
STREAMING::IS_ENTITY_FOCUS(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsIplActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x88A741E44A2B3495
// 0xB2C33714
STREAMING::IS_IPL_ACTIVE(char* iplName);
----------------------------------------------------------------------------------------------------
```

List of all IPLs: pastebin.com/iNGLY32D  

```'>
				<Param name='char* iplName' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsModelAPed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x75816577FEA6DAD5
STREAMING::_IS_MODEL_A_PED(Hash modelHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsModelAVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x19AAC8F07BFEC53E
// 0xFFFC85D4
STREAMING::IS_MODEL_A_VEHICLE(Hash model);
----------------------------------------------------------------------------------------------------
```

Returns whether the specified model represents a vehicle.  

```'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsModelInCdimage' func='yes'>
			<Overload retVal='BOOL' descr='// 0x35B9E0803292B641
// 0x1094782F
STREAMING::IS_MODEL_IN_CDIMAGE(Hash model);
----------------------------------------------------------------------------------------------------
```

Check if model is in cdimage(rpf)  

```'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsModelValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC0296A2EDF545E92
// 0xAF8F8E9D
STREAMING::IS_MODEL_VALID(Hash model);
----------------------------------------------------------------------------------------------------
```

Returns whether the specified model exists in the game.  

```'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsNetworkLoadingScene' func='yes'>
			<Overload retVal='BOOL' descr='// 0x41CA5A33160EA4AB
// 0x6DCFC021
STREAMING::IS_NETWORK_LOADING_SCENE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsNewLoadSceneActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA41A05B6CB741B85
// 0xAD234B7F
STREAMING::IS_NEW_LOAD_SCENE_ACTIVE();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsNewLoadSceneLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x01B8247A7A8B9AD1
// 0x3ECD839F
STREAMING::IS_NEW_LOAD_SCENE_LOADED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlayerSwitchInProgress' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD9D2CFFF49FAB35F
// 0x56135ACC
STREAMING::IS_PLAYER_SWITCH_IN_PROGRESS();
----------------------------------------------------------------------------------------------------
```

Returns true if the player is currently switching, false otherwise.  

(When the camera is in the sky moving from Trevor to Franklin for example)  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsSrlLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD0263801A4C5B0BB
// 0x670FA2A6
STREAMING::IS_SRL_LOADED();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='LoadAllObjectsNow' func='yes'>
			<Overload retVal='void' descr='// 0xBD6E84632DD4CB3F
// 0xC9DBDA90
STREAMING::LOAD_ALL_OBJECTS_NOW();
----------------------------------------------------------------------------------------------------
```

1  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='LoadMissionCreatorData' func='yes'>
			<Overload retVal='void' descr='// 0xB5A4DB34FE89B88A
// 0xE243B2AF
STREAMING::_LOAD_MISSION_CREATOR_DATA();
----------------------------------------------------------------------------------------------------
```

Loads &quot;common:/data/missioncreatordata&quot; data and sets some values.  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='LoadScene' func='yes'>
			<Overload retVal='void' descr='// 0x4448EB75B4904BDB
// 0xB72403F5
STREAMING::LOAD_SCENE(float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkStopLoadScene' func='yes'>
			<Overload retVal='void' descr='// 0x64E630FAF5F60F44
// 0x24857907
STREAMING::NETWORK_STOP_LOAD_SCENE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NetworkUpdateLoadScene' func='yes'>
			<Overload retVal='void' descr='// 0xC4582015556D1C46
// 0xC76E023C
STREAMING::NETWORK_UPDATE_LOAD_SCENE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='NewLoadSceneStart' func='yes'>
			<Overload retVal='BOOL' descr='// 0x212A8D0D2BABFAC2
// 0xDF9C38B6
STREAMING::NEW_LOAD_SCENE_START(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any 
----------------------------------------------------------------------------------------------------
```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
				<Param name='Any ' />
			</Overload>
		</KeyWord>
		<KeyWord name='NewLoadSceneStartSphere' func='yes'>
			<Overload retVal='BOOL' descr='// 0xACCFB4ACF53551B0
// 0xFA037FEB
STREAMING::NEW_LOAD_SCENE_START_SPHERE(float x, float y, float z, float radius, Any p4);
----------------------------------------------------------------------------------------------------
```

if (!sub_8f12(&quot;START LOAD SCENE SAFE&quot;)) {  

if (CUTSCENE::GET_CUTSCENE_TIME() &gt; 4178) {  

    STREAMING::_ACCFB4ACF53551B0(1973.845458984375, 3818.447265625, 32.43629837036133, 15.0, 2);  

    sub_8e9e(&quot;START LOAD SCENE SAFE&quot;, 1);  

}  

		}  

		(Previously known as STREAMING::_NEW_LOAD_SCENE_START_SAFE)  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='NewLoadSceneStop' func='yes'>
			<Overload retVal='void' descr='// 0xC197616D221FF4A4
// 0x7C05B1F6
STREAMING::NEW_LOAD_SCENE_STOP();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x03f1a106bda7dd3e' func='yes'>
			<Overload retVal='void' descr='// 0x03F1A106BDA7DD3E
STREAMING::_0x03F1A106BDA7DD3E();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x07c313f94746702c' func='yes'>
			<Overload retVal='Any' descr='// 0x07C313F94746702C
// 0x42CFE9C0
STREAMING::_0x07C313F94746702C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0811381ef5062fec' func='yes'>
			<Overload retVal='void' descr='// 0x0811381EF5062FEC
STREAMING::_0x0811381EF5062FEC(Entity p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0ad9710cee2f590f' func='yes'>
			<Overload retVal='Any' descr='// 0x0AD9710CEE2F590F
// 0xC0157255
STREAMING::_0x0AD9710CEE2F590F(float p0, float p1, float p2, float p3, float p4, float p5, Any p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0bc3144deb678666' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0BC3144DEB678666
// 0xC0E83320
STREAMING::_0x0BC3144DEB678666(Hash modelHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0c15b0e443b2349d' func='yes'>
			<Overload retVal='Any' descr='// 0x0C15B0E443B2349D
// 0x7154B6FD
STREAMING::_0x0C15B0E443B2349D();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0fde9dbfc0a6bc65' func='yes'>
			<Overload retVal='void' descr='// 0x0FDE9DBFC0A6BC65
// 0x279077B0
STREAMING::_0x0FDE9DBFC0A6BC65(Any* p0);
----------------------------------------------------------------------------------------------------
```

SET_PLAYERS_*  

```'>
				<Param name='Any* p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1e9057a74fd73e23' func='yes'>
			<Overload retVal='void' descr='// 0x1E9057A74FD73E23
STREAMING::_0x1E9057A74FD73E23();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1ee7d8df4425f053' func='yes'>
			<Overload retVal='void' descr='// 0x1EE7D8DF4425F053
// 0xE80F8ABE
STREAMING::_0x1EE7D8DF4425F053(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1f3f018bc3afa77c' func='yes'>
			<Overload retVal='Any' descr='// 0x1F3F018BC3AFA77C
// 0x72344191
STREAMING::_0x1F3F018BC3AFA77C(float p0, float p1, float p2, float p3, float p4, float p5, float p6, Any p7
----------------------------------------------------------------------------------------------------
y p8);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
				<Param name='Any p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x20c6c7e4eb082a7f' func='yes'>
			<Overload retVal='void' descr='// 0x20C6C7E4EB082A7F
// 0xA6459CAA
STREAMING::_0x20C6C7E4EB082A7F(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3d3d8b3be5a83d35' func='yes'>
			<Overload retVal='Any' descr='// 0x3D3D8B3BE5A83D35
// 0x3E9C4CBE
STREAMING::_0x3D3D8B3BE5A83D35();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x40aefd1a244741f2' func='yes'>
			<Overload retVal='void' descr='// 0x40AEFD1A244741F2
// 0x9FA4AF99
STREAMING::_0x40AEFD1A244741F2(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x43d1680c6d19a8e9' func='yes'>
			<Overload retVal='void' descr='// 0x43D1680C6D19A8E9
// 0x55CB21F9
STREAMING::_0x43D1680C6D19A8E9();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x472397322e92a856' func='yes'>
			<Overload retVal='void' descr='// 0x472397322E92A856
// 0x4267DA87
STREAMING::_0x472397322E92A856();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4e52e752c76e7e7a' func='yes'>
			<Overload retVal='void' descr='// 0x4E52E752C76E7E7A
// 0xA07BAEB9
STREAMING::_0x4E52E752C76E7E7A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5068f488ddb54dd8' func='yes'>
			<Overload retVal='Any' descr='// 0x5068F488DDB54DD8
// 0xDAB4BAC0
STREAMING::_0x5068F488DDB54DD8();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5b48a06dd0e792a5' func='yes'>
			<Overload retVal='Any' descr='// 0x5B48A06DD0E792A5
// 0xC7A3D279
STREAMING::_0x5B48A06DD0E792A5();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5f2013f8bc24ee69' func='yes'>
			<Overload retVal='void' descr='// 0x5F2013F8BC24EE69
// 0xF0BD420D
STREAMING::_0x5F2013F8BC24EE69(int p0);
----------------------------------------------------------------------------------------------------
```

SET_PLAYERS_*  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x63eb2b972a218cac' func='yes'>
			<Overload retVal='void' descr='// 0x63EB2B972A218CAC
// 0xF2CDD6A8
STREAMING::_0x63EB2B972A218CAC();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x71e7b2e657449aad' func='yes'>
			<Overload retVal='Any' descr='// 0x71E7B2E657449AAD
// 0xEAA51103
STREAMING::_0x71E7B2E657449AAD();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x74de2e8739086740' func='yes'>
			<Overload retVal='void' descr='// 0x74DE2E8739086740
// 0x1084F2F4
STREAMING::_0x74DE2E8739086740();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x78c0d93253149435' func='yes'>
			<Overload retVal='Any' descr='// 0x78C0D93253149435
// 0x02BA7AC2
STREAMING::_0x78C0D93253149435();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7d41e9d2d17c5b2d' func='yes'>
			<Overload retVal='Any' descr='// 0x7D41E9D2D17C5B2D
// 0x1B3521F4
STREAMING::_0x7D41E9D2D17C5B2D(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8e2a065abdae6994' func='yes'>
			<Overload retVal='void' descr='// 0x8E2A065ABDAE6994
// 0x5B1E995D
STREAMING::_0x8E2A065ABDAE6994();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x933bbeeb8c61b5f4' func='yes'>
			<Overload retVal='Any' descr='// 0x933BBEEB8C61B5F4
// 0x74C16879
STREAMING::_0x933BBEEB8C61B5F4();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x95a7dabddbb78ae7' func='yes'>
			<Overload retVal='void' descr='// 0x95A7DABDDBB78AE7
// 0x9EF0A9CF
STREAMING::_0x95A7DABDDBB78AE7(Any* p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa76359fc80b2438e' func='yes'>
			<Overload retVal='void' descr='// 0xA76359FC80B2438E
// 0xE5612C1A
STREAMING::_0xA76359FC80B2438E(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xad5fdf34b81bfe79' func='yes'>
			<Overload retVal='void' descr='// 0xAD5FDF34B81BFE79
// 0x4B4B9A13
STREAMING::_0xAD5FDF34B81BFE79();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaf12610c644a35c9' func='yes'>
			<Overload retVal='void' descr='// 0xAF12610C644A35C9
// 0x403CD434
STREAMING::_0xAF12610C644A35C9(char* p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Possible p0 values:  

&quot;prologue&quot;  

&quot;Prologue_Main&quot;  

```'>
				<Param name='char* p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbc9823ab80a3dcac' func='yes'>
			<Overload retVal='Any' descr='// 0xBC9823AB80A3DCAC
// 0x56253356
STREAMING::_0xBC9823AB80A3DCAC();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbd605b8e0e18b3bb' func='yes'>
			<Overload retVal='void' descr='// 0xBD605B8E0E18B3BB
STREAMING::_0xBD605B8E0E18B3BB();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbeb2d9a1d9a8f55a' func='yes'>
			<Overload retVal='void' descr='// 0xBEB2D9A1D9A8F55A
// 0x62F02485
STREAMING::_0xBEB2D9A1D9A8F55A(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbed8ca5ff5e04113' func='yes'>
			<Overload retVal='void' descr='// 0xBED8CA5FF5E04113
// 0x9CD6A451
STREAMING::_0xBED8CA5FF5E04113(float p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd4793dff3af2abcd' func='yes'>
			<Overload retVal='void' descr='// 0xD4793DFF3AF2ABCD
STREAMING::_0xD4793DFF3AF2ABCD();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdfa80cb25d0a19b3' func='yes'>
			<Overload retVal='Any' descr='// 0xDFA80CB25D0A19B3
// 0x408F7148
STREAMING::_0xDFA80CB25D0A19B3();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xef39ee20c537e98c' func='yes'>
			<Overload retVal='void' descr='// 0xEF39EE20C537E98C
// 0x814D0752
STREAMING::_0xEF39EE20C537E98C(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf086ad9354fac3a3' func='yes'>
			<Overload retVal='void' descr='// 0xF086AD9354FAC3A3
// 0x1C576388
STREAMING::_0xF086AD9354FAC3A3(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf4a0dadb70f57fa6' func='yes'>
			<Overload retVal='void' descr='// 0xF4A0DADB70F57FA6
// 0x3DA7AA5D
STREAMING::_0xF4A0DADB70F57FA6();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf8155a7f03ddfc8e' func='yes'>
			<Overload retVal='void' descr='// 0xF8155A7F03DDFC8E
// 0xF8F515E4
STREAMING::_0xF8155A7F03DDFC8E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfb199266061f820a' func='yes'>
			<Overload retVal='Any' descr='// 0xFB199266061F820A
// 0x17B0A1CD
STREAMING::_0xFB199266061F820A();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='PrefetchSrl' func='yes'>
			<Overload retVal='void' descr='// 0x3D245789CE12982C
// 0x37BE2FBB
STREAMING::PREFETCH_SRL(char* srl);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* srl' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveAnimDict' func='yes'>
			<Overload retVal='void' descr='// 0xF66A602F829E2A06
// 0x0AE050B5
STREAMING::REMOVE_ANIM_DICT(char* animDict);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* animDict' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveAnimSet' func='yes'>
			<Overload retVal='void' descr='// 0x16350528F93024B3
// 0xD04A817A
STREAMING::REMOVE_ANIM_SET(char* animSet);
----------------------------------------------------------------------------------------------------
```

Unloads the specified animation set. An animation set provides movement animations for a ped. See SE
T_PED_MOVEMENT_CLIPSET.  

Animation set and clip set are synonymous.  

```'>
				<Param name='char* animSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveClipSet' func='yes'>
			<Overload retVal='void' descr='// 0x01F73A131C18CD94
// 0x1E21F7AA
STREAMING::REMOVE_CLIP_SET(char* clipSet);
----------------------------------------------------------------------------------------------------
```

Alias for REMOVE_ANIM_SET.  

```'>
				<Param name='char* clipSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveIpl' func='yes'>
			<Overload retVal='void' descr='// 0xEE6C5AD3ECE0A82D
// 0xDF7CBD36
STREAMING::REMOVE_IPL(char* iplName);
----------------------------------------------------------------------------------------------------
```

IPL list: pastebin.com/iNGLY32D  

```'>
				<Param name='char* iplName' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveNamedPtfxAsset' func='yes'>
			<Overload retVal='void' descr='// 0x5F61EBBE1A00F96D
STREAMING::_REMOVE_NAMED_PTFX_ASSET(char* assetName);
----------------------------------------------------------------------------------------------------
```

assetName = For example &quot;core&quot;  

console hash: 0xC44762A1  

```'>
				<Param name='char* assetName' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemovePtfxAsset' func='yes'>
			<Overload retVal='void' descr='// 0x88C6814073DD4A73
// 0xC10F178C
STREAMING::REMOVE_PTFX_ASSET();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='RequestAdditionalCollisionAtCoord' func='yes'>
			<Overload retVal='void' descr='// 0xC9156DC11411A9EA
// 0xC2CC1DF2
STREAMING::REQUEST_ADDITIONAL_COLLISION_AT_COORD(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

MulleDK19: Alias of REQUEST_COLLISION_AT_COORD.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestAnimDict' func='yes'>
			<Overload retVal='void' descr='// 0xD3BD40951412FEF6
// 0xDCA96950
STREAMING::REQUEST_ANIM_DICT(char* animDict);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* animDict' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestAnimSet' func='yes'>
			<Overload retVal='void' descr='// 0x6EA47DAE7FAD0EED
// 0x2988B3FC
STREAMING::REQUEST_ANIM_SET(char* animSet);
----------------------------------------------------------------------------------------------------
```

Starts loading the specified animation set. An animation set provides movement animations for a ped.
 See SET_PED_MOVEMENT_CLIPSET.  

```'>
				<Param name='char* animSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestClipSet' func='yes'>
			<Overload retVal='void' descr='// 0xD2A71E1A77418A49
// 0x546C627A
STREAMING::REQUEST_CLIP_SET(char* clipSet);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* clipSet' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestCollisionAtCoord' func='yes'>
			<Overload retVal='Any' descr='// 0x07503F7948F491A7
// 0xCD9805E7
STREAMING::REQUEST_COLLISION_AT_COORD(float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestCollisionForModel' func='yes'>
			<Overload retVal='void' descr='// 0x923CB32A3B874FCB
// 0x3930C042
STREAMING::REQUEST_COLLISION_FOR_MODEL(Hash model);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestInteriorRoomByName' func='yes'>
			<Overload retVal='void' descr='// 0x8A7A40100EDFEC58
// 0x939243FB
STREAMING::_REQUEST_INTERIOR_ROOM_BY_NAME(int interiorID, char* roomName);
----------------------------------------------------------------------------------------------------
```

REQUEST_*  

Something to do with interiors that have been loaded.  

STREAMING::_8A7A40100EDFEC58(l_13BC, &quot;V_FIB01_cur_elev&quot;);  

STREAMING::_8A7A40100EDFEC58(l_13BC, &quot;limbo&quot;);  

STREAMING::_8A7A40100EDFEC58(l_13BB, &quot;V_Office_gnd_lifts&quot;);  

STREAMING::_8A7A40100EDFEC58(l_13BB, &quot;limbo&quot;);  

STREAMING::_8A7A40100EDFEC58(l_13BC, &quot;v_fib01_jan_elev&quot;);  

STREAMING::_8A7A40100EDFEC58(l_13BC, &quot;limbo&quot;);  

```'>
				<Param name='int interiorID' />
				<Param name='char* roomName' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestIpl' func='yes'>
			<Overload retVal='void' descr='// 0x41B4893843BBDB74
// 0x3B70D1DB
STREAMING::REQUEST_IPL(char* iplName);
----------------------------------------------------------------------------------------------------
```

IPL list: pastebin.com/iNGLY32D  

```'>
				<Param name='char* iplName' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestMenuPedModel' func='yes'>
			<Overload retVal='void' descr='// 0xA0261AEF7ACFC51E
// 0x48CEB6B4
STREAMING::REQUEST_MENU_PED_MODEL(Hash model);
----------------------------------------------------------------------------------------------------
```

streaming::request_menu_ped_model(joaat(&quot;player_zero&quot;));  

iVar0 = ped::create_ped(25, joaat(&quot;player_zero&quot;), cam::_get_gameplay_cam_coords(), 0f, 0, false);  


entity::freeze_entity_position(iVar0, true);  

ped::_0x4668d80430d6c299(iVar0);  

ui::give_ped_to_pause_menu(iVar0, 1);  

```'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestModel' func='yes'>
			<Overload retVal='void' descr='// 0x963D27A58DF860AC
// 0xFFF1B500
STREAMING::REQUEST_MODEL(Hash model);
----------------------------------------------------------------------------------------------------
```

Request a model to be loaded into memory  

Looking it the disassembly, it seems like it actually returns the model if it&apos;s already loaded.  

```'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestNamedPtfxAsset' func='yes'>
			<Overload retVal='void' descr='// 0xB80D8756B4668AB6
// 0xCFEA19A9
STREAMING::REQUEST_NAMED_PTFX_ASSET(char* assetName);
----------------------------------------------------------------------------------------------------
```

assetName = For example &quot;core&quot;   

From the b678d decompiled scripts:  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;core_snow&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;fm_mission_controler&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;proj_xmas_firework&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;scr_apartment_mp&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;scr_biolab_heist&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;scr_indep_fireworks&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;scr_indep_parachute&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;scr_indep_wheelsmoke&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;scr_mp_cig_plane&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;scr_mp_creator&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;scr_mp_tankbattle&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;scr_ornate_heist&quot;);  

 STREAMING::REQUEST_NAMED_PTFX_ASSET(&quot;scr_prison_break_heist_station&quot;);  

```'>
				<Param name='char* assetName' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestPtfxAsset' func='yes'>
			<Overload retVal='Any' descr='// 0x944955FB2A3935C8
// 0x2C649263
STREAMING::REQUEST_PTFX_ASSET();
----------------------------------------------------------------------------------------------------
```

maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetDitchPoliceModels' func='yes'>
			<Overload retVal='void' descr='// 0x42CBE54462D92634
// 0x3EA7FCE4
STREAMING::SET_DITCH_POLICE_MODELS(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

This is a NOP function. It does nothing at all.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFocusArea' func='yes'>
			<Overload retVal='void' descr='// 0xBB7454BAFF08FE25
// 0x14680A60
STREAMING::_SET_FOCUS_AREA(float x, float y, float z, float offsetX, float offsetY, float offsetZ);
----------------------------------------------------------------------------------------------------
```

Override the area where the camera will render the terrain.  

p3, p4 and p5 are usually set to 0.0  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float offsetX' />
				<Param name='float offsetY' />
				<Param name='float offsetZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFocusEntity' func='yes'>
			<Overload retVal='void' descr='// 0x198F77705FA0931D
// 0x18DB04AC
STREAMING::SET_FOCUS_ENTITY(Entity entity);
----------------------------------------------------------------------------------------------------
```

It seems to make the entity&apos;s coords mark the point from which LOD-distances are measured. In my tes
ting, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units awa
y from the player will make the level of detail around the player go down drastically (shadows disap
pear, textures go extremely low res, etc). The player seems to be the default focus entity.  

```'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGamePausesForStreaming' func='yes'>
			<Overload retVal='void' descr='// 0x717CD6E6FAEBBEDC
// 0x9211A28A
STREAMING::SET_GAME_PAUSES_FOR_STREAMING(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHdArea' func='yes'>
			<Overload retVal='void' descr='// 0xB85F26619073E775
// 0x80BAA035
STREAMING::SET_HD_AREA(float x, float y, float z, float radius);
----------------------------------------------------------------------------------------------------
```

Harcoded limit for radius is 30.0f  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetInteriorActive' func='yes'>
			<Overload retVal='void' descr='// 0xE37B76C387BE28ED
// 0xE1013910
STREAMING::SET_INTERIOR_ACTIVE(int interiorID, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int interiorID' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetModelAsNoLongerNeeded' func='yes'>
			<Overload retVal='void' descr='// 0xE532F5D78798DAAB
// 0xAE0F069E
STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(Hash model);
----------------------------------------------------------------------------------------------------
```

Unloads model from memory  

```'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedPopulationBudget' func='yes'>
			<Overload retVal='void' descr='// 0x8C95333CFC3340F3
// 0xD2D026CD
STREAMING::SET_PED_POPULATION_BUDGET(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerInvertedUp' func='yes'>
			<Overload retVal='int' descr='// 0x08C2D6C52A3104BB
// 0x569847E3
STREAMING::SET_PLAYER_INVERTED_UP();
----------------------------------------------------------------------------------------------------
```

Hash collision  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayerSwitchOutro' func='yes'>
			<Overload retVal='void' descr='// 0xC208B673CE446B61
// 0x47352E14
STREAMING::SET_PLAYER_SWITCH_OUTRO(float p0, float p1, float p2, float p3, float p4, float p5, float p6, f
----------------------------------------------------------------------------------------------------
p7, Any p8);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetReducePedModelBudget' func='yes'>
			<Overload retVal='void' descr='// 0x77B5F9A36BF96710
// 0xAFCB2B86
STREAMING::SET_REDUCE_PED_MODEL_BUDGET(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetReduceVehicleModelBudget' func='yes'>
			<Overload retVal='void' descr='// 0x80C527893080CCF3
// 0xCDB4FB7E
STREAMING::SET_REDUCE_VEHICLE_MODEL_BUDGET(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSrlTime' func='yes'>
			<Overload retVal='void' descr='// 0xA74A541C6884E7B8
// 0x30F8A487
STREAMING::SET_SRL_TIME(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetStreaming' func='yes'>
			<Overload retVal='void' descr='// 0x6E0C692677008888
// 0x27EF6CB2
STREAMING::SET_STREAMING(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehiclePopulationBudget' func='yes'>
			<Overload retVal='void' descr='// 0xCB9E1EB3BE2AF4E9
// 0x1D56993C
STREAMING::SET_VEHICLE_POPULATION_BUDGET(int p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShutdownCreatorBudget' func='yes'>
			<Overload retVal='void' descr='// 0xCCE26000E9A6FAD7
// 0x897A510F
STREAMING::SHUTDOWN_CREATOR_BUDGET();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='StartPlayerSwitch' func='yes'>
			<Overload retVal='void' descr='// 0xFAA23F2CBA159D67
// 0x0829E975
STREAMING::START_PLAYER_SWITCH(Ped from, Ped to, int flags, int switchType);
----------------------------------------------------------------------------------------------------
```

// this enum comes directly from R* so don&apos;t edit this  

enum ePlayerSwitchType  

{  

	SWITCH_TYPE_AUTO,  

	SWITCH_TYPE_LONG,  

	SWITCH_TYPE_MEDIUM,  

	SWITCH_TYPE_SHORT  

};  

Use GET_IDEAL_PLAYER_SWITCH_TYPE for the best switch type. Or just auto, because it calls the same f
unction in executable.  

----------------------------------------------------  

Examples from the decompiled scripts:  

STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 0, 3);  

STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 2050, 3);  

STREAMING::START_PLAYER_SWITCH(PLAYER::PLAYER_PED_ID(), l_832._f3, 1024, 3);  

STREAMING::START_PLAYER_SWITCH(g_141F27, PLAYER::PLAYER_PED_ID(), 513, v_14);  

Note: DO NOT, use SWITCH_TYPE_LONG with flag 513. It leaves you stuck in the clouds. You&apos;ll have to 
call STOP_PLAYER_SWITCH() to return to your ped.  

Flag 8 w/ SWITCH_TYPE_LONG will zoom out 3 steps, then zoom in 2/3 steps and stop on the 3rd and jus
t hang there.  

Flag 8 w/ SWITCH_TYPE_MEDIUM will zoom out 1 step, and just hang there.  

```'>
				<Param name='Ped from' />
				<Param name='Ped to' />
				<Param name='int flags' />
				<Param name='int switchType' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopPlayerSwitch' func='yes'>
			<Overload retVal='void' descr='// 0x95C0A5BBDC189AA1
// 0x2832C010
STREAMING::STOP_PLAYER_SWITCH();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SwitchInPlayer' func='yes'>
			<Overload retVal='void' descr='// 0xD8295AF639FD9CB8
// 0x2349373B
STREAMING::_SWITCH_IN_PLAYER(Ped ped);
----------------------------------------------------------------------------------------------------
Use after using _SWITCH_OUT_PLAYER to swoop the camera back down to the player&apos;s ped.'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SwitchOutPlayer' func='yes'>
			<Overload retVal='void' descr='// 0xAAB3200ED59016BC
// 0xFB4D062D
STREAMING::_SWITCH_OUT_PLAYER(Ped ped, int flags, int switchType);
----------------------------------------------------------------------------------------------------
```

doesn&apos;t act normally when used on mount chilliad

flags:

0: normal

1: no transition

255: switch IN

switchType: 0 - 3

0: 1 step towards ped

1: 3 steps out from ped

2: 1 step out from ped

3: 1 step towards ped

```'>
				<Param name='Ped ped' />
				<Param name='int flags' />
				<Param name='int switchType' />
			</Overload>
		</KeyWord>
		<KeyWord name='Ceil' func='yes'>
			<Overload retVal='int' descr='// 0x11E019C8F43ACC8A
// 0xD536A1DF
SYSTEM::CEIL(float value);
----------------------------------------------------------------------------------------------------
```

I&apos;m guessing this rounds a float value up to the next whole number, and FLOOR rounds it down  

```'>
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='Cos' func='yes'>
			<Overload retVal='float' descr='// 0xD0FFB162F40A139C
// 0x00238FE9
SYSTEM::COS(float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='Floor' func='yes'>
			<Overload retVal='int' descr='// 0xF34EE736CF047844
// 0x32E9BE04
SYSTEM::FLOOR(float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x42b65deef2edf2a1' func='yes'>
			<Overload retVal='void' descr='// 0x42B65DEEF2EDF2A1
SYSTEM::_0x42B65DEEF2EDF2A1(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='Pow' func='yes'>
			<Overload retVal='float' descr='// 0xE3621CC40F31FE2E
// 0x85D134F8
SYSTEM::POW(float base, float exponent);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float base' />
				<Param name='float exponent' />
			</Overload>
		</KeyWord>
		<KeyWord name='Round' func='yes'>
			<Overload retVal='int' descr='// 0xF2DB717A73826179
// 0x323B0E24
SYSTEM::ROUND(float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='Settimera' func='yes'>
			<Overload retVal='void' descr='// 0xC1B1E9A034A63A62
// 0x35785333
SYSTEM::SETTIMERA(int value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='Settimerb' func='yes'>
			<Overload retVal='void' descr='// 0x5AE11BC36633DE4E
// 0x27C1B7C6
SYSTEM::SETTIMERB(int value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShiftLeft' func='yes'>
			<Overload retVal='int' descr='// 0xEDD95A39E5544DE8
// 0x314CC6CD
SYSTEM::SHIFT_LEFT(int value, int bitShift);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int value' />
				<Param name='int bitShift' />
			</Overload>
		</KeyWord>
		<KeyWord name='ShiftRight' func='yes'>
			<Overload retVal='int' descr='// 0x97EF1E5BCE9DC075
// 0x352633CA
SYSTEM::SHIFT_RIGHT(int value, int bitShift);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int value' />
				<Param name='int bitShift' />
			</Overload>
		</KeyWord>
		<KeyWord name='Sin' func='yes'>
			<Overload retVal='float' descr='// 0x0BADBFA3B172435F
// 0xBF987F58
SYSTEM::SIN(float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='Sqrt' func='yes'>
			<Overload retVal='float' descr='// 0x71D93B57D07F9804
// 0x145C7701
SYSTEM::SQRT(float value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartNewScript' func='yes'>
			<Overload retVal='int' descr='// 0xE81651AD79516E48
// 0x3F166D0E
SYSTEM::START_NEW_SCRIPT(char* scriptName, int stackSize);
----------------------------------------------------------------------------------------------------
```

Examples:  

g_384A = SYSTEM::START_NEW_SCRIPT(&quot;cellphone_flashhand&quot;, 1424);  

l_10D = SYSTEM::START_NEW_SCRIPT(&quot;taxiService&quot;, 1828);  

SYSTEM::START_NEW_SCRIPT(&quot;AM_MP_YACHT&quot;, 5000);  

SYSTEM::START_NEW_SCRIPT(&quot;emergencycall&quot;, 512);  

SYSTEM::START_NEW_SCRIPT(&quot;emergencycall&quot;, 512);   

SYSTEM::START_NEW_SCRIPT(&quot;FM_maintain_cloud_header_data&quot;, 1424);  

SYSTEM::START_NEW_SCRIPT(&quot;FM_Mission_Controller&quot;, 31000);  

SYSTEM::START_NEW_SCRIPT(&quot;tennis_family&quot;, 3650);  

SYSTEM::START_NEW_SCRIPT(&quot;Celebrations&quot;, 3650);  

		Decompiled examples of usage when starting a script:  

   SCRIPT::REQUEST_SCRIPT(a_0);  

   if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {  

       SYSTEM::START_NEW_SCRIPT(a_0, v_3);  

       SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);  

       return 1;  

   }  

		or:  

   v_2 = &quot;MrsPhilips2&quot;;  

   SCRIPT::REQUEST_SCRIPT(v_2);  

   while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {  

   SCRIPT::REQUEST_SCRIPT(v_2);  

   SYSTEM::WAIT(0);  

   }  

   sub_8792(36);  

   SYSTEM::START_NEW_SCRIPT(v_2, 17000);  

   SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);  

		All native script names: pastebin.com/K9adDsu4 and pastebin.com/yLNWicUi  

```'>
				<Param name='char* scriptName' />
				<Param name='int stackSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartNewScriptWithArgs' func='yes'>
			<Overload retVal='int' descr='// 0xB8BA7F44DF1575E1
// 0x4A2100E4
SYSTEM::START_NEW_SCRIPT_WITH_ARGS(char* scriptName, Any* args, int argCount, int stackSize);
----------------------------------------------------------------------------------------------------
```

return : script thread id, 0 if failed  

Pass pointer to struct of args in p1, size of struct goes into p2  

```'>
				<Param name='char* scriptName' />
				<Param name='Any* args' />
				<Param name='int argCount' />
				<Param name='int stackSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartNewScriptWithNameHash' func='yes'>
			<Overload retVal='int' descr='// 0xEB1C67C3A5333A92
// 0x8D15BE5D
SYSTEM::START_NEW_SCRIPT_WITH_NAME_HASH(Hash scriptHash, int stackSize);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _START_NEW_STREAMED_SCRIPT'>
				<Param name='Hash scriptHash' />
				<Param name='int stackSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='_START_NEW_STREAMED_SCRIPT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: StartNewScriptWithNameHash' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='StartNewScriptWithNameHashAndArgs' func='yes'>
			<Overload retVal='int' descr='// 0xC4BB298BD441BE78
// 0xE38A3AD4
SYSTEM::START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS(Hash scriptHash, Any* args, int argCount, int stackSize
----------------------------------------------------------------------------------------------------
```

----------------------------------------------------------------------------------------------------

Old name: _START_NEW_STREAMED_SCRIPT_WITH_ARGS'>
				<Param name='Hash scriptHash' />
				<Param name='Any* args' />
				<Param name='int argCount' />
				<Param name='int stackSize' />
			</Overload>
		</KeyWord>
		<KeyWord name='_START_NEW_STREAMED_SCRIPT_WITH_ARGS' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: StartNewScriptWithNameHashAndArgs' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='Timera' func='yes'>
			<Overload retVal='int' descr='// 0x83666F9FB8FEBD4B
// 0x45C8C188
SYSTEM::TIMERA();
----------------------------------------------------------------------------------------------------
```

Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIM
ERA(0)).  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='Timerb' func='yes'>
			<Overload retVal='int' descr='// 0xC9D9444186B5A374
// 0x330A9C0C
SYSTEM::TIMERB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='Timestep' func='yes'>
			<Overload retVal='float' descr='// 0x0000000050597EE2
// 0x50597EE2
SYSTEM::TIMESTEP();
----------------------------------------------------------------------------------------------------
```

Gets the current frame time.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='ToFloat' func='yes'>
			<Overload retVal='float' descr='// 0xBBDA792448DB5A89
// 0x67116627
SYSTEM::TO_FLOAT(int value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='Vdist' func='yes'>
			<Overload retVal='float' descr='// 0x2A488C176D52CCA5
// 0x3C08ECB7
SYSTEM::VDIST(float x1, float y1, float z1, float x2, float y2, float z2);
----------------------------------------------------------------------------------------------------
```

Calculates distance between vectors.  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='Vdist2' func='yes'>
			<Overload retVal='float' descr='// 0xB7A628320EFF8E47
// 0xC85DEF1F
SYSTEM::VDIST2(float x1, float y1, float z1, float x2, float y2, float z2);
----------------------------------------------------------------------------------------------------
```

Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)  

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='Vmag' func='yes'>
			<Overload retVal='float' descr='// 0x652D2EEEF1D3E62C
// 0x1FCF1ECD
SYSTEM::VMAG(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Calculates the magnitude of a vector.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='Vmag2' func='yes'>
			<Overload retVal='float' descr='// 0xA8CEACB4F35AE058
// 0xE796E629
SYSTEM::VMAG2(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='Wait' func='yes'>
			<Overload retVal='void' descr='// 0x4EDE34FBADD967A6
// 0x7715C03B
SYSTEM::WAIT(int* ms);
----------------------------------------------------------------------------------------------------
```

Pauses execution of the current script, please note this behavior is only seen when called from one 
of the game script files(ysc). In order to wait an asi script use   

static void WAIT(DWORD time);  

		found in main.h   

		--------------------------------------------------------------------  

		It does not actually seem to wait the amount of milliseconds stated like the normal WAIT() command
 does, but it does seem to make task sequences work more smoothly  

		System native hashes do not change on gameupdate  

```'>
				<Param name='int* ms' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCurrentLanguageId' func='yes'>
			<Overload retVal='int' descr='// 0x2BDD44CC428A7EAE
UNK::_GET_CURRENT_LANGUAGE_ID();
----------------------------------------------------------------------------------------------------
```

american = 0  

french = 1   

german = 2  

italian =3  

spanish = 4  

portuguese = 5  

polish = 6  

russian = 7  

korean = 8  

chinese = 9  

japanese = 10  

mexican = 11  

```

## Return value

----------------------------------------------------------------------------------------------------

Old name: _GET_UI_LANGUAGE_ID'>
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_UI_LANGUAGE_ID' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetCurrentLanguageId' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetUserLanguageId' func='yes'>
			<Overload retVal='int' descr='// 0xA8AE43AEC1A61314
UNK::_GET_USER_LANGUAGE_ID();
----------------------------------------------------------------------------------------------------
```

Returns the user&apos;s defined langauge as ID   

english: 12  

french = 7  

german = 22  

italian = 21  

japanese = 9  

korean = 17  

portuguese = 16  

spanish = 10  

russian = 25  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='IsInLoadingScreen' func='yes'>
			<Overload retVal='void' descr='// 0xFC309E94546FCDB5
// 0x7D90EEE5
UNK::_IS_IN_LOADING_SCREEN(BOOL p0);
----------------------------------------------------------------------------------------------------
```

Only occurrence was false, in maintransition.  

```'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsUiLoadingMultiplayer' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC6DC823253FBB366
// 0x734CFEDA
UNK::_IS_UI_LOADING_MULTIPLAYER();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8aa464d4e0f6accd' func='yes'>
			<Overload retVal='Any' descr='// 0x8AA464D4E0F6ACCD
// 0x94BCAC7C
UNK::_0x8AA464D4E0F6ACCD();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb0c56bd3d808d863' func='yes'>
			<Overload retVal='void' descr='// 0xB0C56BD3D808D863
// 0xC0B971EA
UNK::_0xB0C56BD3D808D863(BOOL p0);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _GET_BROADCAST_FINSHED_LOS_SOUND'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_BROADCAST_FINSHED_LOS_SOUND' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: N_0xb0c56bd3d808d863' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='N_0xc7e7181c09f33b69' func='yes'>
			<Overload retVal='void' descr='// 0xC7E7181C09F33B69
// 0x8C227332
UNK::_0xC7E7181C09F33B69(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xef7d17bc6c85264c' func='yes'>
			<Overload retVal='BOOL' descr='// 0xEF7D17BC6C85264C
// 0xD87F3A9E
UNK::_0xEF7D17BC6C85264C();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf2ca003f167e21d2' func='yes'>
			<Overload retVal='int' descr='// 0xF2CA003F167E21D2
// 0x106C8317
UNK::_0xF2CA003F167E21D2();
----------------------------------------------------------------------------------------------------
```

MulleDK19: This function is hard-coded to always return 0.  

```

## Return value

----------------------------------------------------------------------------------------------------

Old name: _RETURN_ZERO'>
			</Overload>
		</KeyWord>
		<KeyWord name='_RETURN_ZERO' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: N_0xf2ca003f167e21d2' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='N_0xfa1e0e893d915215' func='yes'>
			<Overload retVal='void' descr='// 0xFA1E0E893D915215
// 0x5C350D78
UNK::_0xFA1E0E893D915215(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddSpeedZoneForCoord' func='yes'>
			<Overload retVal='int' descr='// 0x2CE544C68FB812A0
// 0xD6685803
VEHICLE::_ADD_SPEED_ZONE_FOR_COORD(float x, float y, float z, float radius, float speed, BOOL p5);
----------------------------------------------------------------------------------------------------
```

This is used to add a speedzone on a position.  

Example usage C#:  

uint speedZone = Function.Call&lt;uint&gt;((Hash) 0x2CE544C68FB812A0, Game.PlayerPed.Position.X, Game.Play
erPed.Position.Y, Game.PlayerPed.Position.Z, 100.0f, 0.0f, false);  

(Thanks to alexguirre for his help!)  

==========================================  

What is the point in adding a speed zone? Does it just generally affect the speed NPCs will drive? I
 can imagine running this on every section of the interstate setting it to 3 MPH rip.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='float speed' />
				<Param name='BOOL p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddVehicleStuckCheckWithWarp' func='yes'>
			<Overload retVal='void' descr='// 0x2FA9923062DD396C
// 0xC8B789AD
VEHICLE::ADD_VEHICLE_STUCK_CHECK_WITH_WARP(Any p0, float p1, Any p2, BOOL p3, BOOL p4, BOOL p5, Any p6);
----------------------------------------------------------------------------------------------------
`'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='Any p2' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
				<Param name='BOOL p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddVehicleUpsidedownCheck' func='yes'>
			<Overload retVal='void' descr='// 0xB72E26D81006005B
// 0x3A13D384
VEHICLE::ADD_VEHICLE_UPSIDEDOWN_CHECK(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='AnyPassengersRappeling' func='yes'>
			<Overload retVal='BOOL' descr='// 0x291E373D483E7EE7
// 0xD656E7E5
VEHICLE::_ANY_PASSENGERS_RAPPELING(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='AreAllVehicleWindowsIntact' func='yes'>
			<Overload retVal='BOOL' descr='// 0x11D862A3E977A9EF
// 0xBB619744
VEHICLE::ARE_ALL_VEHICLE_WINDOWS_INTACT(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Appears to return false if any window is broken.  

```

----------------------------------------------------------------------------------------------------

Old name: _ARE_ALL_VEHICLE_WINDOWS_INTACT'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_ARE_ALL_VEHICLE_WINDOWS_INTACT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: AreAllVehicleWindowsIntact' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='AreAnyVehicleSeatsFree' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2D34FC3BC4ADB780
// 0x648E685A
VEHICLE::ARE_ANY_VEHICLE_SEATS_FREE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Returns false if every seat is occupied.  

```

----------------------------------------------------------------------------------------------------

Old name: _IS_ANY_VEHICLE_SEAT_EMPTY'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_IS_ANY_VEHICLE_SEAT_EMPTY' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: AreAnyVehicleSeatsFree' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='ArePropellersUndamaged' func='yes'>
			<Overload retVal='BOOL' descr='// 0x755D6D5267CBBD7E
// 0xABBDD5C6
VEHICLE::_ARE_PROPELLERS_UNDAMAGED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Found this in the decompiled scripts, I&apos;d do more research before changing the name --  

if (!ENTITY::IS_ENTITY_DEAD(l_1911)) {  

    if (!VEHICLE::_755D6D5267CBBD7E(l_1911)) {  

        sub_1ba80(&quot;TRAFFICKING AIR: FAILING - PROPELLERS ARE DAMAGED&quot;);  

        l_12CE = 9;  

    }  

}  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='AreVehicleWingsIntact' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5991A01434CE9677
// 0xAF8CB3DF
VEHICLE::_ARE_VEHICLE_WINGS_INTACT(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

ADD_A_MARKER_OVER_VEHICLE was a hash collision!!!  

Can be used for planes only!  

```

----------------------------------------------------------------------------------------------------

Old name: ADD_A_MARKER_OVER_VEHICLE'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ADD_A_MARKER_OVER_VEHICLE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: AreVehicleWingsIntact' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='AttachVehicleToCargobob' func='yes'>
			<Overload retVal='void' descr='// 0x4127F1D84E347769
// 0x607DC9D5
VEHICLE::ATTACH_VEHICLE_TO_CARGOBOB(Vehicle vehicle, Vehicle cargobob, int p2, float x, float y, float z
----------------------------------------------------------------------------------------------------
```'>
				<Param name='Vehicle vehicle' />
				<Param name='Vehicle cargobob' />
				<Param name='int p2' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='AttachVehicleToTowTruck' func='yes'>
			<Overload retVal='void' descr='// 0x29A16F8D621C4508
// 0x8151571A
VEHICLE::ATTACH_VEHICLE_TO_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle, BOOL rear, float hookOffsetX, fl
----------------------------------------------------------------------------------------------------
hookOffsetY, float hookOffsetZ);

```

```

HookOffset defines where the hook is attached. leave at 0 for default attachment.  

When using the tow truck online, this is not used (set a breakpoint and never called during tow truc
k attachment)  

```'>
				<Param name='Vehicle towTruck' />
				<Param name='Vehicle vehicle' />
				<Param name='BOOL rear' />
				<Param name='float hookOffsetX' />
			</Overload>
		</KeyWord>
		<KeyWord name='AttachVehicleToTrailer' func='yes'>
			<Overload retVal='void' descr='// 0x3C7D42D58F770B54
// 0x2133977F
VEHICLE::ATTACH_VEHICLE_TO_TRAILER(Vehicle vehicle, Vehicle trailer, float radius);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Vehicle trailer' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanShuffleSeat' func='yes'>
			<Overload retVal='BOOL' descr='// 0x30785D90C956BF35
// 0xB3EB01ED
VEHICLE::CAN_SHUFFLE_SEAT(Vehicle vehicle, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanVehicleParachuteBeActivated' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA916396DF4154EE3
VEHICLE::_CAN_VEHICLE_PARACHUTE_BE_ACTIVATED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearVehicleCustomPrimaryColour' func='yes'>
			<Overload retVal='Any' descr='// 0x55E1D2758F34E437
// 0x51E1E33D
VEHICLE::CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearVehicleCustomSecondaryColour' func='yes'>
			<Overload retVal='Any' descr='// 0x5FFBDEEC3E8E2009
// 0x7CE00B29
VEHICLE::CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='CloseBombBayDoors' func='yes'>
			<Overload retVal='void' descr='// 0x3556041742A0DC74
// 0xF8EC5751
VEHICLE::CLOSE_BOMB_BAY_DOORS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ControlLandingGear' func='yes'>
			<Overload retVal='void' descr='// 0xCFC8BE9A5E1FE575
// 0x24F873FB
VEHICLE::CONTROL_LANDING_GEAR(Vehicle vehicle, int state);
----------------------------------------------------------------------------------------------------
```

Works for vehicles with a retractable landing gear  

landing gear states:  

0: Deployed  

1: Closing  

2: Opening  

3: Retracted  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_VEHICLE_LANDING_GEAR'>
				<Param name='Vehicle vehicle' />
				<Param name='int state' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_VEHICLE_LANDING_GEAR' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: ControlLandingGear' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='CreateMissionTrain' func='yes'>
			<Overload retVal='Vehicle' descr='// 0x63C6CCA8E68AE8C8
// 0xD4C2EAFD
VEHICLE::CREATE_MISSION_TRAIN(int variation, float x, float y, float z, BOOL direction);
----------------------------------------------------------------------------------------------------
```

Train models HAVE TO be loaded (requested) before you use this.  

For variation 15 - request:  

freight  

freightcar  

freightgrain  

freightcont1  

freightcont2  

freighttrailer  

```'>
				<Param name='int variation' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL direction' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreatePickUpRopeForCargobob' func='yes'>
			<Overload retVal='void' descr='// 0x7BEB0C7A235F6F3B
// 0x4D3C9A99
VEHICLE::CREATE_PICK_UP_ROPE_FOR_CARGOBOB(Vehicle cargobob, int state);
----------------------------------------------------------------------------------------------------
```

Drops the Hook/Magnet on a cargobob  

state  

enum eCargobobHook  

{  

	CARGOBOB_HOOK = 0,  

	CARGOBOB_MAGNET = 1,  

};  

```

----------------------------------------------------------------------------------------------------

Old name: _ENABLE_CARGOBOB_HOOK'>
				<Param name='Vehicle cargobob' />
				<Param name='int state' />
			</Overload>
		</KeyWord>
		<KeyWord name='_ENABLE_CARGOBOB_HOOK' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: CreatePickUpRopeForCargobob' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='CreateScriptVehicleGenerator' func='yes'>
			<Overload retVal='int' descr='// 0x9DEF883114668116
// 0x25A9A261
VEHICLE::CREATE_SCRIPT_VEHICLE_GENERATOR(float x, float y, float z, float heading, float p4, float p5, Ha
----------------------------------------------------------------------------------------------------
odelHash, int p7, int p8, int p9, int p10, BOOL p11, BOOL p12, BOOL p13, BOOL p14, BOOL p15, int
 p16);

```

```

Creates a script vehicle generator at the given coordinates. Most parameters after the model hash ar
e unknown.  

Parameters:  

a/w/s - Generator position  

heading - Generator heading  

p4 - Unknown (always 5.0)  

p5 - Unknown (always 3.0)  

modelHash - Vehicle model hash  

p7/8/9/10 - Unknown (always -1)  

p11 - Unknown (usually TRUE, only one instance of FALSE)  

p12/13 - Unknown (always FALSE)  

p14 - Unknown (usally FALSE, only two instances of TRUE)  

p15 - Unknown (always TRUE)  

p16 - Unknown (always -1)  

Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);	CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, co
ords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY(&quot;adder&quot;), -1. -1, -1, -1, -1, true, false, false, f
alse, true, -1);  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float heading' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateVehicle' func='yes'>
			<Overload retVal='Vehicle' descr='// 0xAF35D0D2583051B0
// 0xDD75460A
VEHICLE::CREATE_VEHICLE(Hash modelHash, float x, float y, float z, float heading, BOOL isNetwork, BOO
----------------------------------------------------------------------------------------------------
isScriptCheck);

```

```

thisScriptCheck - can be destroyed if it belongs to the calling script.  

```'>
				<Param name='Hash modelHash' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float heading' />
				<Param name='BOOL isNetwork' />
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteAllTrains' func='yes'>
			<Overload retVal='void' descr='// 0x736A718577F39C7D
// 0x83DE7ABF
VEHICLE::DELETE_ALL_TRAINS();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteMissionTrain' func='yes'>
			<Overload retVal='void' descr='// 0x5B76B14AE875C795
// 0x86C9497D
VEHICLE::DELETE_MISSION_TRAIN(Vehicle* train);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle* train' />
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteScriptVehicleGenerator' func='yes'>
			<Overload retVal='void' descr='// 0x22102C9ABFCF125D
// 0xE4328E3F
VEHICLE::DELETE_SCRIPT_VEHICLE_GENERATOR(int vehicleGenerator);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int vehicleGenerator' />
			</Overload>
		</KeyWord>
		<KeyWord name='DeleteVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xEA386986E786A54F
// 0x9803AF60
VEHICLE::DELETE_VEHICLE(Vehicle* vehicle);
----------------------------------------------------------------------------------------------------
```

Deletes a vehicle.  

The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_
ENTITY(vehicle, true, true);  

eg how to use:  

SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);  

DELETE_VEHICLE(&vehicle);  

Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.  

```'>
				<Param name='Vehicle* vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DetachVehicleFromAnyCargobob' func='yes'>
			<Overload retVal='BOOL' descr='// 0xADF7BE450512C12F
// 0x50E0EABE
VEHICLE::DETACH_VEHICLE_FROM_ANY_CARGOBOB(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DetachVehicleFromAnyTowTruck' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD0E9CE05A1E68CD8
// 0x3BF93651
VEHICLE::DETACH_VEHICLE_FROM_ANY_TOW_TRUCK(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DetachVehicleFromCargobob' func='yes'>
			<Overload retVal='void' descr='// 0x0E21D3DF1051399D
// 0x83D3D331
VEHICLE::DETACH_VEHICLE_FROM_CARGOBOB(Vehicle vehicle, Vehicle cargobob);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Vehicle cargobob' />
			</Overload>
		</KeyWord>
		<KeyWord name='DetachVehicleFromTowTruck' func='yes'>
			<Overload retVal='void' descr='// 0xC2DB6B6708350ED8
// 0xC666CF33
VEHICLE::DETACH_VEHICLE_FROM_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.  


```'>
				<Param name='Vehicle towTruck' />
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DetachVehicleFromTrailer' func='yes'>
			<Overload retVal='void' descr='// 0x90532EDF0D2BDD86
// 0xB5DBF91D
VEHICLE::DETACH_VEHICLE_FROM_TRAILER(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Public Sub detatchTrailer(vh1 As Vehicle)  

Native.Function.Call(Hash.DETACH_VEHICLE_FROM_TRAILER, vh1)  

		    End Sub  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DetachVehicleWindscreen' func='yes'>
			<Overload retVal='void' descr='// 0x6D645D59FB5F5AD3
// 0xCC95C96B
VEHICLE::_DETACH_VEHICLE_WINDSCREEN(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Detaches the vehicle&apos;s windscreen.  

For further information, see : gtaforums.com/topic/859570-glass/#entry1068894566  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisablePlaneAileron' func='yes'>
			<Overload retVal='void' descr='// 0x23428FC53C60919C
// 0x7E84C45C
VEHICLE::DISABLE_PLANE_AILERON(Vehicle vehicle, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

hash collision??? - Don&apos;t think so. It fits alphabetically and it used with a plane in the scripts  


Ailerons are responsible for the rolling motion of a plane.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableVehicleImpactExplosionActivation' func='yes'>
			<Overload retVal='void' descr='// 0xD8050E0EB60CF274
// 0xC54156A9
VEHICLE::DISABLE_VEHICLE_IMPACT_EXPLOSION_ACTIVATION(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

if set to true, prevents vehicle sirens from having sound, leaving only the lights.  

HASH COLLISION !!! Please change to _SET_DISABLE_VEHICLE_SIREN_SOUND  

-----  

SET_VEHICLE_HAS_*  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisableVehicleWeapon' func='yes'>
			<Overload retVal='void' descr='// 0xF4FC6A6F67D8D856
// 0xA688B7D1
VEHICLE::DISABLE_VEHICLE_WEAPON(BOOL disabled, Hash weaponHash, Vehicle vehicle, Ped owner);
----------------------------------------------------------------------------------------------------
```

how does this work?  

```'>
				<Param name='BOOL disabled' />
				<Param name='Hash weaponHash' />
				<Param name='Vehicle vehicle' />
				<Param name='Ped owner' />
			</Overload>
		</KeyWord>
		<KeyWord name='DisplayDistantVehicles' func='yes'>
			<Overload retVal='void' descr='// 0xF796359A959DF65D
// 0xB5CC548B
VEHICLE::_DISPLAY_DISTANT_VEHICLES(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesCargobobHavePickupMagnet' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6E08BF5B3722BAC9
VEHICLE::_DOES_CARGOBOB_HAVE_PICKUP_MAGNET(Vehicle cargobob);
----------------------------------------------------------------------------------------------------
```

Returns true only when the magnet is active, will return false if the hook is active  

console hash 0x4778CA0A  

```

----------------------------------------------------------------------------------------------------

Old name: _IS_CARGOBOB_MAGNET_ACTIVE'>
				<Param name='Vehicle cargobob' />
			</Overload>
		</KeyWord>
		<KeyWord name='_IS_CARGOBOB_MAGNET_ACTIVE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: DoesCargobobHavePickupMagnet' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='DoesCargobobHavePickUpRope' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1821D91AD4B56108
// 0xAF769B81
VEHICLE::DOES_CARGOBOB_HAVE_PICK_UP_ROPE(Vehicle cargobob);
----------------------------------------------------------------------------------------------------
```

Returns true only when the hook is active, will return false if the magnet is active  

```

----------------------------------------------------------------------------------------------------

Old name: _IS_CARGOBOB_HOOK_ACTIVE'>
				<Param name='Vehicle cargobob' />
			</Overload>
		</KeyWord>
		<KeyWord name='_IS_CARGOBOB_HOOK_ACTIVE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: DoesCargobobHavePickUpRope' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='DoesExtraExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1262D55792428154
// 0x409411CC
VEHICLE::DOES_EXTRA_EXIST(Vehicle vehicle, int extraId);
----------------------------------------------------------------------------------------------------
```

Checks via CVehicleModelInfo  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int extraId' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesScriptVehicleGeneratorExist' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF6086BC836400876
// 0xF6BDDA30
VEHICLE::DOES_SCRIPT_VEHICLE_GENERATOR_EXIST(int v);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int v' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesVehicleExistWithDecorator' func='yes'>
			<Overload retVal='BOOL' descr='// 0x956B409B984D9BF7
// 0x39E68EDD
VEHICLE::DOES_VEHICLE_EXIST_WITH_DECORATOR(char* decorator);
----------------------------------------------------------------------------------------------------
'>
				<Param name='char* decorator' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesVehicleHaveDoor' func='yes'>
			<Overload retVal='BOOL' descr='// 0x645F4B6E8499F632
VEHICLE::_DOES_VEHICLE_HAVE_DOOR(Vehicle vehicle, int doorIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int doorIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesVehicleHaveRoof' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8AC862B0B32C5B80
// 0xDB817403
VEHICLE::DOES_VEHICLE_HAVE_ROOF(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesVehicleHaveStuckVehicleCheck' func='yes'>
			<Overload retVal='BOOL' descr='// 0x57E4C39DE5EE8470
// 0x5D91D9AC
VEHICLE::DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Maximum amount of vehicles with vehicle stuck check appears to be 16.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesVehicleHaveWeapons' func='yes'>
			<Overload retVal='BOOL' descr='// 0x25ECB9F8017D98E0
// 0xB2E1E1FB
VEHICLE::DOES_VEHICLE_HAVE_WEAPONS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='EjectJb700Roof' func='yes'>
			<Overload retVal='void' descr='// 0xE38CB9D7D39FDBCC
// 0xFDA7B6CA
VEHICLE::_EJECT_JB700_ROOF(Vehicle vehicle, float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='ExplodeVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xBA71116ADF5B514C
// 0xBEDEACEB
VEHICLE::EXPLODE_VEHICLE(Vehicle vehicle, BOOL isAudible, BOOL isInvisible);
----------------------------------------------------------------------------------------------------
```

Explodes a selected vehicle.  

Vehicle vehicle = Vehicle you want to explode.  

BOOL isAudible = If explosion makes a sound.  

BOOL isInvisible = If the explosion is invisible or not.  

First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly an
d starts to burn.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL isAudible' />
				<Param name='BOOL isInvisible' />
			</Overload>
		</KeyWord>
		<KeyWord name='ExplodeVehicleInCutscene' func='yes'>
			<Overload retVal='void' descr='// 0x786A4EB67B01BF0B
// 0xA85207B5
VEHICLE::EXPLODE_VEHICLE_IN_CUTSCENE(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='FixVehicleWindow' func='yes'>
			<Overload retVal='Any' descr='// 0x772282EBEB95E682
// 0x6B8E990D
VEHICLE::FIX_VEHICLE_WINDOW(Vehicle vehicle, int index);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetAllVehicles' func='yes'>
			<Overload retVal='int' descr='// 0x9B8E1BF04B51F2E8
VEHICLE::_GET_ALL_VEHICLES(Any* vehArray);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any* vehArray' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBoatAnchor' func='yes'>
			<Overload retVal='BOOL' descr='// 0x26C10ECBDA5D043B
VEHICLE::_GET_BOAT_ANCHOR(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0xE97A4F5E  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCargobobHookPosition' func='yes'>
			<Overload retVal='Vector3' descr='// 0xCBDB9B923CACC92D
VEHICLE::_GET_CARGOBOB_HOOK_POSITION(Vehicle cargobob);
----------------------------------------------------------------------------------------------------
```

Gets the position of the cargobob hook, in world coords.  

```'>
				<Param name='Vehicle cargobob' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetClosestVehicle' func='yes'>
			<Overload retVal='Vehicle' descr='// 0xF73EB622C4F1689B
// 0xD7E26B2C
VEHICLE::GET_CLOSEST_VEHICLE(float x, float y, float z, float radius, Hash modelHash, int flags);
----------------------------------------------------------------------------------------------------
```

Example usage  

VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70)   

x, y, z: Position to get closest vehicle to.  

radius: Max radius to get a vehicle.  

modelHash: Limit to vehicles with this model. 0 for any.  

flags: The bitwise flags altering the function&apos;s behaviour.  

Does not return police cars or helicopters.  

It seems to return police cars for me, does not seem to return helicopters, planes or boats for some
 reason  

Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash se
ems to always be 0 when not a modelHash in the scripts, as stated above.   

These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,
32768,67590,67711,98309,100359.  

Converted to binary, each bit probably represents a flag as explained regarding another native here:
 gtaforums.com/topic/822314-guide-driving-styles  

Conversion of found flags to binary: pastebin.com/kghNFkRi  

At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returne
d.   

It&apos;s probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shorte
st distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_
THIS_MODEL_A_BOAT  

-------------------------------------------------------------------------  

Conclusion: This native is not worth trying to use. Use something like this instead: pastebin.com/xi
FdXa7h  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Hash modelHash' />
				<Param name='int flags' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetConvertibleRoofState' func='yes'>
			<Overload retVal='int' descr='// 0xF8C397922FC03F41
// 0x1B09714D
VEHICLE::GET_CONVERTIBLE_ROOF_STATE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

0 -&gt; up  

1 -&gt; lowering down  

2 -&gt; down  

3 -&gt; raising up  

enum RoofState  

{  

     ROOFSTATE_UP = 0;  

     ROOFSTATE_LOWERING,  

     ROOFSTATE_DOWN,  

     ROOFSTATE_RAISING  

};  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCurrentPlaybackForVehicle' func='yes'>
			<Overload retVal='Any' descr='// 0x42BC05C27A946054
// 0xA3F44390
VEHICLE::GET_CURRENT_PLAYBACK_FOR_VEHICLE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetDisplayNameFromVehicleModel' func='yes'>
			<Overload retVal='char*' descr='// 0xB215AAC32D25D019
// 0xEC86DF39
VEHICLE::GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(Hash modelHash);
----------------------------------------------------------------------------------------------------
```

Returns model name of vehicle in all caps. Needs to be displayed through localizing text natives to 
get proper display name.  

----------------------------------------------------------------------------------------------------
-------------------------------------  

While often the case, this does not simply return the model name of the vehicle (which could be hash
ed to return the model hash). Variations of the same vehicle may also use the same display name.  

----------------------------------------------------------------------------------------------------
-------------------------------------  

Returns &quot;CARNOTFOUND&quot; if the hash doesn&apos;t match a vehicle hash.  

Using UI::_GET_LABEL_TEXT, you can get the localized name.  

For a full list, see here: pastebin.com/wvpyS4kS (pastebin.com/dA3TbkZw)  

```'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntityAttachedToTowTruck' func='yes'>
			<Overload retVal='Entity' descr='// 0xEFEA18DCF10F8F75
// 0x11EC7844
VEHICLE::GET_ENTITY_ATTACHED_TO_TOW_TRUCK(Vehicle towTruck);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle towTruck' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetEntryPositionOfDoor' func='yes'>
			<Overload retVal='Vector3' descr='// 0xC0572928C0ABFDA3
VEHICLE::_GET_ENTRY_POSITION_OF_DOOR(Vehicle vehicle, int doorIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int doorIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHasLowerableWheels' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDCA174A42133F08C
VEHICLE::_GET_HAS_LOWERABLE_WHEELS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHeliEngineHealth' func='yes'>
			<Overload retVal='float' descr='// 0xAC51915D27E4A5F7
// 0x8A68388F
VEHICLE::_GET_HELI_ENGINE_HEALTH(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Max 1000.  

At -100 both helicopter rotors will stall.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHeliMainRotorHealth' func='yes'>
			<Overload retVal='float' descr='// 0xE4CB7541F413D2C5
// 0xF01E2AAB
VEHICLE::_GET_HELI_MAIN_ROTOR_HEALTH(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Max 1000.  

At 0 the main rotor will stall.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHeliTailRotorHealth' func='yes'>
			<Overload retVal='float' descr='// 0xAE8CE82A4219AC8C
// 0xA41BC13D
VEHICLE::_GET_HELI_TAIL_ROTOR_HEALTH(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Max 1000.  

At 0 the tail rotor will stall.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetIsLeftVehicleHeadlightDamaged' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5EF77C9ADD3B11A3
// 0xA0777943
VEHICLE::GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

From the driver&apos;s perspective, is the left headlight broken.  

```

----------------------------------------------------------------------------------------------------

Old name: _IS_HEADLIGHT_L_BROKEN'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_IS_HEADLIGHT_L_BROKEN' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetIsLeftVehicleHeadlightDamaged' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetIsRightVehicleHeadlightDamaged' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA7ECB73355EB2F20
// 0xF178390B
VEHICLE::GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

From the driver&apos;s perspective, is the right headlight broken.  

```

----------------------------------------------------------------------------------------------------

Old name: _IS_HEADLIGHT_R_BROKEN'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_IS_HEADLIGHT_R_BROKEN' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetIsRightVehicleHeadlightDamaged' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetIsVehicleEngineRunning' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAE31E7DF9B5B132E
// 0x7DC6D022
VEHICLE::GET_IS_VEHICLE_ENGINE_RUNNING(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Returns true when in a vehicle, false whilst entering/exiting.  

```

----------------------------------------------------------------------------------------------------

Old name: _IS_VEHICLE_ENGINE_ON'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_IS_VEHICLE_ENGINE_ON' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetIsVehicleEngineRunning' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetIsVehiclePrimaryColourCustom' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF095C0405307B21B
// 0xD7EC8760
VEHICLE::GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetIsVehicleSecondaryColourCustom' func='yes'>
			<Overload retVal='BOOL' descr='// 0x910A32E7AAD2656C
// 0x288AD228
VEHICLE::GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Check if Vehicle Secondary is avaliable for customize  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetLandingGearState' func='yes'>
			<Overload retVal='int' descr='// 0x9B0F3DCA3DB0F4CD
// 0xA6F02670
VEHICLE::GET_LANDING_GEAR_STATE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

landing gear states:  

0: Deployed  

1: Closing  

2: Opening  

3: Retracted  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_VEHICLE_LANDING_GEAR'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_VEHICLE_LANDING_GEAR' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetLandingGearState' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetLastDrivenVehicle' func='yes'>
			<Overload retVal='Vehicle' descr='// 0xB2D06FAEDE65B577
// 0xFEB0C0C8
VEHICLE::GET_LAST_DRIVEN_VEHICLE();
----------------------------------------------------------------------------------------------------
```

Not exactly sure on this one, but here&apos;s a snippet of code:  

if (PED::IS_PED_IN_ANY_VEHICLE(PLAYER::PLAYER_PED_ID(), 0)) {  

    v_2 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 0);  

} else {   

    v_2 = VEHICLE::_B2D06FAEDE65B577();  

}  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetLastPedInVehicleSeat' func='yes'>
			<Overload retVal='Ped' descr='// 0x83F969AA1EE2A664
// 0xF7C6792D
VEHICLE::GET_LAST_PED_IN_VEHICLE_SEAT(Vehicle vehicle, int seatIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int seatIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetLiveryName' func='yes'>
			<Overload retVal='char*' descr='// 0xB4C7A93837C91A1F
// 0xED80B5BE
VEHICLE::GET_LIVERY_NAME(Vehicle vehicle, int liveryIndex);
----------------------------------------------------------------------------------------------------
```

Second Param = LiveryIndex  

example   

int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);  

for (int i = 0; i &lt; count; i++)    

	{  

char* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);  

	}  

this example will work fine to fetch all names   

for example for Sanchez we get   

SANC_LV1  

SANC_LV2  

SANC_LV3  

SANC_LV4  

SANC_LV5  

Use _GET_LABEL_TEXT, to get the localized livery name.  

-----------  

NOTE: You may need to set the vehicle&apos;s modKit to 0 by using this function: SET_VEHICLE_MOD_KIT() be
fore getting the name, otherwise this native may return NULL.  

dev-c.com/nativedb/func/info/1f2aa07f00b3217a  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int liveryIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetModSlotName' func='yes'>
			<Overload retVal='char*' descr='// 0x51F0FEB9F6AE98C0
// 0x5E113483
VEHICLE::GET_MOD_SLOT_NAME(Vehicle vehicle, int modType);
----------------------------------------------------------------------------------------------------
```

Returns the name for the type of vehicle mod(Armour, engine etc)  

-----------  

for some reason this native seems unreliable: sometimes returns NULL, and when retval != NULL the st
ring can be empty  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int modType' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetModTextLabel' func='yes'>
			<Overload retVal='char*' descr='// 0x8935624F8C5592CC
// 0x0BA39CA7
VEHICLE::GET_MOD_TEXT_LABEL(Vehicle vehicle, int modType, int modValue);
----------------------------------------------------------------------------------------------------
```

Returns the text label of a mod type for a given vehicle  

Use _GET_LABEL_TEXT to get the part name in the game&apos;s language  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int modType' />
				<Param name='int modValue' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfVehicleColours' func='yes'>
			<Overload retVal='int' descr='// 0x3B963160CD65D41E
// 0xF2442EE2
VEHICLE::GET_NUMBER_OF_VEHICLE_COLOURS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Actually number of color combinations  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfVehicleDoors' func='yes'>
			<Overload retVal='Any' descr='// 0x92922A607497B14D
VEHICLE::_GET_NUMBER_OF_VEHICLE_DOORS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumberOfVehicleNumberPlates' func='yes'>
			<Overload retVal='int' descr='// 0x4C4D6B2644F458CB
// 0xD24BC1AE
VEHICLE::GET_NUMBER_OF_VEHICLE_NUMBER_PLATES();
----------------------------------------------------------------------------------------------------
```

Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_I
NDEX.  

```

## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumModColors' func='yes'>
			<Overload retVal='int' descr='// 0xA551BE18C11A476D
// 0x73722CD9
VEHICLE::GET_NUM_MOD_COLORS(int p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumModKits' func='yes'>
			<Overload retVal='int' descr='// 0x33F2E3FE70EAAE1D
// 0xE4903AA0
VEHICLE::GET_NUM_MOD_KITS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumVehicleMods' func='yes'>
			<Overload retVal='int' descr='// 0xE38E9162A2500646
// 0x8A814FF9
VEHICLE::GET_NUM_VEHICLE_MODS(Vehicle vehicle, int modType);
----------------------------------------------------------------------------------------------------
```

Returns how many possible mods a vehicle has for a given mod type  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int modType' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNumVehicleWindowTints' func='yes'>
			<Overload retVal='int' descr='// 0x9D1224004B3A6707
// 0x625C7B66
VEHICLE::GET_NUM_VEHICLE_WINDOW_TINTS();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedInVehicleSeat' func='yes'>
			<Overload retVal='Ped' descr='// 0xBB40DD2270B65366
// 0x388FDE9A
VEHICLE::GET_PED_IN_VEHICLE_SEAT(Vehicle vehicle, int index);
----------------------------------------------------------------------------------------------------
```

-1 (driver) &lt;= index &lt; GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle)  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedUsingVehicleDoor' func='yes'>
			<Overload retVal='Ped' descr='// 0x218297BF0CFD853B
VEHICLE::_GET_PED_USING_VEHICLE_DOOR(Vehicle vehicle, int doorIndex);
----------------------------------------------------------------------------------------------------
```

Quick disassembly and test seems to indicate that this native gets the Ped currently using the speci
fied door.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int doorIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPositionInRecording' func='yes'>
			<Overload retVal='float' descr='// 0x2DACD605FC681475
// 0x7DCD644C
VEHICLE::GET_POSITION_IN_RECORDING(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPositionOfVehicleRecordingAtTime' func='yes'>
			<Overload retVal='Vector3' descr='// 0xD242728AA6F0FBA2
// 0x7178558D
VEHICLE::GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME(int p0, float p1, char* p2);
----------------------------------------------------------------------------------------------------
```

p1 is some kind of tolerance  

```'>
				<Param name='int p0' />
				<Param name='float p1' />
				<Param name='char* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRandomVehicleBackBumperInSphere' func='yes'>
			<Overload retVal='Vehicle' descr='// 0xB50807EABE20A8DC
// 0xD6343F6B
VEHICLE::GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int
----------------------------------------------------------------------------------------------------
int p6);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='int p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRandomVehicleFrontBumperInSphere' func='yes'>
			<Overload retVal='Vehicle' descr='// 0xC5574E0AEB86BA68
// 0xDCADEB66
VEHICLE::GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, in
----------------------------------------------------------------------------------------------------
, int p6);

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='int p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRandomVehicleInSphere' func='yes'>
			<Overload retVal='Vehicle' descr='// 0x386F6CE5BAF6091C
// 0x57216D03
VEHICLE::GET_RANDOM_VEHICLE_IN_SPHERE(float x, float y, float z, float radius, Hash modelHash, int fl
----------------------------------------------------------------------------------------------------
;

```

```

Gets a random vehicle in a sphere at the specified position, of the specified radius.  

x: The X-component of the position of the sphere.  

y: The Y-component of the position of the sphere.  

z: The Z-component of the position of the sphere.  

radius: The radius of the sphere. Max is 9999.9004.  

modelHash: The vehicle model to limit the selection to. Pass 0 for any model.  

flags: The bitwise flags that modifies the behaviour of this function.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
				<Param name='Hash modelHash' />
				<Param name='int fl' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRandomVehicleModelInMemory' func='yes'>
			<Overload retVal='void' descr='// 0x055BF0AC0C34F4FD
// 0xE2C45631
VEHICLE::GET_RANDOM_VEHICLE_MODEL_IN_MEMORY(BOOL p0, Hash* modelHash, int* p2);
----------------------------------------------------------------------------------------------------
```

Not present in the retail version! It&apos;s just a nullsub.  

p0 always true (except in one case)  

p1 a random vehicle hash loaded in memory  

p2 0 if success, -1 if failed  

```'>
				<Param name='BOOL p0' />
				<Param name='Hash* modelHash' />
				<Param name='int* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetRotationOfVehicleRecordingAtTime' func='yes'>
			<Overload retVal='int' descr='// 0x2058206FBE79A8AD
// 0xD96DEC68
VEHICLE::GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME(Any p0, float p1, Any* p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='Any* p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTimePositionInRecording' func='yes'>
			<Overload retVal='float' descr='// 0x5746F3A7AB7FE544
// 0xF8C3E4A2
VEHICLE::GET_TIME_POSITION_IN_RECORDING(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTotalDurationOfVehicleRecording' func='yes'>
			<Overload retVal='Any' descr='// 0x0E48D1C262390950
// 0x5B35EEB7
VEHICLE::GET_TOTAL_DURATION_OF_VEHICLE_RECORDING(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTotalDurationOfVehicleRecordingId' func='yes'>
			<Overload retVal='float' descr='// 0x102D125411A7B6E6
// 0x7116785E
VEHICLE::GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetTrainCarriage' func='yes'>
			<Overload retVal='Entity' descr='// 0x08AAFD0814722BC3
// 0x2544E7A6
VEHICLE::GET_TRAIN_CARRIAGE(Vehicle train, int trailerNumber);
----------------------------------------------------------------------------------------------------
```

Corrected p1. it&apos;s basically the &apos;carriage/trailer number&apos;. So if the train has 3 trailers you&apos;d cal
l the native once with a var or 3 times with 1, 2, 3.  

```'>
				<Param name='Vehicle train' />
				<Param name='int trailerNumber' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleAcceleration' func='yes'>
			<Overload retVal='float' descr='// 0x5DD35C8D074E57AE
// 0x00478321
VEHICLE::GET_VEHICLE_ACCELERATION(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

static - max acceleration  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleAttachedToCargobob' func='yes'>
			<Overload retVal='Vehicle' descr='// 0x873B82D42AC2B9E5
// 0x301A1D24
VEHICLE::GET_VEHICLE_ATTACHED_TO_CARGOBOB(Vehicle cargobob);
----------------------------------------------------------------------------------------------------
```

Returns attached vehicle (Vehicle in parameter must be cargobob)  

```'>
				<Param name='Vehicle cargobob' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleAttachedToEntity' func='yes'>
			<Overload retVal='Vehicle' descr='// 0x375E7FC44F21C8AB
// 0x70DD5E25
VEHICLE::_GET_VEHICLE_ATTACHED_TO_ENTITY(Vehicle object);
----------------------------------------------------------------------------------------------------
```

Get the vehicle attached to the object/entity? May also just convert it to a vehicle, but I&apos;m not su
re.  

```'>
				<Param name='Vehicle object' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleBodyHealth' func='yes'>
			<Overload retVal='float' descr='// 0xF271147EB7B40F12
// 0x2B2FCC28
VEHICLE::GET_VEHICLE_BODY_HEALTH(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Seems related to vehicle health, like the one in IV.  

Max 1000, min 0.  

Vehicle does not necessarily explode or become undrivable at 0.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleBodyHealth_2' func='yes'>
			<Overload retVal='float' descr='// 0xB8EF61207C2393A9
VEHICLE::_GET_VEHICLE_BODY_HEALTH_2(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

0 min 100 max  

starts at 100  

Seams to have health zones  

Front of vehicle when damaged goes from 100-50 and stops at 50.  

Rear can be damaged from 100-0  

Only tested with two cars.  

any idea how this differs from the first one?  

--  

May return the vehicle health on a scale of 0.0 - 100.0 (needs to be confirmed)  

example:  

v_F = ENTITY::GET_ENTITY_MODEL(v_3);  

if (((v_F == ${tanker}) || (v_F == ${armytanker})) || (v_F == ${tanker2})) {  

    if (VEHICLE::_GET_VEHICLE_BODY_HEALTH_2(v_3) &lt;= 1.0) {  

        NETWORK::NETWORK_EXPLODE_VEHICLE(v_3, 1, 1, -1);  

    }  

}  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleCauseOfDestruction' func='yes'>
			<Overload retVal='Hash' descr='// 0xE495D1EF4C91FD20
// 0x7F8C20DD
VEHICLE::GET_VEHICLE_CAUSE_OF_DESTRUCTION(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

iVar3 = get_vehicle_cause_of_destruction(uLocal_248[iVar2]);  

if (iVar3 == joaat(&quot;weapon_stickybomb&quot;))  

{  

     func_171(726);  

     iLocal_260 = 1;  

}  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleClass' func='yes'>
			<Overload retVal='int' descr='// 0x29439776AAA00A62
// 0xC025338E
VEHICLE::GET_VEHICLE_CLASS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Returns an int  

Vehicle Classes:  

0: Compacts  

1: Sedans  

2: SUVs  

3: Coupes  

4: Muscle  

5: Sports Classics  

6: Sports  

7: Super  

8: Motorcycles  

9: Off-road  

10: Industrial  

11: Utility  

12: Vans  

13: Cycles  

14: Boats  

15: Helicopters  

16: Planes  

17: Service  

18: Emergency  

19: Military  

20: Commercial  

21: Trains  

char buffer[128];  

std::sprintf(buffer, &quot;VEH_CLASS_%i&quot;, VEHICLE::GET_VEHICLE_CLASS(vehicle));  

char* className = UI::_GET_LABEL_TEXT(buffer);  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleClassFromName' func='yes'>
			<Overload retVal='int' descr='// 0xDEDF1C8BD47C2200
// 0xEA469980
VEHICLE::GET_VEHICLE_CLASS_FROM_NAME(Hash modelHash);
----------------------------------------------------------------------------------------------------
```

For a full enum, see here : pastebin.com/i2GGAjY0  

char buffer[128];  

std::sprintf(buffer, &quot;VEH_CLASS_%i&quot;, VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));  

char* className = UI::_GET_LABEL_TEXT(buffer);  

```'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleClassMaxAcceleration' func='yes'>
			<Overload retVal='float' descr='// 0x2F83E7E45D9EA7AE
// 0x3E220A9B
VEHICLE::GET_VEHICLE_CLASS_MAX_ACCELERATION(int vehicleClass);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int vehicleClass' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleClassMaxAgility' func='yes'>
			<Overload retVal='float' descr='// 0x4F930AD022D6DE3B
// 0x45F2BD83
VEHICLE::GET_VEHICLE_CLASS_MAX_AGILITY(int vehicleClass);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int vehicleClass' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleClassMaxBraking' func='yes'>
			<Overload retVal='float' descr='// 0x4BF54C16EC8FEC03
// 0xD08CC1A5
VEHICLE::GET_VEHICLE_CLASS_MAX_BRAKING(int vehicleClass);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int vehicleClass' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleClassMaxSpeed' func='yes'>
			<Overload retVal='float' descr='// 0x00C09F246ABEDD82
// 0xCE67162C
VEHICLE::_GET_VEHICLE_CLASS_MAX_SPEED(int vehicleClass);
----------------------------------------------------------------------------------------------------
```

GET_VEHICLE_CLASS_MAX_*  

```'>
				<Param name='int vehicleClass' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleClassMaxTraction' func='yes'>
			<Overload retVal='float' descr='// 0xDBC86D85C5059461
// 0x5B4FDC16
VEHICLE::GET_VEHICLE_CLASS_MAX_TRACTION(int vehicleClass);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int vehicleClass' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleColor' func='yes'>
			<Overload retVal='void' descr='// 0xF3CC740D36221548
// 0x03BC8F1B
VEHICLE::GET_VEHICLE_COLOR(Vehicle vehicle, int* r, int* g, int* b);
----------------------------------------------------------------------------------------------------
```

What&apos;s this for? Primary and Secondary RGB have their own natives and this one doesn&apos;t seem specific
.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int* r' />
				<Param name='int* g' />
				<Param name='int* b' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleColourCombination' func='yes'>
			<Overload retVal='int' descr='// 0x6A842D197F845D56
// 0x77AC1B4C
VEHICLE::GET_VEHICLE_COLOUR_COMBINATION(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleColours' func='yes'>
			<Overload retVal='void' descr='// 0xA19435F193E081AC
// 0x40D82D88
VEHICLE::GET_VEHICLE_COLOURS(Vehicle vehicle, int* colorPrimary, int* colorSecondary);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int* colorPrimary' />
				<Param name='int* colorSecondary' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleCustomPrimaryColour' func='yes'>
			<Overload retVal='void' descr='// 0xB64CF2CCA9D95F52
// 0x1C2B9FEF
VEHICLE::GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int* r' />
				<Param name='int* g' />
				<Param name='int* b' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleCustomSecondaryColour' func='yes'>
			<Overload retVal='void' descr='// 0x8389CD56CA8072DC
// 0x3FF247A2
VEHICLE::GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle, int* r, int* g, int* b);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int* r' />
				<Param name='int* g' />
				<Param name='int* b' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleDashboardColour' func='yes'>
			<Overload retVal='void' descr='// 0xB7635E80A5C31BFF
VEHICLE::_GET_VEHICLE_DASHBOARD_COLOUR(Vehicle vehicle, int* color);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int* color' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleDeformationAtPos' func='yes'>
			<Overload retVal='Vector3' descr='// 0x4EC6CFBC7B2E9536
// 0xABF02075
VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(Vehicle vehicle, float offsetX, float offsetY, float offsetZ)
----------------------------------------------------------------------------------------------------
``

```

The only example I can find of this function in the scripts, is this:  

struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);  

----------------------------------------------------------------------------------------------------
-------------------------------------  

PC scripts:  

v_5/*{3}*/ = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float offsetX' />
				<Param name='float offsetY' />
				<Param name='float offsetZ' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleDirtLevel' func='yes'>
			<Overload retVal='float' descr='// 0x8F17BC8BA08DA62B
// 0xFD15C065
VEHICLE::GET_VEHICLE_DIRT_LEVEL(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Dirt level 0..15  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleDoorAngleRatio' func='yes'>
			<Overload retVal='float' descr='// 0xFE3F9C29F7B32BD5
// 0x0E399C26
VEHICLE::GET_VEHICLE_DOOR_ANGLE_RATIO(Vehicle vehicle, int door);
----------------------------------------------------------------------------------------------------
```

example in vb:  

Public Shared Function Get_Vehicle_Door_Angle(Vehicle As Vehicle, Door As VehicleDoor) As Single  

    Return Native.Function.Call(Of Single)(Hash.GET_VEHICLE_DOOR_ANGLE_RATIO, Vehicle.Handle, Door) 
 

End Function  

		I&apos;m Not MentaL  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int door' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleDoorLockStatus' func='yes'>
			<Overload retVal='int' descr='// 0x25BC98A59C2EA962
// 0x0D72CEF2
VEHICLE::GET_VEHICLE_DOOR_LOCK_STATUS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

2 seems to disable getting vehicle in modshop  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleDoorsLockedForPlayer' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF6AF6CB341349015
// 0x1DC50247
VEHICLE::GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(Vehicle vehicle, Player player);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Player player' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleEngineHealth' func='yes'>
			<Overload retVal='float' descr='// 0xC45D23BAF168AAB8
// 0x8880038A
VEHICLE::GET_VEHICLE_ENGINE_HEALTH(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it&apos;s not 
a vehicle.  

Minimum: -4000  

Maximum: 1000  

-4000: Engine is destroyed  

0 and below: Engine catches fire and health rapidly declines  

300: Engine is smoking and losing functionality  

1000: Engine is perfect  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleEnveffScale' func='yes'>
			<Overload retVal='float' descr='// 0xA82819CAC9C4C403
// 0xD5F1EEE1
VEHICLE::GET_VEHICLE_ENVEFF_SCALE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

formerly known as _GET_VEHICLE_PAINT_FADE  

The result is a value from 0-1, where 0 is fresh paint.  

-----------------------------------------------------------------------  

The actual value isn&apos;t stored as a float but as an unsigned char (BYTE).  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_VEHICLE_PAINT_FADE'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_VEHICLE_PAINT_FADE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetVehicleEnveffScale' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetVehicleExtraColours' func='yes'>
			<Overload retVal='void' descr='// 0x3BC4245933A166F7
// 0x80E4659B
VEHICLE::GET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int* pearlescentColor, int* wheelColor);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int* pearlescentColor' />
				<Param name='int* wheelColor' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleInteriorColour' func='yes'>
			<Overload retVal='void' descr='// 0x7D1464D472D32136
VEHICLE::_GET_VEHICLE_INTERIOR_COLOUR(Vehicle vehicle, int* color);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int* color' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleLayoutHash' func='yes'>
			<Overload retVal='Hash' descr='// 0x28D37D4F71AC5C58
// 0xE0B35187
VEHICLE::GET_VEHICLE_LAYOUT_HASH(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleLightsState' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB91B4C20085BD12F
// 0x7C278621
VEHICLE::GET_VEHICLE_LIGHTS_STATE(Vehicle vehicle, BOOL* lightsOn, BOOL* highbeamsOn);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL* lightsOn' />
				<Param name='BOOL* highbeamsOn' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleLivery' func='yes'>
			<Overload retVal='int' descr='// 0x2BB9230590DA5E8A
// 0xEC82A51D
VEHICLE::GET_VEHICLE_LIVERY(Vehicle trailers2);
----------------------------------------------------------------------------------------------------
```

-1 = no livery  

```'>
				<Param name='Vehicle trailers2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleLiveryCount' func='yes'>
			<Overload retVal='int' descr='// 0x87B63E25A529D526
// 0xFB0CA947
VEHICLE::GET_VEHICLE_LIVERY_COUNT(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Returns -1 if the vehicle has no livery  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleMaxBraking' func='yes'>
			<Overload retVal='float' descr='// 0xAD7E85FC227197C4
// 0x03B926F6
VEHICLE::GET_VEHICLE_MAX_BRAKING(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleMaxNumberOfPassengers' func='yes'>
			<Overload retVal='int' descr='// 0xA7C4F2C6E744A550
// 0x0A2FC08C
VEHICLE::GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleMaxSpeed' func='yes'>
			<Overload retVal='float' descr='// 0x53AF99BAA671CA47
// 0x7D1A0616
VEHICLE::_GET_VEHICLE_MAX_SPEED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleMaxTraction' func='yes'>
			<Overload retVal='float' descr='// 0xA132FB5370554DB0
// 0x7E5A1587
VEHICLE::GET_VEHICLE_MAX_TRACTION(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleMod' func='yes'>
			<Overload retVal='int' descr='// 0x772960298DA26FDB
// 0xDC520069
VEHICLE::GET_VEHICLE_MOD(Vehicle vehicle, int modType);
----------------------------------------------------------------------------------------------------
```

In b944, there are 50 (0 - 49) mod types.  

Returns -1 if the vehicle mod is stock  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int modType' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModColor_1' func='yes'>
			<Overload retVal='void' descr='// 0xE8D65CA700C9A693
// 0xE625510A
VEHICLE::GET_VEHICLE_MOD_COLOR_1(Vehicle vehicle, int* paintType, int* color, int* pearlescentColor);
----------------------------------------------------------------------------------------------------
```

p3 seems to be the pearlescent highlight color.  

Seems redondant with void GET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int *pearlescentColor, int *whe
elColor)  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int* paintType' />
				<Param name='int* color' />
				<Param name='int* pearlescentColor' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModColor_1Name' func='yes'>
			<Overload retVal='char*' descr='// 0xB45085B721EFD38C
// 0x9A0840FD
VEHICLE::GET_VEHICLE_MOD_COLOR_1_NAME(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
```

returns a string which is the codename of the vehicle&apos;s currently selected primary color  

p1 is always 0  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModColor_2' func='yes'>
			<Overload retVal='void' descr='// 0x81592BE4E3878728
// 0x9B76BB8E
VEHICLE::GET_VEHICLE_MOD_COLOR_2(Vehicle vehicle, int* paintType, int* color);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int* paintType' />
				<Param name='int* color' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModColor_2Name' func='yes'>
			<Overload retVal='char*' descr='// 0x4967A516ED23A5A1
// 0x9BDC0B49
VEHICLE::GET_VEHICLE_MOD_COLOR_2_NAME(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

returns a string which is the codename of the vehicle&apos;s currently selected secondary color  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModData' func='yes'>
			<Overload retVal='Any' descr='// 0x4593CF82AA179706
// 0x94850968
VEHICLE::_GET_VEHICLE_MOD_DATA(Vehicle vehicle, int modType, int modIndex);
----------------------------------------------------------------------------------------------------
```

Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int modType' />
				<Param name='int modIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModelAcceleration' func='yes'>
			<Overload retVal='float' descr='// 0x8C044C5C84505B6A
// 0x29CB3537
VEHICLE::GET_VEHICLE_MODEL_ACCELERATION(Hash modelHash);
----------------------------------------------------------------------------------------------------
```

Returns the acceleration of the specified model.  

For a full list, see here: pastebin.com/GaN6vT4R  

```'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModelDownForce' func='yes'>
			<Overload retVal='float' descr='// 0x53409B5163D5B846
// 0x37FBA7BC
VEHICLE::_GET_VEHICLE_MODEL_DOWN_FORCE(Hash modelHash);
----------------------------------------------------------------------------------------------------
```

GET_VEHICLE_MODEL_*  

9.8 * thrust if air vehicle, else 0.38 + drive force?  

For a full list, see here: pastebin.com/bJQeDqNd  

```'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModelHandBrake' func='yes'>
			<Overload retVal='float' descr='// 0xBFBA3BA79CFF7EBF
// 0xF3A7293F
VEHICLE::_GET_VEHICLE_MODEL_HAND_BRAKE(Hash modelHash);
----------------------------------------------------------------------------------------------------
```

GET_VEHICLE_MODEL_MAX_*  

max braking if air vehicle, else max braking + 0.1  

-------------------  

For a full list, see here: pastebin.com/Cb9L1Cn0  

```'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModelMaxBraking' func='yes'>
			<Overload retVal='float' descr='// 0xDC53FD41B4ED944C
// 0x7EF02883
VEHICLE::GET_VEHICLE_MODEL_MAX_BRAKING(Hash modelHash);
----------------------------------------------------------------------------------------------------
```

Returns max braking of the specified vehicle model.  

For a full list, see here: pastebin.com/3N8DVbpG  

```'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModelMaxKnots' func='yes'>
			<Overload retVal='float' descr='// 0xC6AD107DDC9054CC
// 0x95BB67EB
VEHICLE::_GET_VEHICLE_MODEL_MAX_KNOTS(Hash modelHash);
----------------------------------------------------------------------------------------------------
```

GET_VEHICLE_MODEL_*  

Function pertains only to aviation vehicles.  

For a full list, see here: pastebin.com/JwuGNp2K  

```'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModelMaxSpeed' func='yes'>
			<Overload retVal='float' descr='// 0xF417C2502FFFED43
// 0x8F291C4A
VEHICLE::_GET_VEHICLE_MODEL_MAX_SPEED(Hash modelHash);
----------------------------------------------------------------------------------------------------
```

Returns max speed (without mods) of the specified vehicle model in m/s.  

For a full list, see here: pastebin.com/AUuHHK06  

GET_VEHICLE_MODEL_*  

```'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModelMaxTraction' func='yes'>
			<Overload retVal='float' descr='// 0x539DE94D44FDFD0D
// 0x7F985597
VEHICLE::GET_VEHICLE_MODEL_MAX_TRACTION(Hash modelHash);
----------------------------------------------------------------------------------------------------
```

Returns max traction of the specified vehicle model.  

For a full list, see here: pastebin.com/ERnntVjK  

```'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModelMoveResistance' func='yes'>
			<Overload retVal='float' descr='// 0x5AA3F878A178C4FC
// 0x87C5D271
VEHICLE::_GET_VEHICLE_MODEL_MOVE_RESISTANCE(Hash modelHash);
----------------------------------------------------------------------------------------------------
```

GET_VEHICLE_MODEL_*  

called if the vehicle is a boat -- returns vecMoveResistanceX?  

For a full list, see here: pastebin.com/Pyb2RhZ9  

```'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModelNumberOfSeats' func='yes'>
			<Overload retVal='int' descr='// 0x2AD93716F184EDA4
// 0x838F7BF7
VEHICLE::GET_VEHICLE_MODEL_NUMBER_OF_SEATS(Hash modelHash);
----------------------------------------------------------------------------------------------------
```

Returns max number of passengers (including the driver) for the specified vehicle model.  

For a full list, see here: pastebin.com/MdETCS1j  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_VEHICLE_MODEL_MAX_NUMBER_OF_PASSENGERS'>
				<Param name='Hash modelHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_VEHICLE_MODEL_MAX_NUMBER_OF_PASSENGERS' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetVehicleModelNumberOfSeats' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModKit' func='yes'>
			<Overload retVal='int' descr='// 0x6325D1A044AE510D
// 0x9FE60927
VEHICLE::GET_VEHICLE_MOD_KIT(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModKitType' func='yes'>
			<Overload retVal='int' descr='// 0xFC058F5121E54C32
// 0xE5F76765
VEHICLE::GET_VEHICLE_MOD_KIT_TYPE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModModifierValue' func='yes'>
			<Overload retVal='float' descr='// 0x90A38E9838E0A8C1
// 0x73AE5505
VEHICLE::GET_VEHICLE_MOD_MODIFIER_VALUE(Vehicle vehicle, int modType, int modIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int modType' />
				<Param name='int modIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleModVariation' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB3924ECD70E095DC
// 0xC1B92003
VEHICLE::GET_VEHICLE_MOD_VARIATION(Vehicle vehicle, int modType);
----------------------------------------------------------------------------------------------------
```

Returns true if the wheels are custom wheels  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int modType' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleNeonLightsColour' func='yes'>
			<Overload retVal='void' descr='// 0x7619EEE8C886757F
VEHICLE::_GET_VEHICLE_NEON_LIGHTS_COLOUR(Vehicle vehicle, int* r, int* g, int* b);
----------------------------------------------------------------------------------------------------
```

Gets the color of the neon lights of the specified vehicle.  

See _SET_VEHICLE_NEON_LIGHTS_COLOUR (0x8E0A582209A62695) for more information  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int* r' />
				<Param name='int* g' />
				<Param name='int* b' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleNumberOfPassengers' func='yes'>
			<Overload retVal='int' descr='// 0x24CB2137731FFE89
// 0x1EF20849
VEHICLE::GET_VEHICLE_NUMBER_OF_PASSENGERS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to al
so check for the driver  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleNumberPlateText' func='yes'>
			<Overload retVal='char*' descr='// 0x7CE1CCB9B293020E
// 0xE8522D58
VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Returns the license plate text from a vehicle.  8 chars maximum.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleNumberPlateTextIndex' func='yes'>
			<Overload retVal='int' descr='// 0xF11BC2DD9A3E7195
// 0x499747B6
VEHICLE::GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Vehicle elegy);
----------------------------------------------------------------------------------------------------
```

Returns the PlateType of a vehicle  

Blue_on_White_1 = 3,  

Blue_on_White_2 = 0,  

Blue_on_White_3 = 4,  

Yellow_on_Blue = 2,  

Yellow_on_Black = 1,  

North_Yankton = 5,  

```'>
				<Param name='Vehicle elegy' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleOwner' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8F5EBAB1F260CFCE
// 0x4A557117
VEHICLE::_GET_VEHICLE_OWNER(Vehicle vehicle, Entity* entity);
----------------------------------------------------------------------------------------------------
```

The resulting entity can be a Vehicle or Ped.  

The native is stored between GET_VEHICLE_LIVERY_COUNT and GET_VEHICLE_MAX_BRAKING so the actual name
 is either GET_VEHICLE_L* or GET_VEHICLE_M*  

=========================  

on a side note watching changes in memory this will only store your ped&apos;s entityPoolAddress if it&apos;s 
your personal vehicle. So seems to be related to personal vehicles or atleast a specific decor of it
 maybe.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Entity* entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehiclePetrolTankHealth' func='yes'>
			<Overload retVal='float' descr='// 0x7D5DABE888D2D074
// 0xE41595CE
VEHICLE::GET_VEHICLE_PETROL_TANK_HEALTH(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

1000 is max health  

Begins leaking gas at around 650 health  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehiclePlateType' func='yes'>
			<Overload retVal='int' descr='// 0x9CCC9525BF2408E0
// 0x65CA9286
VEHICLE::GET_VEHICLE_PLATE_TYPE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleRecordingId' func='yes'>
			<Overload retVal='int' descr='// 0x21543C612379DB3C
// 0x328D601D
VEHICLE::GET_VEHICLE_RECORDING_ID(int p0, char* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int p0' />
				<Param name='char* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleSuspensionHeight' func='yes'>
			<Overload retVal='float' descr='// 0x53952FD2BAA19F17
// 0xB73A1486
VEHICLE::_GET_VEHICLE_SUSPENSION_HEIGHT(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Gets the height of the vehicle&apos;s suspension.  

The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.  


0.000 is the stock suspension.  

0.008 is Ultra Suspension.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleTrailerVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1CDD6BADC297830D
// 0xAE84D758
VEHICLE::GET_VEHICLE_TRAILER_VEHICLE(Vehicle vehicle, Vehicle* trailer);
----------------------------------------------------------------------------------------------------
```

Gets the trailer of a vehicle and puts it into the trailer parameter.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Vehicle* trailer' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleTyresCanBurst' func='yes'>
			<Overload retVal='BOOL' descr='// 0x678B9BB8C3F58FEB
// 0x4D76CD2F
VEHICLE::GET_VEHICLE_TYRES_CAN_BURST(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleTyreSmokeColor' func='yes'>
			<Overload retVal='void' descr='// 0xB635392A4938B3C3
// 0x75280015
VEHICLE::GET_VEHICLE_TYRE_SMOKE_COLOR(Vehicle vehicle, int* r, int* g, int* b);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int* r' />
				<Param name='int* g' />
				<Param name='int* b' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleWheelType' func='yes'>
			<Overload retVal='int' descr='// 0xB3ED1BFB4BE636DC
// 0xDA58D7AE
VEHICLE::GET_VEHICLE_WHEEL_TYPE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Returns an int  

Wheel Types:  

0: Sport  

1: Muscle  

2: Lowrider  

3: SUV  

4: Offroad  

5: Tuner  

6: Bike Wheels  

7: High End  

Tested in Los Santos Customs  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetVehicleWindowTint' func='yes'>
			<Overload retVal='int' descr='// 0x0EE21293DAD47C95
// 0x13D53892
VEHICLE::GET_VEHICLE_WINDOW_TINT(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPreloadModsFinished' func='yes'>
			<Overload retVal='BOOL' descr='// 0x06F43E5175EB6D96
// 0xA8A0D246
VEHICLE::HAS_PRELOAD_MODS_FINISHED(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasVehicleAssetLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1BBE0523B8DB9A21
// 0x8DAAC3CB
VEHICLE::HAS_VEHICLE_ASSET_LOADED(int vehicleAsset);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int vehicleAsset' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasVehicleJumpingAbility' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9078C0C5EF8C19E9
VEHICLE::_HAS_VEHICLE_JUMPING_ABILITY(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasVehicleParachute' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBC9CFF381338CB4F
VEHICLE::_HAS_VEHICLE_PARACHUTE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasVehicleRecordingBeenLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x300D614A4C785FC4
// 0xF52CD7F5
VEHICLE::HAS_VEHICLE_RECORDING_BEEN_LOADED(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasVehicleRocketBoost' func='yes'>
			<Overload retVal='BOOL' descr='// 0x36D782F68B309BDA
VEHICLE::_HAS_VEHICLE_ROCKET_BOOST(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsAnyVehicleNearPoint' func='yes'>
			<Overload retVal='BOOL' descr='// 0x61E1DD6125A3EEE6
// 0x2867A834
VEHICLE::IS_ANY_VEHICLE_NEAR_POINT(float x, float y, float z, float radius);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float radius' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsBigVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9F243D3919F442FE
// 0x9CDBA8DE
VEHICLE::IS_BIG_VEHICLE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsCopVehicleInArea_3d' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7EEF65D5F153E26A
// 0xFB16C6D1
VEHICLE::IS_COP_VEHICLE_IN_AREA_3D(float x1, float x2, float y1, float y2, float z1, float z2);
----------------------------------------------------------------------------------------------------
```

Usage:  

public bool isCopInRange(Vector3 Location, float Range)  

        {  

            return Function.Call&lt;bool&gt;(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - 
Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);  

        }  

```'>
				<Param name='float x1' />
				<Param name='float x2' />
				<Param name='float y1' />
				<Param name='float y2' />
				<Param name='float z1' />
				<Param name='float z2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsHeliPartBroken' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBC74B4BE25EB6C8A
// 0xF4E4C439
VEHICLE::IS_HELI_PART_BROKEN(Vehicle vehicle, BOOL p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlaybackGoingOnForVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1C8A4C2C19E68EEC
// 0x61F7650D
VEHICLE::IS_PLAYBACK_GOING_ON_FOR_VEHICLE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPlaybackUsingAiGoingOnForVehicle' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAEA8FD591FAD4106
// 0x63022C58
VEHICLE::IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsTaxiLightOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7504C0F113AB50FC
// 0x6FC4924A
VEHICLE::IS_TAXI_LIGHT_ON(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsThisModelABicycle' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBF94DD42F63BDED2
// 0x328E6FF5
VEHICLE::IS_THIS_MODEL_A_BICYCLE(Hash model);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsThisModelABike' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB50C0B0CEDC6CE84
// 0x7E702CDD
VEHICLE::IS_THIS_MODEL_A_BIKE(Hash model);
----------------------------------------------------------------------------------------------------
```

Returns true if the model is motorcycle or bycicle.  

```'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsThisModelABoat' func='yes'>
			<Overload retVal='BOOL' descr='// 0x45A9187928F4B9E3
// 0x10F6085C
VEHICLE::IS_THIS_MODEL_A_BOAT(Hash model);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsThisModelACar' func='yes'>
			<Overload retVal='BOOL' descr='// 0x7F6DB52EEFC96DF8
// 0x60E4C22F
VEHICLE::IS_THIS_MODEL_A_CAR(Hash model);
----------------------------------------------------------------------------------------------------
```

To check if the model is an amphibious car, see gtaforums.com/topic/717612-v-scriptnative-documentat
ion-and-research/page-33#entry1069317363 (for build 944 and above only!)  

```'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsThisModelAHeli' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDCE4334788AF94EA
// 0x8AF7F568
VEHICLE::IS_THIS_MODEL_A_HELI(Hash model);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsThisModelAJetski' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9537097412CF75FE
VEHICLE::_IS_THIS_MODEL_A_JETSKI(Hash model);
----------------------------------------------------------------------------------------------------
```

Checks if model is a boat, then checks for FLAG_IS_JETSKI.  

@whoever named this _IS_THIS_MODEL_AN_EMERGENCY_BOAT: please do some tests before naming natives, th
anks.  

```

----------------------------------------------------------------------------------------------------

Old name: _IS_THIS_MODEL_A_SUBMERSIBLE
Old name: _IS_THIS_MODEL_AN_EMERGENCY_BOAT'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='_IS_THIS_MODEL_A_SUBMERSIBLE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: IsThisModelAJetski' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='_IS_THIS_MODEL_AN_EMERGENCY_BOAT' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: IsThisModelAJetski' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='IsThisModelAnAmphibiousCar' func='yes'>
			<Overload retVal='BOOL' descr='// 0x633F6F44A537EBB6
VEHICLE::_IS_THIS_MODEL_AN_AMPHIBIOUS_CAR(Hash model);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsThisModelAPlane' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA0948AB42D7BA0DE
// 0x3B3907BB
VEHICLE::IS_THIS_MODEL_A_PLANE(Hash model);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsThisModelAQuadbike' func='yes'>
			<Overload retVal='BOOL' descr='// 0x39DAC362EE65FA28
// 0xC1625277
VEHICLE::IS_THIS_MODEL_A_QUADBIKE(Hash model);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsThisModelATrain' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAB935175B22E822B
// 0xF87DCFFD
VEHICLE::IS_THIS_MODEL_A_TRAIN(Hash model);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsToggleModOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0x84B233A8C8FC8AE7
// 0xF0E1689F
VEHICLE::IS_TOGGLE_MOD_ON(Vehicle vehicle, int modType);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int modType' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleAConvertible' func='yes'>
			<Overload retVal='BOOL' descr='// 0x52F357A30698BCCE
// 0x6EF54490
VEHICLE::IS_VEHICLE_A_CONVERTIBLE(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p1 is false almost always.  

However, in launcher_carwash/carwash1/carwash2 scripts, p1 is true and is accompanied by DOES_VEHICL
E_HAVE_ROOF  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleAlarmActivated' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4319E335B71FFF34
// 0xF2630A4C
VEHICLE::IS_VEHICLE_ALARM_ACTIVATED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleAttachedToCargobob' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD40148F22E81A1D9
// 0x5DEEC76C
VEHICLE::IS_VEHICLE_ATTACHED_TO_CARGOBOB(Vehicle cargobob, Vehicle vehicleAttached);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle cargobob' />
				<Param name='Vehicle vehicleAttached' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleAttachedToTowTruck' func='yes'>
			<Overload retVal='BOOL' descr='// 0x146DF9EC4C4B9FD4
// 0x9699CFDC
VEHICLE::IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(Vehicle towTruck, Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Scripts verify that towTruck is the first parameter, not the second.  

```'>
				<Param name='Vehicle towTruck' />
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleAttachedToTrailer' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE7CF3C4F9F489F0C
// 0xE142BBCC
VEHICLE::IS_VEHICLE_ATTACHED_TO_TRAILER(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Public Function isVehicleAttachedToTrailer(vh As Vehicle) As Boolean  

Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ATTACHED_TO_TRAILER, vh)  

		    End Function  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleBumperBrokenOff' func='yes'>
			<Overload retVal='BOOL' descr='// 0x468056A6BB6F3846
// 0xAF25C027
VEHICLE::IS_VEHICLE_BUMPER_BROKEN_OFF(Vehicle vehicle, BOOL front);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL front' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleDamaged' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBCDC5017D3CE1E9E
// 0xDAC523BC
VEHICLE::_IS_VEHICLE_DAMAGED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Appears to return true if the vehicle has any damage, including cosmetically.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleDoorDamaged' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB8E181E559464527
// 0x4999E3C3
VEHICLE::IS_VEHICLE_DOOR_DAMAGED(Vehicle veh, int doorID);
----------------------------------------------------------------------------------------------------
```

doorID starts at 0, not seeming to skip any numbers. Four door vehicles intuitively range from 0 to 
3.  

```'>
				<Param name='Vehicle veh' />
				<Param name='int doorID' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleDoorFullyOpen' func='yes'>
			<Overload retVal='Vehicle' descr='// 0x3E933CFF7B111C22
// 0xC2385B6F
VEHICLE::IS_VEHICLE_DOOR_FULLY_OPEN(Vehicle v, int rwing);
----------------------------------------------------------------------------------------------------
```

doorIndex:  

0 = Front Left Door  

1 = Front Right Door  

2 = Back Left Door  

3 = Back Right Door  

4 = Hood  

5 = Trunk  

6 = Trunk2  

```'>
				<Param name='Vehicle v' />
				<Param name='int rwing' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleDriveable' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4C241E39B23DF959
// 0x41A7267A
VEHICLE::IS_VEHICLE_DRIVEABLE(Vehicle vehicle, BOOL isOnFireCheck);
----------------------------------------------------------------------------------------------------
```

p1 is always 0 in the scripts.  

p1 = check if vehicle is on fire  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL isOnFireCheck' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleExtraTurnedOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD2E6822DBFD6C8BD
// 0x042098B5
VEHICLE::IS_VEHICLE_EXTRA_TURNED_ON(Vehicle vehicle, int extraId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int extraId' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleHighDetail' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1F25887F3C104278
// 0x55D41928
VEHICLE::IS_VEHICLE_HIGH_DETAIL(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleInBurnout' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1297A88E081430EB
// 0x6632BC12
VEHICLE::IS_VEHICLE_IN_BURNOUT(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Returns whether the specified vehicle is currently in a burnout.  

vb.net  

Public Function isVehicleInBurnout(vh As Vehicle) As Boolean  

        Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)  

    End Function  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleInGarageArea' func='yes'>
			<Overload retVal='BOOL' descr='// 0xCEE4490CD57BB3C2
// 0xA90EC257
VEHICLE::IS_VEHICLE_IN_GARAGE_AREA(char* garageName, Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

garageName example &quot;Michael - Beverly Hills&quot;  

For a full list, see here: pastebin.com/73VfwsmS  

```'>
				<Param name='char* garageName' />
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleModel' func='yes'>
			<Overload retVal='BOOL' descr='// 0x423E8DE37D934D89
// 0x013B10B6
VEHICLE::IS_VEHICLE_MODEL(Vehicle vehicle, Hash model);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Hash model' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleModLoadDone' func='yes'>
			<Overload retVal='BOOL' descr='// 0x9A83F5F9963775EF
// 0x112D637A
VEHICLE::_IS_VEHICLE_MOD_LOAD_DONE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Returns whether or not the vehicle has a CVehicleStreamRequestGfx that&apos;s trying to load mods.  

True if it isn&apos;t loading mods, false if it is.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleNeonLightEnabled' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8C4B92553E4766A5
VEHICLE::_IS_VEHICLE_NEON_LIGHT_ENABLED(Vehicle vehicle, int index);
----------------------------------------------------------------------------------------------------
```

indices:  

0 = Left  

1 = Right  

2 = Front  

3 = Back  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleOnAllWheels' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB104CD1BABF302E2
// 0x10089F8E
VEHICLE::IS_VEHICLE_ON_ALL_WHEELS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean  

Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)  

		    End Function  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleRocketBoostActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3D34E80EED4AE3BE
VEHICLE::_IS_VEHICLE_ROCKET_BOOST_ACTIVE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleSearchlightOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC0F97FCE55094987
// 0xADAF3513
VEHICLE::IS_VEHICLE_SEARCHLIGHT_ON(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleSeatFree' func='yes'>
			<Overload retVal='BOOL' descr='// 0x22AC59A870E6A669
// 0xDAF42B02
VEHICLE::IS_VEHICLE_SEAT_FREE(Vehicle vehicle, int seatIndex);
----------------------------------------------------------------------------------------------------
```

Has an additional BOOL parameter since version [???].  

Check if a vehicle seat is free.  

-1 being the driver seat.  

Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int seatIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleShopResprayAllowed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8D474C8FAEFF6CDE
// 0x5EB00A6A
VEHICLE::_IS_VEHICLE_SHOP_RESPRAY_ALLOWED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Checks for FLAG_NO_RESPRAY  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleSirenOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4C9BF537BE2634B2
// 0x25EB5873
VEHICLE::IS_VEHICLE_SIREN_ON(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleSirenSoundOn' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB5CC40FBCB586380
VEHICLE::_IS_VEHICLE_SIREN_SOUND_ON(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleStolen' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4AF9BD80EEBEB453
// 0x20B61DDE
VEHICLE::IS_VEHICLE_STOLEN(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleStopped' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5721B434AD84D57A
// 0x655F072C
VEHICLE::IS_VEHICLE_STOPPED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

MulleDK19: Returns true if the vehicle&apos;s speed is equal to, or less than 0.02 meters per second, or 
0.05 meters per second, if the vehicle&apos;s handbrake is engaged.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleStoppedAtTrafficLights' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2959F696AE390A99
// 0x69200FA4
VEHICLE::IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

is this for red lights only?  more testing required.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleStuckOnRoof' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB497F06B288DCFDF
// 0x18D07C6C
VEHICLE::IS_VEHICLE_STUCK_ON_ROOF(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleStuckTimerUp' func='yes'>
			<Overload retVal='BOOL' descr='// 0x679BE1DAF71DA874
// 0x2FCF58C1
VEHICLE::IS_VEHICLE_STUCK_TIMER_UP(Vehicle vehicle, int p1, int p2);
----------------------------------------------------------------------------------------------------
```

p1 can be anywhere from 0 to 3 in the scripts. p2 is generally somewhere in the 1000 to 10000 range.
  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleTyreBurst' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBA291848A0815CA9
// 0x48C80210
VEHICLE::IS_VEHICLE_TYRE_BURST(Vehicle vehicle, int wheelID, BOOL completely);
----------------------------------------------------------------------------------------------------
```

wheelID used for 4 wheelers seem to be (0, 1, 4, 5)  

completely - is to check if tire completely gone from rim.  

&apos;0 = wheel_lf / bike, plane or jet front  

&apos;1 = wheel_rf  

&apos;2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left  

&apos;3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right  

&apos;4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left  

&apos;5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right  

&apos;45 = 6 wheels trailer mid wheel left  

&apos;47 = 6 wheels trailer mid wheel right  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int wheelID' />
				<Param name='BOOL completely' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleVisible' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAA0A52D24FB98293
// 0x7E0D6056
VEHICLE::IS_VEHICLE_VISIBLE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

must be called after TRACK_VEHICLE_VISIBILITY   

it&apos;s not instant so probabilly must pass an &apos;update&apos; to see correct result.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsVehicleWindowIntact' func='yes'>
			<Overload retVal='BOOL' descr='// 0x46E571A0E20D01F1
// 0xAC4EF23D
VEHICLE::IS_VEHICLE_WINDOW_INTACT(Vehicle vehicle, int windowIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int windowIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='JitterVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xC59872A5134879C7
// 0x4A46E814
VEHICLE::_JITTER_VEHICLE(Vehicle vehicle, BOOL p1, float yaw, float pitch, float roll);
----------------------------------------------------------------------------------------------------
```

When I called this with what the script was doing, which was -190f for yaw pitch and roll, all my ca
r did was jitter a little. I also tried 0 and 190f. I altered the p1 variable between TRUE and FALSE
 and didn&apos;t see a difference.  

This might have something to do with the physbox of the vehicle, but I&apos;m not sure.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
				<Param name='float yaw' />
				<Param name='float pitch' />
				<Param name='float roll' />
			</Overload>
		</KeyWord>
		<KeyWord name='LowerConvertibleRoof' func='yes'>
			<Overload retVal='void' descr='// 0xDED51F703D0FA83D
// 0xC5F72EAE
VEHICLE::LOWER_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL instantlyLower);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL instantlyLower' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x02398b627547189c' func='yes'>
			<Overload retVal='void' descr='// 0x02398B627547189C
// 0x08CD58F9
VEHICLE::_0x02398B627547189C(Vehicle p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0419b167ee128f33' func='yes'>
			<Overload retVal='Any' descr='// 0x0419B167EE128F33
VEHICLE::_0x0419B167EE128F33(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0581730ab9380412' func='yes'>
			<Overload retVal='void' descr='// 0x0581730AB9380412
VEHICLE::_0x0581730AB9380412(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x063ae2b2cc273588' func='yes'>
			<Overload retVal='void' descr='// 0x063AE2B2CC273588
// 0x2EF8435C
VEHICLE::_0x063AE2B2CC273588(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x06582aff74894c75' func='yes'>
			<Overload retVal='void' descr='// 0x06582AFF74894C75
// 0x50F89338
VEHICLE::_0x06582AFF74894C75(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x065d03a9d6b2c6b5' func='yes'>
			<Overload retVal='void' descr='// 0x065D03A9D6B2C6B5
VEHICLE::_0x065D03A9D6B2C6B5(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0a436b8643716d14' func='yes'>
			<Overload retVal='void' descr='// 0x0A436B8643716D14
// 0x6C73E45A
VEHICLE::_0x0A436B8643716D14();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0a6a279f3aa4fd70' func='yes'>
			<Overload retVal='void' descr='// 0x0A6A279F3AA4FD70
// 0x4C0E4031
VEHICLE::_0x0A6A279F3AA4FD70(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0ad9e8f87ff7c16f' func='yes'>
			<Overload retVal='void' descr='// 0x0AD9E8F87FF7C16F
// 0x04F5546C
VEHICLE::_0x0AD9E8F87FF7C16F(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0cdda42f9e360ca6' func='yes'>
			<Overload retVal='void' descr='// 0x0CDDA42F9E360CA6
// 0x9B581DE7
VEHICLE::_0x0CDDA42F9E360CA6(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0d5f65a8f4ebdab5' func='yes'>
			<Overload retVal='void' descr='// 0x0D5F65A8F4EBDAB5
VEHICLE::_0x0D5F65A8F4EBDAB5(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0f3b4d4e43177236' func='yes'>
			<Overload retVal='void' descr='// 0x0F3B4D4E43177236
// 0x113DF5FD
VEHICLE::_0x0F3B4D4E43177236(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x10655fab9915623d' func='yes'>
			<Overload retVal='void' descr='// 0x10655FAB9915623D
VEHICLE::_0x10655FAB9915623D(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1087bc8ec540daeb' func='yes'>
			<Overload retVal='void' descr='// 0x1087BC8EC540DAEB
VEHICLE::_0x1087BC8EC540DAEB(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1093408b4b9d1146' func='yes'>
			<Overload retVal='void' descr='// 0x1093408B4B9D1146
// 0xF30C566F
VEHICLE::_0x1093408B4B9D1146(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1201e8a3290a3b98' func='yes'>
			<Overload retVal='void' descr='// 0x1201E8A3290A3B98
VEHICLE::_0x1201E8A3290A3B98(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1312ddd8385aee4e' func='yes'>
			<Overload retVal='void' descr='// 0x1312DDD8385AEE4E
VEHICLE::_0x1312DDD8385AEE4E(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x16b5e274bde402f8' func='yes'>
			<Overload retVal='void' descr='// 0x16B5E274BDE402F8
// 0x12AC1A16
VEHICLE::_0x16B5E274BDE402F8(Vehicle vehicle, Vehicle trailer, float p2, float p3, float p4, float p5, f
----------------------------------------------------------------------------------------------------
p6, float p7, float p8, float p9, float p10, float p11);

```

```

only documented to be continued...  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Vehicle trailer' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x182f266c2d9e2beb' func='yes'>
			<Overload retVal='void' descr='// 0x182F266C2D9E2BEB
// 0x7D0DE7EA
VEHICLE::_0x182F266C2D9E2BEB(Vehicle vehicle, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x192547247864dfdd' func='yes'>
			<Overload retVal='void' descr='// 0x192547247864DFDD
// 0x90D6EE57
VEHICLE::_0x192547247864DFDD(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1a78ad3d8240536f' func='yes'>
			<Overload retVal='void' descr='// 0x1A78AD3D8240536F
// 0x0858678C
VEHICLE::_0x1A78AD3D8240536F(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1aa8a837d2169d94' func='yes'>
			<Overload retVal='void' descr='// 0x1AA8A837D2169D94
// 0x009AB49E
VEHICLE::_0x1AA8A837D2169D94(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1b212b26dd3c04df' func='yes'>
			<Overload retVal='void' descr='// 0x1B212B26DD3C04DF
VEHICLE::_0x1B212B26DD3C04DF(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1bbac99c0bc53656' func='yes'>
			<Overload retVal='void' descr='// 0x1BBAC99C0BC53656
VEHICLE::_0x1BBAC99C0BC53656(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1d97d1e3a70a649f' func='yes'>
			<Overload retVal='void' descr='// 0x1D97D1E3A70A649F
// 0xA03E42DF
VEHICLE::_0x1D97D1E3A70A649F(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Related to Hao races.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1da0da9cb3f0c8bf' func='yes'>
			<Overload retVal='Any' descr='// 0x1DA0DA9CB3F0C8BF
VEHICLE::_0x1DA0DA9CB3F0C8BF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1dda078d12879eee' func='yes'>
			<Overload retVal='void' descr='// 0x1DDA078D12879EEE
VEHICLE::_0x1DDA078D12879EEE(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1f2e4e06dea8992b' func='yes'>
			<Overload retVal='void' descr='// 0x1F2E4E06DEA8992B
// 0x01B91CD0
VEHICLE::_0x1F2E4E06DEA8992B(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1f34b0626c594380' func='yes'>
			<Overload retVal='void' descr='// 0x1F34B0626C594380
VEHICLE::_0x1F34B0626C594380(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1f9fb66f3a3842d2' func='yes'>
			<Overload retVal='void' descr='// 0x1F9FB66F3A3842D2
// 0x4D840FC4
VEHICLE::_0x1F9FB66F3A3842D2(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x206bc5dc9d1ac70a' func='yes'>
			<Overload retVal='void' descr='// 0x206BC5DC9D1AC70A
VEHICLE::_0x206BC5DC9D1AC70A(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x21115bcd6e44656a' func='yes'>
			<Overload retVal='void' descr='// 0x21115BCD6E44656A
// 0xEBC225C1
VEHICLE::_0x21115BCD6E44656A(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x21973bbf8d17edfa' func='yes'>
			<Overload retVal='void' descr='// 0x21973BBF8D17EDFA
// 0xD5774FB7
VEHICLE::_0x21973BBF8D17EDFA(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
```

Only called once inside main_persitant with the parameters, 0  

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2311dd7159f00582' func='yes'>
			<Overload retVal='void' descr='// 0x2311DD7159F00582
// 0x758C5E2E
VEHICLE::_0x2311DD7159F00582(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2467a2d807d37ca3' func='yes'>
			<Overload retVal='Any' descr='// 0x2467A2D807D37CA3
VEHICLE::_0x2467A2D807D37CA3(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x25367de49d64cf16' func='yes'>
			<Overload retVal='void' descr='// 0x25367DE49D64CF16
// 0xCBD98BA1
VEHICLE::_0x25367DE49D64CF16(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x26d99d5a82fd18e8' func='yes'>
			<Overload retVal='void' descr='// 0x26D99D5A82FD18E8
VEHICLE::_0x26D99D5A82FD18E8(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x279d50de5652d935' func='yes'>
			<Overload retVal='void' descr='// 0x279D50DE5652D935
// 0xB3200F72
VEHICLE::_0x279D50DE5652D935(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x27b926779deb502d' func='yes'>
			<Overload retVal='BOOL' descr='// 0x27B926779DEB502D
// 0xB3A2CC4F
VEHICLE::_0x27B926779DEB502D(Vehicle vehicle, BOOL frontBumper);
----------------------------------------------------------------------------------------------------
```

IS_VEHICLE_BUMPER_HANGING_OFF  

Not sure what the actual name is but this checks if the bumper of a vehicle is hanging off. It will 
return true if it is hanging, false if it falls off and false if it is not hanging off.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL frontBumper' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x28b18377eb6e25f6' func='yes'>
			<Overload retVal='void' descr='// 0x28B18377EB6E25F6
VEHICLE::_0x28B18377EB6E25F6(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2a86a0475b6a1434' func='yes'>
			<Overload retVal='void' descr='// 0x2A86A0475B6A1434
VEHICLE::_0x2A86A0475B6A1434(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2a8f319b392e7b3f' func='yes'>
			<Overload retVal='void' descr='// 0x2A8F319B392E7B3F
// 0xE74E85CE
VEHICLE::_0x2A8F319B392E7B3F(Vehicle vehicle, float p1);
----------------------------------------------------------------------------------------------------
```

VEHICLE::_2A8F319B392E7B3F(vehicle, 0.5);  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2b6747faa9db9d6b' func='yes'>
			<Overload retVal='Any' descr='// 0x2B6747FAA9DB9D6B
// 0x95A9ACCB
VEHICLE::_0x2B6747FAA9DB9D6B(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2c1d8b3b19e517cc' func='yes'>
			<Overload retVal='Any' descr='// 0x2C1D8B3B19E517CC
VEHICLE::_0x2C1D8B3B19E517CC(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2c4a1590abf43e8b' func='yes'>
			<Overload retVal='void' descr='// 0x2C4A1590ABF43E8B
// 0x2EC19A8B
VEHICLE::_0x2C4A1590ABF43E8B(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2c8cbfe1ea5fc631' func='yes'>
			<Overload retVal='Any' descr='// 0x2C8CBFE1EA5FC631
// 0xABC99E21
VEHICLE::_0x2C8CBFE1EA5FC631(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2fa2494b47fdd009' func='yes'>
			<Overload retVal='void' descr='// 0x2FA2494B47FDD009
VEHICLE::_0x2FA2494B47FDD009(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x32caedf24a583345' func='yes'>
			<Overload retVal='void' descr='// 0x32CAEDF24A583345
VEHICLE::_0x32CAEDF24A583345(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x33506883545ac0df' func='yes'>
			<Overload retVal='void' descr='// 0x33506883545AC0DF
// 0x54E9EE75
VEHICLE::_0x33506883545AC0DF(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3441cad2f2231923' func='yes'>
			<Overload retVal='void' descr='// 0x3441CAD2F2231923
// 0xC306A9A3
VEHICLE::_0x3441CAD2F2231923(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x35bb21de06784373' func='yes'>
			<Overload retVal='void' descr='// 0x35BB21DE06784373
VEHICLE::_0x35BB21DE06784373(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x35e0654f4bad7971' func='yes'>
			<Overload retVal='void' descr='// 0x35E0654F4BAD7971
VEHICLE::_0x35E0654F4BAD7971(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x36492c2f0d134c56' func='yes'>
			<Overload retVal='Any' descr='// 0x36492C2F0D134C56
// 0xA4A75FCF
VEHICLE::_0x36492C2F0D134C56(Any p0);
----------------------------------------------------------------------------------------------------
```

Returns a float value related to slipstream.  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x374706271354cb18' func='yes'>
			<Overload retVal='void' descr='// 0x374706271354CB18
// 0x40C4763F
VEHICLE::_0x374706271354CB18(Vehicle vehicle, Entity p1, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Entity p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3b458ddb57038f08' func='yes'>
			<Overload retVal='void' descr='// 0x3B458DDB57038F08
VEHICLE::_0x3B458DDB57038F08(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3de51e9c80b116cf' func='yes'>
			<Overload retVal='Any' descr='// 0x3DE51E9C80B116CF
VEHICLE::_0x3DE51E9C80B116CF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4056ea1105f5abd7' func='yes'>
			<Overload retVal='void' descr='// 0x4056EA1105F5ABD7
VEHICLE::_0x4056EA1105F5ABD7(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x41290b40fa63e6da' func='yes'>
			<Overload retVal='void' descr='// 0x41290B40FA63E6DA
VEHICLE::_0x41290B40FA63E6DA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x428ad3e26c8d9eb0' func='yes'>
			<Overload retVal='void' descr='// 0x428AD3E26C8D9EB0
VEHICLE::_0x428AD3E26C8D9EB0(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x428baccdf5e26ead' func='yes'>
			<Overload retVal='void' descr='// 0x428BACCDF5E26EAD
// 0x1604C2F5
VEHICLE::_0x428BACCDF5E26EAD(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
```

if (!ENTITY::DOES_ENTITY_BELONG_TO_THIS_SCRIPT(g_10A5A._f8B[a_0/*1*/], 1)) {  

sub_20af7(&quot;No longer needed: Vehicle owned by other script&quot;);  

if ((((a_0 == 24) && (!sub_3a04(g_10A5A._f8B[a_0/*1*/]))) && (!sub_39c9(g_10A5A._f8B[a_0/*1*/]))) &&
 (ENTITY::GET_ENTITY_MODEL(g_10A5A._f8B[a_0/*1*/]) != ${monster})) {  

    VEHICLE::_428BACCDF5E26EAD(g_10A5A._f8B[a_0/*1*/], 1);  

}  

g_10A5A._f8B[a_0/*1*/] = 0;  

g_10A5A[a_0/*1*/] = 1;  

sub_20ada(a_0);  

return ;  

		}  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x42a4beb35d372407' func='yes'>
			<Overload retVal='Any' descr='// 0x42A4BEB35D372407
// 0x8CDB0C09
VEHICLE::_0x42A4BEB35D372407(Any p0);
----------------------------------------------------------------------------------------------------
```

LOD related  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4419966c9936071a' func='yes'>
			<Overload retVal='void' descr='// 0x4419966C9936071A
VEHICLE::_0x4419966C9936071A(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x44cd1f493db2a0a6' func='yes'>
			<Overload retVal='void' descr='// 0x44CD1F493DB2A0A6
VEHICLE::_0x44CD1F493DB2A0A6(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x45a561a9421ab6ad' func='yes'>
			<Overload retVal='Any' descr='// 0x45A561A9421AB6AD
VEHICLE::_0x45A561A9421AB6AD(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x48adc8a773564670' func='yes'>
			<Overload retVal='void' descr='// 0x48ADC8A773564670
// 0x37BC6ACB
VEHICLE::_0x48ADC8A773564670();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x48c633e94a8142a7' func='yes'>
			<Overload retVal='Any' descr='// 0x48C633E94A8142A7
VEHICLE::_0x48C633E94A8142A7(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4c815eb175086f84' func='yes'>
			<Overload retVal='Any' descr='// 0x4C815EB175086F84
VEHICLE::_0x4C815EB175086F84(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4d9d109f63fee1d4' func='yes'>
			<Overload retVal='void' descr='// 0x4D9D109F63FEE1D4
// 0x900C878C
VEHICLE::_0x4D9D109F63FEE1D4(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4e20d2a627011e8e' func='yes'>
			<Overload retVal='Any' descr='// 0x4E20D2A627011E8E
VEHICLE::_0x4E20D2A627011E8E(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4e417c547182c84d' func='yes'>
			<Overload retVal='Any' descr='// 0x4E417C547182C84D
VEHICLE::_0x4E417C547182C84D(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4e74e62e0a97e901' func='yes'>
			<Overload retVal='void' descr='// 0x4E74E62E0A97E901
VEHICLE::_0x4E74E62E0A97E901(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x500873a45724c863' func='yes'>
			<Overload retVal='void' descr='// 0x500873A45724C863
VEHICLE::_0x500873A45724C863(Vehicle vehicle, Any p1);
----------------------------------------------------------------------------------------------------
```

console hash: 0x004926A3  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x50634e348c8d44ef' func='yes'>
			<Overload retVal='Any' descr='// 0x50634E348C8D44EF
VEHICLE::_0x50634E348C8D44EF(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x51bb2d88d31a914b' func='yes'>
			<Overload retVal='void' descr='// 0x51BB2D88D31A914B
// 0x88F0F7E7
VEHICLE::_0x51BB2D88D31A914B(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x51db102f4a3ba5e0' func='yes'>
			<Overload retVal='void' descr='// 0x51DB102F4A3BA5E0
// 0x0B0523B0
VEHICLE::_0x51DB102F4A3BA5E0(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5335be58c083e74e' func='yes'>
			<Overload retVal='void' descr='// 0x5335BE58C083E74E
VEHICLE::_0x5335BE58C083E74E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x544996c0081abdeb' func='yes'>
			<Overload retVal='void' descr='// 0x544996C0081ABDEB
VEHICLE::_0x544996C0081ABDEB(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x54b0f614960f4a5f' func='yes'>
			<Overload retVal='Any' descr='// 0x54B0F614960F4A5F
// 0x5AB26C2B
VEHICLE::_0x54B0F614960F4A5F(float p0, float p1, float p2, float p3, float p4, float p5, float p6);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
				<Param name='float p4' />
				<Param name='float p5' />
				<Param name='float p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x563b65a643ed072e' func='yes'>
			<Overload retVal='Any' descr='// 0x563B65A643ED072E
VEHICLE::_0x563B65A643ED072E(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x56b94c6d7127dfba' func='yes'>
			<Overload retVal='void' descr='// 0x56B94C6D7127DFBA
// 0xB1A52EF7
VEHICLE::_0x56B94C6D7127DFBA(Any p0, float p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x56eb5e94318d3fb6' func='yes'>
			<Overload retVal='void' descr='// 0x56EB5E94318D3FB6
VEHICLE::_0x56EB5E94318D3FB6(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
```

console hash = 0x30F43FE3  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x571feb383f629926' func='yes'>
			<Overload retVal='void' descr='// 0x571FEB383F629926
VEHICLE::_0x571FEB383F629926(Vehicle cargobob, BOOL p1);
----------------------------------------------------------------------------------------------------
```

consoel hash 0xAEB29F98  

```'>
				<Param name='Vehicle cargobob' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5845066d8a1ea7f7' func='yes'>
			<Overload retVal='void' descr='// 0x5845066D8A1EA7F7
// 0x943A58EB
VEHICLE::_0x5845066D8A1EA7F7(Vehicle vehicle, float x, float y, float z, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5873c14a52d74236' func='yes'>
			<Overload retVal='Any' descr='// 0x5873C14A52D74236
VEHICLE::_0x5873C14A52D74236(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5b91b229243351a8' func='yes'>
			<Overload retVal='void' descr='// 0x5B91B229243351A8
VEHICLE::_0x5B91B229243351A8(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5ba68a0840d546ac' func='yes'>
			<Overload retVal='Any' descr='// 0x5BA68A0840D546AC
VEHICLE::_0x5BA68A0840D546AC(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5e569ec46ec21cae' func='yes'>
			<Overload retVal='void' descr='// 0x5E569EC46EC21CAE
// 0xBC649C49
VEHICLE::_0x5E569EC46EC21CAE(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5ecb40269053c0d4' func='yes'>
			<Overload retVal='Any' descr='// 0x5ECB40269053C0D4
VEHICLE::_0x5ECB40269053C0D4(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5ee5632f47ae9695' func='yes'>
			<Overload retVal='void' descr='// 0x5EE5632F47AE9695
VEHICLE::_0x5EE5632F47AE9695(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x60190048c0764a26' func='yes'>
			<Overload retVal='Any' descr='// 0x60190048C0764A26
VEHICLE::_0x60190048C0764A26(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x62ca17b74c435651' func='yes'>
			<Overload retVal='BOOL' descr='// 0x62CA17B74C435651
// 0x593143B9
VEHICLE::_0x62CA17B74C435651(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x634148744f385576' func='yes'>
			<Overload retVal='BOOL' descr='// 0x634148744F385576
// 0x6346B7CC
VEHICLE::_0x634148744F385576(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x639431e895b9aa57' func='yes'>
			<Overload retVal='BOOL' descr='// 0x639431E895B9AA57
// 0xAB0E79EB
VEHICLE::_0x639431E895B9AA57(Ped ped, Vehicle vehicle, BOOL p2, BOOL p3, BOOL p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6501129c9e0ffa05' func='yes'>
			<Overload retVal='void' descr='// 0x6501129C9E0FFA05
VEHICLE::_0x6501129C9E0FFA05(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x65b080555ea48149' func='yes'>
			<Overload retVal='void' descr='// 0x65B080555EA48149
VEHICLE::_0x65B080555EA48149(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6636c535f6cc2725' func='yes'>
			<Overload retVal='float' descr='// 0x6636C535F6CC2725
// 0x7C8D6464
VEHICLE::_0x6636C535F6CC2725(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Something related to vehicle lean? (References CVehicleLeanHelper)  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x66979acf5102fd2f' func='yes'>
			<Overload retVal='void' descr='// 0x66979ACF5102FD2F
VEHICLE::_0x66979ACF5102FD2F(Vehicle cargobob, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle cargobob' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x66e3aaface2d1eb8' func='yes'>
			<Overload retVal='void' descr='// 0x66E3AAFACE2D1EB8
VEHICLE::_0x66E3AAFACE2D1EB8(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x685d5561680d088b' func='yes'>
			<Overload retVal='void' descr='// 0x685D5561680D088B
VEHICLE::_0x685D5561680D088B(Vehicle vehicle, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6a98c2ecf57fa5d4' func='yes'>
			<Overload retVal='void' descr='// 0x6A98C2ECF57FA5D4
// 0x20AB5783
VEHICLE::_0x6A98C2ECF57FA5D4(Vehicle vehicle, Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6adaabd3068c5235' func='yes'>
			<Overload retVal='Any' descr='// 0x6ADAABD3068C5235
// 0xA4E69134
VEHICLE::_0x6ADAABD3068C5235();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6d6af961b72728ae' func='yes'>
			<Overload retVal='void' descr='// 0x6D6AF961B72728AE
// 0x8DD9AA0C
VEHICLE::_0x6D6AF961B72728AE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6d8eac07506291fb' func='yes'>
			<Overload retVal='void' descr='// 0x6D8EAC07506291FB
VEHICLE::_0x6D8EAC07506291FB(Vehicle cargobob, float p1);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0x60E29B78  

```'>
				<Param name='Vehicle cargobob' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6eaaefc76acc311f' func='yes'>
			<Overload retVal='Any' descr='// 0x6EAAEFC76ACC311F
VEHICLE::_0x6EAAEFC76ACC311F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6ebfb22d646ffc18' func='yes'>
			<Overload retVal='void' descr='// 0x6EBFB22D646FFC18
// 0x847F1304
VEHICLE::_0x6EBFB22D646FFC18(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
```

sfink: sets bit in vehicle&apos;s structure, used by maintransition, fm_mission_controller, mission_race 
and a couple of other scripts. see dissassembly:   

CVehicle *__fastcall sub_140CDAA10(signed int a1, char a2)  

{  

    CVehicle *result; // rax@1  

    result = EntityAsCVehicle(a1);  

    if ( result )  

    {  

        result-&gt;field_886 &= 0xEFu;  

        result-&gt;field_886 |= 16 * (a2 & 1);  

    }  

    return result;  

}  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x72beccf4b829522e' func='yes'>
			<Overload retVal='void' descr='// 0x72BECCF4B829522E
VEHICLE::_0x72BECCF4B829522E(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x73561d4425a021a2' func='yes'>
			<Overload retVal='void' descr='// 0x73561D4425A021A2
VEHICLE::_0x73561D4425A021A2(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x737e398138550fff' func='yes'>
			<Overload retVal='void' descr='// 0x737E398138550FFF
VEHICLE::_0x737E398138550FFF(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x756ae6e962168a04' func='yes'>
			<Overload retVal='void' descr='// 0x756AE6E962168A04
VEHICLE::_0x756AE6E962168A04(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x76d26a22750e849e' func='yes'>
			<Overload retVal='void' descr='// 0x76D26A22750E849E
VEHICLE::_0x76D26A22750E849E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x78ceee41f49f421f' func='yes'>
			<Overload retVal='void' descr='// 0x78CEEE41F49F421F
VEHICLE::_0x78CEEE41F49F421F(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x796a877e459b99ea' func='yes'>
			<Overload retVal='void' descr='// 0x796A877E459B99EA
// 0x5C9F477C
VEHICLE::_0x796A877E459B99EA(Any p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x79df7e806202ce01' func='yes'>
			<Overload retVal='void' descr='// 0x79DF7E806202CE01
// 0xAEF9611C
VEHICLE::_0x79DF7E806202CE01(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7bbe7ff626a591fe' func='yes'>
			<Overload retVal='void' descr='// 0x7BBE7FF626A591FE
VEHICLE::_0x7BBE7FF626A591FE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7c0043fdff6436bc' func='yes'>
			<Overload retVal='void' descr='// 0x7C0043FDFF6436BC
// 0x0F11D01F
VEHICLE::_0x7C0043FDFF6436BC(Vehicle x);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle x' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7c06330bfdda182e' func='yes'>
			<Overload retVal='void' descr='// 0x7C06330BFDDA182E
VEHICLE::_0x7C06330BFDDA182E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x7d6f9a3ef26136a0' func='yes'>
			<Overload retVal='void' descr='// 0x7D6F9A3EF26136A0
// 0xBB54ECCA
VEHICLE::_0x7D6F9A3EF26136A0(Vehicle vehicle, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

what does this native do?  

Here&apos;s some pseudocode of the internal setter function:  

__int64 __fastcall sub_140CD86B4(signed int vehicle, char a2, char a3)  

{  

  char v3; // di@1  

  char v4; // bl@1  

  __int64 result; // rax@1  

  __int16 v6; // cx@3  

  v3 = a3;  

  v4 = a2;  

  result = GetVehicleAddress(vehicle);  

  if ( result )  

  {  

    if ( v3 || (v6 = *(_WORD *)(result + 0xDA), (v6 & 0xFu) - 6 &lt;= 1) )  

    {  

      *(_BYTE *)(result + 0x89B) &= 0xDFu;  

      *(_BYTE *)(result + 0x89B) |= 32 * (v4 & 1);  

    }  

  }  

  return result;  

}  

Now it&apos;s time for you to find out :P  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x80e3357fdef45c21' func='yes'>
			<Overload retVal='void' descr='// 0x80E3357FDEF45C21
VEHICLE::_0x80E3357FDEF45C21(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8181ce2f25cb9bb7' func='yes'>
			<Overload retVal='Any' descr='// 0x8181CE2F25CB9BB7
VEHICLE::_0x8181CE2F25CB9BB7(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x83f813570ff519de' func='yes'>
			<Overload retVal='void' descr='// 0x83F813570FF519DE
VEHICLE::_0x83F813570FF519DE(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x84ea99c62cb3ef0c' func='yes'>
			<Overload retVal='void' descr='// 0x84EA99C62CB3EF0C
VEHICLE::_0x84EA99C62CB3EF0C(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8533cafde1f0f336' func='yes'>
			<Overload retVal='Any' descr='// 0x8533CAFDE1F0F336
VEHICLE::_0x8533CAFDE1F0F336(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x86b4b6212cb8b627' func='yes'>
			<Overload retVal='void' descr='// 0x86B4B6212CB8B627
VEHICLE::_0x86B4B6212CB8B627(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x870b8b7a766615c8' func='yes'>
			<Overload retVal='void' descr='// 0x870B8B7A766615C8
VEHICLE::_0x870B8B7A766615C8(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x878c75c09fbdb942' func='yes'>
			<Overload retVal='Any' descr='// 0x878C75C09FBDB942
VEHICLE::_0x878C75C09FBDB942();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x88bc673ca9e0ae99' func='yes'>
			<Overload retVal='void' descr='// 0x88BC673CA9E0AE99
// 0xF0E5C41D
VEHICLE::_0x88BC673CA9E0AE99(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x89d630cf5ea96d23' func='yes'>
			<Overload retVal='BOOL' descr='// 0x89D630CF5EA96D23
// 0xFBF5536A
VEHICLE::_0x89D630CF5EA96D23(Vehicle vehicle, Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8aa9180de2fedd45' func='yes'>
			<Overload retVal='void' descr='// 0x8AA9180DE2FEDD45
// 0xAE040377
VEHICLE::_0x8AA9180DE2FEDD45(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8ea86df356801c7d' func='yes'>
			<Overload retVal='void' descr='// 0x8EA86DF356801C7D
VEHICLE::_0x8EA86DF356801C7D(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x8f719973e1445ba2' func='yes'>
			<Overload retVal='void' descr='// 0x8F719973E1445BA2
// 0x35614622
VEHICLE::_0x8F719973E1445BA2(Vehicle vehicle, Vehicle p1);
----------------------------------------------------------------------------------------------------
```

No observed effect.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Vehicle p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9007a2f21dc108d4' func='yes'>
			<Overload retVal='void' descr='// 0x9007A2F21DC108D4
// 0x585E49B6
VEHICLE::_0x9007A2F21DC108D4(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x91a0bd635321f145' func='yes'>
			<Overload retVal='void' descr='// 0x91A0BD635321F145
// 0x1784BA1A
VEHICLE::_0x91A0BD635321F145(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x91d6dd290888cbab' func='yes'>
			<Overload retVal='BOOL' descr='// 0x91D6DD290888CBAB
// 0x71D898EF
VEHICLE::_0x91D6DD290888CBAB();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x92523b76657a517d' func='yes'>
			<Overload retVal='int' descr='// 0x92523B76657A517D
// 0xF31973BB
VEHICLE::_0x92523B76657A517D(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x95cf53b3d687f9fa' func='yes'>
			<Overload retVal='void' descr='// 0x95CF53B3D687F9FA
// 0x06C47A6F
VEHICLE::_0x95CF53B3D687F9FA(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

in the decompiled scripts, seems to be always called on the vehicle right after being attached to a 
trailer.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9737a37136f07e75' func='yes'>
			<Overload retVal='void' descr='// 0x9737A37136F07E75
// 0xE4EF6514
VEHICLE::_0x9737A37136F07E75(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

SET_VEHICLE_DOORS_LOCKED_FOR_*  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x99093f60746708ca' func='yes'>
			<Overload retVal='Any' descr='// 0x99093F60746708CA
VEHICLE::_0x99093F60746708CA(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x99ad4cccb128cbc9' func='yes'>
			<Overload retVal='void' descr='// 0x99AD4CCCB128CBC9
// 0x811373DE
VEHICLE::_0x99AD4CCCB128CBC9(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x99cad8e7afdb60fa' func='yes'>
			<Overload retVal='void' descr='// 0x99CAD8E7AFDB60FA
// 0x1128A45B
VEHICLE::_0x99CAD8E7AFDB60FA(Vehicle vehicle, float p1, float p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float p1' />
				<Param name='float p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9a75585fb2e54fad' func='yes'>
			<Overload retVal='void' descr='// 0x9A75585FB2E54FAD
// 0x935A95DA
VEHICLE::_0x9A75585FB2E54FAD(float p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
```

Example gotten from chinese2.c4  

VEHICLE::_9A75585FB2E54FAD(2004.4471435546875, 3076.806640625, 46.60689926147461, 10.0);  

```'>
				<Param name='float p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9bddc73cc6a115d4' func='yes'>
			<Overload retVal='void' descr='// 0x9BDDC73CC6A115D4
VEHICLE::_0x9BDDC73CC6A115D4(Vehicle vehicle, BOOL p1, BOOL p2);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0x50CDB295  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9becd4b9fef3f8a6' func='yes'>
			<Overload retVal='void' descr='// 0x9BECD4B9FEF3F8A6
// 0xACAB8FF3
VEHICLE::_0x9BECD4B9FEF3F8A6(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9d30687c57baa0bb' func='yes'>
			<Overload retVal='void' descr='// 0x9D30687C57BAA0BB
VEHICLE::_0x9D30687C57BAA0BB(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9f3f689b814f2599' func='yes'>
			<Overload retVal='void' descr='// 0x9F3F689B814F2599
VEHICLE::_0x9F3F689B814F2599(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa01bc64dd4bfbbac' func='yes'>
			<Overload retVal='Any' descr='// 0xA01BC64DD4BFBBAC
VEHICLE::_0xA01BC64DD4BFBBAC(Vehicle vehicle, int p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa17bad153b51547e' func='yes'>
			<Overload retVal='void' descr='// 0xA17BAD153B51547E
VEHICLE::_0xA17BAD153B51547E(Vehicle cargobob, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle cargobob' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa1a9fc1c76a6730d' func='yes'>
			<Overload retVal='Any' descr='// 0xA1A9FC1C76A6730D
VEHICLE::_0xA1A9FC1C76A6730D(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa1dd82f3ccf9a01e' func='yes'>
			<Overload retVal='void' descr='// 0xA1DD82F3CCF9A01E
VEHICLE::_0xA1DD82F3CCF9A01E(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa247f9ef01d8082e' func='yes'>
			<Overload retVal='void' descr='// 0xA247F9EF01D8082E
VEHICLE::_0xA247F9EF01D8082E(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa4822f1cf23f4810' func='yes'>
			<Overload retVal='BOOL' descr='// 0xA4822F1CF23F4810
// 0x34E02FCD
VEHICLE::_0xA4822F1CF23F4810(Vector3* outVec, Any p1, Vector3* outVec1, Any p3, Any p4, Any p5, Any p6, 
----------------------------------------------------------------------------------------------------
p7, Any p8);

```'>
				<Param name='Vector3* outVec' />
				<Param name='Any p1' />
				<Param name='Vector3* outVec1' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa6d3a8750dc73270' func='yes'>
			<Overload retVal='void' descr='// 0xA6D3A8750DC73270
VEHICLE::_0xA6D3A8750DC73270(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa7dcdf4ded40a8f4' func='yes'>
			<Overload retVal='void' descr='// 0xA7DCDF4DED40A8F4
VEHICLE::_0xA7DCDF4DED40A8F4(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaa3f739abddcf21f' func='yes'>
			<Overload retVal='void' descr='// 0xAA3F739ABDDCF21F
VEHICLE::_0xAA3F739ABDDCF21F();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xab04325045427aae' func='yes'>
			<Overload retVal='void' descr='// 0xAB04325045427AAE
// 0x1984F88D
VEHICLE::_0xAB04325045427AAE(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xab31ef4de6800ce9' func='yes'>
			<Overload retVal='void' descr='// 0xAB31EF4DE6800CE9
VEHICLE::_0xAB31EF4DE6800CE9(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xad2d28a1afdff131' func='yes'>
			<Overload retVal='void' descr='// 0xAD2D28A1AFDFF131
// 0xED159AE6
VEHICLE::_0xAD2D28A1AFDFF131(Vehicle vehicle, float value);
----------------------------------------------------------------------------------------------------
```

For planes only!  

value can be 1.0 or lower (higher values will automatically result in 1.0).  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xae3fee8709b39dcb' func='yes'>
			<Overload retVal='BOOL' descr='// 0xAE3FEE8709B39DCB
// 0xE39DAF36
VEHICLE::_0xAE3FEE8709B39DCB(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaf03011701811146' func='yes'>
			<Overload retVal='Any' descr='// 0xAF03011701811146
VEHICLE::_0xAF03011701811146(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xaf60e6a2936f982a' func='yes'>
			<Overload retVal='void' descr='// 0xAF60E6A2936F982A
VEHICLE::_0xAF60E6A2936F982A(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb055a34527cb8fd7' func='yes'>
			<Overload retVal='void' descr='// 0xB055A34527CB8FD7
VEHICLE::_0xB055A34527CB8FD7(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb088e9a47ae6edd5' func='yes'>
			<Overload retVal='void' descr='// 0xB088E9A47AE6EDD5
VEHICLE::_0xB088E9A47AE6EDD5(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb09d25e77c33eb3f' func='yes'>
			<Overload retVal='Any' descr='// 0xB09D25E77C33EB3F
VEHICLE::_0xB09D25E77C33EB3F(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb0ad1238a709b1a2' func='yes'>
			<Overload retVal='Any' descr='// 0xB0AD1238A709B1A2
VEHICLE::_0xB0AD1238A709B1A2(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb264c4d2f2b0a78b' func='yes'>
			<Overload retVal='void' descr='// 0xB264C4D2F2B0A78B
// 0x45F72495
VEHICLE::_0xB264C4D2F2B0A78B(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

This native doesn&apos;t seem to do anything, might be a debug-only native.  

Confirmed, it is a debug native.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb28b1fe5bfadd7f5' func='yes'>
			<Overload retVal='void' descr='// 0xB28B1FE5BFADD7F5
// 0xA739012A
VEHICLE::_0xB28B1FE5BFADD7F5(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
```

No observed effect.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb2e0c0d6922d31f2' func='yes'>
			<Overload retVal='void' descr='// 0xB2E0C0D6922D31F2
VEHICLE::_0xB2E0C0D6922D31F2(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb9562064627ff9db' func='yes'>
			<Overload retVal='void' descr='// 0xB9562064627FF9DB
VEHICLE::_0xB9562064627FF9DB(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xba91d045575699ad' func='yes'>
			<Overload retVal='Any' descr='// 0xBA91D045575699AD
VEHICLE::_0xBA91D045575699AD(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbaa045b4e42f3c06' func='yes'>
			<Overload retVal='void' descr='// 0xBAA045B4E42F3C06
VEHICLE::_0xBAA045B4E42F3C06(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbb2333bb87ddd87f' func='yes'>
			<Overload retVal='void' descr='// 0xBB2333BB87DDD87F
VEHICLE::_0xBB2333BB87DDD87F(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbc3cca5844452b06' func='yes'>
			<Overload retVal='void' descr='// 0xBC3CCA5844452B06
// 0x929801C6
VEHICLE::_0xBC3CCA5844452B06(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbd32e46aa95c1dd2' func='yes'>
			<Overload retVal='void' descr='// 0xBD32E46AA95C1DD2
VEHICLE::_0xBD32E46AA95C1DD2(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xbe5c1255a1830ff5' func='yes'>
			<Overload retVal='void' descr='// 0xBE5C1255A1830FF5
// 0xA6D8D7A5
VEHICLE::_0xBE5C1255A1830FF5(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc0ed6438e6d39ba8' func='yes'>
			<Overload retVal='void' descr='// 0xC0ED6438E6D39BA8
VEHICLE::_0xC0ED6438E6D39BA8(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc1f981a6f74f0c23' func='yes'>
			<Overload retVal='void' descr='// 0xC1F981A6F74F0C23
// 0x00966934
VEHICLE::_0xC1F981A6F74F0C23(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
```

same call as VEHICLE::_0x0F3B4D4E43177236  

```'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc24075310a8b9cd1' func='yes'>
			<Overload retVal='void' descr='// 0xC24075310A8B9CD1
VEHICLE::_0xC24075310A8B9CD1(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc361aa040d6637a8' func='yes'>
			<Overload retVal='void' descr='// 0xC361AA040D6637A8
VEHICLE::_0xC361AA040D6637A8(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc45c27ef50f36adc' func='yes'>
			<Overload retVal='void' descr='// 0xC45C27EF50F36ADC
// 0x4221E435
VEHICLE::_0xC45C27EF50F36ADC(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc4b3347bd68bd609' func='yes'>
			<Overload retVal='void' descr='// 0xC4B3347BD68BD609
VEHICLE::_0xC4B3347BD68BD609(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xc50ce861b55eab8b' func='yes'>
			<Overload retVal='void' descr='// 0xC50CE861B55EAB8B
// 0x40C323AE
VEHICLE::_0xC50CE861B55EAB8B(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xca4ac3eaae46ec7b' func='yes'>
			<Overload retVal='Any' descr='// 0xCA4AC3EAAE46EC7B
VEHICLE::_0xCA4AC3EAAE46EC7B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcac66558b944da67' func='yes'>
			<Overload retVal='void' descr='// 0xCAC66558B944DA67
// 0x0B200CE2
VEHICLE::_0xCAC66558B944DA67(char* vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
```

rerere  

```'>
				<Param name='char* vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcf1182f682f65307' func='yes'>
			<Overload retVal='void' descr='// 0xCF1182F682F65307
VEHICLE::_0xCF1182F682F65307(Any p0, Player p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Player p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcf9159024555488c' func='yes'>
			<Overload retVal='void' descr='// 0xCF9159024555488C
VEHICLE::_0xCF9159024555488C(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcfd778e7904c255e' func='yes'>
			<Overload retVal='void' descr='// 0xCFD778E7904C255E
// 0x3FBE904F
VEHICLE::_0xCFD778E7904C255E(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

what does this do?  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd3301660a57c9272' func='yes'>
			<Overload retVal='void' descr='// 0xD3301660A57C9272
VEHICLE::_0xD3301660A57C9272(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd3e51c0ab8c26eee' func='yes'>
			<Overload retVal='Any' descr='// 0xD3E51C0AB8C26EEE
VEHICLE::_0xD3E51C0AB8C26EEE(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd4196117af7bb974' func='yes'>
			<Overload retVal='Any' descr='// 0xD4196117AF7BB974
VEHICLE::_0xD4196117AF7BB974(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd4c4642cb7f50b5d' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD4C4642CB7F50B5D
VEHICLE::_0xD4C4642CB7F50B5D(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Only used like this:  

if (VEHICLE::_D4C4642CB7F50B5D(ENTITY::GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(v_3))) {                 
                                       sub_157e9c(g_40001._f1868, 0);  

}  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xd565f438137f0e10' func='yes'>
			<Overload retVal='void' descr='// 0xD565F438137F0E10
VEHICLE::_0xD565F438137F0E10(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdba3c090e3d74690' func='yes'>
			<Overload retVal='void' descr='// 0xDBA3C090E3D74690
VEHICLE::_0xDBA3C090E3D74690(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

REQUEST_VEHICLE_*  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdbc631f109350b8c' func='yes'>
			<Overload retVal='void' descr='// 0xDBC631F109350B8C
// 0x486C1280
VEHICLE::_0xDBC631F109350B8C(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Related to locking the vehicle or something similar.  

In the decompiled scripts, its always called after  

VEHICLE::_SET_EXCLUSIVE_DRIVER(a_0, 0, 0);  

VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(a_0, 1);  

VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(a_0, PLAYER::PLAYER_ID(), 0);  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdce97bdf8a0eabc8' func='yes'>
			<Overload retVal='Any' descr='// 0xDCE97BDF8A0EABC8
VEHICLE::_0xDCE97BDF8A0EABC8();
----------------------------------------------------------------------------------------------------
## Return value'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdf7e3eeb29642c38' func='yes'>
			<Overload retVal='void' descr='// 0xDF7E3EEB29642C38
VEHICLE::_0xDF7E3EEB29642C38(Vehicle vehicle, Vector3* out1, Vector3* out2);
----------------------------------------------------------------------------------------------------
```

Outputs 2 Vector3&apos;s.  

Scripts check if out2.x - out1.x &gt; someshit.x  

Could be suspension related, as in max suspension height and min suspension height, considering the 
natives location.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Vector3* out1' />
				<Param name='Vector3* out2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdffcef48e511db48' func='yes'>
			<Overload retVal='void' descr='// 0xDFFCEF48E511DB48
// 0xEB7D7C27
VEHICLE::_0xDFFCEF48E511DB48(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe01903c47c7ac89e' func='yes'>
			<Overload retVal='void' descr='// 0xE01903C47C7AC89E
VEHICLE::_0xE01903C47C7AC89E();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe05dd0e9707003a3' func='yes'>
			<Overload retVal='void' descr='// 0xE05DD0E9707003A3
// 0x123E5B90
VEHICLE::_0xE05DD0E9707003A3(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe16142b94664defd' func='yes'>
			<Overload retVal='void' descr='// 0xE16142B94664DEFD
VEHICLE::_0xE16142B94664DEFD(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe2f53f172b45ede1' func='yes'>
			<Overload retVal='void' descr='// 0xE2F53F172B45EDE1
VEHICLE::_0xE2F53F172B45EDE1();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe301bd63e9e13cf0' func='yes'>
			<Overload retVal='void' descr='// 0xE301BD63E9E13CF0
VEHICLE::_0xE301BD63E9E13CF0(Vehicle vehicle, Vehicle cargobob);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Vehicle cargobob' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe30524e1871f481d' func='yes'>
			<Overload retVal='void' descr='// 0xE30524E1871F481D
// 0xEF05F807
VEHICLE::_0xE30524E1871F481D(Any p0);
----------------------------------------------------------------------------------------------------
```

REMOTE_VEHICLE_*  

```'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe33ffa906ce74880' func='yes'>
			<Overload retVal='BOOL' descr='// 0xE33FFA906CE74880
VEHICLE::_0xE33FFA906CE74880(Vehicle vehicle, Any p1);
----------------------------------------------------------------------------------------------------
```

IS_*  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe3ebaae484798530' func='yes'>
			<Overload retVal='void' descr='// 0xE3EBAAE484798530
// 0x0ED84792
VEHICLE::_0xE3EBAAE484798530(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
```

No observed effect.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe44a982368a4af23' func='yes'>
			<Overload retVal='void' descr='// 0xE44A982368A4AF23
// 0xBAE491C7
VEHICLE::_0xE44A982368A4AF23(Vehicle vehicle, Vehicle vehicle2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Vehicle vehicle2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe4e2fd323574965c' func='yes'>
			<Overload retVal='void' descr='// 0xE4E2FD323574965C
VEHICLE::_0xE4E2FD323574965C(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe5810ac70602f2f5' func='yes'>
			<Overload retVal='void' descr='// 0xE5810AC70602F2F5
// 0xB6BE07E0
VEHICLE::_0xE5810AC70602F2F5(Vehicle vehicle, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe6b0e8cfc3633bf0' func='yes'>
			<Overload retVal='int' descr='// 0xE6B0E8CFC3633BF0
// 0xFBDE9FD8
VEHICLE::_0xE6B0E8CFC3633BF0(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

GET_VEHICLE_*  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe6c0c80b8c867537' func='yes'>
			<Overload retVal='void' descr='// 0xE6C0C80B8C867537
// 0xD2B8ACBD
VEHICLE::_0xE6C0C80B8C867537(BOOL p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe6f13851780394da' func='yes'>
			<Overload retVal='void' descr='// 0xE6F13851780394DA
// 0xCCB41A55
VEHICLE::_0xE6F13851780394DA(Vehicle vehicle, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe842a9398079bd82' func='yes'>
			<Overload retVal='void' descr='// 0xE842A9398079BD82
// 0x66FA450C
VEHICLE::_0xE842A9398079BD82(Vehicle vehicle, float p1);
----------------------------------------------------------------------------------------------------
```

Vehicle must be a boat.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe851e480b814d4ba' func='yes'>
			<Overload retVal='void' descr='// 0xE851E480B814D4BA
// 0x2F98B4B7
VEHICLE::_0xE851E480B814D4BA(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xec69adf931aae0c3' func='yes'>
			<Overload retVal='Any' descr='// 0xEC69ADF931AAE0C3
VEHICLE::_0xEC69ADF931AAE0C3(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xed5ede9e676643c9' func='yes'>
			<Overload retVal='void' descr='// 0xED5EDE9E676643C9
VEHICLE::_0xED5EDE9E676643C9(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xed8286f71a819baa' func='yes'>
			<Overload retVal='void' descr='// 0xED8286F71A819BAA
VEHICLE::_0xED8286F71A819BAA(Vehicle cargobob, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle cargobob' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xedbc8405b3895cc9' func='yes'>
			<Overload retVal='void' descr='// 0xEDBC8405B3895CC9
VEHICLE::_0xEDBC8405B3895CC9(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xeebfc7a7efdc35b4' func='yes'>
			<Overload retVal='int' descr='// 0xEEBFC7A7EFDC35B4
// 0x749DEEA2
VEHICLE::_0xEEBFC7A7EFDC35B4(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Some kind of flags.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xefc13b1ce30d755d' func='yes'>
			<Overload retVal='void' descr='// 0xEFC13B1CE30D755D
VEHICLE::_0xEFC13B1CE30D755D(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf051d9bfb6ba39c0' func='yes'>
			<Overload retVal='void' descr='// 0xF051D9BFB6BA39C0
VEHICLE::_0xF051D9BFB6BA39C0(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf06a16ca55d138d8' func='yes'>
			<Overload retVal='void' descr='// 0xF06A16CA55D138D8
VEHICLE::_0xF06A16CA55D138D8(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf0e4ba16d1db546c' func='yes'>
			<Overload retVal='void' descr='// 0xF0E4BA16D1DB546C
// 0x5BD8D82D
VEHICLE::_0xF0E4BA16D1DB546C(Vehicle vehicle, int p1, int p2);
----------------------------------------------------------------------------------------------------
```

Adds some kind of shadow to the vehicle.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf0f2103efaf8cba7' func='yes'>
			<Overload retVal='Vector3' descr='// 0xF0F2103EFAF8CBA7
// 0x4D1C15C2
VEHICLE::_0xF0F2103EFAF8CBA7(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf25e02cb9c5818f8' func='yes'>
			<Overload retVal='void' descr='// 0xF25E02CB9C5818F8
// 0xF0E59BC1
VEHICLE::_0xF25E02CB9C5818F8();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf3b0e0aed097a3f5' func='yes'>
			<Overload retVal='Any' descr='// 0xF3B0E0AED097A3F5
VEHICLE::_0xF3B0E0AED097A3F5(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf488c566413b4232' func='yes'>
			<Overload retVal='void' descr='// 0xF488C566413B4232
// 0xA25CCB8C
VEHICLE::_0xF488C566413B4232(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf78f94d60248c737' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF78F94D60248C737
VEHICLE::_0xF78F94D60248C737(Any p0, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf7f203e31f96f6a1' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF7F203E31F96F6A1
// 0x769E5CF2
VEHICLE::_0xF7F203E31F96F6A1(Vehicle vehicle, BOOL flag);
----------------------------------------------------------------------------------------------------
```

IS_S*  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL flag' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf87d9f2301f7d206' func='yes'>
			<Overload retVal='void' descr='// 0xF87D9F2301F7D206
// 0x450AD03A
VEHICLE::_0xF87D9F2301F7D206(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf8ebccc96adb9fb7' func='yes'>
			<Overload retVal='void' descr='// 0xF8EBCCC96ADB9FB7
// 0xED23C8A3
VEHICLE::_0xF8EBCCC96ADB9FB7(Any p0, float p1, BOOL p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfaf2a78061fd9ef4' func='yes'>
			<Overload retVal='void' descr='// 0xFAF2A78061FD9EF4
// 0xCD83C393
VEHICLE::_0xFAF2A78061FD9EF4(Any p0, float p1, float p2, float p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
				<Param name='float p2' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfc40cbf7b90ca77c' func='yes'>
			<Overload retVal='void' descr='// 0xFC40CBF7B90CA77C
VEHICLE::_0xFC40CBF7B90CA77C(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xfe205f38aaa58e5b' func='yes'>
			<Overload retVal='void' descr='// 0xFE205F38AAA58E5B
VEHICLE::_0xFE205F38AAA58E5B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='OpenBombBayDoors' func='yes'>
			<Overload retVal='void' descr='// 0x87E7F24270732CB1
// 0x6574041D
VEHICLE::OPEN_BOMB_BAY_DOORS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _OPEN_VEHICLE_BOMB_BAY'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_OPEN_VEHICLE_BOMB_BAY' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: OpenBombBayDoors' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='PausePlaybackRecordedVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x632A689BF42301B1
// 0xCCF54912
VEHICLE::PAUSE_PLAYBACK_RECORDED_VEHICLE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='PreloadVehicleMod' func='yes'>
			<Overload retVal='void' descr='// 0x758F49C24925568A
// 0x6EA5F4A8
VEHICLE::PRELOAD_VEHICLE_MOD(Any p0, int modType, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='int modType' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='RaiseConvertibleRoof' func='yes'>
			<Overload retVal='void' descr='// 0x8F5FB35D7E88FC70
// 0xA4E4CBA3
VEHICLE::RAISE_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL instantlyRaise);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL instantlyRaise' />
			</Overload>
		</KeyWord>
		<KeyWord name='RaiseLowerableWheels' func='yes'>
			<Overload retVal='void' descr='// 0xF660602546D27BA8
VEHICLE::_RAISE_LOWERABLE_WHEELS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ReleasePreloadMods' func='yes'>
			<Overload retVal='void' descr='// 0x445D79F995508307
// 0xD442521F
VEHICLE::RELEASE_PRELOAD_MODS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemovePickUpRopeForCargobob' func='yes'>
			<Overload retVal='void' descr='// 0x9768CF648F54C804
// 0xA8211EE9
VEHICLE::REMOVE_PICK_UP_ROPE_FOR_CARGOBOB(Vehicle cargobob);
----------------------------------------------------------------------------------------------------
```

Retracts the hook on the cargobob.  

Note: after you retract it the natives for dropping the hook no longer work  

```

----------------------------------------------------------------------------------------------------

Old name: _RETRACT_CARGOBOB_HOOK'>
				<Param name='Vehicle cargobob' />
			</Overload>
		</KeyWord>
		<KeyWord name='_RETRACT_CARGOBOB_HOOK' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: RemovePickUpRopeForCargobob' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='RemoveSpeedZone' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1033371FC8E842A7
// 0x0C0332A6
VEHICLE::_REMOVE_SPEED_ZONE(int speedzone);
----------------------------------------------------------------------------------------------------
```

Used to remove a speedzone.  

This is the speed zone native.  

Example usage C#:  

uint speedZone = Function.Call&lt;uint&gt;((Hash) 0x2CE544C68FB812A0, Game.PlayerPed.Position.X, Game.Play
erPed.Position.Y, Game.PlayerPed.Position.Z, 100.0f, 0.0f, false);  

bool speedZoneClosed = Function.Call&lt;bool&gt;((Hash) 0x1033371FC8E842A7, speedZone);  

(Thanks to alexguirre for his help!)  

```'>
				<Param name='int speedzone' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveVehicleAsset' func='yes'>
			<Overload retVal='void' descr='// 0xACE699C71AB9DEB5
// 0x9620E9C6
VEHICLE::REMOVE_VEHICLE_ASSET(int vehicleAsset);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int vehicleAsset' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveVehicleHighDetailModel' func='yes'>
			<Overload retVal='void' descr='// 0x00689CDE5F7C6787
// 0x382BE070
VEHICLE::REMOVE_VEHICLE_HIGH_DETAIL_MODEL(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveVehicleMod' func='yes'>
			<Overload retVal='void' descr='// 0x92D619E420858204
// 0x9CC80A43
VEHICLE::REMOVE_VEHICLE_MOD(Vehicle vehicle, int modType);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int modType' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveVehicleRecording' func='yes'>
			<Overload retVal='void' descr='// 0xF1160ACCF98A3FC8
// 0xD3C05B00
VEHICLE::REMOVE_VEHICLE_RECORDING(Any p0, Any* p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any* p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveVehiclesFromGeneratorsInArea' func='yes'>
			<Overload retVal='void' descr='// 0x46A1E1A299EC4BBA
// 0x42CC15E0
VEHICLE::REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(float x1, float y1, float z1, float x2, float y2, float
----------------------------------------------------------------------------------------------------
Any unk);

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveVehicleStuckCheck' func='yes'>
			<Overload retVal='void' descr='// 0x8386BFB614D06749
// 0x81594917
VEHICLE::REMOVE_VEHICLE_STUCK_CHECK(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveVehicleUpsidedownCheck' func='yes'>
			<Overload retVal='void' descr='// 0xC53EB42A499A7E90
// 0xF390BA1B
VEHICLE::REMOVE_VEHICLE_UPSIDEDOWN_CHECK(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveVehicleWindow' func='yes'>
			<Overload retVal='void' descr='// 0xA711568EEDB43069
// 0xBB8104A3
VEHICLE::REMOVE_VEHICLE_WINDOW(Vehicle vehicle, int windowIndex);
----------------------------------------------------------------------------------------------------
```

windowIndex:  

0 = Front Right Window  

1 = Front Left Window  

2 = Back Right Window  

3 = Back Left Window  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int windowIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestVehicleAsset' func='yes'>
			<Overload retVal='void' descr='// 0x81A15811460FAB3A
// 0x902B4F06
VEHICLE::REQUEST_VEHICLE_ASSET(Hash vehicleHash, int vehicleAsset);
----------------------------------------------------------------------------------------------------
```

REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);  

vehicle found that have asset&apos;s:  

cargobob3  

submersible  

blazer  

```'>
				<Param name='Hash vehicleHash' />
				<Param name='int vehicleAsset' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestVehicleHighDetailModel' func='yes'>
			<Overload retVal='void' descr='// 0xA6E9FDCB2C76785E
// 0x9DA21956
VEHICLE::REQUEST_VEHICLE_HIGH_DETAIL_MODEL(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestVehiclePhoneExplosion' func='yes'>
			<Overload retVal='void' descr='// 0xEF49CF0270307CBE
// 0x65255524
VEHICLE::_REQUEST_VEHICLE_PHONE_EXPLOSION();
----------------------------------------------------------------------------------------------------
```

used for the remote vehicle explode thing with phones  

```'>
			</Overload>
		</KeyWord>
		<KeyWord name='RequestVehicleRecording' func='yes'>
			<Overload retVal='void' descr='// 0xAF514CABE74CBF15
// 0x91AFEFD9
VEHICLE::REQUEST_VEHICLE_RECORDING(int i, char* name);
----------------------------------------------------------------------------------------------------
```

In script files, seen as REQUEST_VEHICLE_RECORDING(1, &quot;FBIs1UBER&quot;);  

```'>
				<Param name='int i' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetVehicleStuckTimer' func='yes'>
			<Overload retVal='void' descr='// 0xD7591B0065AFAA7A
// 0xEF2A6016
VEHICLE::RESET_VEHICLE_STUCK_TIMER(Vehicle vehicle, int nullAttributes);
----------------------------------------------------------------------------------------------------
```

The inner function has a switch on the second parameter. It&apos;s the stuck timer index.  

Here&apos;s some pseudo code I wrote for the inner function:  

void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerInd
ex)  

{  

	switch (timerIndex)  

	{  

	case 0:  

unknownClassInVehicle-&gt;FirstStuckTimer = (WORD)0u;  

	case 1:  

unknownClassInVehicle-&gt;SecondStuckTimer = (WORD)0u;  

	case 2:  

unknownClassInVehicle-&gt;ThirdStuckTimer = (WORD)0u;  

	case 3:  

unknownClassInVehicle-&gt;FourthStuckTimer = (WORD)0u;  

	case 4:  

unknownClassInVehicle-&gt;FirstStuckTimer = (WORD)0u;  

unknownClassInVehicle-&gt;SecondStuckTimer = (WORD)0u;  

unknownClassInVehicle-&gt;ThirdStuckTimer = (WORD)0u;  

unknownClassInVehicle-&gt;FourthStuckTimer = (WORD)0u;  

break;  

	};  

}  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int nullAttributes' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetVehicleWheels' func='yes'>
			<Overload retVal='void' descr='// 0x21D2E5662C1F6FED
// 0xD5FFE779
VEHICLE::RESET_VEHICLE_WHEELS(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='RollDownWindow' func='yes'>
			<Overload retVal='Any' descr='// 0x7AD9E6CE657D69E3
// 0xF840134C
VEHICLE::ROLL_DOWN_WINDOW(Vehicle vehicle, int windowIndex);
----------------------------------------------------------------------------------------------------
```

windowIndex:  

0 = Front Right Window  

1 = Front Left Window  

2 = Back Right Window  

3 = Back Left Window  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int windowIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='RollDownWindows' func='yes'>
			<Overload retVal='void' descr='// 0x85796B0549DDE156
// 0x51A16DC6
VEHICLE::ROLL_DOWN_WINDOWS(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Roll down all the windows of the vehicle passed through the first parameter.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='RollUpWindow' func='yes'>
			<Overload retVal='Any' descr='// 0x602E548F46E24D59
// 0x83B7E06A
VEHICLE::ROLL_UP_WINDOW(Vehicle vehicle, int windowIndex);
----------------------------------------------------------------------------------------------------
```

0 = Front Right Window  

1 = Front Left Window  

2 = Back Right Window  

3 = Back Left Window  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int windowIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAllLowPriorityVehicleGeneratorsActive' func='yes'>
			<Overload retVal='void' descr='// 0x608207E7A8FB787C
// 0x87F767F2
VEHICLE::SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE(BOOL active);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL active' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAllVehicleGeneratorsActive' func='yes'>
			<Overload retVal='void' descr='// 0x34AD89078831A4BC
// 0xAB1FDD76
VEHICLE::SET_ALL_VEHICLE_GENERATORS_ACTIVE();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='SetAllVehicleGeneratorsActiveInArea' func='yes'>
			<Overload retVal='void' descr='// 0xC12321827687FE4D
// 0xB4E0E69A
VEHICLE::SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(float x1, float y1, float z1, float x2, float y2, flo
----------------------------------------------------------------------------------------------------
2, BOOL p6, BOOL p7);

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAllVehiclesSpawn' func='yes'>
			<Overload retVal='Any' descr='// 0xE023E8AC4EF7C117
// 0xA0909ADB
VEHICLE::SET_ALL_VEHICLES_SPAWN(Vehicle p0, BOOL p1, BOOL p2, BOOL p3);
----------------------------------------------------------------------------------------------------
```

Most likely a hash collision  

```'>
				<Param name='Vehicle p0' />
				<Param name='BOOL p1' />
				<Param name='BOOL p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBikeLeanAngle' func='yes'>
			<Overload retVal='void' descr='// 0x9CFA4896C3A53CBB
// 0x15D40761
VEHICLE::_SET_BIKE_LEAN_ANGLE(Vehicle vehicle, float x, float y);
----------------------------------------------------------------------------------------------------
```

Only works on bikes, both X and Y work in the -1 - 1 range.  

X forces the bike to turn left or right (-1, 1)  

Y forces the bike to lean to the left or to the right (-1, 1)  

Example with X -1/Y 1  

http://i.imgur.com/TgIuAPJ.jpg  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float x' />
				<Param name='float y' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetBoatAnchor' func='yes'>
			<Overload retVal='void' descr='// 0x75DBEC174AEEAD10
// 0xA3906284
VEHICLE::SET_BOAT_ANCHOR(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCanResprayVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x52BBA29D5EC69356
// 0x37677590
VEHICLE::SET_CAN_RESPRAY_VEHICLE(Vehicle vehicle, BOOL state);
----------------------------------------------------------------------------------------------------
```

Hardcoded to not work in multiplayer.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCargobobHookPosition' func='yes'>
			<Overload retVal='void' descr='// 0x877C1EAEAC531023
// 0x3A8AB081
VEHICLE::_SET_CARGOBOB_HOOK_POSITION(Vehicle cargobob, float xOffset, float yOffset, int state);
----------------------------------------------------------------------------------------------------
```

For now, I changed the last one from bool to int.  

According to scripts specifically &apos;fm_mission_controller&apos; this last parameter is &apos;false/0&apos; when its 
called after the create rope native above is called for the magnet and &apos;true/1&apos; after the create rop
e native above is called for the hook.  

```'>
				<Param name='Vehicle cargobob' />
				<Param name='float xOffset' />
				<Param name='float yOffset' />
				<Param name='int state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCargobobPickupMagnetActive' func='yes'>
			<Overload retVal='void' descr='// 0x9A665550F8DA349B
VEHICLE::_SET_CARGOBOB_PICKUP_MAGNET_ACTIVE(Vehicle cargobob, BOOL isActive);
----------------------------------------------------------------------------------------------------
```

Console Hash: 0xF57066DA  

Won&apos;t attract or magnetize to any helicopters or planes of course, but that&apos;s common sense.  

```

----------------------------------------------------------------------------------------------------

Old name: _CARGOBOB_MAGNET_GRAB_VEHICLE'>
				<Param name='Vehicle cargobob' />
				<Param name='BOOL isActive' />
			</Overload>
		</KeyWord>
		<KeyWord name='_CARGOBOB_MAGNET_GRAB_VEHICLE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetCargobobPickupMagnetActive' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetCargobobPickupMagnetStrength' func='yes'>
			<Overload retVal='void' descr='// 0xBCBFCD9D1DAC19E2
VEHICLE::_SET_CARGOBOB_PICKUP_MAGNET_STRENGTH(Vehicle cargobob, float strength);
----------------------------------------------------------------------------------------------------
```

console hash 0xCC3CF97D  

```'>
				<Param name='Vehicle cargobob' />
				<Param name='float strength' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCarHighSpeedBumpSeverityMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0x84FD40F56075E816
VEHICLE::_SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER(float multiplier);
----------------------------------------------------------------------------------------------------
```

Something to do with &quot;high speed bump severity&quot;?  

if (!sub_87a46(&quot;SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER&quot;)) {  

    VEHICLE::_84FD40F56075E816(0.0);  

    sub_8795b(&quot;SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER&quot;, 1);  

}  

```'>
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetConvertibleRoof' func='yes'>
			<Overload retVal='void' descr='// 0xF39C4F538B5124C2
// 0xC87B6A51
VEHICLE::SET_CONVERTIBLE_ROOF(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDesiredVerticalFlightPhase' func='yes'>
			<Overload retVal='void' descr='// 0x30D779DE7C4F6DD3
// 0xA7DF64D7
VEHICLE::_SET_DESIRED_VERTICAL_FLIGHT_PHASE(Vehicle vehicle, float angleRatio);
----------------------------------------------------------------------------------------------------
```

MulleDK19: This starts moving the VTOL engines towards the specified angle ratio (0f-1f).  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float angleRatio' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDisableVehiclePetrolTankDamage' func='yes'>
			<Overload retVal='void' descr='// 0x37C8252A7C92D017
// 0xAD3E05F2
VEHICLE::SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetDisableVehiclePetrolTankFires' func='yes'>
			<Overload retVal='void' descr='// 0x465BF26AB9684352
// 0xC40192B5
VEHICLE::SET_DISABLE_VEHICLE_PETROL_TANK_FIRES(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFarDrawVehicles' func='yes'>
			<Overload retVal='void' descr='// 0x26324F33423F3CC3
// 0x9F019C49
VEHICLE::SET_FAR_DRAW_VEHICLES(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetForceHdVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x97CE68CB032583F0
// 0xE0FC6A32
VEHICLE::SET_FORCE_HD_VEHICLE(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetForkliftForkHeight' func='yes'>
			<Overload retVal='void' descr='// 0x37EBBF3117BD6A25
// 0x943A6CFC
VEHICLE::SET_FORKLIFT_FORK_HEIGHT(Vehicle vehicle, float height);
----------------------------------------------------------------------------------------------------
```

Sets some values in a vehicle gadget (tow arm, digger arm, etc.). Don&apos;t know which one though.  

I&apos;ve tested on the towtruck 1 & 2, Dock Lift (Crate Arm), Dozer, and such have no effect. However wh
en used on a Forklift it sets the height of the forks. 0.0 = Lowest 1.0 = Highest. This is best to b
e used if you wanna pick-up a car since un-realistically on GTA V forklifts can&apos;t pick up much of an
ything due to vehicle mass. If you put this under a car then set it above 0.0 to a &apos;lifted-value&apos; it
 will raise the car with no issue lol  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float height' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetGarbageTrucks' func='yes'>
			<Overload retVal='Any' descr='// 0x2AFD795EEAC8D30D
// 0xD9ABB0FF
VEHICLE::SET_GARBAGE_TRUCKS(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHeliBladesFullSpeed' func='yes'>
			<Overload retVal='void' descr='// 0xA178472EBB8AE60D
// 0x033A9408
VEHICLE::SET_HELI_BLADES_FULL_SPEED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Equivalent of SET_HELI_BLADES_SPEED(vehicleHandle, 1.0f);  

this native works on planes to?  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHeliBladesSpeed' func='yes'>
			<Overload retVal='void' descr='// 0xFD280B4D7F3ABC4D
// 0x5C7D4EA9
VEHICLE::SET_HELI_BLADES_SPEED(Vehicle vehicle, float speed);
----------------------------------------------------------------------------------------------------
```

Sets the speed of the helicopter blades in percentage of the full speed.  

vehicleHandle: The helicopter.  

speed: The speed in percentage, 0.0f being 0% and 1.0f being 100%.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetHelicopterRollPitchYawMult' func='yes'>
			<Overload retVal='void' descr='// 0x6E0859B530A365CC
// 0x6E67FD35
VEHICLE::_SET_HELICOPTER_ROLL_PITCH_YAW_MULT(Vehicle helicopter, float multiplier);
----------------------------------------------------------------------------------------------------
```

value between 0.0 and 1.0  

```'>
				<Param name='Vehicle helicopter' />
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetLastDrivenVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xACFB2463CC22BED2
// 0xD1B71A25
VEHICLE::SET_LAST_DRIVEN_VEHICLE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMissionTrainAsNoLongerNeeded' func='yes'>
			<Overload retVal='void' descr='// 0xBBE7648349B49BE8
// 0x19808560
VEHICLE::SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED(Vehicle* train, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p1 is always 0  

```'>
				<Param name='Vehicle* train' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetMissionTrainCoords' func='yes'>
			<Overload retVal='void' descr='// 0x591CA673AA6AB736
// 0xD6D70803
VEHICLE::SET_MISSION_TRAIN_COORDS(Vehicle train, float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle train' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetNumberOfParkedVehicles' func='yes'>
			<Overload retVal='Any' descr='// 0xCAA15F13EBD417FF
// 0x206A58E8
VEHICLE::SET_NUMBER_OF_PARKED_VEHICLES(int value);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetParkedVehicleDensityMultiplierThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xEAE6DCC7EEE3DB1D
// 0xDD46CEBE
VEHICLE::SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedEnabledBikeRingtone' func='yes'>
			<Overload retVal='BOOL' descr='// 0x57715966069157AD
// 0x7FB25568
VEHICLE::SET_PED_ENABLED_BIKE_RINGTONE(Vehicle vehicle, Entity entity);
----------------------------------------------------------------------------------------------------
```

This is a hash collision...  

_IS_VEHICLE_NEAR_ENTITY  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedTargettableVehicleDestroy' func='yes'>
			<Overload retVal='void' descr='// 0xBE70724027F85BCD
// 0xD61D182D
VEHICLE::SET_PED_TARGETTABLE_VEHICLE_DESTROY(Vehicle vehicle, int doorIndex, int destroyType);
----------------------------------------------------------------------------------------------------
```

Hash collision!!!  

SET_VEHICLE_I*  

destroyType is 1 for opens on damage, 2 for breaks on damage.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int doorIndex' />
				<Param name='int destroyType' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlaneMinHeightAboveTerrain' func='yes'>
			<Overload retVal='void' descr='// 0xB893215D8D4C015B
// 0x8C4B63E2
VEHICLE::_SET_PLANE_MIN_HEIGHT_ABOVE_TERRAIN(Vehicle plane, int height);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: _SET_PLANE_MIN_HEIGHT_ABOVE_GROUND'>
				<Param name='Vehicle plane' />
				<Param name='int height' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_PLANE_MIN_HEIGHT_ABOVE_GROUND' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetPlaneMinHeightAboveTerrain' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetPlaybackSpeed' func='yes'>
			<Overload retVal='void' descr='// 0x6683AB880E427778
// 0x684E26E4
VEHICLE::SET_PLAYBACK_SPEED(Vehicle vehicle, float speed);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlaybackToUseAi' func='yes'>
			<Overload retVal='void' descr='// 0xA549C3B37EA28131
// 0xB536CCD7
VEHICLE::SET_PLAYBACK_TO_USE_AI(Vehicle vehicle, int flag);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int flag' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlaybackToUseAiTryToRevertBackLater' func='yes'>
			<Overload retVal='void' descr='// 0x6E63860BBB190730
// 0x0C8ABAA4
VEHICLE::SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER(Any p0, Any p1, Any p2, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPlayersLastVehicle' func='yes'>
			<Overload retVal='Any' descr='// 0xBCDF8BAF56C87B6A
// 0xDE86447D
VEHICLE::SET_PLAYERS_LAST_VEHICLE(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRampVehicleReceivesRampDamage' func='yes'>
			<Overload retVal='void' descr='// 0x28D034A93FE31BF5
VEHICLE::_SET_RAMP_VEHICLE_RECEIVES_RAMP_DAMAGE(Vehicle vehicle, BOOL receivesDamage);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL receivesDamage' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRandomBoats' func='yes'>
			<Overload retVal='Any' descr='// 0x84436EC293B1415F
// 0xB505BD89
VEHICLE::SET_RANDOM_BOATS(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRandomTrains' func='yes'>
			<Overload retVal='void' descr='// 0x80D9F74197EA47D9
// 0xD461CA7F
VEHICLE::SET_RANDOM_TRAINS(BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRandomVehicleDensityMultiplierThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xB3B3359379FE77D3
// 0x543F712B
VEHICLE::SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetRenderTrainAsDerailed' func='yes'>
			<Overload retVal='void' descr='// 0x317B11A312DF5534
// 0x899D9092
VEHICLE::SET_RENDER_TRAIN_AS_DERAILED(Vehicle train, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from
 its normal operations)  

```'>
				<Param name='Vehicle train' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetScriptVehicleGenerator' func='yes'>
			<Overload retVal='void' descr='// 0xD9D620E0AC6DC4B0
// 0x40D73747
VEHICLE::SET_SCRIPT_VEHICLE_GENERATOR(int vehicleGenerator, BOOL enabled);
----------------------------------------------------------------------------------------------------
```

Only called once in the decompiled scripts. Presumably activates the specified generator.  

```'>
				<Param name='int vehicleGenerator' />
				<Param name='BOOL enabled' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSomethingMultiplierThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0xD4B8E3D1917BC86B
// 0x09462665
VEHICLE::_SET_SOMETHING_MULTIPLIER_THIS_FRAME(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

SET_*_MULTIPLIER_THIS_FRAME  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetSomeVehicleDensityMultiplierThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x90B6DA738A9A25DA
// 0xDAE2A2BE
VEHICLE::_SET_SOME_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float value);
----------------------------------------------------------------------------------------------------
```

Judging from the effect, this is some sort of vehicle density multiplier.  

```'>
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTaxiLights' func='yes'>
			<Overload retVal='void' descr='// 0x598803E85E8448D9
// 0x68639D85
VEHICLE::SET_TAXI_LIGHTS(Vehicle vehicle, BOOL state);
----------------------------------------------------------------------------------------------------
```

This is not tested - it&apos;s just an assumption.  

Doesn&apos;t seem to work.  I&apos;ll try with an int instead. --JT  

Read the scripts, im dumpass.   

Doesn&apos;t work at all, wether with an bool neither an int  

                            if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {  

                                VEHICLE::SET_TAXI_LIGHTS(l_115, 1);  

                            }  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTowTruckCraneHeight' func='yes'>
			<Overload retVal='void' descr='// 0xFE54B92A344583CA
// 0x88236E22
VEHICLE::_SET_TOW_TRUCK_CRANE_HEIGHT(Vehicle towTruck, float height);
----------------------------------------------------------------------------------------------------
```

Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully rais
ed.  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_TOW_TRUCK_CRANE_RAISED'>
				<Param name='Vehicle towTruck' />
				<Param name='float height' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_TOW_TRUCK_CRANE_RAISED' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetTowTruckCraneHeight' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetTrainCruiseSpeed' func='yes'>
			<Overload retVal='Any' descr='// 0x16469284DB8C62B5
// 0xB507F51D
VEHICLE::SET_TRAIN_CRUISE_SPEED(Vehicle train, float speed);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle train' />
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetTrainSpeed' func='yes'>
			<Overload retVal='Any' descr='// 0xAA0BC91BE0B796E3
// 0xDFC35E4D
VEHICLE::SET_TRAIN_SPEED(Vehicle train, float speed);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle train' />
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleAlarm' func='yes'>
			<Overload retVal='void' descr='// 0xCDE5E70C1DDB954C
// 0x24877D84
VEHICLE::SET_VEHICLE_ALARM(Vehicle vehicle, BOOL state);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleAllowNoPassengersLockon' func='yes'>
			<Overload retVal='void' descr='// 0x5D14D4154BFE7B2C
// 0x8BAAC437
VEHICLE::SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON(Vehicle veh, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Makes the vehicle accept no passengers.  

```'>
				<Param name='Vehicle veh' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleAutomaticallyAttaches' func='yes'>
			<Overload retVal='Any' descr='// 0x8BA6F76BC53A1493
// 0x4273A8D3
VEHICLE::SET_VEHICLE_AUTOMATICALLY_ATTACHES(Vehicle vehicle, BOOL p1, Any p2);
----------------------------------------------------------------------------------------------------
```

Please change to void.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleBodyHealth' func='yes'>
			<Overload retVal='void' descr='// 0xB77D05AC8C78AADB
// 0x920C2517
VEHICLE::SET_VEHICLE_BODY_HEALTH(Vehicle vehicle, float value);
----------------------------------------------------------------------------------------------------
```

p2 often set to 1000.0 in the decompiled scripts.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleBrakeLights' func='yes'>
			<Overload retVal='void' descr='// 0x92B35082E0B42F66
// 0x6D9BA11E
VEHICLE::SET_VEHICLE_BRAKE_LIGHTS(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleBurnout' func='yes'>
			<Overload retVal='void' descr='// 0xFB8794444A7D60FB
// 0x9B6EF0EA
VEHICLE::SET_VEHICLE_BURNOUT(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

On accelerating, spins the driven wheels with the others braked, so you don&apos;t go anywhere.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleCanBeTargetted' func='yes'>
			<Overload retVal='void' descr='// 0x3750146A28097A82
// 0x64B70B1D
VEHICLE::SET_VEHICLE_CAN_BE_TARGETTED(Vehicle vehicle, BOOL state);
----------------------------------------------------------------------------------------------------
```

This has not yet been tested - it&apos;s just an assumption of what the types could be.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleCanBeUsedByFleeingPeds' func='yes'>
			<Overload retVal='void' descr='// 0x300504B23BD3B711
// 0x5130DB1E
VEHICLE::SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleCanBeVisiblyDamaged' func='yes'>
			<Overload retVal='void' descr='// 0x4C7028F78FFD3681
// 0xC5D94017
VEHICLE::SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(Vehicle vehicle, BOOL state);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleCanBreak' func='yes'>
			<Overload retVal='void' descr='// 0x59BF8C3D52C92F66
// 0x90A810D1
VEHICLE::SET_VEHICLE_CAN_BREAK(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleCeilingHeight' func='yes'>
			<Overload retVal='void' descr='// 0xA46413066687A328
// 0x98A10A86
VEHICLE::SET_VEHICLE_CEILING_HEIGHT(Vehicle vehicle, float p1);
----------------------------------------------------------------------------------------------------
```

Previously named GET_VEHICLE_DEFORMATION_GET_TREE (hash collision)  

from Decrypted Scripts I found  

VEHICLE::SET_VEHICLE_CEILING_HEIGHT(l_BD9[2/*2*/], 420.0);  

```

----------------------------------------------------------------------------------------------------

Old name: GET_VEHICLE_DEFORMATION_GET_TREE'>
				<Param name='Vehicle vehicle' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GET_VEHICLE_DEFORMATION_GET_TREE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetVehicleCeilingHeight' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetVehicleColourCombination' func='yes'>
			<Overload retVal='void' descr='// 0x33E8CD3322E2FE31
// 0xA557AEAD
VEHICLE::SET_VEHICLE_COLOUR_COMBINATION(Vehicle vehicle, int colorCombination);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int colorCombination' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleColours' func='yes'>
			<Overload retVal='void' descr='// 0x4F1D4BE3A7F24601
// 0x57F24253
VEHICLE::SET_VEHICLE_COLOURS(Vehicle vehicle, int colorPrimary, int colorSecondary);
----------------------------------------------------------------------------------------------------
```

colorPrimary & colorSecondary are the paint index for the vehicle.  

For a list of valid paint indexes, view: pastebin.com/pwHci0xK  

-------------------------------------------------------------------------  

Use this to get the number of color indices: pastebin.com/RQEeqTSM  

Note: minimum color index is 0, maximum color index is (numColorIndices - 1)  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int colorPrimary' />
				<Param name='int colorSecondary' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleCustomPrimaryColour' func='yes'>
			<Overload retVal='void' descr='// 0x7141766F91D15BEA
// 0x8DF9F9BC
VEHICLE::SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(Vehicle vehicle, int r, int g, int b);
----------------------------------------------------------------------------------------------------
```

p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleCustomSecondaryColour' func='yes'>
			<Overload retVal='void' descr='// 0x36CED73BFED89754
// 0x9D77259E
VEHICLE::SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(Vehicle vehicle, int r, int g, int b);
----------------------------------------------------------------------------------------------------
```

p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDamage' func='yes'>
			<Overload retVal='void' descr='// 0xA1DD317EA8FD4F29
// 0x21B458B2
VEHICLE::SET_VEHICLE_DAMAGE(Vehicle vehicle, float xOffset, float yOffset, float zOffset, float damage, 
----------------------------------------------------------------------------------------------------
t radius, BOOL p6);

```

```

Apply damage to vehicle at a location. Location is relative to vehicle model (not world).  

Radius of effect damage applied in a sphere at impact location  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float xOffset' />
				<Param name='float yOffset' />
				<Param name='float zOffset' />
				<Param name='float damage' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDashboardColour' func='yes'>
			<Overload retVal='void' descr='// 0x6089CDF6A57F326C
VEHICLE::_SET_VEHICLE_DASHBOARD_COLOUR(Vehicle vehicle, int color);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int color' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDeformationFixed' func='yes'>
			<Overload retVal='void' descr='// 0x953DA1E1B12C0491
// 0xDD2920C8
VEHICLE::SET_VEHICLE_DEFORMATION_FIXED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

This fixes the deformation of a vehicle but the vehicle health doesn&apos;t improve  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDensityMultiplierThisFrame' func='yes'>
			<Overload retVal='void' descr='// 0x245A6883D966D537
// 0xF4187E51
VEHICLE::SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(float multiplier);
----------------------------------------------------------------------------------------------------
```

• Usage  

→ Use this native inside a looped function.  

→ Values:  

   → 0.0 = no vehicles on streets  

   → 1.0 = normal vehicles on streets  

```'>
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDirtLevel' func='yes'>
			<Overload retVal='void' descr='// 0x79D3B596FE44EE8B
// 0x2B39128B
VEHICLE::SET_VEHICLE_DIRT_LEVEL(Vehicle vehicle, float dirtLevel);
----------------------------------------------------------------------------------------------------
```

You can&apos;t use values greater than 15.0  

You can see why here: pastebin.com/Wbn34fGD  

Also, R* does (float)(rand() % 15) to get a random dirt level when generating a vehicle.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float dirtLevel' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDoorBroken' func='yes'>
			<Overload retVal='void' descr='// 0xD4D4F6A4AB575A33
// 0x8147FEA7
VEHICLE::SET_VEHICLE_DOOR_BROKEN(Vehicle vehicle, int doorIndex, BOOL deleteDoor);
----------------------------------------------------------------------------------------------------
```

doorIndex:  

0 = Front Right Door  

1 = Front Left Door  

2 = Back Right Door  

3 = Back Left Door  

4 = Hood  

5 = Trunk  

Changed last paramater from CreateDoorObject To NoDoorOnTheFloor because when on false, the door obj
ect is created,and not created when on true...the former parameter name was counter intuitive...(by 
Calderon)  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int doorIndex' />
				<Param name='BOOL deleteDoor' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDoorCanBreak' func='yes'>
			<Overload retVal='void' descr='// 0x2FA133A4A9D37ED8
// 0x065B92B3
VEHICLE::_SET_VEHICLE_DOOR_CAN_BREAK(Vehicle vehicle, int doorIndex, BOOL isBreakable);
----------------------------------------------------------------------------------------------------
```

Keeps Vehicle Doors/Hood/Trunk from breaking off  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_VEHICLE_DOOR_BREAKABLE'>
				<Param name='Vehicle vehicle' />
				<Param name='int doorIndex' />
				<Param name='BOOL isBreakable' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_VEHICLE_DOOR_BREAKABLE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetVehicleDoorCanBreak' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDoorControl' func='yes'>
			<Overload retVal='void' descr='// 0xF2BFA0430F0A0FCB
// 0x572DD360
VEHICLE::SET_VEHICLE_DOOR_CONTROL(Vehicle vehicle, int doorIndex, int speed, float angle);
----------------------------------------------------------------------------------------------------
```

doorIndex:  

0 = Front Left Door (driver door)  

1 = Front Right Door  

2 = Back Left Door  

3 = Back Right Door  

4 = Hood  

5 = Trunk  

6 = Trunk2  

p2:  

mostly use 0 and 1, very rare using 3 and 5  

p3:  

It seems it is an angle  

Example in VB:   

    Public Shared Sub Set_Vehicle_Door_Angle(Vehicle As Vehicle, Door As VehicleDoor, Angle As Singl
e)  

        Native.Function.Call(Hash.SET_VEHICLE_DOOR_CONTROL, Vehicle.Handle, Door, 1, Angle)  

    End Sub  

I&apos;m Not MentaL  

sfink: p2 is speed, 5 is fast, 1 is slow 3 is medium  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int doorIndex' />
				<Param name='int speed' />
				<Param name='float angle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDoorLatched' func='yes'>
			<Overload retVal='void' descr='// 0xA5A9653A8D2CAF48
// 0x4EB7BBFC
VEHICLE::SET_VEHICLE_DOOR_LATCHED(Vehicle vehicle, int doorIndex, BOOL forceClose, BOOL lock, BOOL p4);
----------------------------------------------------------------------------------------------------
`

```

When lock is false other entities can overwrite it.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int doorIndex' />
				<Param name='BOOL forceClose' />
				<Param name='BOOL lock' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDoorOpen' func='yes'>
			<Overload retVal='void' descr='// 0x7C65DAC73C35C862
// 0xBB75D38B
VEHICLE::SET_VEHICLE_DOOR_OPEN(Vehicle vehicle, int doorIndex, BOOL loose, BOOL openInstantly);
----------------------------------------------------------------------------------------------------
```

doorIndex:  

0 = Front Left Door  

1 = Front Right Door  

2 = Back Left Door  

3 = Back Right Door  

4 = Hood  

5 = Trunk  

6 = Back  

7 = Back2  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int doorIndex' />
				<Param name='BOOL loose' />
				<Param name='BOOL openInstantly' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDoorShut' func='yes'>
			<Overload retVal='void' descr='// 0x93D9BD300D7789E5
// 0x142606BD
VEHICLE::SET_VEHICLE_DOOR_SHUT(Vehicle vehicle, int doorIndex, BOOL closeInstantly);
----------------------------------------------------------------------------------------------------
```

doorIndex:  

0 = Front Left Door  

1 = Front Right Door  

2 = Back Left Door  

3 = Back Right Door  

4 = Hood  

5 = Trunk  

6 = Trunk2  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int doorIndex' />
				<Param name='BOOL closeInstantly' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDoorsLocked' func='yes'>
			<Overload retVal='void' descr='// 0xB664292EAECF7FA6
// 0x4CDD35D0
VEHICLE::SET_VEHICLE_DOORS_LOCKED(Vehicle vehicle, int doorLockStatus);
----------------------------------------------------------------------------------------------------
```

1   

2 - CARLOCK_LOCKED (locked)  

3   

4 - CARLOCK_LOCKED_PLAYER_INSIDE (can get in, can&apos;t leave)  

(maybe, these are leftovers from GTA:VC)  

5   

6   

7   

(source: GTA VC miss2 leak, matching constants for 0/2/4, testing)  

They use 10 in am_mp_property_int, don&apos;t know what it does atm.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int doorLockStatus' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDoorsLockedForAllPlayers' func='yes'>
			<Overload retVal='void' descr='// 0xA2F80B8D040727CC
// 0x891BA8A4
VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

After some analysis, I&apos;ve decided that these are what the parameters are.  

We can see this being used in R* scripts such as &quot;am_mp_property_int.ysc.c4&quot;:  

l_11A1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 1);  

...  

VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(l_11A1, 1);  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDoorsLockedForPlayer' func='yes'>
			<Overload retVal='void' descr='// 0x517AAF684BB50CD1
// 0x49829236
VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(Vehicle vehicle, Player player, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Player player' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDoorsLockedForTeam' func='yes'>
			<Overload retVal='void' descr='// 0xB81F6D4A8F5EEBA8
// 0x4F85E783
VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_TEAM(Vehicle vehicle, int team, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int team' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDoorsShut' func='yes'>
			<Overload retVal='void' descr='// 0x781B3D62BB013EF5
// 0xBB1FF6E7
VEHICLE::SET_VEHICLE_DOORS_SHUT(Vehicle vehicle, BOOL closeInstantly);
----------------------------------------------------------------------------------------------------
```

Closes all doors of a vehicle:  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL closeInstantly' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleDropsMoneyWhenBlownUp' func='yes'>
			<Overload retVal='void' descr='// 0x068F64F2470F9656
// 0x4BB5605D
VEHICLE::SET_VEHICLE_DROPS_MONEY_WHEN_BLOWN_UP(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Money pickups are created around cars when they explodes. Only works when the vehicle model is a car
. A single pickup is between 1 and 18 dollars in size. All car models seems to give the same amount 
of money.  

youtu.be/3arlUxzHl5Y   

i.imgur.com/WrNpYFs.jpg  

From the scripts:  

VEHICLE::_068F64F2470F9656(l_36, 0);  

Found a &quot;correct&quot; name for this :P  

_dead_vehicle_pickups_dies_when_set_exploded_destroy_it_drops_on_money  

SET_VEHICLE_D* or SET_VEHICLE_E*  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_VEHICLE_CREATES_MONEY_PICKUPS_WHEN_EXPLODED'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_VEHICLE_CREATES_MONEY_PICKUPS_WHEN_EXPLODED' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetVehicleDropsMoneyWhenBlownUp' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetVehicleEngineCanDegrade' func='yes'>
			<Overload retVal='void' descr='// 0x983765856F2564F9
// 0x081DAC12
VEHICLE::SET_VEHICLE_ENGINE_CAN_DEGRADE(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleEngineHealth' func='yes'>
			<Overload retVal='void' descr='// 0x45F6D8EEF34ABEF1
// 0x1B760FB5
VEHICLE::SET_VEHICLE_ENGINE_HEALTH(Vehicle vehicle, float health);
----------------------------------------------------------------------------------------------------
```

1000 is max health  

Begins leaking gas at around 650 health  

-999.90002441406 appears to be minimum health, although nothing special occurs &lt;- false statement  


-------------------------  

Minimum: -4000  

Maximum: 1000  

-4000: Engine is destroyed  

0 and below: Engine catches fire and health rapidly declines  

300: Engine is smoking and losing functionality  

1000: Engine is perfect  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float health' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleEngineOn' func='yes'>
			<Overload retVal='void' descr='// 0x2497C4717C8B881E
// 0x7FBC86F1
VEHICLE::SET_VEHICLE_ENGINE_ON(Vehicle vehicle, BOOL value, BOOL instantly, BOOL otherwise);
----------------------------------------------------------------------------------------------------
```

Starts or stops the engine on the specified vehicle.  

vehicle: The vehicle to start or stop the engine on.  

value: true to turn the vehicle on; false to turn it off.  

instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver 
will physically turn on or off the engine.  

--------------------------------------  

from what I&apos;ve tested when I do this to a helicopter the propellers turn off after the engine has st
arted. so is there any way to keep the heli propellers on?  

--------------------------------------  

And what&apos;s with BOOL otherwise, what does it do???  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL value' />
				<Param name='BOOL instantly' />
				<Param name='BOOL otherwise' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleEnginePowerMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0x93A3996368C94158
// 0xE943B09C
VEHICLE::_SET_VEHICLE_ENGINE_POWER_MULTIPLIER(Vehicle vehicle, float value);
----------------------------------------------------------------------------------------------------
```

Vehicle power multiplier.  

Does not have to be looped each frame. Can be set once.  

Values lower than 1f don&apos;t work.  

Note: If the value is set with GET_RANDOM_FLOAT_IN_RANGE, the vehicle will have an absurdly high amm
ount of power, and will become almost undrivable for the player or NPCs. The range doesn&apos;t seem to m
atter.  

An high value like 10000000000f will visually remove the wheels that apply the power (front wheels f
or FWD, rear wheels for RWD), but the power multiplier will still apply, and the wheels still work. 
 

------  

value is a percentage bump which affects directly the parameter known as fInitialDriveForce in handl
ing.meta. For example:  

VEHICLE::_SET_VEHICLE_ENGINE_POWER_MULTIPLIER(myVehicle, 30.0)  

will have this effect: DriveForce *= 1.3  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleEngineTorqueMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0xB59E4BD37AE292DB
// 0x642DA5AA
VEHICLE::_SET_VEHICLE_ENGINE_TORQUE_MULTIPLIER(Vehicle vehicle, float value);
----------------------------------------------------------------------------------------------------
```

&lt;1.0 - Decreased torque  

=1.0 - Default torque  

&gt;1.0 - Increased torque  

Negative values will cause the vehicle to go backwards instead of forwards while accelerating.  

value - is between 0.2 and 1.8 in the decompiled scripts.   

This needs to be called every frame to take effect.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleEnveffScale' func='yes'>
			<Overload retVal='void' descr='// 0x3AFDC536C3D01674
// 0x8332730C
VEHICLE::SET_VEHICLE_ENVEFF_SCALE(Vehicle vehicle, float fade);
----------------------------------------------------------------------------------------------------
```

formerly known as _SET_VEHICLE_PAINT_FADE  

The parameter fade is a value from 0-1, where 0 is fresh paint.  

------------------------------------------------------------------------------------  

The actual value isn&apos;t stored as a float but as an unsigned char (BYTE). More info here: pastebin.co
m/r0h6EM5s  

--------------  

Separate Person: I didn&apos;t want to be rude and remove it, but whom ever posted that pastebin above pl
ease remove it as the paste says it has been removed.  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_VEHICLE_PAINT_FADE'>
				<Param name='Vehicle vehicle' />
				<Param name='float fade' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_VEHICLE_PAINT_FADE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetVehicleEnveffScale' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetVehicleExclusiveDriver' func='yes'>
			<Overload retVal='void' descr='// 0x41062318F23ED854
// 0xAA8BD440
VEHICLE::SET_VEHICLE_EXCLUSIVE_DRIVER(Vehicle vehicle, Ped ped);
----------------------------------------------------------------------------------------------------
```

Seems according to TU27 X360 Scripts, this has 3 arguments as well.  

SET_VEHICLE_EXCLUSIVE_DRIVER(vehicle, 0, 0); in freemode.c  

In case 5 of a switch case, is the only time it shows Arg2 being PLAYER_PED_ID(), otherwise it&apos;s 0. 
Arg3 always seems to be 0.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleExclusiveDriver_2' func='yes'>
			<Overload retVal='void' descr='// 0xB5C51B5502E85E83
VEHICLE::_SET_VEHICLE_EXCLUSIVE_DRIVER_2(Vehicle vehicle, Ped ped, int p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='Ped ped' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleExplodesOnHighExplosionDamage' func='yes'>
			<Overload retVal='void' descr='// 0x71B0892EC081D60A
// 0x38CC692B
VEHICLE::SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle 
the effect on/off.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleExtra' func='yes'>
			<Overload retVal='void' descr='// 0x7EE3A3C5E4A40CC9
// 0x642D065C
VEHICLE::SET_VEHICLE_EXTRA(Vehicle vehicle, int extraId, BOOL disable);
----------------------------------------------------------------------------------------------------
```

Note: only some vehicle have extras  

extra ids are from 1 - 9 depending on the vehicle  

-------------------------------------------------  

^ not sure if outdated or simply wrong. Max extra ID for b944 is 14  

-------------------------------------------------  

p2 is not a on/off toggle. mostly 0 means on and 1 means off.  

not sure if it really should be a BOOL.  

-------------------------------------------------  

Confirmed p2 does not work as a bool. Changed to int. [0=on, 1=off]  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int extraId' />
				<Param name='BOOL disable' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleExtraColours' func='yes'>
			<Overload retVal='void' descr='// 0x2036F561ADD12E33
// 0x515DB2A0
VEHICLE::SET_VEHICLE_EXTRA_COLOURS(Vehicle vehicle, int pearlescentColor, int wheelColor);
----------------------------------------------------------------------------------------------------
```

They use the same color indexs as SET_VEHICLE_COLOURS.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int pearlescentColor' />
				<Param name='int wheelColor' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleFixed' func='yes'>
			<Overload retVal='void' descr='// 0x115722B1B9C14C1C
// 0x17469AA1
VEHICLE::SET_VEHICLE_FIXED(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleForwardSpeed' func='yes'>
			<Overload retVal='void' descr='// 0xAB54A438726D25D5
// 0x69880D14
VEHICLE::SET_VEHICLE_FORWARD_SPEED(Vehicle vehicle, float speed);
----------------------------------------------------------------------------------------------------
```

SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.  


Speed is in meters per second  

You can convert meters/s to mph here:  

http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float speed' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleFrictionOverride' func='yes'>
			<Overload retVal='void' descr='// 0x1837AF7C627009BA
// 0x32AFD42E
VEHICLE::SET_VEHICLE_FRICTION_OVERRIDE(Vehicle vehicle, float friction);
----------------------------------------------------------------------------------------------------
```

Seems to be related to the metal parts, not tyres (like i was expecting lol)  

Must be called every tick.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float friction' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleFullbeam' func='yes'>
			<Overload retVal='void' descr='// 0x8B7FD87F0DDB421E
// 0x9C49CC15
VEHICLE::SET_VEHICLE_FULLBEAM(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

It switch to highbeam when p1 is set to true.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleGravity' func='yes'>
			<Overload retVal='void' descr='// 0x89F149B6131E57DA
// 0x07B2A6DC
VEHICLE::SET_VEHICLE_GRAVITY(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleHalt' func='yes'>
			<Overload retVal='void' descr='// 0x260BE8F09E326A20
// 0xCBC7D3C8
VEHICLE::_SET_VEHICLE_HALT(Vehicle vehicle, float distance, int killEngine, BOOL unknown);
----------------------------------------------------------------------------------------------------
```

This native makes the vehicle stop immediately, as happens when we enter a MP garage.  

. distance defines how far it will travel until stopping. Garage doors use 3.0.  

. If killEngine is set to 1, you cannot resume driving the vehicle once it stops. This looks like is
 a bitmapped integer.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float distance' />
				<Param name='int killEngine' />
				<Param name='BOOL unknown' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleHandbrake' func='yes'>
			<Overload retVal='void' descr='// 0x684785568EF26A22
// 0xBA729A25
VEHICLE::SET_VEHICLE_HANDBRAKE(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleHasBeenOwnedByPlayer' func='yes'>
			<Overload retVal='void' descr='// 0x2B5F9D2AF1F1722D
// 0xB4D3DBFB
VEHICLE::SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(Vehicle vehicle, BOOL owned);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL owned' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleHasStrongAxles' func='yes'>
			<Overload retVal='void' descr='// 0x92F0CF722BC4202F
// 0x0D1CBC65
VEHICLE::SET_VEHICLE_HAS_STRONG_AXLES(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

if true, axles won&apos;t bend.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleHudSpecialAbilityBarActive' func='yes'>
			<Overload retVal='void' descr='// 0x99C82F8A139F3E4E
VEHICLE::_SET_VEHICLE_HUD_SPECIAL_ABILITY_BAR_ACTIVE(Vehicle vehicle, BOOL active);
----------------------------------------------------------------------------------------------------
```

console hash: 0x71CDD52F  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL active' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleIndicatorLights' func='yes'>
			<Overload retVal='void' descr='// 0xB5D45264751B7DF0
// 0xA6073B5D
VEHICLE::SET_VEHICLE_INDICATOR_LIGHTS(Vehicle vehicle, int turnSignal, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Sets the turn signal enabled for a vehicle.  

Set turnSignal to 1 for left light, 0 for right light.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int turnSignal' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleInteriorColour' func='yes'>
			<Overload retVal='void' descr='// 0xF40DD601A65F7F19
VEHICLE::_SET_VEHICLE_INTERIOR_COLOUR(Vehicle vehicle, int color);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int color' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleInteriorlight' func='yes'>
			<Overload retVal='void' descr='// 0xBC2042F090AF6AD3
// 0x9AD1FE1E
VEHICLE::SET_VEHICLE_INTERIORLIGHT(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleIsConsideredByPlayer' func='yes'>
			<Overload retVal='void' descr='// 0x31B927BBC44156CD
// 0x14413319
VEHICLE::SET_VEHICLE_IS_CONSIDERED_BY_PLAYER(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Setting this to false, makes the specified vehicle to where if you press Y your character doesn&apos;t ev
en attempt the animation to enter the vehicle. Hence it&apos;s not considered aka ignored.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleIsStolen' func='yes'>
			<Overload retVal='Any' descr='// 0x67B2C79AA7FF5738
// 0x70912E42
VEHICLE::SET_VEHICLE_IS_STOLEN(Vehicle vehicle, BOOL isStolen);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL isStolen' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleIsWanted' func='yes'>
			<Overload retVal='void' descr='// 0xF7EC25A3EBEEC726
// 0xDAA388E8
VEHICLE::SET_VEHICLE_IS_WANTED(Vehicle vehicle, BOOL state);
----------------------------------------------------------------------------------------------------
```

Sets the wanted state of this vehicle.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleJetEngineOn' func='yes'>
			<Overload retVal='void' descr='// 0xB8FBC8B1330CA9B4
// 0x51E0064F
VEHICLE::_SET_VEHICLE_JET_ENGINE_ON(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

VEHICLE::SET_VEHICLE_ENGINE_ON is not enough to start jet engines when not inside the vehicle. But w
ith this native set to true it works: youtu.be/OK0ps2fDpxs   

i.imgur.com/7XA14pX.png  

Certain planes got jet engines.  

void VEHICLE::_SET_VEHICLE_JET_ENGINE_ON(scrNativeCallContext *args)  

{  

  bool bOn; // bl@1  

  CVehicle *pVehicle; // rax@1  

  scrNativeCallContextArgStruct *pArgs; // rax@1  

  pArgs = args-&gt;pArgs;  

  bOn = pArgs-&gt;a2.INT32 != 0;  

  pVehicle = getEntityAddressIfVehicle(pArgs-&gt;a1.INT32);  

  if ( pVehicle )  

  {  

    pVehicle-&gt;bitmapBulletProofTires &= 0xFBu;  

    pVehicle-&gt;bitmapBulletProofTires |= 4 * bOn;  

  }  

} // sfink  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleLightMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0xB385454F8791F57C
// 0x48039D6A
VEHICLE::SET_VEHICLE_LIGHT_MULTIPLIER(Vehicle vehicle, float multiplier);
----------------------------------------------------------------------------------------------------
```

multiplier = brightness of head lights.  

this value isn&apos;t capped afaik.  

multiplier = 0.0 no lights  

multiplier = 1.0 default game value  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleLights' func='yes'>
			<Overload retVal='void' descr='// 0x34E710FF01247C5A
// 0xE8930226
VEHICLE::SET_VEHICLE_LIGHTS(Vehicle vehicle, int state);
----------------------------------------------------------------------------------------------------
```

set&apos;s if the vehicle has lights or not.  

not an on off toggle.  

p1 = 0 ;vehicle normal lights, off then lowbeams, then highbeams  

p1 = 1 ;vehicle doesn&apos;t have lights, always off  

p1 = 2 ;vehicle has always on lights  

p1 = 3 ;or even larger like 4,5,... normal lights like =1  

note1: when using =2 on day it&apos;s lowbeam,highbeam  

but at night it&apos;s lowbeam,lowbeam,highbeam  

note2: when using =0 it&apos;s affected by day or night for highbeams don&apos;t exist in daytime.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int state' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleLightsMode' func='yes'>
			<Overload retVal='void' descr='// 0x1FD09E7390A74D54
VEHICLE::_SET_VEHICLE_LIGHTS_MODE(Vehicle vehicle, int p1);
----------------------------------------------------------------------------------------------------
```

p1 can be either 0, 1 or 2.  

Determines how vehicle lights behave when toggled.  

0 = Default (Lights can be toggled between off, normal and high beams)  

1 = Lights Disabled (Lights are fully disabled, cannot be toggled)  

2 = Always On (Lights can be toggled between normal and high beams)  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleLivery' func='yes'>
			<Overload retVal='void' descr='// 0x60BF608F1B8CD1B6
// 0x7AD87059
VEHICLE::SET_VEHICLE_LIVERY(Vehicle vehicle, int liveryIndex);
----------------------------------------------------------------------------------------------------
```

Note: Only seems to work on Emergency Vehicles  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int liveryIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleLodMultiplier' func='yes'>
			<Overload retVal='void' descr='// 0x93AE6A61BE015BF1
// 0x569E5AE3
VEHICLE::SET_VEHICLE_LOD_MULTIPLIER(Vehicle vehicle, float multiplier);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float multiplier' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleMod' func='yes'>
			<Overload retVal='void' descr='// 0x6AF0636DDEDCB6DD
// 0xB52E5ED5
VEHICLE::SET_VEHICLE_MOD(Vehicle vehicle, int modType, int modIndex, BOOL customTires);
----------------------------------------------------------------------------------------------------
```

In b944, there are 50 (0 - 49) mod types.  

Sets the vehicle mod.  

The vehicle must have a mod kit first.  

Any out of range ModIndex is stock.  

#Mod Type  

Spoilers   

Front Bumper   

Rear Bumper   

Side Skirt   

Exhaust   

Frame   

Grille   

Hood   

Fender   

Right Fender   

Roof   

Engine   

Brakes   

Transmission   

Horns - 14 (modIndex from 0 to 51)  

Suspension   

Armor   

Front Wheels   

Back Wheels - 24 //only for motocycles  

Plate holders   

Trim Design   

Ornaments   

Dial Design   

Steering Wheel   

Shifter Leavers   

Plaques   

Hydraulics   

Livery   

ENUMS: pastebin.com/QzEAn02v  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int modType' />
				<Param name='int modIndex' />
				<Param name='BOOL customTires' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleModColor_1' func='yes'>
			<Overload retVal='void' descr='// 0x43FEB945EE7F85B8
// 0xCBE9A54D
VEHICLE::SET_VEHICLE_MOD_COLOR_1(Vehicle vehicle, int paintType, int color, int p3);
----------------------------------------------------------------------------------------------------
```

paintType:  

0: Normal  

1: Metallic  

2: Pearl  

3: Matte  

4: Metal  

5: Chrome  

color: number of the color.  

p3 seems to always be 0.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int paintType' />
				<Param name='int color' />
				<Param name='int p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleModColor_2' func='yes'>
			<Overload retVal='void' descr='// 0x816562BADFDEC83E
// 0xC32613C2
VEHICLE::SET_VEHICLE_MOD_COLOR_2(Vehicle vehicle, int paintType, int color);
----------------------------------------------------------------------------------------------------
```

Changes the secondary paint type and color  

paintType:  

0: Normal  

1: Metallic  

2: Pearl  

3: Matte  

4: Metal  

5: Chrome  

color: number of the color  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int paintType' />
				<Param name='int color' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleModelIsSuppressed' func='yes'>
			<Overload retVal='void' descr='// 0x0FC2D89AC25A5814
// 0x42A08C9B
VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(Hash model, BOOL suppressed);
----------------------------------------------------------------------------------------------------
```

seems to make the vehicle stop spawning naturally in traffic. Here&apos;s an essential example:  

VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(GAMEPLAY::GET_HASH_KEY(&quot;taco&quot;), true);  

god I hate taco vans  

Confirmed to work? Needs to be looped? Can not get it to work.  

```'>
				<Param name='Hash model' />
				<Param name='BOOL suppressed' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleModKit' func='yes'>
			<Overload retVal='void' descr='// 0x1F2AA07F00B3217A
// 0xB8132158
VEHICLE::SET_VEHICLE_MOD_KIT(Vehicle vehicle, int modKit);
----------------------------------------------------------------------------------------------------
```

Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That&apos;s what the game does. Most body modificati
ons through SET_VEHICLE_MOD will not take effect until this is set to 0.  

---------  

Setting the modKit to 0 also seems to load some livery related vehicle information. For example, usi
ng GET_LIVERY_NAME() will return NULL if you haven&apos;t set the modKit to 0 in advance. As soon as you 
set it to 0, GET_LIVERY_NAME() will work properly.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int modKit' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleNameDebug' func='yes'>
			<Overload retVal='void' descr='// 0xBFDF984E2C22B94F
// 0xA712FF5C
VEHICLE::SET_VEHICLE_NAME_DEBUG(Vehicle vehicle, char* name);
----------------------------------------------------------------------------------------------------
```

NOTE: Debugging functions are not present in the retail version of the game.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='char* name' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleNeedsToBeHotwired' func='yes'>
			<Overload retVal='void' descr='// 0xFBA550EA44404EE6
// 0xD8260751
VEHICLE::SET_VEHICLE_NEEDS_TO_BE_HOTWIRED(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleNeonLightEnabled' func='yes'>
			<Overload retVal='void' descr='// 0x2AA720E4287BF269
VEHICLE::_SET_VEHICLE_NEON_LIGHT_ENABLED(Vehicle vehicle, int index, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Sets the neon lights of the specified vehicle on/off.  

Indices:  

0 = Left  

1 = Right  

2 = Front  

3 = Back  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int index' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleNeonLightsColour' func='yes'>
			<Overload retVal='void' descr='// 0x8E0A582209A62695
VEHICLE::_SET_VEHICLE_NEON_LIGHTS_COLOUR(Vehicle vehicle, int r, int g, int b);
----------------------------------------------------------------------------------------------------
```

Sets the color of the neon lights of the specified vehicle.  

More info: pastebin.com/G49gqy8b  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleNumberPlateText' func='yes'>
			<Overload retVal='void' descr='// 0x95A88F0B409CDA47
// 0x400F9556
VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(Vehicle vehicle, char* plateText);
----------------------------------------------------------------------------------------------------
```

Sets a vehicle&apos;s license plate text.  8 chars maximum.  

Example:  

Ped playerPed = PLAYER::PLAYER_PED_ID();  

Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);  

char *plateText = &quot;KING&quot;;  

VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(veh, plateText);  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='char* plateText' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleNumberPlateTextIndex' func='yes'>
			<Overload retVal='void' descr='// 0x9088EB5A43FFB0A1
// 0xA1A1890E
VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(Vehicle vehicle, int plateIndex);
----------------------------------------------------------------------------------------------------
```

Plates:  

Blue/White   

Yellow/black   

Yellow/Blue   

Blue/White2   

Blue/White3   

Yankton  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int plateIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleOnGroundProperly' func='yes'>
			<Overload retVal='BOOL' descr='// 0x49733E92263139D1
// 0xE14FDBA6
VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.  


sfink: This has an additional param(Vehicle vehicle, float p1) which is always set to 5.0f in the b9
44 scripts.  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleOutOfControl' func='yes'>
			<Overload retVal='void' descr='// 0xF19D095E42D430CC
// 0x3764D734
VEHICLE::SET_VEHICLE_OUT_OF_CONTROL(Vehicle vehicle, BOOL killDriver, BOOL explodeOnImpact);
----------------------------------------------------------------------------------------------------
```

Tested on the player&apos;s current vehicle. Unless you kill the driver, the vehicle doesn&apos;t loose contro
l, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL killDriver' />
				<Param name='BOOL explodeOnImpact' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleParachuteActive' func='yes'>
			<Overload retVal='void' descr='// 0x0BFFB028B3DD0A97
VEHICLE::_SET_VEHICLE_PARACHUTE_ACTIVE(Vehicle vehicle, BOOL active);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL active' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehiclePetrolTankHealth' func='yes'>
			<Overload retVal='void' descr='// 0x70DB57649FA8D0D8
// 0x660A3692
VEHICLE::SET_VEHICLE_PETROL_TANK_HEALTH(Vehicle vehicle, float health);
----------------------------------------------------------------------------------------------------
```

1000 is max health  

Begins leaking gas at around 650 health  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float health' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleProvidesCover' func='yes'>
			<Overload retVal='void' descr='// 0x5AFEEDD9BB2899D7
// 0xEFC01CA9
VEHICLE::SET_VEHICLE_PROVIDES_COVER(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleReduceGrip' func='yes'>
			<Overload retVal='void' descr='// 0x222FF6A823D122E2
// 0x90D3A0D9
VEHICLE::SET_VEHICLE_REDUCE_GRIP(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Reduces grip significantly so it&apos;s hard to go anywhere.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleRocketBoostActive' func='yes'>
			<Overload retVal='void' descr='// 0x81E1552E35DC3839
VEHICLE::_SET_VEHICLE_ROCKET_BOOST_ACTIVE(Vehicle vehicle, BOOL active);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL active' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleRocketBoostPercentage' func='yes'>
			<Overload retVal='void' descr='// 0xFEB2DDED3509562E
VEHICLE::_SET_VEHICLE_ROCKET_BOOST_PERCENTAGE(Vehicle vehicle, float percentage);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float percentage' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleRocketBoostRefillTime' func='yes'>
			<Overload retVal='void' descr='// 0xE00F2AB100B76E89
VEHICLE::_SET_VEHICLE_ROCKET_BOOST_REFILL_TIME(Vehicle vehicle, float time);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='float time' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleRudderBroken' func='yes'>
			<Overload retVal='void' descr='// 0x09606148B6C71DEF
// 0x3FAC3CD4
VEHICLE::SET_VEHICLE_RUDDER_BROKEN(Vehicle vehicle, BOOL p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleSearchlight' func='yes'>
			<Overload retVal='void' descr='// 0x14E85C5EE7A4D542
// 0xE2C0DD8A
VEHICLE::SET_VEHICLE_SEARCHLIGHT(Vehicle heli, BOOL toggle, BOOL canBeUsedByAI);
----------------------------------------------------------------------------------------------------
```

Only works during nighttime.  

And only if there is a driver in heli.  

```'>
				<Param name='Vehicle heli' />
				<Param name='BOOL toggle' />
				<Param name='BOOL canBeUsedByAI' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleShootAtTarget' func='yes'>
			<Overload retVal='void' descr='// 0x74CD9A9327A282EA
// 0x2343FFDF
VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(Ped driver, Entity entity, float xTarget, float yTarget, float zTar
----------------------------------------------------------------------------------------------------
;

```

```

Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are
 the coordinates of the target. Example:  

WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,GAMEPLAY::GET_HASH_KEY(&quot;VEHICLE_WEAPON_PLANE_ROCKET&quot;));
VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);  

```'>
				<Param name='Ped driver' />
				<Param name='Entity entity' />
				<Param name='float xTarget' />
				<Param name='float yTarget' />
				<Param name='float zTar' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleSilent' func='yes'>
			<Overload retVal='void' descr='// 0x9D44FCCE98450843
// 0x968E5770
VEHICLE::_SET_VEHICLE_SILENT(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

If set to TRUE, it seems to suppress door noises and doesn&apos;t allow the horn to be continuous.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleSiren' func='yes'>
			<Overload retVal='void' descr='// 0xF4924635A19EB37D
// 0x4AC1EFC7
VEHICLE::SET_VEHICLE_SIREN(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Activate siren on vehicle (Only works if the vehicle has a siren).  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleSt' func='yes'>
			<Overload retVal='void' descr='// 0x1CF38D529D7441D9
// 0xDF594D8D
VEHICLE::_SET_VEHICLE_ST(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.  

============================================  

May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox3
60 decompiled scripts and search for &apos;func_1333&apos; in freemode.c it isn&apos;t used just for trains. Thanks
 for the info tho.  

Btw, func_1333 ends up calling this func which uses this native,  

void func_1338(int iParam0)//Position   

{  

	ENTITY::FREEZE_ENTITY_POSITION(iParam0, true);  

	ENTITY::SET_ENTITY_COLLISION(iParam0, false, 0);  

	ENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);  

	VEHICLE::_0xDF594D8D(iParam0, true);  

}  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleSteerBias' func='yes'>
			<Overload retVal='void' descr='// 0x42A8EC77D5150CBE
// 0x7357C1EB
VEHICLE::SET_VEHICLE_STEER_BIAS(Vehicle vehicle, float value);
----------------------------------------------------------------------------------------------------
```

Locks the vehicle&apos;s steering to the desired angle, explained below.  

Requires to be called onTick. Steering is unlocked the moment the function stops being called on the
 vehicle.  

Steer bias:  

-1.0 = full right  

0.0 = centered steering  

1.0 = full left  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float value' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleStrong' func='yes'>
			<Overload retVal='void' descr='// 0x3E8C8727991A8A0B
// 0xC758D19F
VEHICLE::SET_VEHICLE_STRONG(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets 
and explosives  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleTimedExplosion' func='yes'>
			<Overload retVal='void' descr='// 0x2E0A74E1002380B1
// 0xDB8CB8E2
VEHICLE::SET_VEHICLE_TIMED_EXPLOSION(Vehicle vehicle, Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

VEHICLE::SET_VEHICLE_TIMED_EXPLOSION(v_3, PLAYER::GET_PLAYER_PED(v_5), 1);  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleTyreBurst' func='yes'>
			<Overload retVal='void' descr='// 0xEC6A202EE4960385
// 0x89D28068
VEHICLE::SET_VEHICLE_TYRE_BURST(Vehicle vehicle, int index, BOOL onRim, float p3);
----------------------------------------------------------------------------------------------------
```

&quot;To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)  

to burst all tyres type it 8 times where p1 = 0 to 7.  

p3 seems to be how much damage it has taken. 0 doesn&apos;t deflate them, 1000 completely deflates them. 
 

&apos;0 = wheel_lf / bike, plane or jet front  

&apos;1 = wheel_rf  

&apos;2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left  

&apos;3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right  

&apos;4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left  

&apos;5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right  

&apos;45 = 6 wheels trailer mid wheel left  

&apos;47 = 6 wheels trailer mid wheel right  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int index' />
				<Param name='BOOL onRim' />
				<Param name='float p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleTyreFixed' func='yes'>
			<Overload retVal='void' descr='// 0x6E13FC662B882D1D
// 0xA42EFA6B
VEHICLE::SET_VEHICLE_TYRE_FIXED(Vehicle vehicle, int tyreIndex);
----------------------------------------------------------------------------------------------------
```

tyreIndex = 0 to 4 on normal vehicles  

&apos;0 = wheel_lf / bike, plane or jet front  

&apos;1 = wheel_rf  

&apos;2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left  

&apos;3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right  

&apos;4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left  

&apos;5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right  

&apos;45 = 6 wheels trailer mid wheel left  

&apos;47 = 6 wheels trailer mid wheel right  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int tyreIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleTyresCanBurst' func='yes'>
			<Overload retVal='void' descr='// 0xEB9DC3C7D8596C46
// 0xA198DB54
VEHICLE::SET_VEHICLE_TYRES_CAN_BURST(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Allows you to toggle bulletproof tires.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleTyreSmokeColor' func='yes'>
			<Overload retVal='void' descr='// 0xB5BA80F839791C0F
// 0x3EDEC0DB
VEHICLE::SET_VEHICLE_TYRE_SMOKE_COLOR(Vehicle vehicle, int r, int g, int b);
----------------------------------------------------------------------------------------------------
```

Sets the tire smoke&apos;s color of this vehicle.  

vehicle: The vehicle that is the target of this method.  

r: The red level in the RGB color code.  

g: The green level in the RGB color code.  

b: The blue level in the RGB color code.  

Note:  

setting r,g,b to 0 will give the car independance day tyre smoke  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int r' />
				<Param name='int g' />
				<Param name='int b' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleUndriveable' func='yes'>
			<Overload retVal='void' descr='// 0x8ABA6AF54B942B95
// 0x48D02A4E
VEHICLE::SET_VEHICLE_UNDRIVEABLE(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Player won&apos;t be able to drive the car or enter it, unless you task him to get into any other seat th
an the driver one.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleWheelsCanBreak' func='yes'>
			<Overload retVal='Any' descr='// 0x29B18B4FD460CA8F
// 0x829ED654
VEHICLE::SET_VEHICLE_WHEELS_CAN_BREAK(Vehicle vehicle, BOOL enabled);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL enabled' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleWheelsCanBreakOffWhenBlowUp' func='yes'>
			<Overload retVal='void' descr='// 0xA37B9A517B133349
// 0x670913A4
VEHICLE::SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

Old name: SET_VEHICLE_MAX_STR_TRAP'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SET_VEHICLE_MAX_STR_TRAP' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetVehicleWheelsCanBreakOffWhenBlowUp' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetVehicleWheelType' func='yes'>
			<Overload retVal='void' descr='// 0x487EB21CC7295BA1
// 0x64BDAAAD
VEHICLE::SET_VEHICLE_WHEEL_TYPE(Vehicle vehicle, int WheelType);
----------------------------------------------------------------------------------------------------
```

0: Sport  

1: Muscle  

2: Lowrider  

3: SUV  

4: Offroad  

5: Tuner  

6: Bike Wheels  

7: High End  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int WheelType' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVehicleWindowTint' func='yes'>
			<Overload retVal='void' descr='// 0x57C51E6BAD752696
// 0x497C8787
VEHICLE::SET_VEHICLE_WINDOW_TINT(Vehicle vehicle, int tint);
----------------------------------------------------------------------------------------------------
```

enum WindowTints  

{  

	WINDOWTINT_NONE,  

	WINDOWTINT_PURE_BLACK,  

	WINDOWTINT_DARKSMOKE,  

	WINDOWTINT_LIGHTSMOKE,  

	WINDOWTINT_STOCK,  

	WINDOWTINT_LIMO,  

	WINDOWTINT_GREEN  

};  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int tint' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetVerticalFlightPhase' func='yes'>
			<Overload retVal='void' descr='// 0x9AA47FFF660CB932
// 0xDD7936F5
VEHICLE::_SET_VERTICAL_FLIGHT_PHASE(Vehicle vehicle, float angle);
----------------------------------------------------------------------------------------------------
```

MulleDK19: This immediately sets the VTOL engines at the specified angle ratio (0f-1f).  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='float angle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SkipTimeInPlaybackRecordedVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x9438F7AD68771A20
// 0xCF3EFA4B
VEHICLE::SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(Any p0, float p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='SkipToEndAndStopPlaybackRecordedVehicle' func='yes'>
			<Overload retVal='void' descr='// 0xAB8E2EDA0C0A5883
// 0x8DEA18C8
VEHICLE::SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SmashVehicleWindow' func='yes'>
			<Overload retVal='Any' descr='// 0x9E5B5E4D2CCD2259
// 0xDDD9A8C2
VEHICLE::SMASH_VEHICLE_WINDOW(Vehicle vehicle, int index);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int index' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartPlaybackRecordedVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x3F878F92B3A7A071
// 0xCF614CA8
VEHICLE::START_PLAYBACK_RECORDED_VEHICLE(Vehicle vehicle, int p1, char* playback, BOOL p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
				<Param name='int p1' />
				<Param name='char* playback' />
				<Param name='BOOL p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartPlaybackRecordedVehicleUsingAi' func='yes'>
			<Overload retVal='void' descr='// 0x29DE5FA52D00428C
// 0x8DE8E24E
VEHICLE::START_PLAYBACK_RECORDED_VEHICLE_USING_AI(Any p0, Any p1, Any* p2, float p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any* p2' />
				<Param name='float p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartPlaybackRecordedVehicleWithFlags' func='yes'>
			<Overload retVal='void' descr='// 0x7D80FD645D4DA346
// 0x4E721AD2
VEHICLE::START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(Vehicle vehicle, Any p1, char* playback, Any p3, Any
----------------------------------------------------------------------------------------------------
Any p5);

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Any p1' />
				<Param name='char* playback' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartVehicleAlarm' func='yes'>
			<Overload retVal='Any' descr='// 0xB8FF7AB45305C345
// 0x5B451FF7
VEHICLE::START_VEHICLE_ALARM(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='StartVehicleHorn' func='yes'>
			<Overload retVal='void' descr='// 0x9C8C6504B5B63D2C
// 0x0DF5ADB3
VEHICLE::START_VEHICLE_HORN(Vehicle vehicle, int duration, Hash mode, BOOL forever);
----------------------------------------------------------------------------------------------------
```

Sounds the horn for the specified vehicle.  

vehicle: The vehicle to activate the horn for.  

mode: The hash of &quot;NORMAL&quot; or &quot;HELDDOWN&quot;. Can be 0.  

duration: The duration to sound the horn, in milliseconds.  

Note: If a player is in the vehicle, it will only sound briefly.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int duration' />
				<Param name='Hash mode' />
				<Param name='BOOL forever' />
			</Overload>
		</KeyWord>
		<KeyWord name='SteerUnlockBias' func='yes'>
			<Overload retVal='void' descr='// 0x07116E24E9D1929D
// 0xA59E3DCD
VEHICLE::STEER_UNLOCK_BIAS(Vehicle vehicle, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Hash collision!!!  

SET_VEHICLE_IS_*  

p1 (toggle) was always 1 (true) except in one case in the b678 scripts.  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='StopAllGarageActivity' func='yes'>
			<Overload retVal='void' descr='// 0x0F87E938BDF29D66
// 0x17A0BCE5
VEHICLE::STOP_ALL_GARAGE_ACTIVITY();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='StopPlaybackRecordedVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x54833611C17ABDEA
// 0xAE99C57C
VEHICLE::STOP_PLAYBACK_RECORDED_VEHICLE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='SwitchTrainTrack' func='yes'>
			<Overload retVal='Any' descr='// 0xFD813BB7DB977F20
// 0x68BFDD61
VEHICLE::SWITCH_TRAIN_TRACK(int intersectionId, BOOL state);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int intersectionId' />
				<Param name='BOOL state' />
			</Overload>
		</KeyWord>
		<KeyWord name='ToggleVehicleMod' func='yes'>
			<Overload retVal='void' descr='// 0x2A1F4F37F95BAD08
// 0xD095F811
VEHICLE::TOGGLE_VEHICLE_MOD(Vehicle vehicle, int modType, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Toggles:  

UNK17   

Turbo   

UNK19   

Tire Smoke   

UNK21   

Xenon Headlights  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int modType' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='TrackVehicleVisibility' func='yes'>
			<Overload retVal='void' descr='// 0x64473AEFDCF47DCA
// 0x78122DC1
VEHICLE::TRACK_VEHICLE_VISIBILITY(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

in script hook .net   

Vehicle v = ...;  

Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='UnpausePlaybackRecordedVehicle' func='yes'>
			<Overload retVal='void' descr='// 0x8879EE09268305D5
// 0x59060F75
VEHICLE::UNPAUSE_PLAYBACK_RECORDED_VEHICLE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='VehicleHasLandingGear' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4198AB0022B15F87
// 0xBD085DCA
VEHICLE::_VEHICLE_HAS_LANDING_GEAR(Vehicle vehicle);
----------------------------------------------------------------------------------------------------
```

Vehicle has landing gear?  

```'>
				<Param name='Vehicle vehicle' />
			</Overload>
		</KeyWord>
		<KeyWord name='VehicleSetCustomParachuteModel' func='yes'>
			<Overload retVal='void' descr='// 0x4D610C6B56031351
VEHICLE::_VEHICLE_SET_CUSTOM_PARACHUTE_MODEL(Vehicle vehicle, Hash parachuteModel);
----------------------------------------------------------------------------------------------------
```

parachuteModel = 230075693  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Hash parachuteModel' />
			</Overload>
		</KeyWord>
		<KeyWord name='VehicleSetCustomParachuteTexture' func='yes'>
			<Overload retVal='void' descr='// 0xA74AD2439468C883
VEHICLE::_VEHICLE_SET_CUSTOM_PARACHUTE_TEXTURE(Vehicle vehicle, int colorIndex);
----------------------------------------------------------------------------------------------------
```

colorIndex = 0  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='int colorIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='WasCounterActivated' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3EC8BF18AA453FE9
// 0x2916D69B
VEHICLE::WAS_COUNTER_ACTIVATED(Vehicle vehicle, Any p1);
----------------------------------------------------------------------------------------------------
```

Hash collision  

```'>
				<Param name='Vehicle vehicle' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddCurrentRise' func='yes'>
			<Overload retVal='int' descr='// 0xFDBF4CDBC07E1706
// 0x45268B6F
WATER::_ADD_CURRENT_RISE(float xLow, float yLow, float xHigh, float yHigh, float height);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float xLow' />
				<Param name='float yLow' />
				<Param name='float xHigh' />
				<Param name='float yHigh' />
				<Param name='float height' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCurrentIntensity' func='yes'>
			<Overload retVal='float' descr='// 0x2B2A2CC86778B619
// 0xBD0A67FB
WATER::_GET_CURRENT_INTENSITY();
----------------------------------------------------------------------------------------------------
```

Gets the aggressiveness factor of the ocean waves.  

```

## Return value

----------------------------------------------------------------------------------------------------

Old name: _GET_WAVES_INTENSITY'>
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_WAVES_INTENSITY' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetCurrentIntensity' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetWaterHeight' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF6829842C06AE524
// 0xD864E17C
WATER::GET_WATER_HEIGHT(float x, float y, float z, float* height);
----------------------------------------------------------------------------------------------------
```

This function set height to the value of z-axis of the water surface.  

This function works with sea and lake. However it does not work with shallow rivers (e.g. raton cany
on will return -100000.0f)  

note: seems to return true when you are in water  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float* height' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWaterHeightNoWaves' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8EE6B53CE13A9794
// 0x262017F8
WATER::GET_WATER_HEIGHT_NO_WAVES(float x, float y, float z, float* height);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='float* height' />
			</Overload>
		</KeyWord>
		<KeyWord name='ModifyWater' func='yes'>
			<Overload retVal='void' descr='// 0xC443FD757C3BA637
// 0xC49E005A
WATER::MODIFY_WATER(float x, float y, float radius, float height);
----------------------------------------------------------------------------------------------------
```

Sets the water height for a given position and radius.  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float radius' />
				<Param name='float height' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x547237aa71ab44de' func='yes'>
			<Overload retVal='void' descr='// 0x547237AA71AB44DE
// 0x6F5A07BA
WATER::_0x547237AA71AB44DE(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveCurrentRise' func='yes'>
			<Overload retVal='void' descr='// 0xB1252E3E59A82AAF
// 0x7DBCEF6F
WATER::_REMOVE_CURRENT_RISE(int p0);
----------------------------------------------------------------------------------------------------
```

p0 is the handle returned from _0xFDBF4CDBC07E1706  

```'>
				<Param name='int p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='ResetCurrentIntensity' func='yes'>
			<Overload retVal='void' descr='// 0x5E5E99285AE812DB
// 0x4AD23212
WATER::_RESET_CURRENT_INTENSITY();
----------------------------------------------------------------------------------------------------
```

Sets the waves intensity back to original (1.0 in most cases). 

```

----------------------------------------------------------------------------------------------------

Old name: _RESET_WAVES_INTENSITY'>
			</Overload>
		</KeyWord>
		<KeyWord name='_RESET_WAVES_INTENSITY' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: ResetCurrentIntensity' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='SetCurrentIntensity' func='yes'>
			<Overload retVal='void' descr='// 0xB96B00E976BE977F
// 0x53B694B1
WATER::_SET_CURRENT_INTENSITY(float intensity);
----------------------------------------------------------------------------------------------------
```

Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for 
very aggressive waves like you see during a thunderstorm.  

Works only ~200 meters around the player.  

```

----------------------------------------------------------------------------------------------------

Old name: _SET_WAVES_INTENSITY'>
				<Param name='float intensity' />
			</Overload>
		</KeyWord>
		<KeyWord name='_SET_WAVES_INTENSITY' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: SetCurrentIntensity' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='TestProbeAgainstAllWater' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8974647ED222EA5F
// 0x4A962D55
WATER::TEST_PROBE_AGAINST_ALL_WATER(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='TestProbeAgainstWater' func='yes'>
			<Overload retVal='BOOL' descr='// 0xFFA5D878809819DB
// 0xAA4AE00C
WATER::TEST_PROBE_AGAINST_WATER(float x1, float y1, float z1, float x2, float y2, float z2, Vector3* r
----------------------------------------------------------------------------------------------------
t);

```'>
				<Param name='float x1' />
				<Param name='float y1' />
				<Param name='float z1' />
				<Param name='float x2' />
				<Param name='float y2' />
				<Param name='float z2' />
				<Param name='Vector3* r' />
			</Overload>
		</KeyWord>
		<KeyWord name='TestVerticalProbeAgainstAllWater' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2B3451FA1E3142E2
// 0x4C71D143
WATER::TEST_VERTICAL_PROBE_AGAINST_ALL_WATER(float x, float y, float z, Any p3, float* height);
----------------------------------------------------------------------------------------------------
```

I guess p3 is shape test flags?  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='Any p3' />
				<Param name='float* height' />
			</Overload>
		</KeyWord>
		<KeyWord name='AddAmmoToPed' func='yes'>
			<Overload retVal='void' descr='// 0x78F0424C34306220
// 0x7F0580C7
WEAPON::ADD_AMMO_TO_PED(Ped ped, Hash weaponHash, int ammo);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='int ammo' />
			</Overload>
		</KeyWord>
		<KeyWord name='CanUseWeaponOnParachute' func='yes'>
			<Overload retVal='BOOL' descr='// 0xBC7BE5ABC0879F74
// 0x135E7AD4
WEAPON::CAN_USE_WEAPON_ON_PARACHUTE(Hash weaponHash);
----------------------------------------------------------------------------------------------------
```

this returns if you can use the weapon while using a parachute  

```'>
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearEntityLastWeaponDamage' func='yes'>
			<Overload retVal='void' descr='// 0xAC678E40BE7C74D2
// 0xCEC2732B
WEAPON::CLEAR_ENTITY_LAST_WEAPON_DAMAGE(Entity entity);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity entity' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPedLastWeaponDamage' func='yes'>
			<Overload retVal='void' descr='// 0x0E98F88A24C5F4B8
// 0x52C68832
WEAPON::CLEAR_PED_LAST_WEAPON_DAMAGE(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='CreateWeaponObject' func='yes'>
			<Overload retVal='Object' descr='// 0x9541D3CF0D398F36
// 0x62F5987F
WEAPON::CREATE_WEAPON_OBJECT(Hash weaponHash, int ammoCount, float x, float y, float z, BOOL showWorl
----------------------------------------------------------------------------------------------------
el, float heading, Any p7);

```

```

Now has 8 params.  

```'>
				<Param name='Hash weaponHash' />
				<Param name='int ammoCount' />
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
				<Param name='BOOL showWorl' />
			</Overload>
		</KeyWord>
		<KeyWord name='DoesWeaponTakeWeaponComponent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x5CEE3DF569CECAB0
// 0xB1817BAA
WEAPON::DOES_WEAPON_TAKE_WEAPON_COMPONENT(Hash weaponHash, Hash componentHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash weaponHash' />
				<Param name='Hash componentHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='EnableLaserSightRendering' func='yes'>
			<Overload retVal='void' descr='// 0xC8B46D7727D864AA
// 0xE3438955
WEAPON::ENABLE_LASER_SIGHT_RENDERING(BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Enables laser sight on any weapon.  

It doesn&apos;t work. Neither on tick nor OnKeyDown  

```'>
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='ExplodeProjectiles' func='yes'>
			<Overload retVal='void' descr='// 0xFC4BD125DE7611E4
// 0x35A0B955
WEAPON::EXPLODE_PROJECTILES(Ped ped, Hash weaponHash, BOOL p2);
----------------------------------------------------------------------------------------------------
```

WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);  

```'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetAmmoInClip' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2E1202248937775C
// 0x73C100C3
WEAPON::GET_AMMO_IN_CLIP(Ped ped, Hash weaponHash, int* ammo);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='int* ammo' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetAmmoInPedWeapon' func='yes'>
			<Overload retVal='int' descr='// 0x015A522136D7F951
// 0x0C755733
WEAPON::GET_AMMO_IN_PED_WEAPON(Ped ped, Hash weaponhash);
----------------------------------------------------------------------------------------------------
```

WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)  

From decompiled scripts  

Returns total ammo in weapon  

GTALua Example :  

natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)  

```'>
				<Param name='Ped ped' />
				<Param name='Hash weaponhash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetBestPedWeapon' func='yes'>
			<Overload retVal='Hash' descr='// 0x8483E98E8B888AE2
// 0xB998D444
WEAPON::GET_BEST_PED_WEAPON(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p1 is always 0 in the scripts.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCurrentPedVehicleWeapon' func='yes'>
			<Overload retVal='BOOL' descr='// 0x1017582BCD3832DC
// 0xF26C5D65
WEAPON::GET_CURRENT_PED_VEHICLE_WEAPON(Ped ped, Hash* weaponHash);
----------------------------------------------------------------------------------------------------
```

Example in VB  

Public Shared Function GetVehicleCurrentWeapon(Ped As Ped) As Integer  

    Dim arg As New OutputArgument()  

    Native.Function.Call(Hash.GET_CURRENT_PED_VEHICLE_WEAPON, Ped, arg)  

    Return arg.GetResult(Of Integer)()  

End Function  

		Usage:  

		If GetVehicleCurrentWeapon(Game.Player.Character) = -821520672 Then ...Do something  

		Note: -821520672 = VEHICLE_WEAPON_PLANE_ROCKET  

```'>
				<Param name='Ped ped' />
				<Param name='Hash* weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCurrentPedWeapon' func='yes'>
			<Overload retVal='BOOL' descr='// 0x3A87E44BB9A01D54
// 0xB0237302
WEAPON::GET_CURRENT_PED_WEAPON(Ped ped, Hash* weaponHash, BOOL p2);
----------------------------------------------------------------------------------------------------
```

The return value seems to indicate returns true if the hash of the weapon object weapon equals the w
eapon hash.  

p2 seems to be 1 most of the time.  

p2 is not implemented  

disassembly said that?  

------  

yes on disassembly p2 it seems not implemented i just have:  

bool __fastcall sub_7FF6C56CE684(__int64 a1, _DWORD *a2)  

Found At: 7ff6c56ce684  

```'>
				<Param name='Ped ped' />
				<Param name='Hash* weaponHash' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetCurrentPedWeaponEntityIndex' func='yes'>
			<Overload retVal='Entity' descr='// 0x3B390A939AF0B5FC
// 0x5D73CD20
WEAPON::GET_CURRENT_PED_WEAPON_ENTITY_INDEX(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetIsPedGadgetEquipped' func='yes'>
			<Overload retVal='BOOL' descr='// 0xF731332072F5156C
// 0x8DDD0B5B
WEAPON::GET_IS_PED_GADGET_EQUIPPED(Ped ped, Hash gadgetHash);
----------------------------------------------------------------------------------------------------
```

gadgetHash - was always 0xFBAB5776 (&quot;GADGET_PARACHUTE&quot;).  

```'>
				<Param name='Ped ped' />
				<Param name='Hash gadgetHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetLockonRangeOfCurrentPedWeapon' func='yes'>
			<Overload retVal='float' descr='// 0x840F03E9041E2C9C
// 0x3612110D
WEAPON::_GET_LOCKON_RANGE_OF_CURRENT_PED_WEAPON(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMaxAmmo' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDC16122C7A20C933
// 0x0B294796
WEAPON::GET_MAX_AMMO(Ped ped, Hash weaponHash, int* ammo);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='int* ammo' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMaxAmmoInClip' func='yes'>
			<Overload retVal='int' descr='// 0xA38DCFFCEA8962FA
// 0x6961E2A4
WEAPON::GET_MAX_AMMO_IN_CLIP(Ped ped, Hash weaponHash, BOOL p2);
----------------------------------------------------------------------------------------------------
```

p2 is mostly 1 in the scripts.  

```'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetMaxRangeOfCurrentPedWeapon' func='yes'>
			<Overload retVal='float' descr='// 0x814C9D19DFD69679
// 0xB2B2BBAA
WEAPON::GET_MAX_RANGE_OF_CURRENT_PED_WEAPON(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedAmmoByType' func='yes'>
			<Overload retVal='int' descr='// 0x39D22031557946C1
// 0x54077C4D
WEAPON::GET_PED_AMMO_BY_TYPE(Ped ped, Any ammoType);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any ammoType' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedAmmoTypeFromWeapon' func='yes'>
			<Overload retVal='Hash' descr='// 0x7FEAD38B326B9F74
// 0x09337863
WEAPON::GET_PED_AMMO_TYPE_FROM_WEAPON(Ped ped, Hash weaponHash);
----------------------------------------------------------------------------------------------------
```

Returns an ammo type hash, which is defined in AmmoInfo.  

```

----------------------------------------------------------------------------------------------------

Old name: _GET_PED_AMMO_TYPE'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='_GET_PED_AMMO_TYPE' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: GetPedAmmoTypeFromWeapon' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='GetPedAmmoTypeFromWeapon_2' func='yes'>
			<Overload retVal='Hash' descr='// 0xF489B44DD5AF4BD9
WEAPON::_GET_PED_AMMO_TYPE_FROM_WEAPON_2(Ped ped, Hash weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedLastWeaponImpactCoord' func='yes'>
			<Overload retVal='BOOL' descr='// 0x6C4D0409BA1A2BC2
// 0x9B266079
WEAPON::GET_PED_LAST_WEAPON_IMPACT_COORD(Ped ped, Vector3* coords);
----------------------------------------------------------------------------------------------------
```

Pass ped. Pass address of Vector3.  

The coord will be put into the Vector3.  

The return will determine whether there was a coord found or not.  

```'>
				<Param name='Ped ped' />
				<Param name='Vector3* coords' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedWeaponTintIndex' func='yes'>
			<Overload retVal='int' descr='// 0x2B9EEDC07BD06B9F
// 0x3F9C90A7
WEAPON::GET_PED_WEAPON_TINT_INDEX(Ped ped, Hash weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetPedWeapontypeInSlot' func='yes'>
			<Overload retVal='Hash' descr='// 0xEFFED78E9011134D
// 0x9BC64E16
WEAPON::GET_PED_WEAPONTYPE_IN_SLOT(Ped ped, Hash weaponSlot);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponSlot' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetSelectedPedWeapon' func='yes'>
			<Overload retVal='Hash' descr='// 0x0A6DB4965674D243
// 0xD240123E
WEAPON::GET_SELECTED_PED_WEAPON(Ped ped);
----------------------------------------------------------------------------------------------------
```

Returns the hash of the weapon.   

var num7 = WEAPON::GET_SELECTED_PED_WEAPON(num4);  

sub_27D3(num7);  

switch (num7)  

{  

    case 0x24B17070:  

		Also see WEAPON::GET_CURRENT_PED_WEAPON. Difference?  

		-------------------------------------------------------------------------  

		The difference is that GET_SELECTED_PED_WEAPON simply returns the ped&apos;s current weapon hash but GE
T_CURRENT_PED_WEAPON also checks the weapon object and returns true if the hash of the weapon object
 equals the weapon hash  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeaponClipSize' func='yes'>
			<Overload retVal='int' descr='// 0x583BE370B1EC6EB4
// 0x8D515E66
WEAPON::GET_WEAPON_CLIP_SIZE(Hash weaponHash);
----------------------------------------------------------------------------------------------------
```

// Returns the size of the default weapon component clip.  

Use it like this:  

char cClipSize[32];  

Hash cur;  

if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))  

{  

    if (WEAPON::IS_WEAPON_VALID(cur))  

    {  

        int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);  

        sprintf_s(cClipSize, &quot;ClipSize: %.d&quot;, iClipSize);  

        vDrawString(cClipSize, 0.5f, 0.5f);  

    }  

}  

```'>
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeaponComponentHudStats' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB3CAF387AE12E9F8
// 0xBB5498F4
WEAPON::GET_WEAPON_COMPONENT_HUD_STATS(Hash componentHash, int* outData);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash componentHash' />
				<Param name='int* outData' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeaponComponentTypeModel' func='yes'>
			<Overload retVal='Hash' descr='// 0x0DB57B41EC1DB083
// 0x324FA47A
WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL(Hash componentHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash componentHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeaponDamageType' func='yes'>
			<Overload retVal='int' descr='// 0x3BE0BB12D25FB305
// 0x013AFC13
WEAPON::GET_WEAPON_DAMAGE_TYPE(Hash weaponHash);
----------------------------------------------------------------------------------------------------
```

0=unknown (or incorrect weaponHash)  

1= no damage (flare,snowball, petrolcan)  

2=melee  

3=bullet  

4=force ragdoll fall  

5=explosive (RPG, Railgun, grenade)  

6=fire(molotov)  

8=fall(WEAPON_HELI_CRASH)  

10=electric  

11=barbed wire  

12=extinguisher  

13=gas  

14=water cannon(WEAPON_HIT_BY_WATER_CANNON)  

```'>
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeaponHudStats' func='yes'>
			<Overload retVal='BOOL' descr='// 0xD92C739EE34C9EBA
// 0xA9AD3D98
WEAPON::GET_WEAPON_HUD_STATS(Hash weaponHash, Any* outData);
----------------------------------------------------------------------------------------------------
```

// members should be aligned to 8 bytes by default but it&apos;s best to use alignas here, just to be sur
e  

struct WeaponHudStatsData  

{  

	alignas(8) uint8_t hudDamage; // 0x0000  

	alignas(8) uint8_t hudSpeed; // 0x0008  

	alignas(8) uint8_t hudCapacity; // 0x0010  

	alignas(8) uint8_t hudAccuracy; // 0x0018  

	alignas(8) uint8_t hudRange; // 0x0020  

};  

Usage:  

WeaponHudStatsData data;  

if (GET_WEAPON_HUD_STATS(weaponHash, (Any*)&data))  

{  

    // uint8_t damagePercentage = data.hudDamage etc...  

}  

```'>
				<Param name='Hash weaponHash' />
				<Param name='Any* outData' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeaponObjectFromPed' func='yes'>
			<Overload retVal='Object' descr='// 0xCAE1DC9A0E22A16D
// 0xDF939A38
WEAPON::GET_WEAPON_OBJECT_FROM_PED(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
```

Drops the current weapon and returns the object  

Unknown behavior when unarmed.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeaponObjectTintIndex' func='yes'>
			<Overload retVal='int' descr='// 0xCD183314F7CD2E57
// 0xD91D9576
WEAPON::GET_WEAPON_OBJECT_TINT_INDEX(Object weapon);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object weapon' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeaponTintCount' func='yes'>
			<Overload retVal='int' descr='// 0x5DCF6C5CAB2E9BF7
// 0x99E4EAAB
WEAPON::GET_WEAPON_TINT_COUNT(Hash weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeapontypeGroup' func='yes'>
			<Overload retVal='Hash' descr='// 0xC3287EE3050FB74C
// 0x5F2DE833
WEAPON::GET_WEAPONTYPE_GROUP(Hash weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeapontypeModel' func='yes'>
			<Overload retVal='Hash' descr='// 0xF46CDC33180FDA94
// 0x44E1C269
WEAPON::GET_WEAPONTYPE_MODEL(Hash weaponHash);
----------------------------------------------------------------------------------------------------
```

Returns the model of any weapon.  

Can also take an ammo hash?  

sub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));  

```'>
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetWeapontypeSlot' func='yes'>
			<Overload retVal='Hash' descr='// 0x4215460B9B8B7FA0
// 0x2E3759AF
WEAPON::GET_WEAPONTYPE_SLOT(Hash weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GiveDelayedWeaponToPed' func='yes'>
			<Overload retVal='void' descr='// 0xB282DC6EBD803C75
// 0x5868D20D
WEAPON::GIVE_DELAYED_WEAPON_TO_PED(Ped ped, Hash weaponHash, int ammoCount, BOOL equipNow);
----------------------------------------------------------------------------------------------------
```

Gives a weapon to PED with a delay, example:  

WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), GAMEPLAY::GET_HASH_KEY(&quot;WEAPON_PISTOL&quot;), 10
00, false)  

----------------------------------------------------------------------------------------------------
------------------------------------  

Translation table:  

pastebin.com/a39K8Nz8  

```'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='int ammoCount' />
				<Param name='BOOL equipNow' />
			</Overload>
		</KeyWord>
		<KeyWord name='GiveWeaponComponentToPed' func='yes'>
			<Overload retVal='void' descr='// 0xD966D51AA5B28BB9
// 0x3E1E286D
WEAPON::GIVE_WEAPON_COMPONENT_TO_PED(Ped ped, Hash weaponHash, Hash componentHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='Hash componentHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GiveWeaponComponentToWeaponObject' func='yes'>
			<Overload retVal='void' descr='// 0x33E179436C0B31DB
// 0xF7612A37
WEAPON::GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(Object weaponObject, Hash addonHash);
----------------------------------------------------------------------------------------------------
```

addonHash:  

(use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)  

^ Wrong.  

AddonHash is NOT a model hash, it&apos;s the weapon component hash.  

${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_larg
e}, ${component_at_ar_supp_02}  

```'>
				<Param name='Object weaponObject' />
				<Param name='Hash addonHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='GiveWeaponObjectToPed' func='yes'>
			<Overload retVal='void' descr='// 0xB1FA61371AF7C4B7
// 0x639AF3EF
WEAPON::GIVE_WEAPON_OBJECT_TO_PED(Object weaponObject, Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object weaponObject' />
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='GiveWeaponToPed' func='yes'>
			<Overload retVal='void' descr='// 0xBF0FD6E56C964FCB
// 0xC4D88A85
WEAPON::GIVE_WEAPON_TO_PED(Ped ped, Hash weaponHash, int ammoCount, BOOL isHidden, BOOL equipNow);
----------------------------------------------------------------------------------------------------
```

isHidden - ????  

All weapon names (add to the list if something is missing), use GAMEPLAY::GET_HASH_KEY((char *)weapo
nNames[i]) to get get the hash:  

static LPCSTR weaponNames[] = {  

	&quot;WEAPON_KNIFE&quot;, &quot;WEAPON_NIGHTSTICK&quot;, &quot;WEAPON_HAMMER&quot;, &quot;WEAPON_BAT&quot;, &quot;WEAPON_GOLFCLUB&quot;,  

	&quot;WEAPON_CROWBAR&quot;, &quot;WEAPON_PISTOL&quot;, &quot;WEAPON_COMBATPISTOL&quot;, &quot;WEAPON_APPISTOL&quot;, &quot;WEAPON_PISTOL50&quot;,  

	&quot;WEAPON_MICROSMG&quot;, &quot;WEAPON_SMG&quot;, &quot;WEAPON_ASSAULTSMG&quot;, &quot;WEAPON_ASSAULTRIFLE&quot;,  

	&quot;WEAPON_CARBINERIFLE&quot;, &quot;WEAPON_ADVANCEDRIFLE&quot;, &quot;WEAPON_MG&quot;, &quot;WEAPON_COMBATMG&quot;, &quot;WEAPON_PUMPSHOTGUN&quot;
,  

	&quot;WEAPON_SAWNOFFSHOTGUN&quot;, &quot;WEAPON_ASSAULTSHOTGUN&quot;, &quot;WEAPON_BULLPUPSHOTGUN&quot;, &quot;WEAPON_STUNGUN&quot;, &quot;WEAPO
N_SNIPERRIFLE&quot;,  

	&quot;WEAPON_HEAVYSNIPER&quot;, &quot;WEAPON_GRENADELAUNCHER&quot;, &quot;WEAPON_GRENADELAUNCHER_SMOKE&quot;, &quot;WEAPON_RPG&quot;, &quot;WEAP
ON_MINIGUN&quot;,  

	&quot;WEAPON_GRENADE&quot;, &quot;WEAPON_STICKYBOMB&quot;, &quot;WEAPON_SMOKEGRENADE&quot;, &quot;WEAPON_BZGAS&quot;, &quot;WEAPON_MOLOTOV&quot;,  

	&quot;WEAPON_FIREEXTINGUISHER&quot;, &quot;WEAPON_PETROLCAN&quot;, &quot;WEAPON_FLARE&quot;, &quot;WEAPON_SNSPISTOL&quot;, &quot;WEAPON_SPECIALC
ARBINE&quot;,  

	&quot;WEAPON_HEAVYPISTOL&quot;, &quot;WEAPON_BULLPUPRIFLE&quot;, &quot;WEAPON_HOMINGLAUNCHER&quot;, &quot;WEAPON_PROXMINE&quot;, &quot;WEAPON_SN
OWBALL&quot;,  

	&quot;WEAPON_VINTAGEPISTOL&quot;, &quot;WEAPON_DAGGER&quot;, &quot;WEAPON_FIREWORK&quot;, &quot;WEAPON_MUSKET&quot;, &quot;WEAPON_MARKSMANRIFLE&quot;
,  

	&quot;WEAPON_HEAVYSHOTGUN&quot;, &quot;WEAPON_GUSENBERG&quot;, &quot;WEAPON_HATCHET&quot;, &quot;WEAPON_RAILGUN&quot;, &quot;WEAPON_COMBATPDW&quot;, 
 

	&quot;WEAPON_KNUCKLE&quot;, &quot;WEAPON_MARKSMANPISTOL&quot;, &quot;WEAPON_FLASHLIGHT&quot;, &quot;WEAPON_MACHETE&quot;, &quot;WEAPON_MACHINEPI
STOL&quot;,  

	&quot;WEAPON_SWITCHBLADE&quot;, &quot;WEAPON_REVOLVER&quot;, &quot;WEAPON_COMPACTRIFLE&quot;, &quot;WEAPON_DBSHOTGUN&quot;, &quot;WEAPON_FLAREGU
N&quot;,  

	&quot;WEAPON_AUTOSHOTGUN&quot;, &quot;WEAPON_BATTLEAXE&quot;, &quot;WEAPON_COMPACTLAUNCHER&quot;, &quot;WEAPON_MINISMG&quot;, &quot;WEAPON_PIPEB
OMB&quot;,  

	&quot;WEAPON_POOLCUE&quot;, &quot;WEAPON_SWEEPER&quot;, &quot;WEAPON_WRENCH&quot;  

};  

----------------------------------------------------------------------------------------------------
------------------------------------  

Translation table:  

pastebin.com/a39K8Nz8  

```'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='int ammoCount' />
				<Param name='BOOL isHidden' />
				<Param name='BOOL equipNow' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasEntityBeenDamagedByWeapon' func='yes'>
			<Overload retVal='BOOL' descr='// 0x131D401334815E94
// 0x6DAABB39
WEAPON::HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON(Entity entity, Hash weaponHash, int weaponType);
----------------------------------------------------------------------------------------------------
```

It determines what weapons caused damage:  

If youu want to define only a specific weapon, second parameter=weapon hash code, third parameter=0 
 

If you want to define any melee weapon, second parameter=0, third parameter=1.  

If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third param
eter=2.  

```'>
				<Param name='Entity entity' />
				<Param name='Hash weaponHash' />
				<Param name='int weaponType' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPedBeenDamagedByWeapon' func='yes'>
			<Overload retVal='BOOL' descr='// 0x2D343D2219CD027A
// 0xCDFBBCC6
WEAPON::HAS_PED_BEEN_DAMAGED_BY_WEAPON(Ped ped, Hash weaponHash, int weaponType);
----------------------------------------------------------------------------------------------------
```

It determines what weapons caused damage:  

If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0  


If you want to define any melee weapon, second parameter=0, third parameter=1.  

If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third param
eter=2.  

```'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='int weaponType' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPedGotWeapon' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8DECB02F88F428BC
// 0x43D2FA82
WEAPON::HAS_PED_GOT_WEAPON(Ped ped, Hash weaponHash, BOOL p2);
----------------------------------------------------------------------------------------------------
```

p2 should be FALSE, otherwise it seems to always return FALSE  

Bool does not check if the weapon is current equipped, unfortunately.  

```'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasPedGotWeaponComponent' func='yes'>
			<Overload retVal='BOOL' descr='// 0xC593212475FAE340
// 0xDC0FC145
WEAPON::HAS_PED_GOT_WEAPON_COMPONENT(Ped ped, Hash weaponHash, Hash componentHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='Hash componentHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasVehicleGotProjectileAttached' func='yes'>
			<Overload retVal='BOOL' descr='// 0x717C8481234E3B88
// 0xA57E2E80
WEAPON::HAS_VEHICLE_GOT_PROJECTILE_ATTACHED(Ped driver, Vehicle vehicle, Hash weaponHash, Any p3);
----------------------------------------------------------------------------------------------------
```

Third Parameter = unsure, but pretty sure it is weapon hash  

--&gt; get_hash_key(&quot;weapon_stickybomb&quot;)  

Fourth Parameter = unsure, almost always -1  

```'>
				<Param name='Ped driver' />
				<Param name='Vehicle vehicle' />
				<Param name='Hash weaponHash' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasWeaponAssetLoaded' func='yes'>
			<Overload retVal='BOOL' descr='// 0x36E353271F0E90EE
// 0x1891D5BB
WEAPON::HAS_WEAPON_ASSET_LOADED(Hash weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='HasWeaponGotWeaponComponent' func='yes'>
			<Overload retVal='BOOL' descr='// 0x76A18844E743BF91
// 0x1D368510
WEAPON::HAS_WEAPON_GOT_WEAPON_COMPONENT(Object weapon, Hash addonHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object weapon' />
				<Param name='Hash addonHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='HidePedWeaponForScriptedCutscene' func='yes'>
			<Overload retVal='void' descr='// 0x6F6981D2253C208F
// 0x00CFD6E9
WEAPON::HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
```

Hides the players weapon during a cutscene.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedArmed' func='yes'>
			<Overload retVal='BOOL' descr='// 0x475768A975D5AD17
// 0x0BFC892C
WEAPON::IS_PED_ARMED(Ped ped, int p1);
----------------------------------------------------------------------------------------------------
```

p1 is anywhere from 4 to 7 in the scripts. Might be a weapon wheel group?  

^It&apos;s kinda like that.   

7 returns true if you are equipped with any weapon except your fists.  

6 returns true if you are equipped with any weapon except melee weapons.  

5 returns true if you are equipped with any weapon except the Explosives weapon group.  

4 returns true if you are equipped with any weapon except Explosives weapon group AND melee weapons.
  

3 returns true if you are equipped with either Explosives or Melee weapons (the exact opposite of 4)
.  

2 returns true only if you are equipped with any weapon from the Explosives weapon group.  

1 returns true only if you are equipped with any Melee weapon.  

0 never returns true.  

Note: When I say &quot;Explosives weapon group&quot;, it does not include the Jerry can and Fire Extinguisher.
  

```'>
				<Param name='Ped ped' />
				<Param name='int p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedCurrentWeaponSilenced' func='yes'>
			<Overload retVal='BOOL' descr='// 0x65F0C5AE05943EC7
// 0xBAF7BFBE
WEAPON::IS_PED_CURRENT_WEAPON_SILENCED(Ped ped);
----------------------------------------------------------------------------------------------------
```

This native returns a true or false value.  

Ped ped = The ped whose weapon you want to check.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedWeaponComponentActive' func='yes'>
			<Overload retVal='BOOL' descr='// 0x0D78DE0572D3969E
// 0x7565FB19
WEAPON::IS_PED_WEAPON_COMPONENT_ACTIVE(Ped ped, Hash weaponHash, Hash componentHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='Hash componentHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsPedWeaponReadyToShoot' func='yes'>
			<Overload retVal='BOOL' descr='// 0xB80CA294F2F26749
// 0x02A32CB0
WEAPON::IS_PED_WEAPON_READY_TO_SHOOT(Ped ped);
----------------------------------------------------------------------------------------------------
```

Probably checks whether the ped has finished reloading or not and if the current weapon is not being
 switched to another.  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='IsWeaponValid' func='yes'>
			<Overload retVal='BOOL' descr='// 0x937C71165CF334B3
// 0x38CA2954
WEAPON::IS_WEAPON_VALID(Hash weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='MakePedReload' func='yes'>
			<Overload retVal='BOOL' descr='// 0x20AE33F3AC9C0033
// 0x515292C2
WEAPON::MAKE_PED_RELOAD(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x0abf535877897560' func='yes'>
			<Overload retVal='Any' descr='// 0x0ABF535877897560
WEAPON::_0x0ABF535877897560(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x1e45b34adebee48e' func='yes'>
			<Overload retVal='void' descr='// 0x1E45B34ADEBEE48E
WEAPON::_0x1E45B34ADEBEE48E();
----------------------------------------------------------------------------------------------------
'>
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x2472622ce1f2d45f' func='yes'>
			<Overload retVal='void' descr='// 0x2472622CE1F2D45F
WEAPON::_0x2472622CE1F2D45F(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x3133b907d8b32053' func='yes'>
			<Overload retVal='float' descr='// 0x3133B907D8B32053
WEAPON::_0x3133B907D8B32053(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x44f1012b69313374' func='yes'>
			<Overload retVal='void' descr='// 0x44F1012B69313374
WEAPON::_0x44F1012B69313374(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4757f00bc6323cfe' func='yes'>
			<Overload retVal='void' descr='// 0x4757F00BC6323CFE
WEAPON::_0x4757F00BC6323CFE(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x4d1cb8dc40208a17' func='yes'>
			<Overload retVal='Any' descr='// 0x4D1CB8DC40208A17
WEAPON::_0x4D1CB8DC40208A17(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x585847c5e4e11709' func='yes'>
			<Overload retVal='Any' descr='// 0x585847C5E4E11709
WEAPON::_0x585847C5E4E11709(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x5da825a85d0ea6e6' func='yes'>
			<Overload retVal='void' descr='// 0x5DA825A85D0EA6E6
WEAPON::_0x5DA825A85D0EA6E6(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x6558ac7c17bfef58' func='yes'>
			<Overload retVal='Any' descr='// 0x6558AC7C17BFEF58
WEAPON::_0x6558AC7C17BFEF58(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x68f8be6af5cdf8a6' func='yes'>
			<Overload retVal='void' descr='// 0x68F8BE6AF5CDF8A6
WEAPON::_0x68F8BE6AF5CDF8A6(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x91ef34584710be99' func='yes'>
			<Overload retVal='Any' descr='// 0x91EF34584710BE99
WEAPON::_0x91EF34584710BE99(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x977ca98939e82e4b' func='yes'>
			<Overload retVal='void' descr='// 0x977CA98939E82E4B
WEAPON::_0x977CA98939E82E4B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9da58cdbf6bdbc08' func='yes'>
			<Overload retVal='Any' descr='// 0x9DA58CDBF6BDBC08
WEAPON::_0x9DA58CDBF6BDBC08(Any p0, Any p1, Any p2, Any p3, Any p4, Any p5, Any p6, Any p7, Any p8, Any 
----------------------------------------------------------------------------------------------------
Any p10);

```'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
				<Param name='Any p5' />
				<Param name='Any p6' />
				<Param name='Any p7' />
				<Param name='Any p8' />
				<Param name='Any ' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0x9fe5633880ecd8ed' func='yes'>
			<Overload retVal='void' descr='// 0x9FE5633880ECD8ED
WEAPON::_0x9FE5633880ECD8ED(Any p0, Any p1, Any p2, Any p3);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xa2c9ac24b4061285' func='yes'>
			<Overload retVal='Any' descr='// 0xA2C9AC24B4061285
WEAPON::_0xA2C9AC24B4061285(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb3ea4feabf41464b' func='yes'>
			<Overload retVal='Any' descr='// 0xB3EA4FEABF41464B
WEAPON::_0xB3EA4FEABF41464B(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb4771b9aaf4e68e4' func='yes'>
			<Overload retVal='void' descr='// 0xB4771B9AAF4E68E4
WEAPON::_0xB4771B9AAF4E68E4(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xb4c8d77c80c0421e' func='yes'>
			<Overload retVal='Entity' descr='// 0xB4C8D77C80C0421E
// 0xEC2E5304
WEAPON::_0xB4C8D77C80C0421E(Ped ped, float p1);
----------------------------------------------------------------------------------------------------
```

Only used once in the scripts  

weapon::_0xB4C8D77C80C0421E(Local_888[3 /*33*/], -1082130432);  

The code following this relates to manually triggering an RPG rocket (creating the object, the parti
cle fx and sound)  

```'>
				<Param name='Ped ped' />
				<Param name='float p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xcd79a550999d7d4f' func='yes'>
			<Overload retVal='Any' descr='// 0xCD79A550999D7D4F
WEAPON::_0xCD79A550999D7D4F(Any p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xdab963831dbfd3f4' func='yes'>
			<Overload retVal='Any' descr='// 0xDAB963831DBFD3F4
WEAPON::_0xDAB963831DBFD3F4(Any p0, Any p1, Any p2, Any p3, Any p4);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
				<Param name='Any p3' />
				<Param name='Any p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe4dcec7fd5b739a5' func='yes'>
			<Overload retVal='void' descr='// 0xE4DCEC7FD5B739A5
// 0x64646F1D
WEAPON::_0xE4DCEC7FD5B739A5(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xe620fd3512a04f18' func='yes'>
			<Overload retVal='void' descr='// 0xE620FD3512A04F18
// 0xD6460EA2
WEAPON::_0xE620FD3512A04F18(float p0);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float p0' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xecdc202b25e5cf48' func='yes'>
			<Overload retVal='void' descr='// 0xECDC202B25E5CF48
WEAPON::_0xECDC202B25E5CF48(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xeff296097ff1e509' func='yes'>
			<Overload retVal='void' descr='// 0xEFF296097FF1E509
WEAPON::_0xEFF296097FF1E509(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='N_0xf0a60040be558f2d' func='yes'>
			<Overload retVal='Any' descr='// 0xF0A60040BE558F2D
WEAPON::_0xF0A60040BE558F2D(Any p0, Any p1, Any p2);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
				<Param name='Any p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='PedSkipNextReloading' func='yes'>
			<Overload retVal='BOOL' descr='// 0x8C0D57EA686FAD87
// 0x82EEAF0F
WEAPON::_PED_SKIP_NEXT_RELOADING(Ped ped);
----------------------------------------------------------------------------------------------------
```

[23.03.2017 19:08] by ins1de :  

&quot;_IS_PED_RELOADING&quot; is totally a wrong name...  

This native actually disables the reloading animation and script for the specified ped. Native renam
ed.  

```

----------------------------------------------------------------------------------------------------

Old name: _IS_PED_RELOADING'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='_IS_PED_RELOADING' func='yes'>
			<Overload descr='This is an old native name! Please use the new native name!
New name: PedSkipNextReloading' retVal=''></Overload>
		</KeyWord>
		<KeyWord name='RemoveAllPedWeapons' func='yes'>
			<Overload retVal='void' descr='// 0xF25DF915FA38C5F3
// 0xA44CE817
WEAPON::REMOVE_ALL_PED_WEAPONS(Ped ped, BOOL p1);
----------------------------------------------------------------------------------------------------
```

setting the last params to false it does that same so I would suggest its not a toggle  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveAllProjectilesOfType' func='yes'>
			<Overload retVal='void' descr='// 0xFC52E0F37E446528
// 0xA5F89919
WEAPON::REMOVE_ALL_PROJECTILES_OF_TYPE(Hash weaponHash, BOOL p1);
----------------------------------------------------------------------------------------------------
```

p1 seems always to be 0  

```'>
				<Param name='Hash weaponHash' />
				<Param name='BOOL p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveWeaponAsset' func='yes'>
			<Overload retVal='void' descr='// 0xAA08EF13F341C8FC
// 0x2C0DFE3C
WEAPON::REMOVE_WEAPON_ASSET(Hash weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveWeaponComponentFromPed' func='yes'>
			<Overload retVal='void' descr='// 0x1E8BE90C74FB4C09
// 0x412AA00D
WEAPON::REMOVE_WEAPON_COMPONENT_FROM_PED(Ped ped, Hash weaponHash, Hash componentHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='Hash componentHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveWeaponComponentFromWeaponObject' func='yes'>
			<Overload retVal='void' descr='// 0xF7D82B0D66777611
// 0xA6E7ED3C
WEAPON::REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(Any p0, Any p1);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any p0' />
				<Param name='Any p1' />
			</Overload>
		</KeyWord>
		<KeyWord name='RemoveWeaponFromPed' func='yes'>
			<Overload retVal='void' descr='// 0x4899CB088EDF59B8
// 0x9C37F220
WEAPON::REMOVE_WEAPON_FROM_PED(Ped ped, Hash weaponHash);
----------------------------------------------------------------------------------------------------
```

This native removes a specified weapon from your selected ped.  

Weapon Hashes: pastebin.com/0wwDZgkF  

Example:  

C#:  

Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);  

C++:  

WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);  

The code above removes the knife from the player.  

```'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestWeaponAsset' func='yes'>
			<Overload retVal='void' descr='// 0x5443438F033E29C3
// 0x65D139A5
WEAPON::REQUEST_WEAPON_ASSET(Hash weaponHash, int p1, int p2);
----------------------------------------------------------------------------------------------------
```

Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.  

REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);  

```'>
				<Param name='Hash weaponHash' />
				<Param name='int p1' />
				<Param name='int p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='RequestWeaponHighDetailModel' func='yes'>
			<Overload retVal='void' descr='// 0x48164DBB970AC3F0
// 0xE3BD00F9
WEAPON::REQUEST_WEAPON_HIGH_DETAIL_MODEL(Entity weaponObject);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Entity weaponObject' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetAmmoInClip' func='yes'>
			<Overload retVal='BOOL' descr='// 0xDCD2A934D65CB497
// 0xA54B0B10
WEAPON::SET_AMMO_IN_CLIP(Ped ped, Hash weaponHash, int ammo);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='int ammo' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCurrentPedVehicleWeapon' func='yes'>
			<Overload retVal='BOOL' descr='// 0x75C55983C2C39DAA
// 0x8E6F2AF1
WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(Ped ped, Hash weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetCurrentPedWeapon' func='yes'>
			<Overload retVal='void' descr='// 0xADF692B254977C0C
// 0xB8278882
WEAPON::SET_CURRENT_PED_WEAPON(Ped ped, Hash weaponHash, BOOL equipNow);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='BOOL equipNow' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetFlashLightFadeDistance' func='yes'>
			<Overload retVal='Any' descr='// 0xCEA66DAD478CD39B
// 0xB0127EA7
WEAPON::SET_FLASH_LIGHT_FADE_DISTANCE(float distance);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float distance' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAmmo' func='yes'>
			<Overload retVal='void' descr='// 0x14E56BC5B5DB6A19
// 0xBF90DF1A
WEAPON::SET_PED_AMMO(Ped ped, Hash weaponHash, int ammo);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='int ammo' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAmmoByType' func='yes'>
			<Overload retVal='void' descr='// 0x5FD1E1F011E76D7E
// 0x311C52BB
WEAPON::SET_PED_AMMO_BY_TYPE(Ped ped, Any ammoType, int ammo);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='Any ammoType' />
				<Param name='int ammo' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedAmmoToDrop' func='yes'>
			<Overload retVal='void' descr='// 0xA4EFEF9440A5B0EF
// 0x2386A307
WEAPON::SET_PED_AMMO_TO_DROP(Any ammoType, int ammo);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Any ammoType' />
				<Param name='int ammo' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedChanceOfFiringBlanks' func='yes'>
			<Overload retVal='void' descr='// 0x8378627201D5497D
// 0xB4F44C6E
WEAPON::SET_PED_CHANCE_OF_FIRING_BLANKS(Ped ped, float xBias, float yBias);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='float xBias' />
				<Param name='float yBias' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedCurrentWeaponVisible' func='yes'>
			<Overload retVal='void' descr='// 0x0725A4CCFDED9A70
// 0x00BECD77
WEAPON::SET_PED_CURRENT_WEAPON_VISIBLE(Ped ped, BOOL visible, BOOL deselectWeapon, BOOL p3, BOOL p4);
----------------------------------------------------------------------------------------------------
```

Has 5 parameters since latest patches.  

```'>
				<Param name='Ped ped' />
				<Param name='BOOL visible' />
				<Param name='BOOL deselectWeapon' />
				<Param name='BOOL p3' />
				<Param name='BOOL p4' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDropsInventoryWeapon' func='yes'>
			<Overload retVal='void' descr='// 0x208A1888007FC0E6
// 0x81FFB874
WEAPON::SET_PED_DROPS_INVENTORY_WEAPON(Ped ped, Hash weaponHash, float xOffset, float yOffset, float zO
----------------------------------------------------------------------------------------------------
t, int ammoCount);

```

```

[16/06/2017 by ins1de] :  

Drops the weapon object from selected peds and turns it into a pickup.  

Offset defines the next position of the weapon, ammo count is the stored ammo in the pickup (if ammo
Count == 0, pickup won&apos;t be created)  

Default offset values (freemode.c):  

if (is_ped_walking(player_ped_id()))  

        {  

            vVar1 = {0.6f, 4.7f, -0.1f};  

        }  

        else if (is_ped_sprinting(player_ped_id()))  

        {  

            vVar1 = {0.6f, 5.7f, -0.1f};  

        }  

        else if (is_ped_running(player_ped_id()))  

        {  

            vVar1 = {0.6f, 4.7f, -0.1f};  

        }  

        else  

        {  

            vVar1 = {0.4f, 4.7f, -0.1f};  

        }  

```'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='float xOffset' />
				<Param name='float yOffset' />
				<Param name='float zO' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDropsWeapon' func='yes'>
			<Overload retVal='void' descr='// 0x6B7513D9966FBEC0
// 0x3D3329FA
WEAPON::SET_PED_DROPS_WEAPON(Ped ped);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedDropsWeaponsWhenDead' func='yes'>
			<Overload retVal='void' descr='// 0x476AE72C1D19D1A8
// 0x8A444056
WEAPON::SET_PED_DROPS_WEAPONS_WHEN_DEAD(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedGadget' func='yes'>
			<Overload retVal='void' descr='// 0xD0D7B1E680ED4A1A
// 0x8A256D0A
WEAPON::SET_PED_GADGET(Ped ped, Hash gadgetHash, BOOL p2);
----------------------------------------------------------------------------------------------------
```

p1/gadgetHash was always 0xFBAB5776 (&quot;GADGET_PARACHUTE&quot;).  

p2 is always true.  

```'>
				<Param name='Ped ped' />
				<Param name='Hash gadgetHash' />
				<Param name='BOOL p2' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedInfiniteAmmo' func='yes'>
			<Overload retVal='void' descr='// 0x3EDCB0505123623B
// 0x9CB8D278
WEAPON::SET_PED_INFINITE_AMMO(Ped ped, BOOL toggle, Hash weaponHash);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
				<Param name='Hash weaponHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedInfiniteAmmoClip' func='yes'>
			<Overload retVal='void' descr='// 0x183DADC6AA953186
// 0x5A5E3B67
WEAPON::SET_PED_INFINITE_AMMO_CLIP(Ped ped, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Ped ped' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetPedWeaponTintIndex' func='yes'>
			<Overload retVal='void' descr='// 0x50969B9B89ED5738
// 0xEB2A7B23
WEAPON::SET_PED_WEAPON_TINT_INDEX(Ped ped, Hash weaponHash, int tintIndex);
----------------------------------------------------------------------------------------------------
```

tintIndex can be the following:  

1   

2   

3   

4   

5   

6   

7  

```'>
				<Param name='Ped ped' />
				<Param name='Hash weaponHash' />
				<Param name='int tintIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWeaponAnimationOverride' func='yes'>
			<Overload retVal='void' descr='// 0x1055AC3A667F09D9
// 0xA5DF7484
WEAPON::SET_WEAPON_ANIMATION_OVERRIDE(Ped ped, Hash animStyle);
----------------------------------------------------------------------------------------------------
```

Changes the selected ped aiming animation style.   

Note : You must use GET_HASH_KEY!  

Strings to use with GET_HASH_KEY :  

	&quot;Ballistic&quot;,  

	&quot;Default&quot;,  

	&quot;Fat&quot;,  

	&quot;Female&quot;,  

	&quot;FirstPerson&quot;,  

	&quot;FirstPersonAiming&quot;,  

	&quot;FirstPersonFranklin&quot;,  

	&quot;FirstPersonFranklinAiming&quot;,  

	&quot;FirstPersonFranklinRNG&quot;,  

	&quot;FirstPersonFranklinScope&quot;,  

	&quot;FirstPersonMPFemale&quot;,  

	&quot;FirstPersonMichael&quot;,  

	&quot;FirstPersonMichaelAiming&quot;,  

	&quot;FirstPersonMichaelRNG&quot;,  

	&quot;FirstPersonMichaelScope&quot;,  

	&quot;FirstPersonRNG&quot;,  

	&quot;FirstPersonScope&quot;,  

	&quot;FirstPersonTrevor&quot;,  

	&quot;FirstPersonTrevorAiming&quot;,  

	&quot;FirstPersonTrevorRNG&quot;,  

	&quot;FirstPersonTrevorScope&quot;,  

	&quot;Franklin&quot;,  

	&quot;Gang&quot;,  

	&quot;Gang1H&quot;,  

	&quot;GangFemale&quot;,  

	&quot;Hillbilly&quot;,  

	&quot;MP_F_Freemode&quot;,  

	&quot;Michael&quot;,  

	&quot;SuperFat&quot;,  

	&quot;Trevor&quot;  

```'>
				<Param name='Ped ped' />
				<Param name='Hash animStyle' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWeaponObjectTintIndex' func='yes'>
			<Overload retVal='void' descr='// 0xF827589017D4E4A9
// 0x44ACC1DA
WEAPON::SET_WEAPON_OBJECT_TINT_INDEX(Object weapon, int tintIndex);
----------------------------------------------------------------------------------------------------
'>
				<Param name='Object weapon' />
				<Param name='int tintIndex' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetWeaponSmokegrenadeAssigned' func='yes'>
			<Overload retVal='BOOL' descr='// 0x4B7620C47217126C
// 0x76876154
WEAPON::SET_WEAPON_SMOKEGRENADE_ASSIGNED(Ped ped);
----------------------------------------------------------------------------------------------------
```

Hash collision, real name is: IS_FLASH_LIGHT_ON  

```'>
				<Param name='Ped ped' />
			</Overload>
		</KeyWord>
		<KeyWord name='ClearPopscheduleOverrideVehicleModel' func='yes'>
			<Overload retVal='void' descr='// 0x5C0DE367AA0D911C
// 0x7A72A24E
ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(int scheduleId);
----------------------------------------------------------------------------------------------------
```

Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.  

Modified example from &quot;am_imp_exp.c4&quot;, line 6418:  

/* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));  

etc.  

*/  

STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);  

ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);  

```'>
				<Param name='int scheduleId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetHashOfMapAreaAtCoords' func='yes'>
			<Overload retVal='Hash' descr='// 0x7EE64D51E8498728
// 0xB5C5C99B
ZONE::GET_HASH_OF_MAP_AREA_AT_COORDS(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

Returns a hash representing which part of the map the given coords are located.  

Possible return values:  

(Hash of) city -&gt; -289320599  

(Hash of) countryside -&gt; 2072609373  

C# Example :  

Ped player = Game.Player.Character;  

Hash h = Function.Call&lt;Hash&gt;(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position
.Y, player.Position.Z);  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetNameOfZone' func='yes'>
			<Overload retVal='char*' descr='// 0xCD90657D4C30E1CA
// 0x7875CE91
ZONE::GET_NAME_OF_ZONE(float x, float y, float z);
----------------------------------------------------------------------------------------------------
```

AIRP = Los Santos International Airport  

ALAMO = Alamo Sea  

ALTA = Alta  

ARMYB = Fort Zancudo  

BANHAMC = Banham Canyon Dr  

BANNING = Banning  

BEACH = Vespucci Beach  

BHAMCA = Banham Canyon  

BRADP = Braddock Pass  

BRADT = Braddock Tunnel  

BURTON = Burton  

CALAFB = Calafia Bridge  

CANNY = Raton Canyon  

CCREAK = Cassidy Creek  

CHAMH = Chamberlain Hills  

CHIL = Vinewood Hills  

CHU = Chumash  

CMSW = Chiliad Mountain State Wilderness  

CYPRE = Cypress Flats  

DAVIS = Davis  

DELBE = Del Perro Beach  

DELPE = Del Perro  

DELSOL = La Puerta  

DESRT = Grand Senora Desert  

DOWNT = Downtown  

DTVINE = Downtown Vinewood  

EAST_V = East Vinewood  

EBURO = El Burro Heights  

ELGORL = El Gordo Lighthouse  

ELYSIAN = Elysian Island  

GALFISH = Galilee  

GOLF = GWC and Golfing Society  

GRAPES = Grapeseed  

GREATC = Great Chaparral  

HARMO = Harmony  

HAWICK = Hawick  

HORS = Vinewood Racetrack  

HUMLAB = Humane Labs and Research  

JAIL = Bolingbroke Penitentiary  

KOREAT = Little Seoul  

LACT = Land Act Reservoir  

LAGO = Lago Zancudo  

LDAM = Land Act Dam  

LEGSQU = Legion Square  

LMESA = La Mesa  

LOSPUER = La Puerta  

MIRR = Mirror Park  

MORN = Morningwood  

MOVIE = Richards Majestic  

MTCHIL = Mount Chiliad  

MTGORDO = Mount Gordo  

MTJOSE = Mount Josiah  

MURRI = Murrieta Heights  

NCHU = North Chumash  

NOOSE = N.O.O.S.E  

OCEANA = Pacific Ocean  

PALCOV = Paleto Cove  

PALETO = Paleto Bay  

PALFOR = Paleto Forest  

PALHIGH = Palomino Highlands  

PALMPOW = Palmer-Taylor Power Station  

PBLUFF = Pacific Bluffs  

PBOX = Pillbox Hill  

PROCOB = Procopio Beach  

RANCHO = Rancho  

RGLEN = Richman Glen  

RICHM = Richman  

ROCKF = Rockford Hills  

RTRAK = Redwood Lights Track  

SANAND = San Andreas  

SANCHIA = San Chianski Mountain Range  

SANDY = Sandy Shores  

SKID = Mission Row  

SLAB = Stab City  

STAD = Maze Bank Arena  

STRAW = Strawberry  

TATAMO = Tataviam Mountains  

TERMINA = Terminal  

TEXTI = Textile City  

TONGVAH = Tongva Hills  

TONGVAV = Tongva Valley  

VCANA = Vespucci Canals  

VESP = Vespucci  

VINE = Vinewood  

WINDF = Ron Alternates Wind Farm  

WVINE = West Vinewood  

ZANCUDO = Zancudo River  

ZP_ORT = Port of South Los Santos  

ZQ_UAR = Davis Quartz  

```'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetZoneAtCoords' func='yes'>
			<Overload retVal='int' descr='// 0x27040C25DE6CB2F4
// 0xC9018181
ZONE::GET_ZONE_AT_COORDS(float x, float y, float z);
----------------------------------------------------------------------------------------------------
'>
				<Param name='float x' />
				<Param name='float y' />
				<Param name='float z' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetZoneFromNameId' func='yes'>
			<Overload retVal='int' descr='// 0x98CD1D2934B76CC1
// 0x8EC68304
ZONE::GET_ZONE_FROM_NAME_ID(char* zoneName);
----------------------------------------------------------------------------------------------------
```

&apos;zoneName&apos; corresponds to an entry in &apos;popzone.ipl&apos;.  

AIRP = Los Santos International Airport  

ALAMO = Alamo Sea  

ALTA = Alta  

ARMYB = Fort Zancudo  

BANHAMC = Banham Canyon Dr  

BANNING = Banning  

BEACH = Vespucci Beach  

BHAMCA = Banham Canyon  

BRADP = Braddock Pass  

BRADT = Braddock Tunnel  

BURTON = Burton  

CALAFB = Calafia Bridge  

CANNY = Raton Canyon  

CCREAK = Cassidy Creek  

CHAMH = Chamberlain Hills  

CHIL = Vinewood Hills  

CHU = Chumash  

CMSW = Chiliad Mountain State Wilderness  

CYPRE = Cypress Flats  

DAVIS = Davis  

DELBE = Del Perro Beach  

DELPE = Del Perro  

DELSOL = La Puerta  

DESRT = Grand Senora Desert  

DOWNT = Downtown  

DTVINE = Downtown Vinewood  

EAST_V = East Vinewood  

EBURO = El Burro Heights  

ELGORL = El Gordo Lighthouse  

ELYSIAN = Elysian Island  

GALFISH = Galilee  

GOLF = GWC and Golfing Society  

GRAPES = Grapeseed  

GREATC = Great Chaparral  

HARMO = Harmony  

HAWICK = Hawick  

HORS = Vinewood Racetrack  

HUMLAB = Humane Labs and Research  

JAIL = Bolingbroke Penitentiary  

KOREAT = Little Seoul  

LACT = Land Act Reservoir  

LAGO = Lago Zancudo  

LDAM = Land Act Dam  

LEGSQU = Legion Square  

LMESA = La Mesa  

LOSPUER = La Puerta  

MIRR = Mirror Park  

MORN = Morningwood  

MOVIE = Richards Majestic  

MTCHIL = Mount Chiliad  

MTGORDO = Mount Gordo  

MTJOSE = Mount Josiah  

MURRI = Murrieta Heights  

NCHU = North Chumash  

NOOSE = N.O.O.S.E  

OCEANA = Pacific Ocean  

PALCOV = Paleto Cove  

PALETO = Paleto Bay  

PALFOR = Paleto Forest  

PALHIGH = Palomino Highlands  

PALMPOW = Palmer-Taylor Power Station  

PBLUFF = Pacific Bluffs  

PBOX = Pillbox Hill  

PROCOB = Procopio Beach  

RANCHO = Rancho  

RGLEN = Richman Glen  

RICHM = Richman  

ROCKF = Rockford Hills  

RTRAK = Redwood Lights Track  

SANAND = San Andreas  

SANCHIA = San Chianski Mountain Range  

SANDY = Sandy Shores  

SKID = Mission Row  

SLAB = Stab City  

STAD = Maze Bank Arena  

STRAW = Strawberry  

TATAMO = Tataviam Mountains  

TERMINA = Terminal  

TEXTI = Textile City  

TONGVAH = Tongva Hills  

TONGVAV = Tongva Valley  

VCANA = Vespucci Canals  

VESP = Vespucci  

VINE = Vinewood  

WINDF = Ron Alternates Wind Farm  

WVINE = West Vinewood  

ZANCUDO = Zancudo River  

ZP_ORT = Port of South Los Santos  

ZQ_UAR = Davis Quartz  

```'>
				<Param name='char* zoneName' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetZonePopschedule' func='yes'>
			<Overload retVal='int' descr='// 0x4334BC40AA0CB4BB
// 0x20AB2FC9
ZONE::GET_ZONE_POPSCHEDULE(int zoneId);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int zoneId' />
			</Overload>
		</KeyWord>
		<KeyWord name='GetZoneScumminess' func='yes'>
			<Overload retVal='int' descr='// 0x5F7B268D15BA0739
// 0xB2FB5C4C
ZONE::GET_ZONE_SCUMMINESS(int zoneId);
----------------------------------------------------------------------------------------------------
```

cellphone range 1- 5 used for signal bar in iFruit phone  

```'>
				<Param name='int zoneId' />
			</Overload>
		</KeyWord>
		<KeyWord name='OverridePopscheduleVehicleModel' func='yes'>
			<Overload retVal='void' descr='// 0x5F7D596BAC2E7777
// 0x3F0A3680
ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(int scheduleId, Hash vehicleHash);
----------------------------------------------------------------------------------------------------
```

Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.  

Modified example from &quot;am_imp_exp.c4&quot;, line 6406:  

/* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));  

etc.  

*/  

ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);  

STREAMING::REQUEST_MODEL(vehicleHash);  

```'>
				<Param name='int scheduleId' />
				<Param name='Hash vehicleHash' />
			</Overload>
		</KeyWord>
		<KeyWord name='SetZoneEnabled' func='yes'>
			<Overload retVal='void' descr='// 0xBA5ECEEA120E5611
// 0x04E21B03
ZONE::SET_ZONE_ENABLED(int zoneId, BOOL toggle);
----------------------------------------------------------------------------------------------------
'>
				<Param name='int zoneId' />
				<Param name='BOOL toggle' />
			</Overload>
		</KeyWord>
	</AutoComplete>
</NotepadPlus>